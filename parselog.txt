    lex.py: 924:lex: tokens   = ['SEMICOLON', 'OPENPAREN', 'CLOSEPAREN', 'TWODOTS', 'COMMA', 'DOT', 'OPENBRACKET', 'CLOSEBRACKET', 'OPENCURLY', 'CLOSECURLY', 'SAMEAS', 'BIGGERTHAN', 'BIGGEREQUALSTHAN', 'SMALLTHAN', 'SMALLEQUALSTHAN', 'DIFFERENTTHAN', 'AND', 'OR', 'EQUALS', 'SUBTRACT', 'SUM', 'TIMES', 'DIV', 'ID', 'CTEINT', 'CTEFLOAT', 'CTESTRING', 'PROGRAM', 'MAIN', 'CLASS', 'CONSTRUCTOR', 'VAR', 'IF', 'ELSE', 'FUNC', 'RETURN', 'INPUT', 'OUTPUT', 'INT', 'FLOAT', 'STRING', 'BOOL', 'TRUE', 'FALSE']
    lex.py: 925:lex: literals = ''
    lex.py: 926:lex: states   = {'INITIAL': 'inclusive'}
    lex.py: 953:lex: Adding rule t_CTESTRING -> '\"(.*)\"' (state 'INITIAL')
    lex.py: 953:lex: Adding rule t_CTEFLOAT -> '\d+\.\d+' (state 'INITIAL')
    lex.py: 953:lex: Adding rule t_CTEINT -> '\d+' (state 'INITIAL')
    lex.py: 953:lex: Adding rule t_ID -> '[a-zA-Z_][a-zA-Z0-9_]*' (state 'INITIAL')
    lex.py: 953:lex: Adding rule t_COMMENT -> '\/\/.*' (state 'INITIAL')
    lex.py: 953:lex: Adding rule t_newline -> '\n+' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_AND -> '\&\&' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_BIGGEREQUALSTHAN -> '\>\=' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_DIFFERENTTHAN -> '\!\=' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_OR -> '\|\|' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_SAMEAS -> '\=\=' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_SMALLEQUALSTHAN -> '\<\=' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_BIGGERTHAN -> '\>' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_CLOSEBRACKET -> '\]' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_CLOSECURLY -> '\}' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_CLOSEPAREN -> '\)' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_COMMA -> '\,' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_DIV -> '\/' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_DOT -> '\.' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_EQUALS -> '\=' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_OPENBRACKET -> '\[' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_OPENCURLY -> '\{' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_OPENPAREN -> '\(' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_SEMICOLON -> '\;' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_SMALLTHAN -> '\<' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_SUBTRACT -> '\-' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_SUM -> '\+' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_TIMES -> '\*' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_TWODOTS -> '\:' (state 'INITIAL')
    lex.py: 966:lex: ==== MASTER REGEXS FOLLOW ====
    lex.py: 975:lex: state 'INITIAL' : regex[0] = '(?P<t_CTESTRING>\"(.*)\")|(?P<t_CTEFLOAT>\d+\.\d+)|(?P<t_CTEINT>\d+)|(?P<t_ID>[a-zA-Z_][a-zA-Z0-9_]*)|(?P<t_COMMENT>\/\/.*)|(?P<t_newline>\n+)|(?P<t_AND>\&\&)|(?P<t_BIGGEREQUALSTHAN>\>\=)|(?P<t_DIFFERENTTHAN>\!\=)|(?P<t_OR>\|\|)|(?P<t_SAMEAS>\=\=)|(?P<t_SMALLEQUALSTHAN>\<\=)|(?P<t_BIGGERTHAN>\>)|(?P<t_CLOSEBRACKET>\])|(?P<t_CLOSECURLY>\})|(?P<t_CLOSEPAREN>\))|(?P<t_COMMA>\,)|(?P<t_DIV>\/)|(?P<t_DOT>\.)|(?P<t_EQUALS>\=)|(?P<t_OPENBRACKET>\[)|(?P<t_OPENCURLY>\{)|(?P<t_OPENPAREN>\()|(?P<t_SEMICOLON>\;)|(?P<t_SMALLTHAN>\<)|(?P<t_SUBTRACT>\-)|(?P<t_SUM>\+)|(?P<t_TIMES>\*)|(?P<t_TWODOTS>\:)'
