Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID save_program SEMICOLON altprogram
Rule 2     altprogram -> class altprogram
Rule 3     altprogram -> var altprogram
Rule 4     altprogram -> function altprogram
Rule 5     altprogram -> main
Rule 6     save_program -> <empty>
Rule 7     main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain
Rule 8     altmain -> var altmain
Rule 9     altmain -> estatuto altmain
Rule 10    altmain -> CLOSECURLY
Rule 11    save_main -> <empty>
Rule 12    class -> CLASS ID altclass save_class OPENCURLY alt2class
Rule 13    altclass -> TWODOTS ID
Rule 14    altclass -> empty
Rule 15    alt2class -> var alt2class
Rule 16    alt2class -> function alt2class
Rule 17    alt2class -> constructor CLOSECURLY SEMICOLON
Rule 18    save_class -> <empty>
Rule 19    constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const
Rule 20    altconst -> params altconst
Rule 21    altconst -> empty
Rule 22    alt2const -> var alt2const
Rule 23    alt2const -> estatuto alt2const
Rule 24    alt2const -> CLOSECURLY
Rule 25    save_constructor -> <empty>
Rule 26    var -> VAR listids TWODOTS type save_vars SEMICOLON
Rule 27    save_vars -> <empty>
Rule 28    listids -> ID save_var_name listidsalty
Rule 29    listidsalty -> COMMA listids
Rule 30    listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltz
Rule 31    listidsalty -> empty
Rule 32    listidsaltz -> COMMA listids
Rule 33    listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltp
Rule 34    listidsaltz -> empty
Rule 35    listidsaltp -> COMMA listids
Rule 36    listidsaltp -> empty
Rule 37    save_var_name -> <empty>
Rule 38    function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
Rule 39    altfunc -> params
Rule 40    altfunc -> empty
Rule 41    alt2func -> TWODOTS type
Rule 42    alt2func -> empty
Rule 43    alt3func -> var alt3func
Rule 44    alt3func -> estatuto alt3func
Rule 45    alt3func -> CLOSECURLY
Rule 46    save_function -> <empty>
Rule 47    params -> ID TWODOTS type save_params altparams
Rule 48    altparams -> COMMA ID TWODOTS type save_params altparams
Rule 49    altparams -> empty
Rule 50    save_params -> <empty>
Rule 51    callfunc -> ID OPENPAREN altcall CLOSEPAREN
Rule 52    altcall -> expresion alt2call
Rule 53    altcall -> empty
Rule 54    alt2call -> COMMA altcall
Rule 55    alt2call -> empty
Rule 56    type -> INT
Rule 57    type -> FLOAT
Rule 58    type -> STRING
Rule 59    type -> ID
Rule 60    type -> BOOL
Rule 61    estatuto -> assign
Rule 62    estatuto -> condition
Rule 63    estatuto -> write
Rule 64    estatuto -> read
Rule 65    estatuto -> return
Rule 66    estatuto -> voidcall
Rule 67    estatuto -> while
Rule 68    voidcall -> ID OPENPAREN CLOSEPAREN
Rule 69    voidcall -> ID OPENPAREN expresion altcall
Rule 70    altcall -> COMMA expresion altcall
Rule 71    altcall -> CLOSEPAREN SEMICOLON
Rule 72    while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile
Rule 73    altwhile -> estatuto altwhile
Rule 74    altwhile -> CLOSECURLY
Rule 75    varcall -> varcte
Rule 76    varcall -> varcomplicated
Rule 77    varcte -> TRUE
Rule 78    varcte -> FALSE
Rule 79    varcte -> CTEFLOAT
Rule 80    varcte -> CTESTRING
Rule 81    varcte -> CTEINT
Rule 82    varcomplicated -> varcomp1
Rule 83    varcomplicated -> callfunc
Rule 84    varcomp1 -> ID varcomp2
Rule 85    varcomp2 -> DOT varcomp3
Rule 86    varcomp2 -> empty
Rule 87    varcomp3 -> varcomp1
Rule 88    varcomp3 -> callfunc
Rule 89    expresion -> exp altexpresion
Rule 90    altexpresion -> altexpresion2 exp
Rule 91    altexpresion -> empty
Rule 92    altexpresion2 -> SAMEAS
Rule 93    altexpresion2 -> BIGGERTHAN
Rule 94    altexpresion2 -> BIGGEREQUALSTHAN
Rule 95    altexpresion2 -> SMALLTHAN
Rule 96    altexpresion2 -> SMALLEQUALSTHAN
Rule 97    altexpresion2 -> DIFFERENTTHAN
Rule 98    altexpresion2 -> AND
Rule 99    altexpresion2 -> OR
Rule 100   exp -> termino
Rule 101   exp -> termino altexp
Rule 102   altexp -> SUM termino altexp
Rule 103   altexp -> SUBTRACT termino altexp
Rule 104   altexp -> empty
Rule 105   termino -> factor
Rule 106   termino -> factor alttermino
Rule 107   alttermino -> TIMES factor alttermino
Rule 108   alttermino -> DIV factor alttermino
Rule 109   alttermino -> empty
Rule 110   read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
Rule 111   write -> OUTPUT OPENPAREN varcall altwrite
Rule 112   write -> OUTPUT OPENPAREN expresion altwrite
Rule 113   altwrite -> COMMA varcall altwrite
Rule 114   altwrite -> COMMA expresion altwrite
Rule 115   altwrite -> CLOSEPAREN SEMICOLON
Rule 116   factor -> OPENPAREN expresion CLOSEPAREN
Rule 117   factor -> SUM varcall
Rule 118   factor -> SUBTRACT varcall
Rule 119   factor -> varcall
Rule 120   condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
Rule 121   condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
Rule 122   altcondition -> estatuto altcondition
Rule 123   altcondition -> CLOSECURLY
Rule 124   assign -> ID assign1 EQUALS expresion SEMICOLON
Rule 125   assign1 -> DOT ID assign1
Rule 126   assign1 -> empty
Rule 127   return -> RETURN expresion SEMICOLON
Rule 128   empty -> <empty>

Terminals, with rules where they appear

AND                  : 98
BIGGEREQUALSTHAN     : 94
BIGGERTHAN           : 93
BOOL                 : 60
CLASS                : 12
CLOSEBRACKET         : 30 33
CLOSECURLY           : 10 17 24 45 74 123
CLOSEPAREN           : 7 19 38 51 68 71 72 110 115 116 120 121
COMMA                : 29 32 35 48 54 70 113 114
CONSTRUCTOR          : 19
CTEFLOAT             : 79
CTEINT               : 30 33 81
CTESTRING            : 80
DIFFERENTTHAN        : 97
DIV                  : 108
DOT                  : 85 125
ELSE                 : 121
EQUALS               : 124
FALSE                : 78
FLOAT                : 57
FUNC                 : 38
ID                   : 1 12 13 28 38 47 48 51 59 68 69 84 110 124 125
IF                   : 120 121
INPUT                : 110
INT                  : 56
MAIN                 : 7
OPENBRACKET          : 30 33
OPENCURLY            : 7 12 19 38 72 120 121 121
OPENPAREN            : 7 19 38 51 68 69 72 110 111 112 116 120 121
OR                   : 99
OUTPUT               : 111 112
PROGRAM              : 1
RETURN               : 127
SAMEAS               : 92
SEMICOLON            : 1 17 26 71 110 115 124 127
SMALLEQUALSTHAN      : 96
SMALLTHAN            : 95
STRING               : 58
SUBTRACT             : 103 118
SUM                  : 102 117
TIMES                : 107
TRUE                 : 77
TWODOTS              : 13 26 41 47 48
VAR                  : 26
WHILE                : 72
error                : 

Nonterminals, with rules where they appear

alt2call             : 52
alt2class            : 12 15 16
alt2const            : 19 22 23
alt2func             : 38
alt3func             : 38 43 44
altcall              : 51 54 69 70
altclass             : 12
altcondition         : 120 121 121 122
altconst             : 19 20
altexp               : 101 102 103
altexpresion         : 89
altexpresion2        : 90
altfunc              : 38
altmain              : 7 8 9
altparams            : 47 48
altprogram           : 1 2 3 4
alttermino           : 106 107 108
altwhile             : 72 73
altwrite             : 111 112 113 114
assign               : 61
assign1              : 124 125
callfunc             : 83 88
class                : 2
condition            : 62
constructor          : 17
empty                : 14 21 31 34 36 40 42 49 53 55 86 91 104 109 126
estatuto             : 9 23 44 73 122
exp                  : 89 90
expresion            : 52 69 70 72 112 114 116 120 121 124 127
factor               : 105 106 107 108
function             : 4 16
listids              : 26 29 32 35
listidsaltp          : 33
listidsalty          : 28
listidsaltz          : 30
main                 : 5
params               : 20 39
program              : 0
read                 : 64
return               : 65
save_class           : 12
save_constructor     : 19
save_function        : 38
save_main            : 7
save_params          : 47 48
save_program         : 1
save_var_name        : 28
save_vars            : 26
termino              : 100 101 102 103
type                 : 26 41 47 48
var                  : 3 8 15 22 43
varcall              : 111 113 117 118 119
varcomp1             : 82 87
varcomp2             : 84
varcomp3             : 85
varcomplicated       : 76
varcte               : 75
voidcall             : 66
while                : 67
write                : 63

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID save_program SEMICOLON altprogram

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID save_program SEMICOLON altprogram

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . save_program SEMICOLON altprogram
    (6) save_program -> .

    SEMICOLON       reduce using rule 6 (save_program -> .)

    save_program                   shift and go to state 4

state 4

    (1) program -> PROGRAM ID save_program . SEMICOLON altprogram

    SEMICOLON       shift and go to state 5


state 5

    (1) program -> PROGRAM ID save_program SEMICOLON . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (12) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (26) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (38) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    altprogram                     shift and go to state 6
    class                          shift and go to state 7
    var                            shift and go to state 8
    function                       shift and go to state 9
    main                           shift and go to state 10

state 6

    (1) program -> PROGRAM ID save_program SEMICOLON altprogram .

    $end            reduce using rule 1 (program -> PROGRAM ID save_program SEMICOLON altprogram .)


state 7

    (2) altprogram -> class . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (12) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (26) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (38) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    class                          shift and go to state 7
    altprogram                     shift and go to state 15
    var                            shift and go to state 8
    function                       shift and go to state 9
    main                           shift and go to state 10

state 8

    (3) altprogram -> var . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (12) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (26) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (38) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    var                            shift and go to state 8
    altprogram                     shift and go to state 16
    class                          shift and go to state 7
    function                       shift and go to state 9
    main                           shift and go to state 10

state 9

    (4) altprogram -> function . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (12) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (26) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (38) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    function                       shift and go to state 9
    altprogram                     shift and go to state 17
    class                          shift and go to state 7
    var                            shift and go to state 8
    main                           shift and go to state 10

state 10

    (5) altprogram -> main .

    $end            reduce using rule 5 (altprogram -> main .)


state 11

    (12) class -> CLASS . ID altclass save_class OPENCURLY alt2class

    ID              shift and go to state 18


state 12

    (26) var -> VAR . listids TWODOTS type save_vars SEMICOLON
    (28) listids -> . ID save_var_name listidsalty

    ID              shift and go to state 20

    listids                        shift and go to state 19

state 13

    (38) function -> FUNC . ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func

    ID              shift and go to state 21


state 14

    (7) main -> MAIN . save_main OPENPAREN CLOSEPAREN OPENCURLY altmain
    (11) save_main -> .

    OPENPAREN       reduce using rule 11 (save_main -> .)

    save_main                      shift and go to state 22

state 15

    (2) altprogram -> class altprogram .

    $end            reduce using rule 2 (altprogram -> class altprogram .)


state 16

    (3) altprogram -> var altprogram .

    $end            reduce using rule 3 (altprogram -> var altprogram .)


state 17

    (4) altprogram -> function altprogram .

    $end            reduce using rule 4 (altprogram -> function altprogram .)


state 18

    (12) class -> CLASS ID . altclass save_class OPENCURLY alt2class
    (13) altclass -> . TWODOTS ID
    (14) altclass -> . empty
    (128) empty -> .

    TWODOTS         shift and go to state 24
    OPENCURLY       reduce using rule 128 (empty -> .)

    altclass                       shift and go to state 23
    empty                          shift and go to state 25

state 19

    (26) var -> VAR listids . TWODOTS type save_vars SEMICOLON

    TWODOTS         shift and go to state 26


state 20

    (28) listids -> ID . save_var_name listidsalty
    (37) save_var_name -> .

    COMMA           reduce using rule 37 (save_var_name -> .)
    OPENBRACKET     reduce using rule 37 (save_var_name -> .)
    TWODOTS         reduce using rule 37 (save_var_name -> .)

    save_var_name                  shift and go to state 27

state 21

    (38) function -> FUNC ID . OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func

    OPENPAREN       shift and go to state 28


state 22

    (7) main -> MAIN save_main . OPENPAREN CLOSEPAREN OPENCURLY altmain

    OPENPAREN       shift and go to state 29


state 23

    (12) class -> CLASS ID altclass . save_class OPENCURLY alt2class
    (18) save_class -> .

    OPENCURLY       reduce using rule 18 (save_class -> .)

    save_class                     shift and go to state 30

state 24

    (13) altclass -> TWODOTS . ID

    ID              shift and go to state 31


state 25

    (14) altclass -> empty .

    OPENCURLY       reduce using rule 14 (altclass -> empty .)


state 26

    (26) var -> VAR listids TWODOTS . type save_vars SEMICOLON
    (56) type -> . INT
    (57) type -> . FLOAT
    (58) type -> . STRING
    (59) type -> . ID
    (60) type -> . BOOL

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 36
    BOOL            shift and go to state 37

    type                           shift and go to state 32

state 27

    (28) listids -> ID save_var_name . listidsalty
    (29) listidsalty -> . COMMA listids
    (30) listidsalty -> . OPENBRACKET CTEINT CLOSEBRACKET listidsaltz
    (31) listidsalty -> . empty
    (128) empty -> .

    COMMA           shift and go to state 39
    OPENBRACKET     shift and go to state 40
    TWODOTS         reduce using rule 128 (empty -> .)

    listidsalty                    shift and go to state 38
    empty                          shift and go to state 41

state 28

    (38) function -> FUNC ID OPENPAREN . altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (39) altfunc -> . params
    (40) altfunc -> . empty
    (47) params -> . ID TWODOTS type save_params altparams
    (128) empty -> .

    ID              shift and go to state 42
    CLOSEPAREN      reduce using rule 128 (empty -> .)

    altfunc                        shift and go to state 43
    params                         shift and go to state 44
    empty                          shift and go to state 45

state 29

    (7) main -> MAIN save_main OPENPAREN . CLOSEPAREN OPENCURLY altmain

    CLOSEPAREN      shift and go to state 46


state 30

    (12) class -> CLASS ID altclass save_class . OPENCURLY alt2class

    OPENCURLY       shift and go to state 47


state 31

    (13) altclass -> TWODOTS ID .

    OPENCURLY       reduce using rule 13 (altclass -> TWODOTS ID .)


state 32

    (26) var -> VAR listids TWODOTS type . save_vars SEMICOLON
    (27) save_vars -> .

    SEMICOLON       reduce using rule 27 (save_vars -> .)

    save_vars                      shift and go to state 48

state 33

    (56) type -> INT .

    SEMICOLON       reduce using rule 56 (type -> INT .)
    COMMA           reduce using rule 56 (type -> INT .)
    CLOSEPAREN      reduce using rule 56 (type -> INT .)
    ID              reduce using rule 56 (type -> INT .)
    OPENCURLY       reduce using rule 56 (type -> INT .)


state 34

    (57) type -> FLOAT .

    SEMICOLON       reduce using rule 57 (type -> FLOAT .)
    COMMA           reduce using rule 57 (type -> FLOAT .)
    CLOSEPAREN      reduce using rule 57 (type -> FLOAT .)
    ID              reduce using rule 57 (type -> FLOAT .)
    OPENCURLY       reduce using rule 57 (type -> FLOAT .)


state 35

    (58) type -> STRING .

    SEMICOLON       reduce using rule 58 (type -> STRING .)
    COMMA           reduce using rule 58 (type -> STRING .)
    CLOSEPAREN      reduce using rule 58 (type -> STRING .)
    ID              reduce using rule 58 (type -> STRING .)
    OPENCURLY       reduce using rule 58 (type -> STRING .)


state 36

    (59) type -> ID .

    SEMICOLON       reduce using rule 59 (type -> ID .)
    COMMA           reduce using rule 59 (type -> ID .)
    CLOSEPAREN      reduce using rule 59 (type -> ID .)
    ID              reduce using rule 59 (type -> ID .)
    OPENCURLY       reduce using rule 59 (type -> ID .)


state 37

    (60) type -> BOOL .

    SEMICOLON       reduce using rule 60 (type -> BOOL .)
    COMMA           reduce using rule 60 (type -> BOOL .)
    CLOSEPAREN      reduce using rule 60 (type -> BOOL .)
    ID              reduce using rule 60 (type -> BOOL .)
    OPENCURLY       reduce using rule 60 (type -> BOOL .)


state 38

    (28) listids -> ID save_var_name listidsalty .

    TWODOTS         reduce using rule 28 (listids -> ID save_var_name listidsalty .)


state 39

    (29) listidsalty -> COMMA . listids
    (28) listids -> . ID save_var_name listidsalty

    ID              shift and go to state 20

    listids                        shift and go to state 49

state 40

    (30) listidsalty -> OPENBRACKET . CTEINT CLOSEBRACKET listidsaltz

    CTEINT          shift and go to state 50


state 41

    (31) listidsalty -> empty .

    TWODOTS         reduce using rule 31 (listidsalty -> empty .)


state 42

    (47) params -> ID . TWODOTS type save_params altparams

    TWODOTS         shift and go to state 51


state 43

    (38) function -> FUNC ID OPENPAREN altfunc . CLOSEPAREN alt2func save_function OPENCURLY alt3func

    CLOSEPAREN      shift and go to state 52


state 44

    (39) altfunc -> params .

    CLOSEPAREN      reduce using rule 39 (altfunc -> params .)


state 45

    (40) altfunc -> empty .

    CLOSEPAREN      reduce using rule 40 (altfunc -> empty .)


state 46

    (7) main -> MAIN save_main OPENPAREN CLOSEPAREN . OPENCURLY altmain

    OPENCURLY       shift and go to state 53


state 47

    (12) class -> CLASS ID altclass save_class OPENCURLY . alt2class
    (15) alt2class -> . var alt2class
    (16) alt2class -> . function alt2class
    (17) alt2class -> . constructor CLOSECURLY SEMICOLON
    (26) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (38) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (19) constructor -> . CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    CONSTRUCTOR     shift and go to state 58

    alt2class                      shift and go to state 54
    var                            shift and go to state 55
    function                       shift and go to state 56
    constructor                    shift and go to state 57

state 48

    (26) var -> VAR listids TWODOTS type save_vars . SEMICOLON

    SEMICOLON       shift and go to state 59


state 49

    (29) listidsalty -> COMMA listids .

    TWODOTS         reduce using rule 29 (listidsalty -> COMMA listids .)


state 50

    (30) listidsalty -> OPENBRACKET CTEINT . CLOSEBRACKET listidsaltz

    CLOSEBRACKET    shift and go to state 60


state 51

    (47) params -> ID TWODOTS . type save_params altparams
    (56) type -> . INT
    (57) type -> . FLOAT
    (58) type -> . STRING
    (59) type -> . ID
    (60) type -> . BOOL

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 36
    BOOL            shift and go to state 37

    type                           shift and go to state 61

state 52

    (38) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN . alt2func save_function OPENCURLY alt3func
    (41) alt2func -> . TWODOTS type
    (42) alt2func -> . empty
    (128) empty -> .

    TWODOTS         shift and go to state 63
    OPENCURLY       reduce using rule 128 (empty -> .)

    alt2func                       shift and go to state 62
    empty                          shift and go to state 64

state 53

    (7) main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY . altmain
    (8) altmain -> . var altmain
    (9) altmain -> . estatuto altmain
    (10) altmain -> . CLOSECURLY
    (26) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (61) estatuto -> . assign
    (62) estatuto -> . condition
    (63) estatuto -> . write
    (64) estatuto -> . read
    (65) estatuto -> . return
    (66) estatuto -> . voidcall
    (67) estatuto -> . while
    (124) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (120) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (121) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (111) write -> . OUTPUT OPENPAREN varcall altwrite
    (112) write -> . OUTPUT OPENPAREN expresion altwrite
    (110) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (127) return -> . RETURN expresion SEMICOLON
    (68) voidcall -> . ID OPENPAREN CLOSEPAREN
    (69) voidcall -> . ID OPENPAREN expresion altcall
    (72) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 68
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    altmain                        shift and go to state 65
    var                            shift and go to state 66
    estatuto                       shift and go to state 67
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 54

    (12) class -> CLASS ID altclass save_class OPENCURLY alt2class .

    CLASS           reduce using rule 12 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)
    VAR             reduce using rule 12 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)
    FUNC            reduce using rule 12 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)
    MAIN            reduce using rule 12 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)


state 55

    (15) alt2class -> var . alt2class
    (15) alt2class -> . var alt2class
    (16) alt2class -> . function alt2class
    (17) alt2class -> . constructor CLOSECURLY SEMICOLON
    (26) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (38) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (19) constructor -> . CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    CONSTRUCTOR     shift and go to state 58

    var                            shift and go to state 55
    alt2class                      shift and go to state 82
    function                       shift and go to state 56
    constructor                    shift and go to state 57

state 56

    (16) alt2class -> function . alt2class
    (15) alt2class -> . var alt2class
    (16) alt2class -> . function alt2class
    (17) alt2class -> . constructor CLOSECURLY SEMICOLON
    (26) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (38) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (19) constructor -> . CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    CONSTRUCTOR     shift and go to state 58

    function                       shift and go to state 56
    alt2class                      shift and go to state 83
    var                            shift and go to state 55
    constructor                    shift and go to state 57

state 57

    (17) alt2class -> constructor . CLOSECURLY SEMICOLON

    CLOSECURLY      shift and go to state 84


state 58

    (19) constructor -> CONSTRUCTOR . save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const
    (25) save_constructor -> .

    OPENPAREN       reduce using rule 25 (save_constructor -> .)

    save_constructor               shift and go to state 85

state 59

    (26) var -> VAR listids TWODOTS type save_vars SEMICOLON .

    CLASS           reduce using rule 26 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    VAR             reduce using rule 26 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    FUNC            reduce using rule 26 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    MAIN            reduce using rule 26 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    CONSTRUCTOR     reduce using rule 26 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    CLOSECURLY      reduce using rule 26 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    ID              reduce using rule 26 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    IF              reduce using rule 26 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    OUTPUT          reduce using rule 26 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    INPUT           reduce using rule 26 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    RETURN          reduce using rule 26 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    WHILE           reduce using rule 26 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)


state 60

    (30) listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET . listidsaltz
    (32) listidsaltz -> . COMMA listids
    (33) listidsaltz -> . OPENBRACKET CTEINT CLOSEBRACKET listidsaltp
    (34) listidsaltz -> . empty
    (128) empty -> .

    COMMA           shift and go to state 88
    OPENBRACKET     shift and go to state 86
    TWODOTS         reduce using rule 128 (empty -> .)

    listidsaltz                    shift and go to state 87
    empty                          shift and go to state 89

state 61

    (47) params -> ID TWODOTS type . save_params altparams
    (50) save_params -> .

    COMMA           reduce using rule 50 (save_params -> .)
    CLOSEPAREN      reduce using rule 50 (save_params -> .)
    ID              reduce using rule 50 (save_params -> .)

    save_params                    shift and go to state 90

state 62

    (38) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func . save_function OPENCURLY alt3func
    (46) save_function -> .

    OPENCURLY       reduce using rule 46 (save_function -> .)

    save_function                  shift and go to state 91

state 63

    (41) alt2func -> TWODOTS . type
    (56) type -> . INT
    (57) type -> . FLOAT
    (58) type -> . STRING
    (59) type -> . ID
    (60) type -> . BOOL

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 36
    BOOL            shift and go to state 37

    type                           shift and go to state 92

state 64

    (42) alt2func -> empty .

    OPENCURLY       reduce using rule 42 (alt2func -> empty .)


state 65

    (7) main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain .

    $end            reduce using rule 7 (main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain .)


state 66

    (8) altmain -> var . altmain
    (8) altmain -> . var altmain
    (9) altmain -> . estatuto altmain
    (10) altmain -> . CLOSECURLY
    (26) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (61) estatuto -> . assign
    (62) estatuto -> . condition
    (63) estatuto -> . write
    (64) estatuto -> . read
    (65) estatuto -> . return
    (66) estatuto -> . voidcall
    (67) estatuto -> . while
    (124) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (120) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (121) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (111) write -> . OUTPUT OPENPAREN varcall altwrite
    (112) write -> . OUTPUT OPENPAREN expresion altwrite
    (110) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (127) return -> . RETURN expresion SEMICOLON
    (68) voidcall -> . ID OPENPAREN CLOSEPAREN
    (69) voidcall -> . ID OPENPAREN expresion altcall
    (72) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 68
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    var                            shift and go to state 66
    altmain                        shift and go to state 93
    estatuto                       shift and go to state 67
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 67

    (9) altmain -> estatuto . altmain
    (8) altmain -> . var altmain
    (9) altmain -> . estatuto altmain
    (10) altmain -> . CLOSECURLY
    (26) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (61) estatuto -> . assign
    (62) estatuto -> . condition
    (63) estatuto -> . write
    (64) estatuto -> . read
    (65) estatuto -> . return
    (66) estatuto -> . voidcall
    (67) estatuto -> . while
    (124) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (120) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (121) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (111) write -> . OUTPUT OPENPAREN varcall altwrite
    (112) write -> . OUTPUT OPENPAREN expresion altwrite
    (110) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (127) return -> . RETURN expresion SEMICOLON
    (68) voidcall -> . ID OPENPAREN CLOSEPAREN
    (69) voidcall -> . ID OPENPAREN expresion altcall
    (72) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 68
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 67
    altmain                        shift and go to state 94
    var                            shift and go to state 66
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 68

    (10) altmain -> CLOSECURLY .

    $end            reduce using rule 10 (altmain -> CLOSECURLY .)


state 69

    (61) estatuto -> assign .

    CLOSECURLY      reduce using rule 61 (estatuto -> assign .)
    VAR             reduce using rule 61 (estatuto -> assign .)
    ID              reduce using rule 61 (estatuto -> assign .)
    IF              reduce using rule 61 (estatuto -> assign .)
    OUTPUT          reduce using rule 61 (estatuto -> assign .)
    INPUT           reduce using rule 61 (estatuto -> assign .)
    RETURN          reduce using rule 61 (estatuto -> assign .)
    WHILE           reduce using rule 61 (estatuto -> assign .)


state 70

    (62) estatuto -> condition .

    CLOSECURLY      reduce using rule 62 (estatuto -> condition .)
    VAR             reduce using rule 62 (estatuto -> condition .)
    ID              reduce using rule 62 (estatuto -> condition .)
    IF              reduce using rule 62 (estatuto -> condition .)
    OUTPUT          reduce using rule 62 (estatuto -> condition .)
    INPUT           reduce using rule 62 (estatuto -> condition .)
    RETURN          reduce using rule 62 (estatuto -> condition .)
    WHILE           reduce using rule 62 (estatuto -> condition .)


state 71

    (63) estatuto -> write .

    CLOSECURLY      reduce using rule 63 (estatuto -> write .)
    VAR             reduce using rule 63 (estatuto -> write .)
    ID              reduce using rule 63 (estatuto -> write .)
    IF              reduce using rule 63 (estatuto -> write .)
    OUTPUT          reduce using rule 63 (estatuto -> write .)
    INPUT           reduce using rule 63 (estatuto -> write .)
    RETURN          reduce using rule 63 (estatuto -> write .)
    WHILE           reduce using rule 63 (estatuto -> write .)


state 72

    (64) estatuto -> read .

    CLOSECURLY      reduce using rule 64 (estatuto -> read .)
    VAR             reduce using rule 64 (estatuto -> read .)
    ID              reduce using rule 64 (estatuto -> read .)
    IF              reduce using rule 64 (estatuto -> read .)
    OUTPUT          reduce using rule 64 (estatuto -> read .)
    INPUT           reduce using rule 64 (estatuto -> read .)
    RETURN          reduce using rule 64 (estatuto -> read .)
    WHILE           reduce using rule 64 (estatuto -> read .)


state 73

    (65) estatuto -> return .

    CLOSECURLY      reduce using rule 65 (estatuto -> return .)
    VAR             reduce using rule 65 (estatuto -> return .)
    ID              reduce using rule 65 (estatuto -> return .)
    IF              reduce using rule 65 (estatuto -> return .)
    OUTPUT          reduce using rule 65 (estatuto -> return .)
    INPUT           reduce using rule 65 (estatuto -> return .)
    RETURN          reduce using rule 65 (estatuto -> return .)
    WHILE           reduce using rule 65 (estatuto -> return .)


state 74

    (66) estatuto -> voidcall .

    CLOSECURLY      reduce using rule 66 (estatuto -> voidcall .)
    VAR             reduce using rule 66 (estatuto -> voidcall .)
    ID              reduce using rule 66 (estatuto -> voidcall .)
    IF              reduce using rule 66 (estatuto -> voidcall .)
    OUTPUT          reduce using rule 66 (estatuto -> voidcall .)
    INPUT           reduce using rule 66 (estatuto -> voidcall .)
    RETURN          reduce using rule 66 (estatuto -> voidcall .)
    WHILE           reduce using rule 66 (estatuto -> voidcall .)


state 75

    (67) estatuto -> while .

    CLOSECURLY      reduce using rule 67 (estatuto -> while .)
    VAR             reduce using rule 67 (estatuto -> while .)
    ID              reduce using rule 67 (estatuto -> while .)
    IF              reduce using rule 67 (estatuto -> while .)
    OUTPUT          reduce using rule 67 (estatuto -> while .)
    INPUT           reduce using rule 67 (estatuto -> while .)
    RETURN          reduce using rule 67 (estatuto -> while .)
    WHILE           reduce using rule 67 (estatuto -> while .)


state 76

    (124) assign -> ID . assign1 EQUALS expresion SEMICOLON
    (68) voidcall -> ID . OPENPAREN CLOSEPAREN
    (69) voidcall -> ID . OPENPAREN expresion altcall
    (125) assign1 -> . DOT ID assign1
    (126) assign1 -> . empty
    (128) empty -> .

    OPENPAREN       shift and go to state 96
    DOT             shift and go to state 97
    EQUALS          reduce using rule 128 (empty -> .)

    assign1                        shift and go to state 95
    empty                          shift and go to state 98

state 77

    (120) condition -> IF . OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (121) condition -> IF . OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition

    OPENPAREN       shift and go to state 99


state 78

    (111) write -> OUTPUT . OPENPAREN varcall altwrite
    (112) write -> OUTPUT . OPENPAREN expresion altwrite

    OPENPAREN       shift and go to state 100


state 79

    (110) read -> INPUT . OPENPAREN ID CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 101


state 80

    (127) return -> RETURN . expresion SEMICOLON
    (89) expresion -> . exp altexpresion
    (100) exp -> . termino
    (101) exp -> . termino altexp
    (105) termino -> . factor
    (106) termino -> . factor alttermino
    (116) factor -> . OPENPAREN expresion CLOSEPAREN
    (117) factor -> . SUM varcall
    (118) factor -> . SUBTRACT varcall
    (119) factor -> . varcall
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 106
    SUM             shift and go to state 107
    SUBTRACT        shift and go to state 109
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119

    expresion                      shift and go to state 102
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    varcall                        shift and go to state 108
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118

state 81

    (72) while -> WHILE . OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    OPENPAREN       shift and go to state 120


state 82

    (15) alt2class -> var alt2class .

    CLASS           reduce using rule 15 (alt2class -> var alt2class .)
    VAR             reduce using rule 15 (alt2class -> var alt2class .)
    FUNC            reduce using rule 15 (alt2class -> var alt2class .)
    MAIN            reduce using rule 15 (alt2class -> var alt2class .)


state 83

    (16) alt2class -> function alt2class .

    CLASS           reduce using rule 16 (alt2class -> function alt2class .)
    VAR             reduce using rule 16 (alt2class -> function alt2class .)
    FUNC            reduce using rule 16 (alt2class -> function alt2class .)
    MAIN            reduce using rule 16 (alt2class -> function alt2class .)


state 84

    (17) alt2class -> constructor CLOSECURLY . SEMICOLON

    SEMICOLON       shift and go to state 121


state 85

    (19) constructor -> CONSTRUCTOR save_constructor . OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    OPENPAREN       shift and go to state 122


state 86

    (33) listidsaltz -> OPENBRACKET . CTEINT CLOSEBRACKET listidsaltp

    CTEINT          shift and go to state 123


state 87

    (30) listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltz .

    TWODOTS         reduce using rule 30 (listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltz .)


state 88

    (32) listidsaltz -> COMMA . listids
    (28) listids -> . ID save_var_name listidsalty

    ID              shift and go to state 20

    listids                        shift and go to state 124

state 89

    (34) listidsaltz -> empty .

    TWODOTS         reduce using rule 34 (listidsaltz -> empty .)


state 90

    (47) params -> ID TWODOTS type save_params . altparams
    (48) altparams -> . COMMA ID TWODOTS type save_params altparams
    (49) altparams -> . empty
    (128) empty -> .

    COMMA           shift and go to state 126
    CLOSEPAREN      reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)

    altparams                      shift and go to state 125
    empty                          shift and go to state 127

state 91

    (38) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function . OPENCURLY alt3func

    OPENCURLY       shift and go to state 128


state 92

    (41) alt2func -> TWODOTS type .

    OPENCURLY       reduce using rule 41 (alt2func -> TWODOTS type .)


state 93

    (8) altmain -> var altmain .

    $end            reduce using rule 8 (altmain -> var altmain .)


state 94

    (9) altmain -> estatuto altmain .

    $end            reduce using rule 9 (altmain -> estatuto altmain .)


state 95

    (124) assign -> ID assign1 . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 129


state 96

    (68) voidcall -> ID OPENPAREN . CLOSEPAREN
    (69) voidcall -> ID OPENPAREN . expresion altcall
    (89) expresion -> . exp altexpresion
    (100) exp -> . termino
    (101) exp -> . termino altexp
    (105) termino -> . factor
    (106) termino -> . factor alttermino
    (116) factor -> . OPENPAREN expresion CLOSEPAREN
    (117) factor -> . SUM varcall
    (118) factor -> . SUBTRACT varcall
    (119) factor -> . varcall
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    CLOSEPAREN      shift and go to state 130
    OPENPAREN       shift and go to state 106
    SUM             shift and go to state 107
    SUBTRACT        shift and go to state 109
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119

    expresion                      shift and go to state 131
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    varcall                        shift and go to state 108
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118

state 97

    (125) assign1 -> DOT . ID assign1

    ID              shift and go to state 132


state 98

    (126) assign1 -> empty .

    EQUALS          reduce using rule 126 (assign1 -> empty .)


state 99

    (120) condition -> IF OPENPAREN . expresion CLOSEPAREN OPENCURLY altcondition
    (121) condition -> IF OPENPAREN . expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (89) expresion -> . exp altexpresion
    (100) exp -> . termino
    (101) exp -> . termino altexp
    (105) termino -> . factor
    (106) termino -> . factor alttermino
    (116) factor -> . OPENPAREN expresion CLOSEPAREN
    (117) factor -> . SUM varcall
    (118) factor -> . SUBTRACT varcall
    (119) factor -> . varcall
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 106
    SUM             shift and go to state 107
    SUBTRACT        shift and go to state 109
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119

    expresion                      shift and go to state 133
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    varcall                        shift and go to state 108
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118

state 100

    (111) write -> OUTPUT OPENPAREN . varcall altwrite
    (112) write -> OUTPUT OPENPAREN . expresion altwrite
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (89) expresion -> . exp altexpresion
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (100) exp -> . termino
    (101) exp -> . termino altexp
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN
    (105) termino -> . factor
    (106) termino -> . factor alttermino
    (116) factor -> . OPENPAREN expresion CLOSEPAREN
    (117) factor -> . SUM varcall
    (118) factor -> . SUBTRACT varcall
    (119) factor -> . varcall

    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119
    OPENPAREN       shift and go to state 106
    SUM             shift and go to state 107
    SUBTRACT        shift and go to state 109

    varcall                        shift and go to state 134
    expresion                      shift and go to state 135
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    exp                            shift and go to state 103
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118
    termino                        shift and go to state 104
    factor                         shift and go to state 105

state 101

    (110) read -> INPUT OPENPAREN . ID CLOSEPAREN SEMICOLON

    ID              shift and go to state 136


state 102

    (127) return -> RETURN expresion . SEMICOLON

    SEMICOLON       shift and go to state 137


state 103

    (89) expresion -> exp . altexpresion
    (90) altexpresion -> . altexpresion2 exp
    (91) altexpresion -> . empty
    (92) altexpresion2 -> . SAMEAS
    (93) altexpresion2 -> . BIGGERTHAN
    (94) altexpresion2 -> . BIGGEREQUALSTHAN
    (95) altexpresion2 -> . SMALLTHAN
    (96) altexpresion2 -> . SMALLEQUALSTHAN
    (97) altexpresion2 -> . DIFFERENTTHAN
    (98) altexpresion2 -> . AND
    (99) altexpresion2 -> . OR
    (128) empty -> .

    SAMEAS          shift and go to state 141
    BIGGERTHAN      shift and go to state 142
    BIGGEREQUALSTHAN shift and go to state 143
    SMALLTHAN       shift and go to state 144
    SMALLEQUALSTHAN shift and go to state 145
    DIFFERENTTHAN   shift and go to state 146
    AND             shift and go to state 147
    OR              shift and go to state 148
    SEMICOLON       reduce using rule 128 (empty -> .)
    COMMA           reduce using rule 128 (empty -> .)
    CLOSEPAREN      reduce using rule 128 (empty -> .)
    OPENPAREN       reduce using rule 128 (empty -> .)
    SUM             reduce using rule 128 (empty -> .)
    SUBTRACT        reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CTEFLOAT        reduce using rule 128 (empty -> .)
    CTESTRING       reduce using rule 128 (empty -> .)
    CTEINT          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    CLOSECURLY      reduce using rule 128 (empty -> .)
    VAR             reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    OUTPUT          reduce using rule 128 (empty -> .)
    INPUT           reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)

    altexpresion                   shift and go to state 138
    altexpresion2                  shift and go to state 139
    empty                          shift and go to state 140

state 104

    (100) exp -> termino .
    (101) exp -> termino . altexp
    (102) altexp -> . SUM termino altexp
    (103) altexp -> . SUBTRACT termino altexp
    (104) altexp -> . empty
    (128) empty -> .

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! reduce/reduce conflict for SAMEAS resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for BIGGERTHAN resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for BIGGEREQUALSTHAN resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for SMALLTHAN resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for SMALLEQUALSTHAN resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for DIFFERENTTHAN resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for AND resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for OR resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for COMMA resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for CLOSEPAREN resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for OPENPAREN resolved using rule 100 (exp -> termino .)
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! reduce/reduce conflict for TRUE resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for FALSE resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for CTESTRING resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for CTEINT resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for ID resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for CLOSECURLY resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for VAR resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for IF resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for INPUT resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for RETURN resolved using rule 100 (exp -> termino .)
  ! reduce/reduce conflict for WHILE resolved using rule 100 (exp -> termino .)
    SAMEAS          reduce using rule 100 (exp -> termino .)
    BIGGERTHAN      reduce using rule 100 (exp -> termino .)
    BIGGEREQUALSTHAN reduce using rule 100 (exp -> termino .)
    SMALLTHAN       reduce using rule 100 (exp -> termino .)
    SMALLEQUALSTHAN reduce using rule 100 (exp -> termino .)
    DIFFERENTTHAN   reduce using rule 100 (exp -> termino .)
    AND             reduce using rule 100 (exp -> termino .)
    OR              reduce using rule 100 (exp -> termino .)
    SEMICOLON       reduce using rule 100 (exp -> termino .)
    COMMA           reduce using rule 100 (exp -> termino .)
    CLOSEPAREN      reduce using rule 100 (exp -> termino .)
    OPENPAREN       reduce using rule 100 (exp -> termino .)
    TRUE            reduce using rule 100 (exp -> termino .)
    FALSE           reduce using rule 100 (exp -> termino .)
    CTEFLOAT        reduce using rule 100 (exp -> termino .)
    CTESTRING       reduce using rule 100 (exp -> termino .)
    CTEINT          reduce using rule 100 (exp -> termino .)
    ID              reduce using rule 100 (exp -> termino .)
    CLOSECURLY      reduce using rule 100 (exp -> termino .)
    VAR             reduce using rule 100 (exp -> termino .)
    IF              reduce using rule 100 (exp -> termino .)
    OUTPUT          reduce using rule 100 (exp -> termino .)
    INPUT           reduce using rule 100 (exp -> termino .)
    RETURN          reduce using rule 100 (exp -> termino .)
    WHILE           reduce using rule 100 (exp -> termino .)
    SUM             shift and go to state 150
    SUBTRACT        shift and go to state 151

  ! SUM             [ reduce using rule 100 (exp -> termino .) ]
  ! SUBTRACT        [ reduce using rule 100 (exp -> termino .) ]
  ! SAMEAS          [ reduce using rule 128 (empty -> .) ]
  ! BIGGERTHAN      [ reduce using rule 128 (empty -> .) ]
  ! BIGGEREQUALSTHAN [ reduce using rule 128 (empty -> .) ]
  ! SMALLTHAN       [ reduce using rule 128 (empty -> .) ]
  ! SMALLEQUALSTHAN [ reduce using rule 128 (empty -> .) ]
  ! DIFFERENTTHAN   [ reduce using rule 128 (empty -> .) ]
  ! AND             [ reduce using rule 128 (empty -> .) ]
  ! OR              [ reduce using rule 128 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 128 (empty -> .) ]
  ! COMMA           [ reduce using rule 128 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 128 (empty -> .) ]
  ! OPENPAREN       [ reduce using rule 128 (empty -> .) ]
  ! SUM             [ reduce using rule 128 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 128 (empty -> .) ]
  ! TRUE            [ reduce using rule 128 (empty -> .) ]
  ! FALSE           [ reduce using rule 128 (empty -> .) ]
  ! CTEFLOAT        [ reduce using rule 128 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 128 (empty -> .) ]
  ! CTEINT          [ reduce using rule 128 (empty -> .) ]
  ! ID              [ reduce using rule 128 (empty -> .) ]
  ! CLOSECURLY      [ reduce using rule 128 (empty -> .) ]
  ! VAR             [ reduce using rule 128 (empty -> .) ]
  ! IF              [ reduce using rule 128 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 128 (empty -> .) ]
  ! INPUT           [ reduce using rule 128 (empty -> .) ]
  ! RETURN          [ reduce using rule 128 (empty -> .) ]
  ! WHILE           [ reduce using rule 128 (empty -> .) ]

    altexp                         shift and go to state 149
    empty                          shift and go to state 152

state 105

    (105) termino -> factor .
    (106) termino -> factor . alttermino
    (107) alttermino -> . TIMES factor alttermino
    (108) alttermino -> . DIV factor alttermino
    (109) alttermino -> . empty
    (128) empty -> .

  ! reduce/reduce conflict for SUM resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for SUBTRACT resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for SAMEAS resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for BIGGERTHAN resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for BIGGEREQUALSTHAN resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for SMALLTHAN resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for SMALLEQUALSTHAN resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for DIFFERENTTHAN resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for AND resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for OR resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for COMMA resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for CLOSEPAREN resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for OPENPAREN resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for TRUE resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for FALSE resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for CTESTRING resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for CTEINT resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for ID resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for CLOSECURLY resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for VAR resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for IF resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for INPUT resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for RETURN resolved using rule 105 (termino -> factor .)
  ! reduce/reduce conflict for WHILE resolved using rule 105 (termino -> factor .)
    SUM             reduce using rule 105 (termino -> factor .)
    SUBTRACT        reduce using rule 105 (termino -> factor .)
    SAMEAS          reduce using rule 105 (termino -> factor .)
    BIGGERTHAN      reduce using rule 105 (termino -> factor .)
    BIGGEREQUALSTHAN reduce using rule 105 (termino -> factor .)
    SMALLTHAN       reduce using rule 105 (termino -> factor .)
    SMALLEQUALSTHAN reduce using rule 105 (termino -> factor .)
    DIFFERENTTHAN   reduce using rule 105 (termino -> factor .)
    AND             reduce using rule 105 (termino -> factor .)
    OR              reduce using rule 105 (termino -> factor .)
    SEMICOLON       reduce using rule 105 (termino -> factor .)
    COMMA           reduce using rule 105 (termino -> factor .)
    CLOSEPAREN      reduce using rule 105 (termino -> factor .)
    OPENPAREN       reduce using rule 105 (termino -> factor .)
    TRUE            reduce using rule 105 (termino -> factor .)
    FALSE           reduce using rule 105 (termino -> factor .)
    CTEFLOAT        reduce using rule 105 (termino -> factor .)
    CTESTRING       reduce using rule 105 (termino -> factor .)
    CTEINT          reduce using rule 105 (termino -> factor .)
    ID              reduce using rule 105 (termino -> factor .)
    CLOSECURLY      reduce using rule 105 (termino -> factor .)
    VAR             reduce using rule 105 (termino -> factor .)
    IF              reduce using rule 105 (termino -> factor .)
    OUTPUT          reduce using rule 105 (termino -> factor .)
    INPUT           reduce using rule 105 (termino -> factor .)
    RETURN          reduce using rule 105 (termino -> factor .)
    WHILE           reduce using rule 105 (termino -> factor .)
    TIMES           shift and go to state 154
    DIV             shift and go to state 155

  ! SUM             [ reduce using rule 128 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 128 (empty -> .) ]
  ! SAMEAS          [ reduce using rule 128 (empty -> .) ]
  ! BIGGERTHAN      [ reduce using rule 128 (empty -> .) ]
  ! BIGGEREQUALSTHAN [ reduce using rule 128 (empty -> .) ]
  ! SMALLTHAN       [ reduce using rule 128 (empty -> .) ]
  ! SMALLEQUALSTHAN [ reduce using rule 128 (empty -> .) ]
  ! DIFFERENTTHAN   [ reduce using rule 128 (empty -> .) ]
  ! AND             [ reduce using rule 128 (empty -> .) ]
  ! OR              [ reduce using rule 128 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 128 (empty -> .) ]
  ! COMMA           [ reduce using rule 128 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 128 (empty -> .) ]
  ! OPENPAREN       [ reduce using rule 128 (empty -> .) ]
  ! TRUE            [ reduce using rule 128 (empty -> .) ]
  ! FALSE           [ reduce using rule 128 (empty -> .) ]
  ! CTEFLOAT        [ reduce using rule 128 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 128 (empty -> .) ]
  ! CTEINT          [ reduce using rule 128 (empty -> .) ]
  ! ID              [ reduce using rule 128 (empty -> .) ]
  ! CLOSECURLY      [ reduce using rule 128 (empty -> .) ]
  ! VAR             [ reduce using rule 128 (empty -> .) ]
  ! IF              [ reduce using rule 128 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 128 (empty -> .) ]
  ! INPUT           [ reduce using rule 128 (empty -> .) ]
  ! RETURN          [ reduce using rule 128 (empty -> .) ]
  ! WHILE           [ reduce using rule 128 (empty -> .) ]

    alttermino                     shift and go to state 153
    empty                          shift and go to state 156

state 106

    (116) factor -> OPENPAREN . expresion CLOSEPAREN
    (89) expresion -> . exp altexpresion
    (100) exp -> . termino
    (101) exp -> . termino altexp
    (105) termino -> . factor
    (106) termino -> . factor alttermino
    (116) factor -> . OPENPAREN expresion CLOSEPAREN
    (117) factor -> . SUM varcall
    (118) factor -> . SUBTRACT varcall
    (119) factor -> . varcall
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 106
    SUM             shift and go to state 107
    SUBTRACT        shift and go to state 109
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119

    expresion                      shift and go to state 157
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    varcall                        shift and go to state 108
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118

state 107

    (117) factor -> SUM . varcall
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119

    varcall                        shift and go to state 158
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118

state 108

    (119) factor -> varcall .

    TIMES           reduce using rule 119 (factor -> varcall .)
    DIV             reduce using rule 119 (factor -> varcall .)
    SUM             reduce using rule 119 (factor -> varcall .)
    SUBTRACT        reduce using rule 119 (factor -> varcall .)
    SAMEAS          reduce using rule 119 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 119 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 119 (factor -> varcall .)
    SMALLTHAN       reduce using rule 119 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 119 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 119 (factor -> varcall .)
    AND             reduce using rule 119 (factor -> varcall .)
    OR              reduce using rule 119 (factor -> varcall .)
    SEMICOLON       reduce using rule 119 (factor -> varcall .)
    COMMA           reduce using rule 119 (factor -> varcall .)
    CLOSEPAREN      reduce using rule 119 (factor -> varcall .)
    OPENPAREN       reduce using rule 119 (factor -> varcall .)
    TRUE            reduce using rule 119 (factor -> varcall .)
    FALSE           reduce using rule 119 (factor -> varcall .)
    CTEFLOAT        reduce using rule 119 (factor -> varcall .)
    CTESTRING       reduce using rule 119 (factor -> varcall .)
    CTEINT          reduce using rule 119 (factor -> varcall .)
    ID              reduce using rule 119 (factor -> varcall .)
    CLOSECURLY      reduce using rule 119 (factor -> varcall .)
    VAR             reduce using rule 119 (factor -> varcall .)
    IF              reduce using rule 119 (factor -> varcall .)
    OUTPUT          reduce using rule 119 (factor -> varcall .)
    INPUT           reduce using rule 119 (factor -> varcall .)
    RETURN          reduce using rule 119 (factor -> varcall .)
    WHILE           reduce using rule 119 (factor -> varcall .)


state 109

    (118) factor -> SUBTRACT . varcall
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119

    varcall                        shift and go to state 159
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118

state 110

    (75) varcall -> varcte .

    TIMES           reduce using rule 75 (varcall -> varcte .)
    DIV             reduce using rule 75 (varcall -> varcte .)
    SUM             reduce using rule 75 (varcall -> varcte .)
    SUBTRACT        reduce using rule 75 (varcall -> varcte .)
    SAMEAS          reduce using rule 75 (varcall -> varcte .)
    BIGGERTHAN      reduce using rule 75 (varcall -> varcte .)
    BIGGEREQUALSTHAN reduce using rule 75 (varcall -> varcte .)
    SMALLTHAN       reduce using rule 75 (varcall -> varcte .)
    SMALLEQUALSTHAN reduce using rule 75 (varcall -> varcte .)
    DIFFERENTTHAN   reduce using rule 75 (varcall -> varcte .)
    AND             reduce using rule 75 (varcall -> varcte .)
    OR              reduce using rule 75 (varcall -> varcte .)
    SEMICOLON       reduce using rule 75 (varcall -> varcte .)
    COMMA           reduce using rule 75 (varcall -> varcte .)
    CLOSEPAREN      reduce using rule 75 (varcall -> varcte .)
    OPENPAREN       reduce using rule 75 (varcall -> varcte .)
    TRUE            reduce using rule 75 (varcall -> varcte .)
    FALSE           reduce using rule 75 (varcall -> varcte .)
    CTEFLOAT        reduce using rule 75 (varcall -> varcte .)
    CTESTRING       reduce using rule 75 (varcall -> varcte .)
    CTEINT          reduce using rule 75 (varcall -> varcte .)
    ID              reduce using rule 75 (varcall -> varcte .)
    CLOSECURLY      reduce using rule 75 (varcall -> varcte .)
    VAR             reduce using rule 75 (varcall -> varcte .)
    IF              reduce using rule 75 (varcall -> varcte .)
    OUTPUT          reduce using rule 75 (varcall -> varcte .)
    INPUT           reduce using rule 75 (varcall -> varcte .)
    RETURN          reduce using rule 75 (varcall -> varcte .)
    WHILE           reduce using rule 75 (varcall -> varcte .)


state 111

    (76) varcall -> varcomplicated .

    TIMES           reduce using rule 76 (varcall -> varcomplicated .)
    DIV             reduce using rule 76 (varcall -> varcomplicated .)
    SUM             reduce using rule 76 (varcall -> varcomplicated .)
    SUBTRACT        reduce using rule 76 (varcall -> varcomplicated .)
    SAMEAS          reduce using rule 76 (varcall -> varcomplicated .)
    BIGGERTHAN      reduce using rule 76 (varcall -> varcomplicated .)
    BIGGEREQUALSTHAN reduce using rule 76 (varcall -> varcomplicated .)
    SMALLTHAN       reduce using rule 76 (varcall -> varcomplicated .)
    SMALLEQUALSTHAN reduce using rule 76 (varcall -> varcomplicated .)
    DIFFERENTTHAN   reduce using rule 76 (varcall -> varcomplicated .)
    AND             reduce using rule 76 (varcall -> varcomplicated .)
    OR              reduce using rule 76 (varcall -> varcomplicated .)
    SEMICOLON       reduce using rule 76 (varcall -> varcomplicated .)
    COMMA           reduce using rule 76 (varcall -> varcomplicated .)
    CLOSEPAREN      reduce using rule 76 (varcall -> varcomplicated .)
    OPENPAREN       reduce using rule 76 (varcall -> varcomplicated .)
    TRUE            reduce using rule 76 (varcall -> varcomplicated .)
    FALSE           reduce using rule 76 (varcall -> varcomplicated .)
    CTEFLOAT        reduce using rule 76 (varcall -> varcomplicated .)
    CTESTRING       reduce using rule 76 (varcall -> varcomplicated .)
    CTEINT          reduce using rule 76 (varcall -> varcomplicated .)
    ID              reduce using rule 76 (varcall -> varcomplicated .)
    CLOSECURLY      reduce using rule 76 (varcall -> varcomplicated .)
    VAR             reduce using rule 76 (varcall -> varcomplicated .)
    IF              reduce using rule 76 (varcall -> varcomplicated .)
    OUTPUT          reduce using rule 76 (varcall -> varcomplicated .)
    INPUT           reduce using rule 76 (varcall -> varcomplicated .)
    RETURN          reduce using rule 76 (varcall -> varcomplicated .)
    WHILE           reduce using rule 76 (varcall -> varcomplicated .)


state 112

    (77) varcte -> TRUE .

    TIMES           reduce using rule 77 (varcte -> TRUE .)
    DIV             reduce using rule 77 (varcte -> TRUE .)
    SUM             reduce using rule 77 (varcte -> TRUE .)
    SUBTRACT        reduce using rule 77 (varcte -> TRUE .)
    SAMEAS          reduce using rule 77 (varcte -> TRUE .)
    BIGGERTHAN      reduce using rule 77 (varcte -> TRUE .)
    BIGGEREQUALSTHAN reduce using rule 77 (varcte -> TRUE .)
    SMALLTHAN       reduce using rule 77 (varcte -> TRUE .)
    SMALLEQUALSTHAN reduce using rule 77 (varcte -> TRUE .)
    DIFFERENTTHAN   reduce using rule 77 (varcte -> TRUE .)
    AND             reduce using rule 77 (varcte -> TRUE .)
    OR              reduce using rule 77 (varcte -> TRUE .)
    SEMICOLON       reduce using rule 77 (varcte -> TRUE .)
    COMMA           reduce using rule 77 (varcte -> TRUE .)
    CLOSEPAREN      reduce using rule 77 (varcte -> TRUE .)
    OPENPAREN       reduce using rule 77 (varcte -> TRUE .)
    TRUE            reduce using rule 77 (varcte -> TRUE .)
    FALSE           reduce using rule 77 (varcte -> TRUE .)
    CTEFLOAT        reduce using rule 77 (varcte -> TRUE .)
    CTESTRING       reduce using rule 77 (varcte -> TRUE .)
    CTEINT          reduce using rule 77 (varcte -> TRUE .)
    ID              reduce using rule 77 (varcte -> TRUE .)
    CLOSECURLY      reduce using rule 77 (varcte -> TRUE .)
    VAR             reduce using rule 77 (varcte -> TRUE .)
    IF              reduce using rule 77 (varcte -> TRUE .)
    OUTPUT          reduce using rule 77 (varcte -> TRUE .)
    INPUT           reduce using rule 77 (varcte -> TRUE .)
    RETURN          reduce using rule 77 (varcte -> TRUE .)
    WHILE           reduce using rule 77 (varcte -> TRUE .)


state 113

    (78) varcte -> FALSE .

    TIMES           reduce using rule 78 (varcte -> FALSE .)
    DIV             reduce using rule 78 (varcte -> FALSE .)
    SUM             reduce using rule 78 (varcte -> FALSE .)
    SUBTRACT        reduce using rule 78 (varcte -> FALSE .)
    SAMEAS          reduce using rule 78 (varcte -> FALSE .)
    BIGGERTHAN      reduce using rule 78 (varcte -> FALSE .)
    BIGGEREQUALSTHAN reduce using rule 78 (varcte -> FALSE .)
    SMALLTHAN       reduce using rule 78 (varcte -> FALSE .)
    SMALLEQUALSTHAN reduce using rule 78 (varcte -> FALSE .)
    DIFFERENTTHAN   reduce using rule 78 (varcte -> FALSE .)
    AND             reduce using rule 78 (varcte -> FALSE .)
    OR              reduce using rule 78 (varcte -> FALSE .)
    SEMICOLON       reduce using rule 78 (varcte -> FALSE .)
    COMMA           reduce using rule 78 (varcte -> FALSE .)
    CLOSEPAREN      reduce using rule 78 (varcte -> FALSE .)
    OPENPAREN       reduce using rule 78 (varcte -> FALSE .)
    TRUE            reduce using rule 78 (varcte -> FALSE .)
    FALSE           reduce using rule 78 (varcte -> FALSE .)
    CTEFLOAT        reduce using rule 78 (varcte -> FALSE .)
    CTESTRING       reduce using rule 78 (varcte -> FALSE .)
    CTEINT          reduce using rule 78 (varcte -> FALSE .)
    ID              reduce using rule 78 (varcte -> FALSE .)
    CLOSECURLY      reduce using rule 78 (varcte -> FALSE .)
    VAR             reduce using rule 78 (varcte -> FALSE .)
    IF              reduce using rule 78 (varcte -> FALSE .)
    OUTPUT          reduce using rule 78 (varcte -> FALSE .)
    INPUT           reduce using rule 78 (varcte -> FALSE .)
    RETURN          reduce using rule 78 (varcte -> FALSE .)
    WHILE           reduce using rule 78 (varcte -> FALSE .)


state 114

    (79) varcte -> CTEFLOAT .

    TIMES           reduce using rule 79 (varcte -> CTEFLOAT .)
    DIV             reduce using rule 79 (varcte -> CTEFLOAT .)
    SUM             reduce using rule 79 (varcte -> CTEFLOAT .)
    SUBTRACT        reduce using rule 79 (varcte -> CTEFLOAT .)
    SAMEAS          reduce using rule 79 (varcte -> CTEFLOAT .)
    BIGGERTHAN      reduce using rule 79 (varcte -> CTEFLOAT .)
    BIGGEREQUALSTHAN reduce using rule 79 (varcte -> CTEFLOAT .)
    SMALLTHAN       reduce using rule 79 (varcte -> CTEFLOAT .)
    SMALLEQUALSTHAN reduce using rule 79 (varcte -> CTEFLOAT .)
    DIFFERENTTHAN   reduce using rule 79 (varcte -> CTEFLOAT .)
    AND             reduce using rule 79 (varcte -> CTEFLOAT .)
    OR              reduce using rule 79 (varcte -> CTEFLOAT .)
    SEMICOLON       reduce using rule 79 (varcte -> CTEFLOAT .)
    COMMA           reduce using rule 79 (varcte -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 79 (varcte -> CTEFLOAT .)
    OPENPAREN       reduce using rule 79 (varcte -> CTEFLOAT .)
    TRUE            reduce using rule 79 (varcte -> CTEFLOAT .)
    FALSE           reduce using rule 79 (varcte -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 79 (varcte -> CTEFLOAT .)
    CTESTRING       reduce using rule 79 (varcte -> CTEFLOAT .)
    CTEINT          reduce using rule 79 (varcte -> CTEFLOAT .)
    ID              reduce using rule 79 (varcte -> CTEFLOAT .)
    CLOSECURLY      reduce using rule 79 (varcte -> CTEFLOAT .)
    VAR             reduce using rule 79 (varcte -> CTEFLOAT .)
    IF              reduce using rule 79 (varcte -> CTEFLOAT .)
    OUTPUT          reduce using rule 79 (varcte -> CTEFLOAT .)
    INPUT           reduce using rule 79 (varcte -> CTEFLOAT .)
    RETURN          reduce using rule 79 (varcte -> CTEFLOAT .)
    WHILE           reduce using rule 79 (varcte -> CTEFLOAT .)


state 115

    (80) varcte -> CTESTRING .

    TIMES           reduce using rule 80 (varcte -> CTESTRING .)
    DIV             reduce using rule 80 (varcte -> CTESTRING .)
    SUM             reduce using rule 80 (varcte -> CTESTRING .)
    SUBTRACT        reduce using rule 80 (varcte -> CTESTRING .)
    SAMEAS          reduce using rule 80 (varcte -> CTESTRING .)
    BIGGERTHAN      reduce using rule 80 (varcte -> CTESTRING .)
    BIGGEREQUALSTHAN reduce using rule 80 (varcte -> CTESTRING .)
    SMALLTHAN       reduce using rule 80 (varcte -> CTESTRING .)
    SMALLEQUALSTHAN reduce using rule 80 (varcte -> CTESTRING .)
    DIFFERENTTHAN   reduce using rule 80 (varcte -> CTESTRING .)
    AND             reduce using rule 80 (varcte -> CTESTRING .)
    OR              reduce using rule 80 (varcte -> CTESTRING .)
    SEMICOLON       reduce using rule 80 (varcte -> CTESTRING .)
    COMMA           reduce using rule 80 (varcte -> CTESTRING .)
    CLOSEPAREN      reduce using rule 80 (varcte -> CTESTRING .)
    OPENPAREN       reduce using rule 80 (varcte -> CTESTRING .)
    TRUE            reduce using rule 80 (varcte -> CTESTRING .)
    FALSE           reduce using rule 80 (varcte -> CTESTRING .)
    CTEFLOAT        reduce using rule 80 (varcte -> CTESTRING .)
    CTESTRING       reduce using rule 80 (varcte -> CTESTRING .)
    CTEINT          reduce using rule 80 (varcte -> CTESTRING .)
    ID              reduce using rule 80 (varcte -> CTESTRING .)
    CLOSECURLY      reduce using rule 80 (varcte -> CTESTRING .)
    VAR             reduce using rule 80 (varcte -> CTESTRING .)
    IF              reduce using rule 80 (varcte -> CTESTRING .)
    OUTPUT          reduce using rule 80 (varcte -> CTESTRING .)
    INPUT           reduce using rule 80 (varcte -> CTESTRING .)
    RETURN          reduce using rule 80 (varcte -> CTESTRING .)
    WHILE           reduce using rule 80 (varcte -> CTESTRING .)


state 116

    (81) varcte -> CTEINT .

    TIMES           reduce using rule 81 (varcte -> CTEINT .)
    DIV             reduce using rule 81 (varcte -> CTEINT .)
    SUM             reduce using rule 81 (varcte -> CTEINT .)
    SUBTRACT        reduce using rule 81 (varcte -> CTEINT .)
    SAMEAS          reduce using rule 81 (varcte -> CTEINT .)
    BIGGERTHAN      reduce using rule 81 (varcte -> CTEINT .)
    BIGGEREQUALSTHAN reduce using rule 81 (varcte -> CTEINT .)
    SMALLTHAN       reduce using rule 81 (varcte -> CTEINT .)
    SMALLEQUALSTHAN reduce using rule 81 (varcte -> CTEINT .)
    DIFFERENTTHAN   reduce using rule 81 (varcte -> CTEINT .)
    AND             reduce using rule 81 (varcte -> CTEINT .)
    OR              reduce using rule 81 (varcte -> CTEINT .)
    SEMICOLON       reduce using rule 81 (varcte -> CTEINT .)
    COMMA           reduce using rule 81 (varcte -> CTEINT .)
    CLOSEPAREN      reduce using rule 81 (varcte -> CTEINT .)
    OPENPAREN       reduce using rule 81 (varcte -> CTEINT .)
    TRUE            reduce using rule 81 (varcte -> CTEINT .)
    FALSE           reduce using rule 81 (varcte -> CTEINT .)
    CTEFLOAT        reduce using rule 81 (varcte -> CTEINT .)
    CTESTRING       reduce using rule 81 (varcte -> CTEINT .)
    CTEINT          reduce using rule 81 (varcte -> CTEINT .)
    ID              reduce using rule 81 (varcte -> CTEINT .)
    CLOSECURLY      reduce using rule 81 (varcte -> CTEINT .)
    VAR             reduce using rule 81 (varcte -> CTEINT .)
    IF              reduce using rule 81 (varcte -> CTEINT .)
    OUTPUT          reduce using rule 81 (varcte -> CTEINT .)
    INPUT           reduce using rule 81 (varcte -> CTEINT .)
    RETURN          reduce using rule 81 (varcte -> CTEINT .)
    WHILE           reduce using rule 81 (varcte -> CTEINT .)


state 117

    (82) varcomplicated -> varcomp1 .

    TIMES           reduce using rule 82 (varcomplicated -> varcomp1 .)
    DIV             reduce using rule 82 (varcomplicated -> varcomp1 .)
    SUM             reduce using rule 82 (varcomplicated -> varcomp1 .)
    SUBTRACT        reduce using rule 82 (varcomplicated -> varcomp1 .)
    SAMEAS          reduce using rule 82 (varcomplicated -> varcomp1 .)
    BIGGERTHAN      reduce using rule 82 (varcomplicated -> varcomp1 .)
    BIGGEREQUALSTHAN reduce using rule 82 (varcomplicated -> varcomp1 .)
    SMALLTHAN       reduce using rule 82 (varcomplicated -> varcomp1 .)
    SMALLEQUALSTHAN reduce using rule 82 (varcomplicated -> varcomp1 .)
    DIFFERENTTHAN   reduce using rule 82 (varcomplicated -> varcomp1 .)
    AND             reduce using rule 82 (varcomplicated -> varcomp1 .)
    OR              reduce using rule 82 (varcomplicated -> varcomp1 .)
    SEMICOLON       reduce using rule 82 (varcomplicated -> varcomp1 .)
    COMMA           reduce using rule 82 (varcomplicated -> varcomp1 .)
    CLOSEPAREN      reduce using rule 82 (varcomplicated -> varcomp1 .)
    OPENPAREN       reduce using rule 82 (varcomplicated -> varcomp1 .)
    TRUE            reduce using rule 82 (varcomplicated -> varcomp1 .)
    FALSE           reduce using rule 82 (varcomplicated -> varcomp1 .)
    CTEFLOAT        reduce using rule 82 (varcomplicated -> varcomp1 .)
    CTESTRING       reduce using rule 82 (varcomplicated -> varcomp1 .)
    CTEINT          reduce using rule 82 (varcomplicated -> varcomp1 .)
    ID              reduce using rule 82 (varcomplicated -> varcomp1 .)
    CLOSECURLY      reduce using rule 82 (varcomplicated -> varcomp1 .)
    VAR             reduce using rule 82 (varcomplicated -> varcomp1 .)
    IF              reduce using rule 82 (varcomplicated -> varcomp1 .)
    OUTPUT          reduce using rule 82 (varcomplicated -> varcomp1 .)
    INPUT           reduce using rule 82 (varcomplicated -> varcomp1 .)
    RETURN          reduce using rule 82 (varcomplicated -> varcomp1 .)
    WHILE           reduce using rule 82 (varcomplicated -> varcomp1 .)


state 118

    (83) varcomplicated -> callfunc .

    TIMES           reduce using rule 83 (varcomplicated -> callfunc .)
    DIV             reduce using rule 83 (varcomplicated -> callfunc .)
    SUM             reduce using rule 83 (varcomplicated -> callfunc .)
    SUBTRACT        reduce using rule 83 (varcomplicated -> callfunc .)
    SAMEAS          reduce using rule 83 (varcomplicated -> callfunc .)
    BIGGERTHAN      reduce using rule 83 (varcomplicated -> callfunc .)
    BIGGEREQUALSTHAN reduce using rule 83 (varcomplicated -> callfunc .)
    SMALLTHAN       reduce using rule 83 (varcomplicated -> callfunc .)
    SMALLEQUALSTHAN reduce using rule 83 (varcomplicated -> callfunc .)
    DIFFERENTTHAN   reduce using rule 83 (varcomplicated -> callfunc .)
    AND             reduce using rule 83 (varcomplicated -> callfunc .)
    OR              reduce using rule 83 (varcomplicated -> callfunc .)
    SEMICOLON       reduce using rule 83 (varcomplicated -> callfunc .)
    COMMA           reduce using rule 83 (varcomplicated -> callfunc .)
    CLOSEPAREN      reduce using rule 83 (varcomplicated -> callfunc .)
    OPENPAREN       reduce using rule 83 (varcomplicated -> callfunc .)
    TRUE            reduce using rule 83 (varcomplicated -> callfunc .)
    FALSE           reduce using rule 83 (varcomplicated -> callfunc .)
    CTEFLOAT        reduce using rule 83 (varcomplicated -> callfunc .)
    CTESTRING       reduce using rule 83 (varcomplicated -> callfunc .)
    CTEINT          reduce using rule 83 (varcomplicated -> callfunc .)
    ID              reduce using rule 83 (varcomplicated -> callfunc .)
    CLOSECURLY      reduce using rule 83 (varcomplicated -> callfunc .)
    VAR             reduce using rule 83 (varcomplicated -> callfunc .)
    IF              reduce using rule 83 (varcomplicated -> callfunc .)
    OUTPUT          reduce using rule 83 (varcomplicated -> callfunc .)
    INPUT           reduce using rule 83 (varcomplicated -> callfunc .)
    RETURN          reduce using rule 83 (varcomplicated -> callfunc .)
    WHILE           reduce using rule 83 (varcomplicated -> callfunc .)


state 119

    (84) varcomp1 -> ID . varcomp2
    (51) callfunc -> ID . OPENPAREN altcall CLOSEPAREN
    (85) varcomp2 -> . DOT varcomp3
    (86) varcomp2 -> . empty
    (128) empty -> .

  ! shift/reduce conflict for OPENPAREN resolved as shift
    OPENPAREN       shift and go to state 161
    DOT             shift and go to state 162
    TIMES           reduce using rule 128 (empty -> .)
    DIV             reduce using rule 128 (empty -> .)
    SUM             reduce using rule 128 (empty -> .)
    SUBTRACT        reduce using rule 128 (empty -> .)
    SAMEAS          reduce using rule 128 (empty -> .)
    BIGGERTHAN      reduce using rule 128 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 128 (empty -> .)
    SMALLTHAN       reduce using rule 128 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 128 (empty -> .)
    DIFFERENTTHAN   reduce using rule 128 (empty -> .)
    AND             reduce using rule 128 (empty -> .)
    OR              reduce using rule 128 (empty -> .)
    SEMICOLON       reduce using rule 128 (empty -> .)
    COMMA           reduce using rule 128 (empty -> .)
    CLOSEPAREN      reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CTEFLOAT        reduce using rule 128 (empty -> .)
    CTESTRING       reduce using rule 128 (empty -> .)
    CTEINT          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    CLOSECURLY      reduce using rule 128 (empty -> .)
    VAR             reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    OUTPUT          reduce using rule 128 (empty -> .)
    INPUT           reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)

  ! OPENPAREN       [ reduce using rule 128 (empty -> .) ]

    varcomp2                       shift and go to state 160
    empty                          shift and go to state 163

state 120

    (72) while -> WHILE OPENPAREN . expresion CLOSEPAREN OPENCURLY altwhile
    (89) expresion -> . exp altexpresion
    (100) exp -> . termino
    (101) exp -> . termino altexp
    (105) termino -> . factor
    (106) termino -> . factor alttermino
    (116) factor -> . OPENPAREN expresion CLOSEPAREN
    (117) factor -> . SUM varcall
    (118) factor -> . SUBTRACT varcall
    (119) factor -> . varcall
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 106
    SUM             shift and go to state 107
    SUBTRACT        shift and go to state 109
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119

    expresion                      shift and go to state 164
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    varcall                        shift and go to state 108
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118

state 121

    (17) alt2class -> constructor CLOSECURLY SEMICOLON .

    CLASS           reduce using rule 17 (alt2class -> constructor CLOSECURLY SEMICOLON .)
    VAR             reduce using rule 17 (alt2class -> constructor CLOSECURLY SEMICOLON .)
    FUNC            reduce using rule 17 (alt2class -> constructor CLOSECURLY SEMICOLON .)
    MAIN            reduce using rule 17 (alt2class -> constructor CLOSECURLY SEMICOLON .)


state 122

    (19) constructor -> CONSTRUCTOR save_constructor OPENPAREN . altconst CLOSEPAREN OPENCURLY alt2const
    (20) altconst -> . params altconst
    (21) altconst -> . empty
    (47) params -> . ID TWODOTS type save_params altparams
    (128) empty -> .

    ID              shift and go to state 42
    CLOSEPAREN      reduce using rule 128 (empty -> .)

    altconst                       shift and go to state 165
    params                         shift and go to state 166
    empty                          shift and go to state 167

state 123

    (33) listidsaltz -> OPENBRACKET CTEINT . CLOSEBRACKET listidsaltp

    CLOSEBRACKET    shift and go to state 168


state 124

    (32) listidsaltz -> COMMA listids .

    TWODOTS         reduce using rule 32 (listidsaltz -> COMMA listids .)


state 125

    (47) params -> ID TWODOTS type save_params altparams .

    CLOSEPAREN      reduce using rule 47 (params -> ID TWODOTS type save_params altparams .)
    ID              reduce using rule 47 (params -> ID TWODOTS type save_params altparams .)


state 126

    (48) altparams -> COMMA . ID TWODOTS type save_params altparams

    ID              shift and go to state 169


state 127

    (49) altparams -> empty .

    CLOSEPAREN      reduce using rule 49 (altparams -> empty .)
    ID              reduce using rule 49 (altparams -> empty .)


state 128

    (38) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY . alt3func
    (43) alt3func -> . var alt3func
    (44) alt3func -> . estatuto alt3func
    (45) alt3func -> . CLOSECURLY
    (26) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (61) estatuto -> . assign
    (62) estatuto -> . condition
    (63) estatuto -> . write
    (64) estatuto -> . read
    (65) estatuto -> . return
    (66) estatuto -> . voidcall
    (67) estatuto -> . while
    (124) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (120) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (121) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (111) write -> . OUTPUT OPENPAREN varcall altwrite
    (112) write -> . OUTPUT OPENPAREN expresion altwrite
    (110) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (127) return -> . RETURN expresion SEMICOLON
    (68) voidcall -> . ID OPENPAREN CLOSEPAREN
    (69) voidcall -> . ID OPENPAREN expresion altcall
    (72) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 173
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    alt3func                       shift and go to state 170
    var                            shift and go to state 171
    estatuto                       shift and go to state 172
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 129

    (124) assign -> ID assign1 EQUALS . expresion SEMICOLON
    (89) expresion -> . exp altexpresion
    (100) exp -> . termino
    (101) exp -> . termino altexp
    (105) termino -> . factor
    (106) termino -> . factor alttermino
    (116) factor -> . OPENPAREN expresion CLOSEPAREN
    (117) factor -> . SUM varcall
    (118) factor -> . SUBTRACT varcall
    (119) factor -> . varcall
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 106
    SUM             shift and go to state 107
    SUBTRACT        shift and go to state 109
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119

    expresion                      shift and go to state 174
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    varcall                        shift and go to state 108
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118

state 130

    (68) voidcall -> ID OPENPAREN CLOSEPAREN .

    CLOSECURLY      reduce using rule 68 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    VAR             reduce using rule 68 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    ID              reduce using rule 68 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    IF              reduce using rule 68 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    OUTPUT          reduce using rule 68 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    INPUT           reduce using rule 68 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    RETURN          reduce using rule 68 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    WHILE           reduce using rule 68 (voidcall -> ID OPENPAREN CLOSEPAREN .)


state 131

    (69) voidcall -> ID OPENPAREN expresion . altcall
    (52) altcall -> . expresion alt2call
    (53) altcall -> . empty
    (70) altcall -> . COMMA expresion altcall
    (71) altcall -> . CLOSEPAREN SEMICOLON
    (89) expresion -> . exp altexpresion
    (128) empty -> .
    (100) exp -> . termino
    (101) exp -> . termino altexp
    (105) termino -> . factor
    (106) termino -> . factor alttermino
    (116) factor -> . OPENPAREN expresion CLOSEPAREN
    (117) factor -> . SUM varcall
    (118) factor -> . SUBTRACT varcall
    (119) factor -> . varcall
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 178
    CLOSEPAREN      shift and go to state 179
    CLOSECURLY      reduce using rule 128 (empty -> .)
    VAR             reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    OUTPUT          reduce using rule 128 (empty -> .)
    INPUT           reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    OPENPAREN       shift and go to state 106
    SUM             shift and go to state 107
    SUBTRACT        shift and go to state 109
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119

  ! ID              [ reduce using rule 128 (empty -> .) ]

    expresion                      shift and go to state 175
    altcall                        shift and go to state 176
    empty                          shift and go to state 177
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    varcall                        shift and go to state 108
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118

state 132

    (125) assign1 -> DOT ID . assign1
    (125) assign1 -> . DOT ID assign1
    (126) assign1 -> . empty
    (128) empty -> .

    DOT             shift and go to state 97
    EQUALS          reduce using rule 128 (empty -> .)

    assign1                        shift and go to state 180
    empty                          shift and go to state 98

state 133

    (120) condition -> IF OPENPAREN expresion . CLOSEPAREN OPENCURLY altcondition
    (121) condition -> IF OPENPAREN expresion . CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition

    CLOSEPAREN      shift and go to state 181


state 134

    (111) write -> OUTPUT OPENPAREN varcall . altwrite
    (119) factor -> varcall .
    (113) altwrite -> . COMMA varcall altwrite
    (114) altwrite -> . COMMA expresion altwrite
    (115) altwrite -> . CLOSEPAREN SEMICOLON

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for CLOSEPAREN resolved as shift
    TIMES           reduce using rule 119 (factor -> varcall .)
    DIV             reduce using rule 119 (factor -> varcall .)
    SUM             reduce using rule 119 (factor -> varcall .)
    SUBTRACT        reduce using rule 119 (factor -> varcall .)
    SAMEAS          reduce using rule 119 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 119 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 119 (factor -> varcall .)
    SMALLTHAN       reduce using rule 119 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 119 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 119 (factor -> varcall .)
    AND             reduce using rule 119 (factor -> varcall .)
    OR              reduce using rule 119 (factor -> varcall .)
    COMMA           shift and go to state 183
    CLOSEPAREN      shift and go to state 184

  ! COMMA           [ reduce using rule 119 (factor -> varcall .) ]
  ! CLOSEPAREN      [ reduce using rule 119 (factor -> varcall .) ]

    altwrite                       shift and go to state 182

state 135

    (112) write -> OUTPUT OPENPAREN expresion . altwrite
    (113) altwrite -> . COMMA varcall altwrite
    (114) altwrite -> . COMMA expresion altwrite
    (115) altwrite -> . CLOSEPAREN SEMICOLON

    COMMA           shift and go to state 183
    CLOSEPAREN      shift and go to state 184

    altwrite                       shift and go to state 185

state 136

    (110) read -> INPUT OPENPAREN ID . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 186


state 137

    (127) return -> RETURN expresion SEMICOLON .

    CLOSECURLY      reduce using rule 127 (return -> RETURN expresion SEMICOLON .)
    VAR             reduce using rule 127 (return -> RETURN expresion SEMICOLON .)
    ID              reduce using rule 127 (return -> RETURN expresion SEMICOLON .)
    IF              reduce using rule 127 (return -> RETURN expresion SEMICOLON .)
    OUTPUT          reduce using rule 127 (return -> RETURN expresion SEMICOLON .)
    INPUT           reduce using rule 127 (return -> RETURN expresion SEMICOLON .)
    RETURN          reduce using rule 127 (return -> RETURN expresion SEMICOLON .)
    WHILE           reduce using rule 127 (return -> RETURN expresion SEMICOLON .)


state 138

    (89) expresion -> exp altexpresion .

    SEMICOLON       reduce using rule 89 (expresion -> exp altexpresion .)
    COMMA           reduce using rule 89 (expresion -> exp altexpresion .)
    CLOSEPAREN      reduce using rule 89 (expresion -> exp altexpresion .)
    OPENPAREN       reduce using rule 89 (expresion -> exp altexpresion .)
    SUM             reduce using rule 89 (expresion -> exp altexpresion .)
    SUBTRACT        reduce using rule 89 (expresion -> exp altexpresion .)
    TRUE            reduce using rule 89 (expresion -> exp altexpresion .)
    FALSE           reduce using rule 89 (expresion -> exp altexpresion .)
    CTEFLOAT        reduce using rule 89 (expresion -> exp altexpresion .)
    CTESTRING       reduce using rule 89 (expresion -> exp altexpresion .)
    CTEINT          reduce using rule 89 (expresion -> exp altexpresion .)
    ID              reduce using rule 89 (expresion -> exp altexpresion .)
    CLOSECURLY      reduce using rule 89 (expresion -> exp altexpresion .)
    VAR             reduce using rule 89 (expresion -> exp altexpresion .)
    IF              reduce using rule 89 (expresion -> exp altexpresion .)
    OUTPUT          reduce using rule 89 (expresion -> exp altexpresion .)
    INPUT           reduce using rule 89 (expresion -> exp altexpresion .)
    RETURN          reduce using rule 89 (expresion -> exp altexpresion .)
    WHILE           reduce using rule 89 (expresion -> exp altexpresion .)


state 139

    (90) altexpresion -> altexpresion2 . exp
    (100) exp -> . termino
    (101) exp -> . termino altexp
    (105) termino -> . factor
    (106) termino -> . factor alttermino
    (116) factor -> . OPENPAREN expresion CLOSEPAREN
    (117) factor -> . SUM varcall
    (118) factor -> . SUBTRACT varcall
    (119) factor -> . varcall
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 106
    SUM             shift and go to state 107
    SUBTRACT        shift and go to state 109
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119

    exp                            shift and go to state 187
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    varcall                        shift and go to state 108
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118

state 140

    (91) altexpresion -> empty .

    SEMICOLON       reduce using rule 91 (altexpresion -> empty .)
    COMMA           reduce using rule 91 (altexpresion -> empty .)
    CLOSEPAREN      reduce using rule 91 (altexpresion -> empty .)
    OPENPAREN       reduce using rule 91 (altexpresion -> empty .)
    SUM             reduce using rule 91 (altexpresion -> empty .)
    SUBTRACT        reduce using rule 91 (altexpresion -> empty .)
    TRUE            reduce using rule 91 (altexpresion -> empty .)
    FALSE           reduce using rule 91 (altexpresion -> empty .)
    CTEFLOAT        reduce using rule 91 (altexpresion -> empty .)
    CTESTRING       reduce using rule 91 (altexpresion -> empty .)
    CTEINT          reduce using rule 91 (altexpresion -> empty .)
    ID              reduce using rule 91 (altexpresion -> empty .)
    CLOSECURLY      reduce using rule 91 (altexpresion -> empty .)
    VAR             reduce using rule 91 (altexpresion -> empty .)
    IF              reduce using rule 91 (altexpresion -> empty .)
    OUTPUT          reduce using rule 91 (altexpresion -> empty .)
    INPUT           reduce using rule 91 (altexpresion -> empty .)
    RETURN          reduce using rule 91 (altexpresion -> empty .)
    WHILE           reduce using rule 91 (altexpresion -> empty .)


state 141

    (92) altexpresion2 -> SAMEAS .

    OPENPAREN       reduce using rule 92 (altexpresion2 -> SAMEAS .)
    SUM             reduce using rule 92 (altexpresion2 -> SAMEAS .)
    SUBTRACT        reduce using rule 92 (altexpresion2 -> SAMEAS .)
    TRUE            reduce using rule 92 (altexpresion2 -> SAMEAS .)
    FALSE           reduce using rule 92 (altexpresion2 -> SAMEAS .)
    CTEFLOAT        reduce using rule 92 (altexpresion2 -> SAMEAS .)
    CTESTRING       reduce using rule 92 (altexpresion2 -> SAMEAS .)
    CTEINT          reduce using rule 92 (altexpresion2 -> SAMEAS .)
    ID              reduce using rule 92 (altexpresion2 -> SAMEAS .)


state 142

    (93) altexpresion2 -> BIGGERTHAN .

    OPENPAREN       reduce using rule 93 (altexpresion2 -> BIGGERTHAN .)
    SUM             reduce using rule 93 (altexpresion2 -> BIGGERTHAN .)
    SUBTRACT        reduce using rule 93 (altexpresion2 -> BIGGERTHAN .)
    TRUE            reduce using rule 93 (altexpresion2 -> BIGGERTHAN .)
    FALSE           reduce using rule 93 (altexpresion2 -> BIGGERTHAN .)
    CTEFLOAT        reduce using rule 93 (altexpresion2 -> BIGGERTHAN .)
    CTESTRING       reduce using rule 93 (altexpresion2 -> BIGGERTHAN .)
    CTEINT          reduce using rule 93 (altexpresion2 -> BIGGERTHAN .)
    ID              reduce using rule 93 (altexpresion2 -> BIGGERTHAN .)


state 143

    (94) altexpresion2 -> BIGGEREQUALSTHAN .

    OPENPAREN       reduce using rule 94 (altexpresion2 -> BIGGEREQUALSTHAN .)
    SUM             reduce using rule 94 (altexpresion2 -> BIGGEREQUALSTHAN .)
    SUBTRACT        reduce using rule 94 (altexpresion2 -> BIGGEREQUALSTHAN .)
    TRUE            reduce using rule 94 (altexpresion2 -> BIGGEREQUALSTHAN .)
    FALSE           reduce using rule 94 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTEFLOAT        reduce using rule 94 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTESTRING       reduce using rule 94 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTEINT          reduce using rule 94 (altexpresion2 -> BIGGEREQUALSTHAN .)
    ID              reduce using rule 94 (altexpresion2 -> BIGGEREQUALSTHAN .)


state 144

    (95) altexpresion2 -> SMALLTHAN .

    OPENPAREN       reduce using rule 95 (altexpresion2 -> SMALLTHAN .)
    SUM             reduce using rule 95 (altexpresion2 -> SMALLTHAN .)
    SUBTRACT        reduce using rule 95 (altexpresion2 -> SMALLTHAN .)
    TRUE            reduce using rule 95 (altexpresion2 -> SMALLTHAN .)
    FALSE           reduce using rule 95 (altexpresion2 -> SMALLTHAN .)
    CTEFLOAT        reduce using rule 95 (altexpresion2 -> SMALLTHAN .)
    CTESTRING       reduce using rule 95 (altexpresion2 -> SMALLTHAN .)
    CTEINT          reduce using rule 95 (altexpresion2 -> SMALLTHAN .)
    ID              reduce using rule 95 (altexpresion2 -> SMALLTHAN .)


state 145

    (96) altexpresion2 -> SMALLEQUALSTHAN .

    OPENPAREN       reduce using rule 96 (altexpresion2 -> SMALLEQUALSTHAN .)
    SUM             reduce using rule 96 (altexpresion2 -> SMALLEQUALSTHAN .)
    SUBTRACT        reduce using rule 96 (altexpresion2 -> SMALLEQUALSTHAN .)
    TRUE            reduce using rule 96 (altexpresion2 -> SMALLEQUALSTHAN .)
    FALSE           reduce using rule 96 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTEFLOAT        reduce using rule 96 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTESTRING       reduce using rule 96 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTEINT          reduce using rule 96 (altexpresion2 -> SMALLEQUALSTHAN .)
    ID              reduce using rule 96 (altexpresion2 -> SMALLEQUALSTHAN .)


state 146

    (97) altexpresion2 -> DIFFERENTTHAN .

    OPENPAREN       reduce using rule 97 (altexpresion2 -> DIFFERENTTHAN .)
    SUM             reduce using rule 97 (altexpresion2 -> DIFFERENTTHAN .)
    SUBTRACT        reduce using rule 97 (altexpresion2 -> DIFFERENTTHAN .)
    TRUE            reduce using rule 97 (altexpresion2 -> DIFFERENTTHAN .)
    FALSE           reduce using rule 97 (altexpresion2 -> DIFFERENTTHAN .)
    CTEFLOAT        reduce using rule 97 (altexpresion2 -> DIFFERENTTHAN .)
    CTESTRING       reduce using rule 97 (altexpresion2 -> DIFFERENTTHAN .)
    CTEINT          reduce using rule 97 (altexpresion2 -> DIFFERENTTHAN .)
    ID              reduce using rule 97 (altexpresion2 -> DIFFERENTTHAN .)


state 147

    (98) altexpresion2 -> AND .

    OPENPAREN       reduce using rule 98 (altexpresion2 -> AND .)
    SUM             reduce using rule 98 (altexpresion2 -> AND .)
    SUBTRACT        reduce using rule 98 (altexpresion2 -> AND .)
    TRUE            reduce using rule 98 (altexpresion2 -> AND .)
    FALSE           reduce using rule 98 (altexpresion2 -> AND .)
    CTEFLOAT        reduce using rule 98 (altexpresion2 -> AND .)
    CTESTRING       reduce using rule 98 (altexpresion2 -> AND .)
    CTEINT          reduce using rule 98 (altexpresion2 -> AND .)
    ID              reduce using rule 98 (altexpresion2 -> AND .)


state 148

    (99) altexpresion2 -> OR .

    OPENPAREN       reduce using rule 99 (altexpresion2 -> OR .)
    SUM             reduce using rule 99 (altexpresion2 -> OR .)
    SUBTRACT        reduce using rule 99 (altexpresion2 -> OR .)
    TRUE            reduce using rule 99 (altexpresion2 -> OR .)
    FALSE           reduce using rule 99 (altexpresion2 -> OR .)
    CTEFLOAT        reduce using rule 99 (altexpresion2 -> OR .)
    CTESTRING       reduce using rule 99 (altexpresion2 -> OR .)
    CTEINT          reduce using rule 99 (altexpresion2 -> OR .)
    ID              reduce using rule 99 (altexpresion2 -> OR .)


state 149

    (101) exp -> termino altexp .

    SAMEAS          reduce using rule 101 (exp -> termino altexp .)
    BIGGERTHAN      reduce using rule 101 (exp -> termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 101 (exp -> termino altexp .)
    SMALLTHAN       reduce using rule 101 (exp -> termino altexp .)
    SMALLEQUALSTHAN reduce using rule 101 (exp -> termino altexp .)
    DIFFERENTTHAN   reduce using rule 101 (exp -> termino altexp .)
    AND             reduce using rule 101 (exp -> termino altexp .)
    OR              reduce using rule 101 (exp -> termino altexp .)
    SEMICOLON       reduce using rule 101 (exp -> termino altexp .)
    COMMA           reduce using rule 101 (exp -> termino altexp .)
    CLOSEPAREN      reduce using rule 101 (exp -> termino altexp .)
    OPENPAREN       reduce using rule 101 (exp -> termino altexp .)
    SUM             reduce using rule 101 (exp -> termino altexp .)
    SUBTRACT        reduce using rule 101 (exp -> termino altexp .)
    TRUE            reduce using rule 101 (exp -> termino altexp .)
    FALSE           reduce using rule 101 (exp -> termino altexp .)
    CTEFLOAT        reduce using rule 101 (exp -> termino altexp .)
    CTESTRING       reduce using rule 101 (exp -> termino altexp .)
    CTEINT          reduce using rule 101 (exp -> termino altexp .)
    ID              reduce using rule 101 (exp -> termino altexp .)
    CLOSECURLY      reduce using rule 101 (exp -> termino altexp .)
    VAR             reduce using rule 101 (exp -> termino altexp .)
    IF              reduce using rule 101 (exp -> termino altexp .)
    OUTPUT          reduce using rule 101 (exp -> termino altexp .)
    INPUT           reduce using rule 101 (exp -> termino altexp .)
    RETURN          reduce using rule 101 (exp -> termino altexp .)
    WHILE           reduce using rule 101 (exp -> termino altexp .)


state 150

    (102) altexp -> SUM . termino altexp
    (105) termino -> . factor
    (106) termino -> . factor alttermino
    (116) factor -> . OPENPAREN expresion CLOSEPAREN
    (117) factor -> . SUM varcall
    (118) factor -> . SUBTRACT varcall
    (119) factor -> . varcall
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 106
    SUM             shift and go to state 107
    SUBTRACT        shift and go to state 109
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119

    termino                        shift and go to state 188
    factor                         shift and go to state 105
    varcall                        shift and go to state 108
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118

state 151

    (103) altexp -> SUBTRACT . termino altexp
    (105) termino -> . factor
    (106) termino -> . factor alttermino
    (116) factor -> . OPENPAREN expresion CLOSEPAREN
    (117) factor -> . SUM varcall
    (118) factor -> . SUBTRACT varcall
    (119) factor -> . varcall
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 106
    SUM             shift and go to state 107
    SUBTRACT        shift and go to state 109
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119

    termino                        shift and go to state 189
    factor                         shift and go to state 105
    varcall                        shift and go to state 108
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118

state 152

    (104) altexp -> empty .

    SAMEAS          reduce using rule 104 (altexp -> empty .)
    BIGGERTHAN      reduce using rule 104 (altexp -> empty .)
    BIGGEREQUALSTHAN reduce using rule 104 (altexp -> empty .)
    SMALLTHAN       reduce using rule 104 (altexp -> empty .)
    SMALLEQUALSTHAN reduce using rule 104 (altexp -> empty .)
    DIFFERENTTHAN   reduce using rule 104 (altexp -> empty .)
    AND             reduce using rule 104 (altexp -> empty .)
    OR              reduce using rule 104 (altexp -> empty .)
    SEMICOLON       reduce using rule 104 (altexp -> empty .)
    COMMA           reduce using rule 104 (altexp -> empty .)
    CLOSEPAREN      reduce using rule 104 (altexp -> empty .)
    OPENPAREN       reduce using rule 104 (altexp -> empty .)
    SUM             reduce using rule 104 (altexp -> empty .)
    SUBTRACT        reduce using rule 104 (altexp -> empty .)
    TRUE            reduce using rule 104 (altexp -> empty .)
    FALSE           reduce using rule 104 (altexp -> empty .)
    CTEFLOAT        reduce using rule 104 (altexp -> empty .)
    CTESTRING       reduce using rule 104 (altexp -> empty .)
    CTEINT          reduce using rule 104 (altexp -> empty .)
    ID              reduce using rule 104 (altexp -> empty .)
    CLOSECURLY      reduce using rule 104 (altexp -> empty .)
    VAR             reduce using rule 104 (altexp -> empty .)
    IF              reduce using rule 104 (altexp -> empty .)
    OUTPUT          reduce using rule 104 (altexp -> empty .)
    INPUT           reduce using rule 104 (altexp -> empty .)
    RETURN          reduce using rule 104 (altexp -> empty .)
    WHILE           reduce using rule 104 (altexp -> empty .)


state 153

    (106) termino -> factor alttermino .

    SUM             reduce using rule 106 (termino -> factor alttermino .)
    SUBTRACT        reduce using rule 106 (termino -> factor alttermino .)
    SAMEAS          reduce using rule 106 (termino -> factor alttermino .)
    BIGGERTHAN      reduce using rule 106 (termino -> factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 106 (termino -> factor alttermino .)
    SMALLTHAN       reduce using rule 106 (termino -> factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 106 (termino -> factor alttermino .)
    DIFFERENTTHAN   reduce using rule 106 (termino -> factor alttermino .)
    AND             reduce using rule 106 (termino -> factor alttermino .)
    OR              reduce using rule 106 (termino -> factor alttermino .)
    SEMICOLON       reduce using rule 106 (termino -> factor alttermino .)
    COMMA           reduce using rule 106 (termino -> factor alttermino .)
    CLOSEPAREN      reduce using rule 106 (termino -> factor alttermino .)
    OPENPAREN       reduce using rule 106 (termino -> factor alttermino .)
    TRUE            reduce using rule 106 (termino -> factor alttermino .)
    FALSE           reduce using rule 106 (termino -> factor alttermino .)
    CTEFLOAT        reduce using rule 106 (termino -> factor alttermino .)
    CTESTRING       reduce using rule 106 (termino -> factor alttermino .)
    CTEINT          reduce using rule 106 (termino -> factor alttermino .)
    ID              reduce using rule 106 (termino -> factor alttermino .)
    CLOSECURLY      reduce using rule 106 (termino -> factor alttermino .)
    VAR             reduce using rule 106 (termino -> factor alttermino .)
    IF              reduce using rule 106 (termino -> factor alttermino .)
    OUTPUT          reduce using rule 106 (termino -> factor alttermino .)
    INPUT           reduce using rule 106 (termino -> factor alttermino .)
    RETURN          reduce using rule 106 (termino -> factor alttermino .)
    WHILE           reduce using rule 106 (termino -> factor alttermino .)


state 154

    (107) alttermino -> TIMES . factor alttermino
    (116) factor -> . OPENPAREN expresion CLOSEPAREN
    (117) factor -> . SUM varcall
    (118) factor -> . SUBTRACT varcall
    (119) factor -> . varcall
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 106
    SUM             shift and go to state 107
    SUBTRACT        shift and go to state 109
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119

    factor                         shift and go to state 190
    varcall                        shift and go to state 108
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118

state 155

    (108) alttermino -> DIV . factor alttermino
    (116) factor -> . OPENPAREN expresion CLOSEPAREN
    (117) factor -> . SUM varcall
    (118) factor -> . SUBTRACT varcall
    (119) factor -> . varcall
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 106
    SUM             shift and go to state 107
    SUBTRACT        shift and go to state 109
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119

    factor                         shift and go to state 191
    varcall                        shift and go to state 108
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118

state 156

    (109) alttermino -> empty .

    SUM             reduce using rule 109 (alttermino -> empty .)
    SUBTRACT        reduce using rule 109 (alttermino -> empty .)
    SAMEAS          reduce using rule 109 (alttermino -> empty .)
    BIGGERTHAN      reduce using rule 109 (alttermino -> empty .)
    BIGGEREQUALSTHAN reduce using rule 109 (alttermino -> empty .)
    SMALLTHAN       reduce using rule 109 (alttermino -> empty .)
    SMALLEQUALSTHAN reduce using rule 109 (alttermino -> empty .)
    DIFFERENTTHAN   reduce using rule 109 (alttermino -> empty .)
    AND             reduce using rule 109 (alttermino -> empty .)
    OR              reduce using rule 109 (alttermino -> empty .)
    SEMICOLON       reduce using rule 109 (alttermino -> empty .)
    COMMA           reduce using rule 109 (alttermino -> empty .)
    CLOSEPAREN      reduce using rule 109 (alttermino -> empty .)
    OPENPAREN       reduce using rule 109 (alttermino -> empty .)
    TRUE            reduce using rule 109 (alttermino -> empty .)
    FALSE           reduce using rule 109 (alttermino -> empty .)
    CTEFLOAT        reduce using rule 109 (alttermino -> empty .)
    CTESTRING       reduce using rule 109 (alttermino -> empty .)
    CTEINT          reduce using rule 109 (alttermino -> empty .)
    ID              reduce using rule 109 (alttermino -> empty .)
    CLOSECURLY      reduce using rule 109 (alttermino -> empty .)
    VAR             reduce using rule 109 (alttermino -> empty .)
    IF              reduce using rule 109 (alttermino -> empty .)
    OUTPUT          reduce using rule 109 (alttermino -> empty .)
    INPUT           reduce using rule 109 (alttermino -> empty .)
    RETURN          reduce using rule 109 (alttermino -> empty .)
    WHILE           reduce using rule 109 (alttermino -> empty .)


state 157

    (116) factor -> OPENPAREN expresion . CLOSEPAREN

    CLOSEPAREN      shift and go to state 192


state 158

    (117) factor -> SUM varcall .

    TIMES           reduce using rule 117 (factor -> SUM varcall .)
    DIV             reduce using rule 117 (factor -> SUM varcall .)
    SUM             reduce using rule 117 (factor -> SUM varcall .)
    SUBTRACT        reduce using rule 117 (factor -> SUM varcall .)
    SAMEAS          reduce using rule 117 (factor -> SUM varcall .)
    BIGGERTHAN      reduce using rule 117 (factor -> SUM varcall .)
    BIGGEREQUALSTHAN reduce using rule 117 (factor -> SUM varcall .)
    SMALLTHAN       reduce using rule 117 (factor -> SUM varcall .)
    SMALLEQUALSTHAN reduce using rule 117 (factor -> SUM varcall .)
    DIFFERENTTHAN   reduce using rule 117 (factor -> SUM varcall .)
    AND             reduce using rule 117 (factor -> SUM varcall .)
    OR              reduce using rule 117 (factor -> SUM varcall .)
    SEMICOLON       reduce using rule 117 (factor -> SUM varcall .)
    COMMA           reduce using rule 117 (factor -> SUM varcall .)
    CLOSEPAREN      reduce using rule 117 (factor -> SUM varcall .)
    OPENPAREN       reduce using rule 117 (factor -> SUM varcall .)
    TRUE            reduce using rule 117 (factor -> SUM varcall .)
    FALSE           reduce using rule 117 (factor -> SUM varcall .)
    CTEFLOAT        reduce using rule 117 (factor -> SUM varcall .)
    CTESTRING       reduce using rule 117 (factor -> SUM varcall .)
    CTEINT          reduce using rule 117 (factor -> SUM varcall .)
    ID              reduce using rule 117 (factor -> SUM varcall .)
    CLOSECURLY      reduce using rule 117 (factor -> SUM varcall .)
    VAR             reduce using rule 117 (factor -> SUM varcall .)
    IF              reduce using rule 117 (factor -> SUM varcall .)
    OUTPUT          reduce using rule 117 (factor -> SUM varcall .)
    INPUT           reduce using rule 117 (factor -> SUM varcall .)
    RETURN          reduce using rule 117 (factor -> SUM varcall .)
    WHILE           reduce using rule 117 (factor -> SUM varcall .)


state 159

    (118) factor -> SUBTRACT varcall .

    TIMES           reduce using rule 118 (factor -> SUBTRACT varcall .)
    DIV             reduce using rule 118 (factor -> SUBTRACT varcall .)
    SUM             reduce using rule 118 (factor -> SUBTRACT varcall .)
    SUBTRACT        reduce using rule 118 (factor -> SUBTRACT varcall .)
    SAMEAS          reduce using rule 118 (factor -> SUBTRACT varcall .)
    BIGGERTHAN      reduce using rule 118 (factor -> SUBTRACT varcall .)
    BIGGEREQUALSTHAN reduce using rule 118 (factor -> SUBTRACT varcall .)
    SMALLTHAN       reduce using rule 118 (factor -> SUBTRACT varcall .)
    SMALLEQUALSTHAN reduce using rule 118 (factor -> SUBTRACT varcall .)
    DIFFERENTTHAN   reduce using rule 118 (factor -> SUBTRACT varcall .)
    AND             reduce using rule 118 (factor -> SUBTRACT varcall .)
    OR              reduce using rule 118 (factor -> SUBTRACT varcall .)
    SEMICOLON       reduce using rule 118 (factor -> SUBTRACT varcall .)
    COMMA           reduce using rule 118 (factor -> SUBTRACT varcall .)
    CLOSEPAREN      reduce using rule 118 (factor -> SUBTRACT varcall .)
    OPENPAREN       reduce using rule 118 (factor -> SUBTRACT varcall .)
    TRUE            reduce using rule 118 (factor -> SUBTRACT varcall .)
    FALSE           reduce using rule 118 (factor -> SUBTRACT varcall .)
    CTEFLOAT        reduce using rule 118 (factor -> SUBTRACT varcall .)
    CTESTRING       reduce using rule 118 (factor -> SUBTRACT varcall .)
    CTEINT          reduce using rule 118 (factor -> SUBTRACT varcall .)
    ID              reduce using rule 118 (factor -> SUBTRACT varcall .)
    CLOSECURLY      reduce using rule 118 (factor -> SUBTRACT varcall .)
    VAR             reduce using rule 118 (factor -> SUBTRACT varcall .)
    IF              reduce using rule 118 (factor -> SUBTRACT varcall .)
    OUTPUT          reduce using rule 118 (factor -> SUBTRACT varcall .)
    INPUT           reduce using rule 118 (factor -> SUBTRACT varcall .)
    RETURN          reduce using rule 118 (factor -> SUBTRACT varcall .)
    WHILE           reduce using rule 118 (factor -> SUBTRACT varcall .)


state 160

    (84) varcomp1 -> ID varcomp2 .

    TIMES           reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    DIV             reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    SUM             reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    SUBTRACT        reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    SAMEAS          reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    BIGGERTHAN      reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    BIGGEREQUALSTHAN reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    SMALLTHAN       reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    SMALLEQUALSTHAN reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    DIFFERENTTHAN   reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    AND             reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    OR              reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    SEMICOLON       reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    COMMA           reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    CLOSEPAREN      reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    OPENPAREN       reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    TRUE            reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    FALSE           reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    CTEFLOAT        reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    CTESTRING       reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    CTEINT          reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    ID              reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    CLOSECURLY      reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    VAR             reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    IF              reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    OUTPUT          reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    INPUT           reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    RETURN          reduce using rule 84 (varcomp1 -> ID varcomp2 .)
    WHILE           reduce using rule 84 (varcomp1 -> ID varcomp2 .)


state 161

    (51) callfunc -> ID OPENPAREN . altcall CLOSEPAREN
    (52) altcall -> . expresion alt2call
    (53) altcall -> . empty
    (70) altcall -> . COMMA expresion altcall
    (71) altcall -> . CLOSEPAREN SEMICOLON
    (89) expresion -> . exp altexpresion
    (128) empty -> .
    (100) exp -> . termino
    (101) exp -> . termino altexp
    (105) termino -> . factor
    (106) termino -> . factor alttermino
    (116) factor -> . OPENPAREN expresion CLOSEPAREN
    (117) factor -> . SUM varcall
    (118) factor -> . SUBTRACT varcall
    (119) factor -> . varcall
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
    COMMA           shift and go to state 178
    CLOSEPAREN      shift and go to state 179
    OPENPAREN       shift and go to state 106
    SUM             shift and go to state 107
    SUBTRACT        shift and go to state 109
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119

  ! CLOSEPAREN      [ reduce using rule 128 (empty -> .) ]

    altcall                        shift and go to state 193
    expresion                      shift and go to state 175
    empty                          shift and go to state 177
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    varcall                        shift and go to state 108
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118

state 162

    (85) varcomp2 -> DOT . varcomp3
    (87) varcomp3 -> . varcomp1
    (88) varcomp3 -> . callfunc
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    ID              shift and go to state 119

    varcomp3                       shift and go to state 194
    varcomp1                       shift and go to state 195
    callfunc                       shift and go to state 196

state 163

    (86) varcomp2 -> empty .

    TIMES           reduce using rule 86 (varcomp2 -> empty .)
    DIV             reduce using rule 86 (varcomp2 -> empty .)
    SUM             reduce using rule 86 (varcomp2 -> empty .)
    SUBTRACT        reduce using rule 86 (varcomp2 -> empty .)
    SAMEAS          reduce using rule 86 (varcomp2 -> empty .)
    BIGGERTHAN      reduce using rule 86 (varcomp2 -> empty .)
    BIGGEREQUALSTHAN reduce using rule 86 (varcomp2 -> empty .)
    SMALLTHAN       reduce using rule 86 (varcomp2 -> empty .)
    SMALLEQUALSTHAN reduce using rule 86 (varcomp2 -> empty .)
    DIFFERENTTHAN   reduce using rule 86 (varcomp2 -> empty .)
    AND             reduce using rule 86 (varcomp2 -> empty .)
    OR              reduce using rule 86 (varcomp2 -> empty .)
    SEMICOLON       reduce using rule 86 (varcomp2 -> empty .)
    COMMA           reduce using rule 86 (varcomp2 -> empty .)
    CLOSEPAREN      reduce using rule 86 (varcomp2 -> empty .)
    OPENPAREN       reduce using rule 86 (varcomp2 -> empty .)
    TRUE            reduce using rule 86 (varcomp2 -> empty .)
    FALSE           reduce using rule 86 (varcomp2 -> empty .)
    CTEFLOAT        reduce using rule 86 (varcomp2 -> empty .)
    CTESTRING       reduce using rule 86 (varcomp2 -> empty .)
    CTEINT          reduce using rule 86 (varcomp2 -> empty .)
    ID              reduce using rule 86 (varcomp2 -> empty .)
    CLOSECURLY      reduce using rule 86 (varcomp2 -> empty .)
    VAR             reduce using rule 86 (varcomp2 -> empty .)
    IF              reduce using rule 86 (varcomp2 -> empty .)
    OUTPUT          reduce using rule 86 (varcomp2 -> empty .)
    INPUT           reduce using rule 86 (varcomp2 -> empty .)
    RETURN          reduce using rule 86 (varcomp2 -> empty .)
    WHILE           reduce using rule 86 (varcomp2 -> empty .)


state 164

    (72) while -> WHILE OPENPAREN expresion . CLOSEPAREN OPENCURLY altwhile

    CLOSEPAREN      shift and go to state 197


state 165

    (19) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst . CLOSEPAREN OPENCURLY alt2const

    CLOSEPAREN      shift and go to state 198


state 166

    (20) altconst -> params . altconst
    (20) altconst -> . params altconst
    (21) altconst -> . empty
    (47) params -> . ID TWODOTS type save_params altparams
    (128) empty -> .

    ID              shift and go to state 42
    CLOSEPAREN      reduce using rule 128 (empty -> .)

    params                         shift and go to state 166
    altconst                       shift and go to state 199
    empty                          shift and go to state 167

state 167

    (21) altconst -> empty .

    CLOSEPAREN      reduce using rule 21 (altconst -> empty .)


state 168

    (33) listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET . listidsaltp
    (35) listidsaltp -> . COMMA listids
    (36) listidsaltp -> . empty
    (128) empty -> .

    COMMA           shift and go to state 201
    TWODOTS         reduce using rule 128 (empty -> .)

    listidsaltp                    shift and go to state 200
    empty                          shift and go to state 202

state 169

    (48) altparams -> COMMA ID . TWODOTS type save_params altparams

    TWODOTS         shift and go to state 203


state 170

    (38) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func .

    CLASS           reduce using rule 38 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func .)
    VAR             reduce using rule 38 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func .)
    FUNC            reduce using rule 38 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func .)
    MAIN            reduce using rule 38 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func .)
    CONSTRUCTOR     reduce using rule 38 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func .)


state 171

    (43) alt3func -> var . alt3func
    (43) alt3func -> . var alt3func
    (44) alt3func -> . estatuto alt3func
    (45) alt3func -> . CLOSECURLY
    (26) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (61) estatuto -> . assign
    (62) estatuto -> . condition
    (63) estatuto -> . write
    (64) estatuto -> . read
    (65) estatuto -> . return
    (66) estatuto -> . voidcall
    (67) estatuto -> . while
    (124) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (120) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (121) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (111) write -> . OUTPUT OPENPAREN varcall altwrite
    (112) write -> . OUTPUT OPENPAREN expresion altwrite
    (110) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (127) return -> . RETURN expresion SEMICOLON
    (68) voidcall -> . ID OPENPAREN CLOSEPAREN
    (69) voidcall -> . ID OPENPAREN expresion altcall
    (72) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 173
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    var                            shift and go to state 171
    alt3func                       shift and go to state 204
    estatuto                       shift and go to state 172
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 172

    (44) alt3func -> estatuto . alt3func
    (43) alt3func -> . var alt3func
    (44) alt3func -> . estatuto alt3func
    (45) alt3func -> . CLOSECURLY
    (26) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (61) estatuto -> . assign
    (62) estatuto -> . condition
    (63) estatuto -> . write
    (64) estatuto -> . read
    (65) estatuto -> . return
    (66) estatuto -> . voidcall
    (67) estatuto -> . while
    (124) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (120) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (121) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (111) write -> . OUTPUT OPENPAREN varcall altwrite
    (112) write -> . OUTPUT OPENPAREN expresion altwrite
    (110) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (127) return -> . RETURN expresion SEMICOLON
    (68) voidcall -> . ID OPENPAREN CLOSEPAREN
    (69) voidcall -> . ID OPENPAREN expresion altcall
    (72) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 173
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 172
    alt3func                       shift and go to state 205
    var                            shift and go to state 171
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 173

    (45) alt3func -> CLOSECURLY .

    CLASS           reduce using rule 45 (alt3func -> CLOSECURLY .)
    VAR             reduce using rule 45 (alt3func -> CLOSECURLY .)
    FUNC            reduce using rule 45 (alt3func -> CLOSECURLY .)
    MAIN            reduce using rule 45 (alt3func -> CLOSECURLY .)
    CONSTRUCTOR     reduce using rule 45 (alt3func -> CLOSECURLY .)


state 174

    (124) assign -> ID assign1 EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 206


state 175

    (52) altcall -> expresion . alt2call
    (54) alt2call -> . COMMA altcall
    (55) alt2call -> . empty
    (128) empty -> .

    COMMA           shift and go to state 208
    CLOSECURLY      reduce using rule 128 (empty -> .)
    VAR             reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    OUTPUT          reduce using rule 128 (empty -> .)
    INPUT           reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    CLOSEPAREN      reduce using rule 128 (empty -> .)

    alt2call                       shift and go to state 207
    empty                          shift and go to state 209

state 176

    (69) voidcall -> ID OPENPAREN expresion altcall .

    CLOSECURLY      reduce using rule 69 (voidcall -> ID OPENPAREN expresion altcall .)
    VAR             reduce using rule 69 (voidcall -> ID OPENPAREN expresion altcall .)
    ID              reduce using rule 69 (voidcall -> ID OPENPAREN expresion altcall .)
    IF              reduce using rule 69 (voidcall -> ID OPENPAREN expresion altcall .)
    OUTPUT          reduce using rule 69 (voidcall -> ID OPENPAREN expresion altcall .)
    INPUT           reduce using rule 69 (voidcall -> ID OPENPAREN expresion altcall .)
    RETURN          reduce using rule 69 (voidcall -> ID OPENPAREN expresion altcall .)
    WHILE           reduce using rule 69 (voidcall -> ID OPENPAREN expresion altcall .)


state 177

    (53) altcall -> empty .

    CLOSECURLY      reduce using rule 53 (altcall -> empty .)
    VAR             reduce using rule 53 (altcall -> empty .)
    ID              reduce using rule 53 (altcall -> empty .)
    IF              reduce using rule 53 (altcall -> empty .)
    OUTPUT          reduce using rule 53 (altcall -> empty .)
    INPUT           reduce using rule 53 (altcall -> empty .)
    RETURN          reduce using rule 53 (altcall -> empty .)
    WHILE           reduce using rule 53 (altcall -> empty .)
    CLOSEPAREN      reduce using rule 53 (altcall -> empty .)


state 178

    (70) altcall -> COMMA . expresion altcall
    (89) expresion -> . exp altexpresion
    (100) exp -> . termino
    (101) exp -> . termino altexp
    (105) termino -> . factor
    (106) termino -> . factor alttermino
    (116) factor -> . OPENPAREN expresion CLOSEPAREN
    (117) factor -> . SUM varcall
    (118) factor -> . SUBTRACT varcall
    (119) factor -> . varcall
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 106
    SUM             shift and go to state 107
    SUBTRACT        shift and go to state 109
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119

    expresion                      shift and go to state 210
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    varcall                        shift and go to state 108
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118

state 179

    (71) altcall -> CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 211


state 180

    (125) assign1 -> DOT ID assign1 .

    EQUALS          reduce using rule 125 (assign1 -> DOT ID assign1 .)


state 181

    (120) condition -> IF OPENPAREN expresion CLOSEPAREN . OPENCURLY altcondition
    (121) condition -> IF OPENPAREN expresion CLOSEPAREN . OPENCURLY altcondition ELSE OPENCURLY altcondition

    OPENCURLY       shift and go to state 212


state 182

    (111) write -> OUTPUT OPENPAREN varcall altwrite .

    CLOSECURLY      reduce using rule 111 (write -> OUTPUT OPENPAREN varcall altwrite .)
    VAR             reduce using rule 111 (write -> OUTPUT OPENPAREN varcall altwrite .)
    ID              reduce using rule 111 (write -> OUTPUT OPENPAREN varcall altwrite .)
    IF              reduce using rule 111 (write -> OUTPUT OPENPAREN varcall altwrite .)
    OUTPUT          reduce using rule 111 (write -> OUTPUT OPENPAREN varcall altwrite .)
    INPUT           reduce using rule 111 (write -> OUTPUT OPENPAREN varcall altwrite .)
    RETURN          reduce using rule 111 (write -> OUTPUT OPENPAREN varcall altwrite .)
    WHILE           reduce using rule 111 (write -> OUTPUT OPENPAREN varcall altwrite .)


state 183

    (113) altwrite -> COMMA . varcall altwrite
    (114) altwrite -> COMMA . expresion altwrite
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (89) expresion -> . exp altexpresion
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (100) exp -> . termino
    (101) exp -> . termino altexp
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN
    (105) termino -> . factor
    (106) termino -> . factor alttermino
    (116) factor -> . OPENPAREN expresion CLOSEPAREN
    (117) factor -> . SUM varcall
    (118) factor -> . SUBTRACT varcall
    (119) factor -> . varcall

    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119
    OPENPAREN       shift and go to state 106
    SUM             shift and go to state 107
    SUBTRACT        shift and go to state 109

    varcall                        shift and go to state 213
    expresion                      shift and go to state 214
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    exp                            shift and go to state 103
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118
    termino                        shift and go to state 104
    factor                         shift and go to state 105

state 184

    (115) altwrite -> CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 215


state 185

    (112) write -> OUTPUT OPENPAREN expresion altwrite .

    CLOSECURLY      reduce using rule 112 (write -> OUTPUT OPENPAREN expresion altwrite .)
    VAR             reduce using rule 112 (write -> OUTPUT OPENPAREN expresion altwrite .)
    ID              reduce using rule 112 (write -> OUTPUT OPENPAREN expresion altwrite .)
    IF              reduce using rule 112 (write -> OUTPUT OPENPAREN expresion altwrite .)
    OUTPUT          reduce using rule 112 (write -> OUTPUT OPENPAREN expresion altwrite .)
    INPUT           reduce using rule 112 (write -> OUTPUT OPENPAREN expresion altwrite .)
    RETURN          reduce using rule 112 (write -> OUTPUT OPENPAREN expresion altwrite .)
    WHILE           reduce using rule 112 (write -> OUTPUT OPENPAREN expresion altwrite .)


state 186

    (110) read -> INPUT OPENPAREN ID CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 216


state 187

    (90) altexpresion -> altexpresion2 exp .

    SEMICOLON       reduce using rule 90 (altexpresion -> altexpresion2 exp .)
    COMMA           reduce using rule 90 (altexpresion -> altexpresion2 exp .)
    CLOSEPAREN      reduce using rule 90 (altexpresion -> altexpresion2 exp .)
    OPENPAREN       reduce using rule 90 (altexpresion -> altexpresion2 exp .)
    SUM             reduce using rule 90 (altexpresion -> altexpresion2 exp .)
    SUBTRACT        reduce using rule 90 (altexpresion -> altexpresion2 exp .)
    TRUE            reduce using rule 90 (altexpresion -> altexpresion2 exp .)
    FALSE           reduce using rule 90 (altexpresion -> altexpresion2 exp .)
    CTEFLOAT        reduce using rule 90 (altexpresion -> altexpresion2 exp .)
    CTESTRING       reduce using rule 90 (altexpresion -> altexpresion2 exp .)
    CTEINT          reduce using rule 90 (altexpresion -> altexpresion2 exp .)
    ID              reduce using rule 90 (altexpresion -> altexpresion2 exp .)
    CLOSECURLY      reduce using rule 90 (altexpresion -> altexpresion2 exp .)
    VAR             reduce using rule 90 (altexpresion -> altexpresion2 exp .)
    IF              reduce using rule 90 (altexpresion -> altexpresion2 exp .)
    OUTPUT          reduce using rule 90 (altexpresion -> altexpresion2 exp .)
    INPUT           reduce using rule 90 (altexpresion -> altexpresion2 exp .)
    RETURN          reduce using rule 90 (altexpresion -> altexpresion2 exp .)
    WHILE           reduce using rule 90 (altexpresion -> altexpresion2 exp .)


state 188

    (102) altexp -> SUM termino . altexp
    (102) altexp -> . SUM termino altexp
    (103) altexp -> . SUBTRACT termino altexp
    (104) altexp -> . empty
    (128) empty -> .

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
    SUM             shift and go to state 150
    SUBTRACT        shift and go to state 151
    SAMEAS          reduce using rule 128 (empty -> .)
    BIGGERTHAN      reduce using rule 128 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 128 (empty -> .)
    SMALLTHAN       reduce using rule 128 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 128 (empty -> .)
    DIFFERENTTHAN   reduce using rule 128 (empty -> .)
    AND             reduce using rule 128 (empty -> .)
    OR              reduce using rule 128 (empty -> .)
    SEMICOLON       reduce using rule 128 (empty -> .)
    COMMA           reduce using rule 128 (empty -> .)
    CLOSEPAREN      reduce using rule 128 (empty -> .)
    OPENPAREN       reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CTEFLOAT        reduce using rule 128 (empty -> .)
    CTESTRING       reduce using rule 128 (empty -> .)
    CTEINT          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    CLOSECURLY      reduce using rule 128 (empty -> .)
    VAR             reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    OUTPUT          reduce using rule 128 (empty -> .)
    INPUT           reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)

  ! SUM             [ reduce using rule 128 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 128 (empty -> .) ]

    altexp                         shift and go to state 217
    empty                          shift and go to state 152

state 189

    (103) altexp -> SUBTRACT termino . altexp
    (102) altexp -> . SUM termino altexp
    (103) altexp -> . SUBTRACT termino altexp
    (104) altexp -> . empty
    (128) empty -> .

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
    SUM             shift and go to state 150
    SUBTRACT        shift and go to state 151
    SAMEAS          reduce using rule 128 (empty -> .)
    BIGGERTHAN      reduce using rule 128 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 128 (empty -> .)
    SMALLTHAN       reduce using rule 128 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 128 (empty -> .)
    DIFFERENTTHAN   reduce using rule 128 (empty -> .)
    AND             reduce using rule 128 (empty -> .)
    OR              reduce using rule 128 (empty -> .)
    SEMICOLON       reduce using rule 128 (empty -> .)
    COMMA           reduce using rule 128 (empty -> .)
    CLOSEPAREN      reduce using rule 128 (empty -> .)
    OPENPAREN       reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CTEFLOAT        reduce using rule 128 (empty -> .)
    CTESTRING       reduce using rule 128 (empty -> .)
    CTEINT          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    CLOSECURLY      reduce using rule 128 (empty -> .)
    VAR             reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    OUTPUT          reduce using rule 128 (empty -> .)
    INPUT           reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)

  ! SUM             [ reduce using rule 128 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 128 (empty -> .) ]

    altexp                         shift and go to state 218
    empty                          shift and go to state 152

state 190

    (107) alttermino -> TIMES factor . alttermino
    (107) alttermino -> . TIMES factor alttermino
    (108) alttermino -> . DIV factor alttermino
    (109) alttermino -> . empty
    (128) empty -> .

    TIMES           shift and go to state 154
    DIV             shift and go to state 155
    SUM             reduce using rule 128 (empty -> .)
    SUBTRACT        reduce using rule 128 (empty -> .)
    SAMEAS          reduce using rule 128 (empty -> .)
    BIGGERTHAN      reduce using rule 128 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 128 (empty -> .)
    SMALLTHAN       reduce using rule 128 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 128 (empty -> .)
    DIFFERENTTHAN   reduce using rule 128 (empty -> .)
    AND             reduce using rule 128 (empty -> .)
    OR              reduce using rule 128 (empty -> .)
    SEMICOLON       reduce using rule 128 (empty -> .)
    COMMA           reduce using rule 128 (empty -> .)
    CLOSEPAREN      reduce using rule 128 (empty -> .)
    OPENPAREN       reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CTEFLOAT        reduce using rule 128 (empty -> .)
    CTESTRING       reduce using rule 128 (empty -> .)
    CTEINT          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    CLOSECURLY      reduce using rule 128 (empty -> .)
    VAR             reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    OUTPUT          reduce using rule 128 (empty -> .)
    INPUT           reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)

    alttermino                     shift and go to state 219
    empty                          shift and go to state 156

state 191

    (108) alttermino -> DIV factor . alttermino
    (107) alttermino -> . TIMES factor alttermino
    (108) alttermino -> . DIV factor alttermino
    (109) alttermino -> . empty
    (128) empty -> .

    TIMES           shift and go to state 154
    DIV             shift and go to state 155
    SUM             reduce using rule 128 (empty -> .)
    SUBTRACT        reduce using rule 128 (empty -> .)
    SAMEAS          reduce using rule 128 (empty -> .)
    BIGGERTHAN      reduce using rule 128 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 128 (empty -> .)
    SMALLTHAN       reduce using rule 128 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 128 (empty -> .)
    DIFFERENTTHAN   reduce using rule 128 (empty -> .)
    AND             reduce using rule 128 (empty -> .)
    OR              reduce using rule 128 (empty -> .)
    SEMICOLON       reduce using rule 128 (empty -> .)
    COMMA           reduce using rule 128 (empty -> .)
    CLOSEPAREN      reduce using rule 128 (empty -> .)
    OPENPAREN       reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CTEFLOAT        reduce using rule 128 (empty -> .)
    CTESTRING       reduce using rule 128 (empty -> .)
    CTEINT          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    CLOSECURLY      reduce using rule 128 (empty -> .)
    VAR             reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    OUTPUT          reduce using rule 128 (empty -> .)
    INPUT           reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)

    alttermino                     shift and go to state 220
    empty                          shift and go to state 156

state 192

    (116) factor -> OPENPAREN expresion CLOSEPAREN .

    TIMES           reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    DIV             reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SUM             reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SUBTRACT        reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SAMEAS          reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    BIGGERTHAN      reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    BIGGEREQUALSTHAN reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SMALLTHAN       reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SMALLEQUALSTHAN reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    DIFFERENTTHAN   reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    AND             reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    OR              reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SEMICOLON       reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    COMMA           reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    OPENPAREN       reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    TRUE            reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    FALSE           reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CTEFLOAT        reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CTESTRING       reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CTEINT          reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    ID              reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CLOSECURLY      reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    VAR             reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    IF              reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    OUTPUT          reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    INPUT           reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    RETURN          reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)
    WHILE           reduce using rule 116 (factor -> OPENPAREN expresion CLOSEPAREN .)


state 193

    (51) callfunc -> ID OPENPAREN altcall . CLOSEPAREN

    CLOSEPAREN      shift and go to state 221


state 194

    (85) varcomp2 -> DOT varcomp3 .

    TIMES           reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    DIV             reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    SUM             reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    SUBTRACT        reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    SAMEAS          reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    BIGGERTHAN      reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    BIGGEREQUALSTHAN reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    SMALLTHAN       reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    SMALLEQUALSTHAN reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    DIFFERENTTHAN   reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    AND             reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    OR              reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    SEMICOLON       reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    COMMA           reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    CLOSEPAREN      reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    OPENPAREN       reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    TRUE            reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    FALSE           reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    CTEFLOAT        reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    CTESTRING       reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    CTEINT          reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    ID              reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    CLOSECURLY      reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    VAR             reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    IF              reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    OUTPUT          reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    INPUT           reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    RETURN          reduce using rule 85 (varcomp2 -> DOT varcomp3 .)
    WHILE           reduce using rule 85 (varcomp2 -> DOT varcomp3 .)


state 195

    (87) varcomp3 -> varcomp1 .

    TIMES           reduce using rule 87 (varcomp3 -> varcomp1 .)
    DIV             reduce using rule 87 (varcomp3 -> varcomp1 .)
    SUM             reduce using rule 87 (varcomp3 -> varcomp1 .)
    SUBTRACT        reduce using rule 87 (varcomp3 -> varcomp1 .)
    SAMEAS          reduce using rule 87 (varcomp3 -> varcomp1 .)
    BIGGERTHAN      reduce using rule 87 (varcomp3 -> varcomp1 .)
    BIGGEREQUALSTHAN reduce using rule 87 (varcomp3 -> varcomp1 .)
    SMALLTHAN       reduce using rule 87 (varcomp3 -> varcomp1 .)
    SMALLEQUALSTHAN reduce using rule 87 (varcomp3 -> varcomp1 .)
    DIFFERENTTHAN   reduce using rule 87 (varcomp3 -> varcomp1 .)
    AND             reduce using rule 87 (varcomp3 -> varcomp1 .)
    OR              reduce using rule 87 (varcomp3 -> varcomp1 .)
    SEMICOLON       reduce using rule 87 (varcomp3 -> varcomp1 .)
    COMMA           reduce using rule 87 (varcomp3 -> varcomp1 .)
    CLOSEPAREN      reduce using rule 87 (varcomp3 -> varcomp1 .)
    OPENPAREN       reduce using rule 87 (varcomp3 -> varcomp1 .)
    TRUE            reduce using rule 87 (varcomp3 -> varcomp1 .)
    FALSE           reduce using rule 87 (varcomp3 -> varcomp1 .)
    CTEFLOAT        reduce using rule 87 (varcomp3 -> varcomp1 .)
    CTESTRING       reduce using rule 87 (varcomp3 -> varcomp1 .)
    CTEINT          reduce using rule 87 (varcomp3 -> varcomp1 .)
    ID              reduce using rule 87 (varcomp3 -> varcomp1 .)
    CLOSECURLY      reduce using rule 87 (varcomp3 -> varcomp1 .)
    VAR             reduce using rule 87 (varcomp3 -> varcomp1 .)
    IF              reduce using rule 87 (varcomp3 -> varcomp1 .)
    OUTPUT          reduce using rule 87 (varcomp3 -> varcomp1 .)
    INPUT           reduce using rule 87 (varcomp3 -> varcomp1 .)
    RETURN          reduce using rule 87 (varcomp3 -> varcomp1 .)
    WHILE           reduce using rule 87 (varcomp3 -> varcomp1 .)


state 196

    (88) varcomp3 -> callfunc .

    TIMES           reduce using rule 88 (varcomp3 -> callfunc .)
    DIV             reduce using rule 88 (varcomp3 -> callfunc .)
    SUM             reduce using rule 88 (varcomp3 -> callfunc .)
    SUBTRACT        reduce using rule 88 (varcomp3 -> callfunc .)
    SAMEAS          reduce using rule 88 (varcomp3 -> callfunc .)
    BIGGERTHAN      reduce using rule 88 (varcomp3 -> callfunc .)
    BIGGEREQUALSTHAN reduce using rule 88 (varcomp3 -> callfunc .)
    SMALLTHAN       reduce using rule 88 (varcomp3 -> callfunc .)
    SMALLEQUALSTHAN reduce using rule 88 (varcomp3 -> callfunc .)
    DIFFERENTTHAN   reduce using rule 88 (varcomp3 -> callfunc .)
    AND             reduce using rule 88 (varcomp3 -> callfunc .)
    OR              reduce using rule 88 (varcomp3 -> callfunc .)
    SEMICOLON       reduce using rule 88 (varcomp3 -> callfunc .)
    COMMA           reduce using rule 88 (varcomp3 -> callfunc .)
    CLOSEPAREN      reduce using rule 88 (varcomp3 -> callfunc .)
    OPENPAREN       reduce using rule 88 (varcomp3 -> callfunc .)
    TRUE            reduce using rule 88 (varcomp3 -> callfunc .)
    FALSE           reduce using rule 88 (varcomp3 -> callfunc .)
    CTEFLOAT        reduce using rule 88 (varcomp3 -> callfunc .)
    CTESTRING       reduce using rule 88 (varcomp3 -> callfunc .)
    CTEINT          reduce using rule 88 (varcomp3 -> callfunc .)
    ID              reduce using rule 88 (varcomp3 -> callfunc .)
    CLOSECURLY      reduce using rule 88 (varcomp3 -> callfunc .)
    VAR             reduce using rule 88 (varcomp3 -> callfunc .)
    IF              reduce using rule 88 (varcomp3 -> callfunc .)
    OUTPUT          reduce using rule 88 (varcomp3 -> callfunc .)
    INPUT           reduce using rule 88 (varcomp3 -> callfunc .)
    RETURN          reduce using rule 88 (varcomp3 -> callfunc .)
    WHILE           reduce using rule 88 (varcomp3 -> callfunc .)


state 197

    (72) while -> WHILE OPENPAREN expresion CLOSEPAREN . OPENCURLY altwhile

    OPENCURLY       shift and go to state 222


state 198

    (19) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN . OPENCURLY alt2const

    OPENCURLY       shift and go to state 223


state 199

    (20) altconst -> params altconst .

    CLOSEPAREN      reduce using rule 20 (altconst -> params altconst .)


state 200

    (33) listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltp .

    TWODOTS         reduce using rule 33 (listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltp .)


state 201

    (35) listidsaltp -> COMMA . listids
    (28) listids -> . ID save_var_name listidsalty

    ID              shift and go to state 20

    listids                        shift and go to state 224

state 202

    (36) listidsaltp -> empty .

    TWODOTS         reduce using rule 36 (listidsaltp -> empty .)


state 203

    (48) altparams -> COMMA ID TWODOTS . type save_params altparams
    (56) type -> . INT
    (57) type -> . FLOAT
    (58) type -> . STRING
    (59) type -> . ID
    (60) type -> . BOOL

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 36
    BOOL            shift and go to state 37

    type                           shift and go to state 225

state 204

    (43) alt3func -> var alt3func .

    CLASS           reduce using rule 43 (alt3func -> var alt3func .)
    VAR             reduce using rule 43 (alt3func -> var alt3func .)
    FUNC            reduce using rule 43 (alt3func -> var alt3func .)
    MAIN            reduce using rule 43 (alt3func -> var alt3func .)
    CONSTRUCTOR     reduce using rule 43 (alt3func -> var alt3func .)


state 205

    (44) alt3func -> estatuto alt3func .

    CLASS           reduce using rule 44 (alt3func -> estatuto alt3func .)
    VAR             reduce using rule 44 (alt3func -> estatuto alt3func .)
    FUNC            reduce using rule 44 (alt3func -> estatuto alt3func .)
    MAIN            reduce using rule 44 (alt3func -> estatuto alt3func .)
    CONSTRUCTOR     reduce using rule 44 (alt3func -> estatuto alt3func .)


state 206

    (124) assign -> ID assign1 EQUALS expresion SEMICOLON .

    CLOSECURLY      reduce using rule 124 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    VAR             reduce using rule 124 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    ID              reduce using rule 124 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    IF              reduce using rule 124 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    OUTPUT          reduce using rule 124 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    INPUT           reduce using rule 124 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 124 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 124 (assign -> ID assign1 EQUALS expresion SEMICOLON .)


state 207

    (52) altcall -> expresion alt2call .

    CLOSECURLY      reduce using rule 52 (altcall -> expresion alt2call .)
    VAR             reduce using rule 52 (altcall -> expresion alt2call .)
    ID              reduce using rule 52 (altcall -> expresion alt2call .)
    IF              reduce using rule 52 (altcall -> expresion alt2call .)
    OUTPUT          reduce using rule 52 (altcall -> expresion alt2call .)
    INPUT           reduce using rule 52 (altcall -> expresion alt2call .)
    RETURN          reduce using rule 52 (altcall -> expresion alt2call .)
    WHILE           reduce using rule 52 (altcall -> expresion alt2call .)
    CLOSEPAREN      reduce using rule 52 (altcall -> expresion alt2call .)


state 208

    (54) alt2call -> COMMA . altcall
    (52) altcall -> . expresion alt2call
    (53) altcall -> . empty
    (70) altcall -> . COMMA expresion altcall
    (71) altcall -> . CLOSEPAREN SEMICOLON
    (89) expresion -> . exp altexpresion
    (128) empty -> .
    (100) exp -> . termino
    (101) exp -> . termino altexp
    (105) termino -> . factor
    (106) termino -> . factor alttermino
    (116) factor -> . OPENPAREN expresion CLOSEPAREN
    (117) factor -> . SUM varcall
    (118) factor -> . SUBTRACT varcall
    (119) factor -> . varcall
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 178
    CLOSEPAREN      shift and go to state 179
    CLOSECURLY      reduce using rule 128 (empty -> .)
    VAR             reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    OUTPUT          reduce using rule 128 (empty -> .)
    INPUT           reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    OPENPAREN       shift and go to state 106
    SUM             shift and go to state 107
    SUBTRACT        shift and go to state 109
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119

  ! ID              [ reduce using rule 128 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 128 (empty -> .) ]

    altcall                        shift and go to state 226
    expresion                      shift and go to state 175
    empty                          shift and go to state 177
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    varcall                        shift and go to state 108
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118

state 209

    (55) alt2call -> empty .

    CLOSECURLY      reduce using rule 55 (alt2call -> empty .)
    VAR             reduce using rule 55 (alt2call -> empty .)
    ID              reduce using rule 55 (alt2call -> empty .)
    IF              reduce using rule 55 (alt2call -> empty .)
    OUTPUT          reduce using rule 55 (alt2call -> empty .)
    INPUT           reduce using rule 55 (alt2call -> empty .)
    RETURN          reduce using rule 55 (alt2call -> empty .)
    WHILE           reduce using rule 55 (alt2call -> empty .)
    CLOSEPAREN      reduce using rule 55 (alt2call -> empty .)


state 210

    (70) altcall -> COMMA expresion . altcall
    (52) altcall -> . expresion alt2call
    (53) altcall -> . empty
    (70) altcall -> . COMMA expresion altcall
    (71) altcall -> . CLOSEPAREN SEMICOLON
    (89) expresion -> . exp altexpresion
    (128) empty -> .
    (100) exp -> . termino
    (101) exp -> . termino altexp
    (105) termino -> . factor
    (106) termino -> . factor alttermino
    (116) factor -> . OPENPAREN expresion CLOSEPAREN
    (117) factor -> . SUM varcall
    (118) factor -> . SUBTRACT varcall
    (119) factor -> . varcall
    (75) varcall -> . varcte
    (76) varcall -> . varcomplicated
    (77) varcte -> . TRUE
    (78) varcte -> . FALSE
    (79) varcte -> . CTEFLOAT
    (80) varcte -> . CTESTRING
    (81) varcte -> . CTEINT
    (82) varcomplicated -> . varcomp1
    (83) varcomplicated -> . callfunc
    (84) varcomp1 -> . ID varcomp2
    (51) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 178
    CLOSEPAREN      shift and go to state 179
    CLOSECURLY      reduce using rule 128 (empty -> .)
    VAR             reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    OUTPUT          reduce using rule 128 (empty -> .)
    INPUT           reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    OPENPAREN       shift and go to state 106
    SUM             shift and go to state 107
    SUBTRACT        shift and go to state 109
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    CTEINT          shift and go to state 116
    ID              shift and go to state 119

  ! ID              [ reduce using rule 128 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 128 (empty -> .) ]

    expresion                      shift and go to state 175
    altcall                        shift and go to state 227
    empty                          shift and go to state 177
    exp                            shift and go to state 103
    termino                        shift and go to state 104
    factor                         shift and go to state 105
    varcall                        shift and go to state 108
    varcte                         shift and go to state 110
    varcomplicated                 shift and go to state 111
    varcomp1                       shift and go to state 117
    callfunc                       shift and go to state 118

state 211

    (71) altcall -> CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 71 (altcall -> CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 71 (altcall -> CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 71 (altcall -> CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 71 (altcall -> CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 71 (altcall -> CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 71 (altcall -> CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 71 (altcall -> CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 71 (altcall -> CLOSEPAREN SEMICOLON .)
    CLOSEPAREN      reduce using rule 71 (altcall -> CLOSEPAREN SEMICOLON .)


state 212

    (120) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY . altcondition
    (121) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY . altcondition ELSE OPENCURLY altcondition
    (122) altcondition -> . estatuto altcondition
    (123) altcondition -> . CLOSECURLY
    (61) estatuto -> . assign
    (62) estatuto -> . condition
    (63) estatuto -> . write
    (64) estatuto -> . read
    (65) estatuto -> . return
    (66) estatuto -> . voidcall
    (67) estatuto -> . while
    (124) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (120) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (121) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (111) write -> . OUTPUT OPENPAREN varcall altwrite
    (112) write -> . OUTPUT OPENPAREN expresion altwrite
    (110) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (127) return -> . RETURN expresion SEMICOLON
    (68) voidcall -> . ID OPENPAREN CLOSEPAREN
    (69) voidcall -> . ID OPENPAREN expresion altcall
    (72) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 230
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    altcondition                   shift and go to state 228
    estatuto                       shift and go to state 229
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 213

    (113) altwrite -> COMMA varcall . altwrite
    (119) factor -> varcall .
    (113) altwrite -> . COMMA varcall altwrite
    (114) altwrite -> . COMMA expresion altwrite
    (115) altwrite -> . CLOSEPAREN SEMICOLON

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for CLOSEPAREN resolved as shift
    TIMES           reduce using rule 119 (factor -> varcall .)
    DIV             reduce using rule 119 (factor -> varcall .)
    SUM             reduce using rule 119 (factor -> varcall .)
    SUBTRACT        reduce using rule 119 (factor -> varcall .)
    SAMEAS          reduce using rule 119 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 119 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 119 (factor -> varcall .)
    SMALLTHAN       reduce using rule 119 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 119 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 119 (factor -> varcall .)
    AND             reduce using rule 119 (factor -> varcall .)
    OR              reduce using rule 119 (factor -> varcall .)
    COMMA           shift and go to state 183
    CLOSEPAREN      shift and go to state 184

  ! COMMA           [ reduce using rule 119 (factor -> varcall .) ]
  ! CLOSEPAREN      [ reduce using rule 119 (factor -> varcall .) ]

    altwrite                       shift and go to state 231

state 214

    (114) altwrite -> COMMA expresion . altwrite
    (113) altwrite -> . COMMA varcall altwrite
    (114) altwrite -> . COMMA expresion altwrite
    (115) altwrite -> . CLOSEPAREN SEMICOLON

    COMMA           shift and go to state 183
    CLOSEPAREN      shift and go to state 184

    altwrite                       shift and go to state 232

state 215

    (115) altwrite -> CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 115 (altwrite -> CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 115 (altwrite -> CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 115 (altwrite -> CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 115 (altwrite -> CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 115 (altwrite -> CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 115 (altwrite -> CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 115 (altwrite -> CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 115 (altwrite -> CLOSEPAREN SEMICOLON .)


state 216

    (110) read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 110 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 110 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 110 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 110 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 110 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 110 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 110 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 110 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)


state 217

    (102) altexp -> SUM termino altexp .

    SAMEAS          reduce using rule 102 (altexp -> SUM termino altexp .)
    BIGGERTHAN      reduce using rule 102 (altexp -> SUM termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 102 (altexp -> SUM termino altexp .)
    SMALLTHAN       reduce using rule 102 (altexp -> SUM termino altexp .)
    SMALLEQUALSTHAN reduce using rule 102 (altexp -> SUM termino altexp .)
    DIFFERENTTHAN   reduce using rule 102 (altexp -> SUM termino altexp .)
    AND             reduce using rule 102 (altexp -> SUM termino altexp .)
    OR              reduce using rule 102 (altexp -> SUM termino altexp .)
    SEMICOLON       reduce using rule 102 (altexp -> SUM termino altexp .)
    COMMA           reduce using rule 102 (altexp -> SUM termino altexp .)
    CLOSEPAREN      reduce using rule 102 (altexp -> SUM termino altexp .)
    OPENPAREN       reduce using rule 102 (altexp -> SUM termino altexp .)
    SUM             reduce using rule 102 (altexp -> SUM termino altexp .)
    SUBTRACT        reduce using rule 102 (altexp -> SUM termino altexp .)
    TRUE            reduce using rule 102 (altexp -> SUM termino altexp .)
    FALSE           reduce using rule 102 (altexp -> SUM termino altexp .)
    CTEFLOAT        reduce using rule 102 (altexp -> SUM termino altexp .)
    CTESTRING       reduce using rule 102 (altexp -> SUM termino altexp .)
    CTEINT          reduce using rule 102 (altexp -> SUM termino altexp .)
    ID              reduce using rule 102 (altexp -> SUM termino altexp .)
    CLOSECURLY      reduce using rule 102 (altexp -> SUM termino altexp .)
    VAR             reduce using rule 102 (altexp -> SUM termino altexp .)
    IF              reduce using rule 102 (altexp -> SUM termino altexp .)
    OUTPUT          reduce using rule 102 (altexp -> SUM termino altexp .)
    INPUT           reduce using rule 102 (altexp -> SUM termino altexp .)
    RETURN          reduce using rule 102 (altexp -> SUM termino altexp .)
    WHILE           reduce using rule 102 (altexp -> SUM termino altexp .)


state 218

    (103) altexp -> SUBTRACT termino altexp .

    SAMEAS          reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    BIGGERTHAN      reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    SMALLTHAN       reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    SMALLEQUALSTHAN reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    DIFFERENTTHAN   reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    AND             reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    OR              reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    SEMICOLON       reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    COMMA           reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    CLOSEPAREN      reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    OPENPAREN       reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    SUM             reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    SUBTRACT        reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    TRUE            reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    FALSE           reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    CTEFLOAT        reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    CTESTRING       reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    CTEINT          reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    ID              reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    CLOSECURLY      reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    VAR             reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    IF              reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    OUTPUT          reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    INPUT           reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    RETURN          reduce using rule 103 (altexp -> SUBTRACT termino altexp .)
    WHILE           reduce using rule 103 (altexp -> SUBTRACT termino altexp .)


state 219

    (107) alttermino -> TIMES factor alttermino .

    SUM             reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    SUBTRACT        reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    SAMEAS          reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    BIGGERTHAN      reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    SMALLTHAN       reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    DIFFERENTTHAN   reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    AND             reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    OR              reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    SEMICOLON       reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    COMMA           reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    CLOSEPAREN      reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    OPENPAREN       reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    TRUE            reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    FALSE           reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    CTEFLOAT        reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    CTESTRING       reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    CTEINT          reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    ID              reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    CLOSECURLY      reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    VAR             reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    IF              reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    OUTPUT          reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    INPUT           reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    RETURN          reduce using rule 107 (alttermino -> TIMES factor alttermino .)
    WHILE           reduce using rule 107 (alttermino -> TIMES factor alttermino .)


state 220

    (108) alttermino -> DIV factor alttermino .

    SUM             reduce using rule 108 (alttermino -> DIV factor alttermino .)
    SUBTRACT        reduce using rule 108 (alttermino -> DIV factor alttermino .)
    SAMEAS          reduce using rule 108 (alttermino -> DIV factor alttermino .)
    BIGGERTHAN      reduce using rule 108 (alttermino -> DIV factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 108 (alttermino -> DIV factor alttermino .)
    SMALLTHAN       reduce using rule 108 (alttermino -> DIV factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 108 (alttermino -> DIV factor alttermino .)
    DIFFERENTTHAN   reduce using rule 108 (alttermino -> DIV factor alttermino .)
    AND             reduce using rule 108 (alttermino -> DIV factor alttermino .)
    OR              reduce using rule 108 (alttermino -> DIV factor alttermino .)
    SEMICOLON       reduce using rule 108 (alttermino -> DIV factor alttermino .)
    COMMA           reduce using rule 108 (alttermino -> DIV factor alttermino .)
    CLOSEPAREN      reduce using rule 108 (alttermino -> DIV factor alttermino .)
    OPENPAREN       reduce using rule 108 (alttermino -> DIV factor alttermino .)
    TRUE            reduce using rule 108 (alttermino -> DIV factor alttermino .)
    FALSE           reduce using rule 108 (alttermino -> DIV factor alttermino .)
    CTEFLOAT        reduce using rule 108 (alttermino -> DIV factor alttermino .)
    CTESTRING       reduce using rule 108 (alttermino -> DIV factor alttermino .)
    CTEINT          reduce using rule 108 (alttermino -> DIV factor alttermino .)
    ID              reduce using rule 108 (alttermino -> DIV factor alttermino .)
    CLOSECURLY      reduce using rule 108 (alttermino -> DIV factor alttermino .)
    VAR             reduce using rule 108 (alttermino -> DIV factor alttermino .)
    IF              reduce using rule 108 (alttermino -> DIV factor alttermino .)
    OUTPUT          reduce using rule 108 (alttermino -> DIV factor alttermino .)
    INPUT           reduce using rule 108 (alttermino -> DIV factor alttermino .)
    RETURN          reduce using rule 108 (alttermino -> DIV factor alttermino .)
    WHILE           reduce using rule 108 (alttermino -> DIV factor alttermino .)


state 221

    (51) callfunc -> ID OPENPAREN altcall CLOSEPAREN .

    TIMES           reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    DIV             reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SUM             reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SUBTRACT        reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SAMEAS          reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    BIGGERTHAN      reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    BIGGEREQUALSTHAN reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SMALLTHAN       reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SMALLEQUALSTHAN reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    DIFFERENTTHAN   reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    AND             reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OR              reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SEMICOLON       reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    COMMA           reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OPENPAREN       reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    TRUE            reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    FALSE           reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTEFLOAT        reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTESTRING       reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTEINT          reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    ID              reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CLOSECURLY      reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    VAR             reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    IF              reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OUTPUT          reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    INPUT           reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    RETURN          reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    WHILE           reduce using rule 51 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)


state 222

    (72) while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY . altwhile
    (73) altwhile -> . estatuto altwhile
    (74) altwhile -> . CLOSECURLY
    (61) estatuto -> . assign
    (62) estatuto -> . condition
    (63) estatuto -> . write
    (64) estatuto -> . read
    (65) estatuto -> . return
    (66) estatuto -> . voidcall
    (67) estatuto -> . while
    (124) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (120) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (121) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (111) write -> . OUTPUT OPENPAREN varcall altwrite
    (112) write -> . OUTPUT OPENPAREN expresion altwrite
    (110) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (127) return -> . RETURN expresion SEMICOLON
    (68) voidcall -> . ID OPENPAREN CLOSEPAREN
    (69) voidcall -> . ID OPENPAREN expresion altcall
    (72) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 235
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    altwhile                       shift and go to state 233
    estatuto                       shift and go to state 234
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 223

    (19) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY . alt2const
    (22) alt2const -> . var alt2const
    (23) alt2const -> . estatuto alt2const
    (24) alt2const -> . CLOSECURLY
    (26) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (61) estatuto -> . assign
    (62) estatuto -> . condition
    (63) estatuto -> . write
    (64) estatuto -> . read
    (65) estatuto -> . return
    (66) estatuto -> . voidcall
    (67) estatuto -> . while
    (124) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (120) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (121) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (111) write -> . OUTPUT OPENPAREN varcall altwrite
    (112) write -> . OUTPUT OPENPAREN expresion altwrite
    (110) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (127) return -> . RETURN expresion SEMICOLON
    (68) voidcall -> . ID OPENPAREN CLOSEPAREN
    (69) voidcall -> . ID OPENPAREN expresion altcall
    (72) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 239
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    alt2const                      shift and go to state 236
    var                            shift and go to state 237
    estatuto                       shift and go to state 238
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 224

    (35) listidsaltp -> COMMA listids .

    TWODOTS         reduce using rule 35 (listidsaltp -> COMMA listids .)


state 225

    (48) altparams -> COMMA ID TWODOTS type . save_params altparams
    (50) save_params -> .

    COMMA           reduce using rule 50 (save_params -> .)
    CLOSEPAREN      reduce using rule 50 (save_params -> .)
    ID              reduce using rule 50 (save_params -> .)

    save_params                    shift and go to state 240

state 226

    (54) alt2call -> COMMA altcall .

    CLOSECURLY      reduce using rule 54 (alt2call -> COMMA altcall .)
    VAR             reduce using rule 54 (alt2call -> COMMA altcall .)
    ID              reduce using rule 54 (alt2call -> COMMA altcall .)
    IF              reduce using rule 54 (alt2call -> COMMA altcall .)
    OUTPUT          reduce using rule 54 (alt2call -> COMMA altcall .)
    INPUT           reduce using rule 54 (alt2call -> COMMA altcall .)
    RETURN          reduce using rule 54 (alt2call -> COMMA altcall .)
    WHILE           reduce using rule 54 (alt2call -> COMMA altcall .)
    CLOSEPAREN      reduce using rule 54 (alt2call -> COMMA altcall .)


state 227

    (70) altcall -> COMMA expresion altcall .

    CLOSECURLY      reduce using rule 70 (altcall -> COMMA expresion altcall .)
    VAR             reduce using rule 70 (altcall -> COMMA expresion altcall .)
    ID              reduce using rule 70 (altcall -> COMMA expresion altcall .)
    IF              reduce using rule 70 (altcall -> COMMA expresion altcall .)
    OUTPUT          reduce using rule 70 (altcall -> COMMA expresion altcall .)
    INPUT           reduce using rule 70 (altcall -> COMMA expresion altcall .)
    RETURN          reduce using rule 70 (altcall -> COMMA expresion altcall .)
    WHILE           reduce using rule 70 (altcall -> COMMA expresion altcall .)
    CLOSEPAREN      reduce using rule 70 (altcall -> COMMA expresion altcall .)


state 228

    (120) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .
    (121) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition . ELSE OPENCURLY altcondition

    CLOSECURLY      reduce using rule 120 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    VAR             reduce using rule 120 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    ID              reduce using rule 120 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    IF              reduce using rule 120 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    OUTPUT          reduce using rule 120 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    INPUT           reduce using rule 120 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    RETURN          reduce using rule 120 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    WHILE           reduce using rule 120 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    ELSE            shift and go to state 241


state 229

    (122) altcondition -> estatuto . altcondition
    (122) altcondition -> . estatuto altcondition
    (123) altcondition -> . CLOSECURLY
    (61) estatuto -> . assign
    (62) estatuto -> . condition
    (63) estatuto -> . write
    (64) estatuto -> . read
    (65) estatuto -> . return
    (66) estatuto -> . voidcall
    (67) estatuto -> . while
    (124) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (120) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (121) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (111) write -> . OUTPUT OPENPAREN varcall altwrite
    (112) write -> . OUTPUT OPENPAREN expresion altwrite
    (110) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (127) return -> . RETURN expresion SEMICOLON
    (68) voidcall -> . ID OPENPAREN CLOSEPAREN
    (69) voidcall -> . ID OPENPAREN expresion altcall
    (72) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 230
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 229
    altcondition                   shift and go to state 242
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 230

    (123) altcondition -> CLOSECURLY .

    ELSE            reduce using rule 123 (altcondition -> CLOSECURLY .)
    CLOSECURLY      reduce using rule 123 (altcondition -> CLOSECURLY .)
    VAR             reduce using rule 123 (altcondition -> CLOSECURLY .)
    ID              reduce using rule 123 (altcondition -> CLOSECURLY .)
    IF              reduce using rule 123 (altcondition -> CLOSECURLY .)
    OUTPUT          reduce using rule 123 (altcondition -> CLOSECURLY .)
    INPUT           reduce using rule 123 (altcondition -> CLOSECURLY .)
    RETURN          reduce using rule 123 (altcondition -> CLOSECURLY .)
    WHILE           reduce using rule 123 (altcondition -> CLOSECURLY .)


state 231

    (113) altwrite -> COMMA varcall altwrite .

    CLOSECURLY      reduce using rule 113 (altwrite -> COMMA varcall altwrite .)
    VAR             reduce using rule 113 (altwrite -> COMMA varcall altwrite .)
    ID              reduce using rule 113 (altwrite -> COMMA varcall altwrite .)
    IF              reduce using rule 113 (altwrite -> COMMA varcall altwrite .)
    OUTPUT          reduce using rule 113 (altwrite -> COMMA varcall altwrite .)
    INPUT           reduce using rule 113 (altwrite -> COMMA varcall altwrite .)
    RETURN          reduce using rule 113 (altwrite -> COMMA varcall altwrite .)
    WHILE           reduce using rule 113 (altwrite -> COMMA varcall altwrite .)


state 232

    (114) altwrite -> COMMA expresion altwrite .

    CLOSECURLY      reduce using rule 114 (altwrite -> COMMA expresion altwrite .)
    VAR             reduce using rule 114 (altwrite -> COMMA expresion altwrite .)
    ID              reduce using rule 114 (altwrite -> COMMA expresion altwrite .)
    IF              reduce using rule 114 (altwrite -> COMMA expresion altwrite .)
    OUTPUT          reduce using rule 114 (altwrite -> COMMA expresion altwrite .)
    INPUT           reduce using rule 114 (altwrite -> COMMA expresion altwrite .)
    RETURN          reduce using rule 114 (altwrite -> COMMA expresion altwrite .)
    WHILE           reduce using rule 114 (altwrite -> COMMA expresion altwrite .)


state 233

    (72) while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .

    CLOSECURLY      reduce using rule 72 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    VAR             reduce using rule 72 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    ID              reduce using rule 72 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    IF              reduce using rule 72 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    OUTPUT          reduce using rule 72 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    INPUT           reduce using rule 72 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    RETURN          reduce using rule 72 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    WHILE           reduce using rule 72 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)


state 234

    (73) altwhile -> estatuto . altwhile
    (73) altwhile -> . estatuto altwhile
    (74) altwhile -> . CLOSECURLY
    (61) estatuto -> . assign
    (62) estatuto -> . condition
    (63) estatuto -> . write
    (64) estatuto -> . read
    (65) estatuto -> . return
    (66) estatuto -> . voidcall
    (67) estatuto -> . while
    (124) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (120) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (121) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (111) write -> . OUTPUT OPENPAREN varcall altwrite
    (112) write -> . OUTPUT OPENPAREN expresion altwrite
    (110) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (127) return -> . RETURN expresion SEMICOLON
    (68) voidcall -> . ID OPENPAREN CLOSEPAREN
    (69) voidcall -> . ID OPENPAREN expresion altcall
    (72) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 235
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 234
    altwhile                       shift and go to state 243
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 235

    (74) altwhile -> CLOSECURLY .

    CLOSECURLY      reduce using rule 74 (altwhile -> CLOSECURLY .)
    VAR             reduce using rule 74 (altwhile -> CLOSECURLY .)
    ID              reduce using rule 74 (altwhile -> CLOSECURLY .)
    IF              reduce using rule 74 (altwhile -> CLOSECURLY .)
    OUTPUT          reduce using rule 74 (altwhile -> CLOSECURLY .)
    INPUT           reduce using rule 74 (altwhile -> CLOSECURLY .)
    RETURN          reduce using rule 74 (altwhile -> CLOSECURLY .)
    WHILE           reduce using rule 74 (altwhile -> CLOSECURLY .)


state 236

    (19) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const .

    CLOSECURLY      reduce using rule 19 (constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const .)


state 237

    (22) alt2const -> var . alt2const
    (22) alt2const -> . var alt2const
    (23) alt2const -> . estatuto alt2const
    (24) alt2const -> . CLOSECURLY
    (26) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (61) estatuto -> . assign
    (62) estatuto -> . condition
    (63) estatuto -> . write
    (64) estatuto -> . read
    (65) estatuto -> . return
    (66) estatuto -> . voidcall
    (67) estatuto -> . while
    (124) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (120) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (121) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (111) write -> . OUTPUT OPENPAREN varcall altwrite
    (112) write -> . OUTPUT OPENPAREN expresion altwrite
    (110) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (127) return -> . RETURN expresion SEMICOLON
    (68) voidcall -> . ID OPENPAREN CLOSEPAREN
    (69) voidcall -> . ID OPENPAREN expresion altcall
    (72) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 239
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    var                            shift and go to state 237
    alt2const                      shift and go to state 244
    estatuto                       shift and go to state 238
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 238

    (23) alt2const -> estatuto . alt2const
    (22) alt2const -> . var alt2const
    (23) alt2const -> . estatuto alt2const
    (24) alt2const -> . CLOSECURLY
    (26) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (61) estatuto -> . assign
    (62) estatuto -> . condition
    (63) estatuto -> . write
    (64) estatuto -> . read
    (65) estatuto -> . return
    (66) estatuto -> . voidcall
    (67) estatuto -> . while
    (124) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (120) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (121) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (111) write -> . OUTPUT OPENPAREN varcall altwrite
    (112) write -> . OUTPUT OPENPAREN expresion altwrite
    (110) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (127) return -> . RETURN expresion SEMICOLON
    (68) voidcall -> . ID OPENPAREN CLOSEPAREN
    (69) voidcall -> . ID OPENPAREN expresion altcall
    (72) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 239
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 238
    alt2const                      shift and go to state 245
    var                            shift and go to state 237
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 239

    (24) alt2const -> CLOSECURLY .

    CLOSECURLY      reduce using rule 24 (alt2const -> CLOSECURLY .)


state 240

    (48) altparams -> COMMA ID TWODOTS type save_params . altparams
    (48) altparams -> . COMMA ID TWODOTS type save_params altparams
    (49) altparams -> . empty
    (128) empty -> .

    COMMA           shift and go to state 126
    CLOSEPAREN      reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)

    altparams                      shift and go to state 246
    empty                          shift and go to state 127

state 241

    (121) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE . OPENCURLY altcondition

    OPENCURLY       shift and go to state 247


state 242

    (122) altcondition -> estatuto altcondition .

    ELSE            reduce using rule 122 (altcondition -> estatuto altcondition .)
    CLOSECURLY      reduce using rule 122 (altcondition -> estatuto altcondition .)
    VAR             reduce using rule 122 (altcondition -> estatuto altcondition .)
    ID              reduce using rule 122 (altcondition -> estatuto altcondition .)
    IF              reduce using rule 122 (altcondition -> estatuto altcondition .)
    OUTPUT          reduce using rule 122 (altcondition -> estatuto altcondition .)
    INPUT           reduce using rule 122 (altcondition -> estatuto altcondition .)
    RETURN          reduce using rule 122 (altcondition -> estatuto altcondition .)
    WHILE           reduce using rule 122 (altcondition -> estatuto altcondition .)


state 243

    (73) altwhile -> estatuto altwhile .

    CLOSECURLY      reduce using rule 73 (altwhile -> estatuto altwhile .)
    VAR             reduce using rule 73 (altwhile -> estatuto altwhile .)
    ID              reduce using rule 73 (altwhile -> estatuto altwhile .)
    IF              reduce using rule 73 (altwhile -> estatuto altwhile .)
    OUTPUT          reduce using rule 73 (altwhile -> estatuto altwhile .)
    INPUT           reduce using rule 73 (altwhile -> estatuto altwhile .)
    RETURN          reduce using rule 73 (altwhile -> estatuto altwhile .)
    WHILE           reduce using rule 73 (altwhile -> estatuto altwhile .)


state 244

    (22) alt2const -> var alt2const .

    CLOSECURLY      reduce using rule 22 (alt2const -> var alt2const .)


state 245

    (23) alt2const -> estatuto alt2const .

    CLOSECURLY      reduce using rule 23 (alt2const -> estatuto alt2const .)


state 246

    (48) altparams -> COMMA ID TWODOTS type save_params altparams .

    CLOSEPAREN      reduce using rule 48 (altparams -> COMMA ID TWODOTS type save_params altparams .)
    ID              reduce using rule 48 (altparams -> COMMA ID TWODOTS type save_params altparams .)


state 247

    (121) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY . altcondition
    (122) altcondition -> . estatuto altcondition
    (123) altcondition -> . CLOSECURLY
    (61) estatuto -> . assign
    (62) estatuto -> . condition
    (63) estatuto -> . write
    (64) estatuto -> . read
    (65) estatuto -> . return
    (66) estatuto -> . voidcall
    (67) estatuto -> . while
    (124) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (120) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (121) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (111) write -> . OUTPUT OPENPAREN varcall altwrite
    (112) write -> . OUTPUT OPENPAREN expresion altwrite
    (110) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (127) return -> . RETURN expresion SEMICOLON
    (68) voidcall -> . ID OPENPAREN CLOSEPAREN
    (69) voidcall -> . ID OPENPAREN expresion altcall
    (72) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 230
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    altcondition                   shift and go to state 248
    estatuto                       shift and go to state 229
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 248

    (121) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .

    CLOSECURLY      reduce using rule 121 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    VAR             reduce using rule 121 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    ID              reduce using rule 121 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    IF              reduce using rule 121 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    OUTPUT          reduce using rule 121 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    INPUT           reduce using rule 121 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    RETURN          reduce using rule 121 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    WHILE           reduce using rule 121 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUM in state 104 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 104 resolved as shift
WARNING: shift/reduce conflict for SUM in state 104 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 104 resolved as shift
WARNING: shift/reduce conflict for OPENPAREN in state 119 resolved as shift
WARNING: shift/reduce conflict for ID in state 131 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 134 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 134 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 161 resolved as shift
WARNING: shift/reduce conflict for SUM in state 188 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 188 resolved as shift
WARNING: shift/reduce conflict for SUM in state 189 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 189 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 208 resolved as shift
WARNING: shift/reduce conflict for ID in state 208 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 210 resolved as shift
WARNING: shift/reduce conflict for ID in state 210 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 213 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 213 resolved as shift
WARNING: reduce/reduce conflict in state 104 resolved using rule (exp -> termino)
WARNING: rejected rule (empty -> <empty>) in state 104
WARNING: reduce/reduce conflict in state 105 resolved using rule (termino -> factor)
WARNING: rejected rule (empty -> <empty>) in state 105
