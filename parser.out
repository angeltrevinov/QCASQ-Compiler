Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON altprogram
Rule 2     altprogram -> class altprogram
Rule 3     altprogram -> var altprogram
Rule 4     altprogram -> function altprogram
Rule 5     altprogram -> main
Rule 6     main -> MAIN OPENPAREN CLOSEPAREN OPENCURLY altmain
Rule 7     altmain -> var altmain
Rule 8     altmain -> estatuto altmain
Rule 9     altmain -> CLOSECURLY
Rule 10    class -> CLASS ID altclass OPENCURLY alt2class
Rule 11    altclass -> TWODOTS ID
Rule 12    altclass -> empty
Rule 13    alt2class -> var alt2class
Rule 14    alt2class -> function alt2class
Rule 15    alt2class -> constructor CLOSECURLY SEMICOLON
Rule 16    constructor -> CONSTRUCTOR OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const
Rule 17    altconst -> params altconst
Rule 18    altconst -> empty
Rule 19    alt2const -> var alt2const
Rule 20    alt2const -> estatuto alt2const
Rule 21    alt2const -> CLOSECURLY
Rule 22    var -> VAR listids TWODOTS type SEMICOLON
Rule 23    listids -> ID listidsalty
Rule 24    listidsalty -> COMMA listids
Rule 25    listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltz
Rule 26    listidsalty -> empty
Rule 27    listidsaltz -> COMMA listids
Rule 28    listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltp
Rule 29    listidsaltz -> empty
Rule 30    listidsaltp -> COMMA listids
Rule 31    listidsaltp -> empty
Rule 32    function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func
Rule 33    altfunc -> params
Rule 34    altfunc -> empty
Rule 35    alt2func -> TWODOTS type
Rule 36    alt2func -> empty
Rule 37    alt3func -> var alt3func
Rule 38    alt3func -> estatuto alt3func
Rule 39    alt3func -> CLOSECURLY
Rule 40    params -> ID TWODOTS type altparams
Rule 41    altparams -> COMMA ID TWODOTS type altparams
Rule 42    altparams -> empty
Rule 43    callfunc -> ID OPENPAREN altcall CLOSEPAREN
Rule 44    altcall -> expresion alt2call
Rule 45    altcall -> empty
Rule 46    alt2call -> COMMA altcall
Rule 47    alt2call -> empty
Rule 48    type -> INT
Rule 49    type -> FLOAT
Rule 50    type -> STRING
Rule 51    type -> ID
Rule 52    type -> BOOL
Rule 53    estatuto -> assign
Rule 54    estatuto -> condition
Rule 55    estatuto -> write
Rule 56    estatuto -> read
Rule 57    estatuto -> return
Rule 58    estatuto -> voidcall
Rule 59    estatuto -> while
Rule 60    voidcall -> ID OPENPAREN CLOSEPAREN
Rule 61    voidcall -> ID OPENPAREN expresion altcall
Rule 62    altcall -> COMMA expresion altcall
Rule 63    altcall -> CLOSEPAREN SEMICOLON
Rule 64    while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile
Rule 65    altwhile -> estatuto altwhile
Rule 66    altwhile -> CLOSECURLY
Rule 67    varcall -> varcte
Rule 68    varcall -> varcomplicated
Rule 69    varcte -> TRUE
Rule 70    varcte -> FALSE
Rule 71    varcte -> CTEFLOAT
Rule 72    varcte -> CTESTRING
Rule 73    varcte -> CTEINT
Rule 74    varcomplicated -> varcomp1
Rule 75    varcomplicated -> callfunc
Rule 76    varcomp1 -> ID varcomp2
Rule 77    varcomp2 -> DOT varcomp3
Rule 78    varcomp2 -> empty
Rule 79    varcomp3 -> varcomp1
Rule 80    varcomp3 -> callfunc
Rule 81    expresion -> exp altexpresion
Rule 82    altexpresion -> altexpresion2 exp
Rule 83    altexpresion -> empty
Rule 84    altexpresion2 -> SAMEAS
Rule 85    altexpresion2 -> BIGGERTHAN
Rule 86    altexpresion2 -> BIGGEREQUALSTHAN
Rule 87    altexpresion2 -> SMALLTHAN
Rule 88    altexpresion2 -> SMALLEQUALSTHAN
Rule 89    altexpresion2 -> DIFFERENTTHAN
Rule 90    altexpresion2 -> AND
Rule 91    altexpresion2 -> OR
Rule 92    exp -> termino
Rule 93    exp -> termino altexp
Rule 94    altexp -> SUM termino altexp
Rule 95    altexp -> SUBTRACT termino altexp
Rule 96    altexp -> empty
Rule 97    termino -> factor
Rule 98    termino -> factor alttermino
Rule 99    alttermino -> TIMES factor alttermino
Rule 100   alttermino -> DIV factor alttermino
Rule 101   alttermino -> empty
Rule 102   read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
Rule 103   write -> OUTPUT OPENPAREN varcall altwrite
Rule 104   write -> OUTPUT OPENPAREN expresion altwrite
Rule 105   altwrite -> COMMA varcall altwrite
Rule 106   altwrite -> COMMA expresion altwrite
Rule 107   altwrite -> CLOSEPAREN SEMICOLON
Rule 108   factor -> OPENPAREN expresion CLOSEPAREN
Rule 109   factor -> SUM varcall
Rule 110   factor -> SUBTRACT varcall
Rule 111   factor -> varcall
Rule 112   condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
Rule 113   condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
Rule 114   altcondition -> estatuto altcondition
Rule 115   altcondition -> CLOSECURLY
Rule 116   assign -> ID assign1 EQUALS expresion SEMICOLON
Rule 117   assign1 -> DOT ID assign1
Rule 118   assign1 -> empty
Rule 119   return -> RETURN expresion SEMICOLON
Rule 120   empty -> <empty>

Terminals, with rules where they appear

AND                  : 90
BIGGEREQUALSTHAN     : 86
BIGGERTHAN           : 85
BOOL                 : 52
CLASS                : 10
CLOSEBRACKET         : 25 28
CLOSECURLY           : 9 15 21 39 66 115
CLOSEPAREN           : 6 16 32 43 60 63 64 102 107 108 112 113
COMMA                : 24 27 30 41 46 62 105 106
CONSTRUCTOR          : 16
CTEFLOAT             : 71
CTEINT               : 25 28 73
CTESTRING            : 72
DIFFERENTTHAN        : 89
DIV                  : 100
DOT                  : 77 117
ELSE                 : 113
EQUALS               : 116
FALSE                : 70
FLOAT                : 49
FUNC                 : 32
ID                   : 1 10 11 23 32 40 41 43 51 60 61 76 102 116 117
IF                   : 112 113
INPUT                : 102
INT                  : 48
MAIN                 : 6
OPENBRACKET          : 25 28
OPENCURLY            : 6 10 16 32 64 112 113 113
OPENPAREN            : 6 16 32 43 60 61 64 102 103 104 108 112 113
OR                   : 91
OUTPUT               : 103 104
PROGRAM              : 1
RETURN               : 119
SAMEAS               : 84
SEMICOLON            : 1 15 22 63 102 107 116 119
SMALLEQUALSTHAN      : 88
SMALLTHAN            : 87
STRING               : 50
SUBTRACT             : 95 110
SUM                  : 94 109
TIMES                : 99
TRUE                 : 69
TWODOTS              : 11 22 35 40 41
VAR                  : 22
WHILE                : 64
error                : 

Nonterminals, with rules where they appear

alt2call             : 44
alt2class            : 10 13 14
alt2const            : 16 19 20
alt2func             : 32
alt3func             : 32 37 38
altcall              : 43 46 61 62
altclass             : 10
altcondition         : 112 113 113 114
altconst             : 16 17
altexp               : 93 94 95
altexpresion         : 81
altexpresion2        : 82
altfunc              : 32
altmain              : 6 7 8
altparams            : 40 41
altprogram           : 1 2 3 4
alttermino           : 98 99 100
altwhile             : 64 65
altwrite             : 103 104 105 106
assign               : 53
assign1              : 116 117
callfunc             : 75 80
class                : 2
condition            : 54
constructor          : 15
empty                : 12 18 26 29 31 34 36 42 45 47 78 83 96 101 118
estatuto             : 8 20 38 65 114
exp                  : 81 82
expresion            : 44 61 62 64 104 106 108 112 113 116 119
factor               : 97 98 99 100
function             : 4 14
listids              : 22 24 27 30
listidsaltp          : 28
listidsalty          : 23
listidsaltz          : 25
main                 : 5
params               : 17 33
program              : 0
read                 : 56
return               : 57
termino              : 92 93 94 95
type                 : 22 35 40 41
var                  : 3 7 13 19 37
varcall              : 103 105 109 110 111
varcomp1             : 74 79
varcomp2             : 76
varcomp3             : 77
varcomplicated       : 68
varcte               : 67
voidcall             : 58
while                : 59
write                : 55

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON altprogram

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON altprogram

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON altprogram

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (10) class -> . CLASS ID altclass OPENCURLY alt2class
    (22) var -> . VAR listids TWODOTS type SEMICOLON
    (32) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func
    (6) main -> . MAIN OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 10
    VAR             shift and go to state 11
    FUNC            shift and go to state 12
    MAIN            shift and go to state 13

    altprogram                     shift and go to state 5
    class                          shift and go to state 6
    var                            shift and go to state 7
    function                       shift and go to state 8
    main                           shift and go to state 9

state 5

    (1) program -> PROGRAM ID SEMICOLON altprogram .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON altprogram .)


state 6

    (2) altprogram -> class . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (10) class -> . CLASS ID altclass OPENCURLY alt2class
    (22) var -> . VAR listids TWODOTS type SEMICOLON
    (32) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func
    (6) main -> . MAIN OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 10
    VAR             shift and go to state 11
    FUNC            shift and go to state 12
    MAIN            shift and go to state 13

    class                          shift and go to state 6
    altprogram                     shift and go to state 14
    var                            shift and go to state 7
    function                       shift and go to state 8
    main                           shift and go to state 9

state 7

    (3) altprogram -> var . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (10) class -> . CLASS ID altclass OPENCURLY alt2class
    (22) var -> . VAR listids TWODOTS type SEMICOLON
    (32) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func
    (6) main -> . MAIN OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 10
    VAR             shift and go to state 11
    FUNC            shift and go to state 12
    MAIN            shift and go to state 13

    var                            shift and go to state 7
    altprogram                     shift and go to state 15
    class                          shift and go to state 6
    function                       shift and go to state 8
    main                           shift and go to state 9

state 8

    (4) altprogram -> function . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (10) class -> . CLASS ID altclass OPENCURLY alt2class
    (22) var -> . VAR listids TWODOTS type SEMICOLON
    (32) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func
    (6) main -> . MAIN OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 10
    VAR             shift and go to state 11
    FUNC            shift and go to state 12
    MAIN            shift and go to state 13

    function                       shift and go to state 8
    altprogram                     shift and go to state 16
    class                          shift and go to state 6
    var                            shift and go to state 7
    main                           shift and go to state 9

state 9

    (5) altprogram -> main .

    $end            reduce using rule 5 (altprogram -> main .)


state 10

    (10) class -> CLASS . ID altclass OPENCURLY alt2class

    ID              shift and go to state 17


state 11

    (22) var -> VAR . listids TWODOTS type SEMICOLON
    (23) listids -> . ID listidsalty

    ID              shift and go to state 19

    listids                        shift and go to state 18

state 12

    (32) function -> FUNC . ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func

    ID              shift and go to state 20


state 13

    (6) main -> MAIN . OPENPAREN CLOSEPAREN OPENCURLY altmain

    OPENPAREN       shift and go to state 21


state 14

    (2) altprogram -> class altprogram .

    $end            reduce using rule 2 (altprogram -> class altprogram .)


state 15

    (3) altprogram -> var altprogram .

    $end            reduce using rule 3 (altprogram -> var altprogram .)


state 16

    (4) altprogram -> function altprogram .

    $end            reduce using rule 4 (altprogram -> function altprogram .)


state 17

    (10) class -> CLASS ID . altclass OPENCURLY alt2class
    (11) altclass -> . TWODOTS ID
    (12) altclass -> . empty
    (120) empty -> .

    TWODOTS         shift and go to state 23
    OPENCURLY       reduce using rule 120 (empty -> .)

    altclass                       shift and go to state 22
    empty                          shift and go to state 24

state 18

    (22) var -> VAR listids . TWODOTS type SEMICOLON

    TWODOTS         shift and go to state 25


state 19

    (23) listids -> ID . listidsalty
    (24) listidsalty -> . COMMA listids
    (25) listidsalty -> . OPENBRACKET CTEINT CLOSEBRACKET listidsaltz
    (26) listidsalty -> . empty
    (120) empty -> .

    COMMA           shift and go to state 27
    OPENBRACKET     shift and go to state 28
    TWODOTS         reduce using rule 120 (empty -> .)

    listidsalty                    shift and go to state 26
    empty                          shift and go to state 29

state 20

    (32) function -> FUNC ID . OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func

    OPENPAREN       shift and go to state 30


state 21

    (6) main -> MAIN OPENPAREN . CLOSEPAREN OPENCURLY altmain

    CLOSEPAREN      shift and go to state 31


state 22

    (10) class -> CLASS ID altclass . OPENCURLY alt2class

    OPENCURLY       shift and go to state 32


state 23

    (11) altclass -> TWODOTS . ID

    ID              shift and go to state 33


state 24

    (12) altclass -> empty .

    OPENCURLY       reduce using rule 12 (altclass -> empty .)


state 25

    (22) var -> VAR listids TWODOTS . type SEMICOLON
    (48) type -> . INT
    (49) type -> . FLOAT
    (50) type -> . STRING
    (51) type -> . ID
    (52) type -> . BOOL

    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    STRING          shift and go to state 37
    ID              shift and go to state 38
    BOOL            shift and go to state 39

    type                           shift and go to state 34

state 26

    (23) listids -> ID listidsalty .

    TWODOTS         reduce using rule 23 (listids -> ID listidsalty .)


state 27

    (24) listidsalty -> COMMA . listids
    (23) listids -> . ID listidsalty

    ID              shift and go to state 19

    listids                        shift and go to state 40

state 28

    (25) listidsalty -> OPENBRACKET . CTEINT CLOSEBRACKET listidsaltz

    CTEINT          shift and go to state 41


state 29

    (26) listidsalty -> empty .

    TWODOTS         reduce using rule 26 (listidsalty -> empty .)


state 30

    (32) function -> FUNC ID OPENPAREN . altfunc CLOSEPAREN alt2func OPENCURLY alt3func
    (33) altfunc -> . params
    (34) altfunc -> . empty
    (40) params -> . ID TWODOTS type altparams
    (120) empty -> .

    ID              shift and go to state 42
    CLOSEPAREN      reduce using rule 120 (empty -> .)

    altfunc                        shift and go to state 43
    params                         shift and go to state 44
    empty                          shift and go to state 45

state 31

    (6) main -> MAIN OPENPAREN CLOSEPAREN . OPENCURLY altmain

    OPENCURLY       shift and go to state 46


state 32

    (10) class -> CLASS ID altclass OPENCURLY . alt2class
    (13) alt2class -> . var alt2class
    (14) alt2class -> . function alt2class
    (15) alt2class -> . constructor CLOSECURLY SEMICOLON
    (22) var -> . VAR listids TWODOTS type SEMICOLON
    (32) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func
    (16) constructor -> . CONSTRUCTOR OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 11
    FUNC            shift and go to state 12
    CONSTRUCTOR     shift and go to state 51

    alt2class                      shift and go to state 47
    var                            shift and go to state 48
    function                       shift and go to state 49
    constructor                    shift and go to state 50

state 33

    (11) altclass -> TWODOTS ID .

    OPENCURLY       reduce using rule 11 (altclass -> TWODOTS ID .)


state 34

    (22) var -> VAR listids TWODOTS type . SEMICOLON

    SEMICOLON       shift and go to state 52


state 35

    (48) type -> INT .

    SEMICOLON       reduce using rule 48 (type -> INT .)
    COMMA           reduce using rule 48 (type -> INT .)
    CLOSEPAREN      reduce using rule 48 (type -> INT .)
    ID              reduce using rule 48 (type -> INT .)
    OPENCURLY       reduce using rule 48 (type -> INT .)


state 36

    (49) type -> FLOAT .

    SEMICOLON       reduce using rule 49 (type -> FLOAT .)
    COMMA           reduce using rule 49 (type -> FLOAT .)
    CLOSEPAREN      reduce using rule 49 (type -> FLOAT .)
    ID              reduce using rule 49 (type -> FLOAT .)
    OPENCURLY       reduce using rule 49 (type -> FLOAT .)


state 37

    (50) type -> STRING .

    SEMICOLON       reduce using rule 50 (type -> STRING .)
    COMMA           reduce using rule 50 (type -> STRING .)
    CLOSEPAREN      reduce using rule 50 (type -> STRING .)
    ID              reduce using rule 50 (type -> STRING .)
    OPENCURLY       reduce using rule 50 (type -> STRING .)


state 38

    (51) type -> ID .

    SEMICOLON       reduce using rule 51 (type -> ID .)
    COMMA           reduce using rule 51 (type -> ID .)
    CLOSEPAREN      reduce using rule 51 (type -> ID .)
    ID              reduce using rule 51 (type -> ID .)
    OPENCURLY       reduce using rule 51 (type -> ID .)


state 39

    (52) type -> BOOL .

    SEMICOLON       reduce using rule 52 (type -> BOOL .)
    COMMA           reduce using rule 52 (type -> BOOL .)
    CLOSEPAREN      reduce using rule 52 (type -> BOOL .)
    ID              reduce using rule 52 (type -> BOOL .)
    OPENCURLY       reduce using rule 52 (type -> BOOL .)


state 40

    (24) listidsalty -> COMMA listids .

    TWODOTS         reduce using rule 24 (listidsalty -> COMMA listids .)


state 41

    (25) listidsalty -> OPENBRACKET CTEINT . CLOSEBRACKET listidsaltz

    CLOSEBRACKET    shift and go to state 53


state 42

    (40) params -> ID . TWODOTS type altparams

    TWODOTS         shift and go to state 54


state 43

    (32) function -> FUNC ID OPENPAREN altfunc . CLOSEPAREN alt2func OPENCURLY alt3func

    CLOSEPAREN      shift and go to state 55


state 44

    (33) altfunc -> params .

    CLOSEPAREN      reduce using rule 33 (altfunc -> params .)


state 45

    (34) altfunc -> empty .

    CLOSEPAREN      reduce using rule 34 (altfunc -> empty .)


state 46

    (6) main -> MAIN OPENPAREN CLOSEPAREN OPENCURLY . altmain
    (7) altmain -> . var altmain
    (8) altmain -> . estatuto altmain
    (9) altmain -> . CLOSECURLY
    (22) var -> . VAR listids TWODOTS type SEMICOLON
    (53) estatuto -> . assign
    (54) estatuto -> . condition
    (55) estatuto -> . write
    (56) estatuto -> . read
    (57) estatuto -> . return
    (58) estatuto -> . voidcall
    (59) estatuto -> . while
    (116) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (112) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (113) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (103) write -> . OUTPUT OPENPAREN varcall altwrite
    (104) write -> . OUTPUT OPENPAREN expresion altwrite
    (102) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (119) return -> . RETURN expresion SEMICOLON
    (60) voidcall -> . ID OPENPAREN CLOSEPAREN
    (61) voidcall -> . ID OPENPAREN expresion altcall
    (64) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 59
    VAR             shift and go to state 11
    ID              shift and go to state 67
    IF              shift and go to state 68
    OUTPUT          shift and go to state 69
    INPUT           shift and go to state 70
    RETURN          shift and go to state 71
    WHILE           shift and go to state 72

    altmain                        shift and go to state 56
    var                            shift and go to state 57
    estatuto                       shift and go to state 58
    assign                         shift and go to state 60
    condition                      shift and go to state 61
    write                          shift and go to state 62
    read                           shift and go to state 63
    return                         shift and go to state 64
    voidcall                       shift and go to state 65
    while                          shift and go to state 66

state 47

    (10) class -> CLASS ID altclass OPENCURLY alt2class .

    CLASS           reduce using rule 10 (class -> CLASS ID altclass OPENCURLY alt2class .)
    VAR             reduce using rule 10 (class -> CLASS ID altclass OPENCURLY alt2class .)
    FUNC            reduce using rule 10 (class -> CLASS ID altclass OPENCURLY alt2class .)
    MAIN            reduce using rule 10 (class -> CLASS ID altclass OPENCURLY alt2class .)


state 48

    (13) alt2class -> var . alt2class
    (13) alt2class -> . var alt2class
    (14) alt2class -> . function alt2class
    (15) alt2class -> . constructor CLOSECURLY SEMICOLON
    (22) var -> . VAR listids TWODOTS type SEMICOLON
    (32) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func
    (16) constructor -> . CONSTRUCTOR OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 11
    FUNC            shift and go to state 12
    CONSTRUCTOR     shift and go to state 51

    var                            shift and go to state 48
    alt2class                      shift and go to state 73
    function                       shift and go to state 49
    constructor                    shift and go to state 50

state 49

    (14) alt2class -> function . alt2class
    (13) alt2class -> . var alt2class
    (14) alt2class -> . function alt2class
    (15) alt2class -> . constructor CLOSECURLY SEMICOLON
    (22) var -> . VAR listids TWODOTS type SEMICOLON
    (32) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func
    (16) constructor -> . CONSTRUCTOR OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 11
    FUNC            shift and go to state 12
    CONSTRUCTOR     shift and go to state 51

    function                       shift and go to state 49
    alt2class                      shift and go to state 74
    var                            shift and go to state 48
    constructor                    shift and go to state 50

state 50

    (15) alt2class -> constructor . CLOSECURLY SEMICOLON

    CLOSECURLY      shift and go to state 75


state 51

    (16) constructor -> CONSTRUCTOR . OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    OPENPAREN       shift and go to state 76


state 52

    (22) var -> VAR listids TWODOTS type SEMICOLON .

    CLASS           reduce using rule 22 (var -> VAR listids TWODOTS type SEMICOLON .)
    VAR             reduce using rule 22 (var -> VAR listids TWODOTS type SEMICOLON .)
    FUNC            reduce using rule 22 (var -> VAR listids TWODOTS type SEMICOLON .)
    MAIN            reduce using rule 22 (var -> VAR listids TWODOTS type SEMICOLON .)
    CONSTRUCTOR     reduce using rule 22 (var -> VAR listids TWODOTS type SEMICOLON .)
    CLOSECURLY      reduce using rule 22 (var -> VAR listids TWODOTS type SEMICOLON .)
    ID              reduce using rule 22 (var -> VAR listids TWODOTS type SEMICOLON .)
    IF              reduce using rule 22 (var -> VAR listids TWODOTS type SEMICOLON .)
    OUTPUT          reduce using rule 22 (var -> VAR listids TWODOTS type SEMICOLON .)
    INPUT           reduce using rule 22 (var -> VAR listids TWODOTS type SEMICOLON .)
    RETURN          reduce using rule 22 (var -> VAR listids TWODOTS type SEMICOLON .)
    WHILE           reduce using rule 22 (var -> VAR listids TWODOTS type SEMICOLON .)


state 53

    (25) listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET . listidsaltz
    (27) listidsaltz -> . COMMA listids
    (28) listidsaltz -> . OPENBRACKET CTEINT CLOSEBRACKET listidsaltp
    (29) listidsaltz -> . empty
    (120) empty -> .

    COMMA           shift and go to state 79
    OPENBRACKET     shift and go to state 77
    TWODOTS         reduce using rule 120 (empty -> .)

    listidsaltz                    shift and go to state 78
    empty                          shift and go to state 80

state 54

    (40) params -> ID TWODOTS . type altparams
    (48) type -> . INT
    (49) type -> . FLOAT
    (50) type -> . STRING
    (51) type -> . ID
    (52) type -> . BOOL

    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    STRING          shift and go to state 37
    ID              shift and go to state 38
    BOOL            shift and go to state 39

    type                           shift and go to state 81

state 55

    (32) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN . alt2func OPENCURLY alt3func
    (35) alt2func -> . TWODOTS type
    (36) alt2func -> . empty
    (120) empty -> .

    TWODOTS         shift and go to state 83
    OPENCURLY       reduce using rule 120 (empty -> .)

    alt2func                       shift and go to state 82
    empty                          shift and go to state 84

state 56

    (6) main -> MAIN OPENPAREN CLOSEPAREN OPENCURLY altmain .

    $end            reduce using rule 6 (main -> MAIN OPENPAREN CLOSEPAREN OPENCURLY altmain .)


state 57

    (7) altmain -> var . altmain
    (7) altmain -> . var altmain
    (8) altmain -> . estatuto altmain
    (9) altmain -> . CLOSECURLY
    (22) var -> . VAR listids TWODOTS type SEMICOLON
    (53) estatuto -> . assign
    (54) estatuto -> . condition
    (55) estatuto -> . write
    (56) estatuto -> . read
    (57) estatuto -> . return
    (58) estatuto -> . voidcall
    (59) estatuto -> . while
    (116) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (112) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (113) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (103) write -> . OUTPUT OPENPAREN varcall altwrite
    (104) write -> . OUTPUT OPENPAREN expresion altwrite
    (102) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (119) return -> . RETURN expresion SEMICOLON
    (60) voidcall -> . ID OPENPAREN CLOSEPAREN
    (61) voidcall -> . ID OPENPAREN expresion altcall
    (64) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 59
    VAR             shift and go to state 11
    ID              shift and go to state 67
    IF              shift and go to state 68
    OUTPUT          shift and go to state 69
    INPUT           shift and go to state 70
    RETURN          shift and go to state 71
    WHILE           shift and go to state 72

    var                            shift and go to state 57
    altmain                        shift and go to state 85
    estatuto                       shift and go to state 58
    assign                         shift and go to state 60
    condition                      shift and go to state 61
    write                          shift and go to state 62
    read                           shift and go to state 63
    return                         shift and go to state 64
    voidcall                       shift and go to state 65
    while                          shift and go to state 66

state 58

    (8) altmain -> estatuto . altmain
    (7) altmain -> . var altmain
    (8) altmain -> . estatuto altmain
    (9) altmain -> . CLOSECURLY
    (22) var -> . VAR listids TWODOTS type SEMICOLON
    (53) estatuto -> . assign
    (54) estatuto -> . condition
    (55) estatuto -> . write
    (56) estatuto -> . read
    (57) estatuto -> . return
    (58) estatuto -> . voidcall
    (59) estatuto -> . while
    (116) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (112) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (113) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (103) write -> . OUTPUT OPENPAREN varcall altwrite
    (104) write -> . OUTPUT OPENPAREN expresion altwrite
    (102) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (119) return -> . RETURN expresion SEMICOLON
    (60) voidcall -> . ID OPENPAREN CLOSEPAREN
    (61) voidcall -> . ID OPENPAREN expresion altcall
    (64) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 59
    VAR             shift and go to state 11
    ID              shift and go to state 67
    IF              shift and go to state 68
    OUTPUT          shift and go to state 69
    INPUT           shift and go to state 70
    RETURN          shift and go to state 71
    WHILE           shift and go to state 72

    estatuto                       shift and go to state 58
    altmain                        shift and go to state 86
    var                            shift and go to state 57
    assign                         shift and go to state 60
    condition                      shift and go to state 61
    write                          shift and go to state 62
    read                           shift and go to state 63
    return                         shift and go to state 64
    voidcall                       shift and go to state 65
    while                          shift and go to state 66

state 59

    (9) altmain -> CLOSECURLY .

    $end            reduce using rule 9 (altmain -> CLOSECURLY .)


state 60

    (53) estatuto -> assign .

    CLOSECURLY      reduce using rule 53 (estatuto -> assign .)
    VAR             reduce using rule 53 (estatuto -> assign .)
    ID              reduce using rule 53 (estatuto -> assign .)
    IF              reduce using rule 53 (estatuto -> assign .)
    OUTPUT          reduce using rule 53 (estatuto -> assign .)
    INPUT           reduce using rule 53 (estatuto -> assign .)
    RETURN          reduce using rule 53 (estatuto -> assign .)
    WHILE           reduce using rule 53 (estatuto -> assign .)


state 61

    (54) estatuto -> condition .

    CLOSECURLY      reduce using rule 54 (estatuto -> condition .)
    VAR             reduce using rule 54 (estatuto -> condition .)
    ID              reduce using rule 54 (estatuto -> condition .)
    IF              reduce using rule 54 (estatuto -> condition .)
    OUTPUT          reduce using rule 54 (estatuto -> condition .)
    INPUT           reduce using rule 54 (estatuto -> condition .)
    RETURN          reduce using rule 54 (estatuto -> condition .)
    WHILE           reduce using rule 54 (estatuto -> condition .)


state 62

    (55) estatuto -> write .

    CLOSECURLY      reduce using rule 55 (estatuto -> write .)
    VAR             reduce using rule 55 (estatuto -> write .)
    ID              reduce using rule 55 (estatuto -> write .)
    IF              reduce using rule 55 (estatuto -> write .)
    OUTPUT          reduce using rule 55 (estatuto -> write .)
    INPUT           reduce using rule 55 (estatuto -> write .)
    RETURN          reduce using rule 55 (estatuto -> write .)
    WHILE           reduce using rule 55 (estatuto -> write .)


state 63

    (56) estatuto -> read .

    CLOSECURLY      reduce using rule 56 (estatuto -> read .)
    VAR             reduce using rule 56 (estatuto -> read .)
    ID              reduce using rule 56 (estatuto -> read .)
    IF              reduce using rule 56 (estatuto -> read .)
    OUTPUT          reduce using rule 56 (estatuto -> read .)
    INPUT           reduce using rule 56 (estatuto -> read .)
    RETURN          reduce using rule 56 (estatuto -> read .)
    WHILE           reduce using rule 56 (estatuto -> read .)


state 64

    (57) estatuto -> return .

    CLOSECURLY      reduce using rule 57 (estatuto -> return .)
    VAR             reduce using rule 57 (estatuto -> return .)
    ID              reduce using rule 57 (estatuto -> return .)
    IF              reduce using rule 57 (estatuto -> return .)
    OUTPUT          reduce using rule 57 (estatuto -> return .)
    INPUT           reduce using rule 57 (estatuto -> return .)
    RETURN          reduce using rule 57 (estatuto -> return .)
    WHILE           reduce using rule 57 (estatuto -> return .)


state 65

    (58) estatuto -> voidcall .

    CLOSECURLY      reduce using rule 58 (estatuto -> voidcall .)
    VAR             reduce using rule 58 (estatuto -> voidcall .)
    ID              reduce using rule 58 (estatuto -> voidcall .)
    IF              reduce using rule 58 (estatuto -> voidcall .)
    OUTPUT          reduce using rule 58 (estatuto -> voidcall .)
    INPUT           reduce using rule 58 (estatuto -> voidcall .)
    RETURN          reduce using rule 58 (estatuto -> voidcall .)
    WHILE           reduce using rule 58 (estatuto -> voidcall .)


state 66

    (59) estatuto -> while .

    CLOSECURLY      reduce using rule 59 (estatuto -> while .)
    VAR             reduce using rule 59 (estatuto -> while .)
    ID              reduce using rule 59 (estatuto -> while .)
    IF              reduce using rule 59 (estatuto -> while .)
    OUTPUT          reduce using rule 59 (estatuto -> while .)
    INPUT           reduce using rule 59 (estatuto -> while .)
    RETURN          reduce using rule 59 (estatuto -> while .)
    WHILE           reduce using rule 59 (estatuto -> while .)


state 67

    (116) assign -> ID . assign1 EQUALS expresion SEMICOLON
    (60) voidcall -> ID . OPENPAREN CLOSEPAREN
    (61) voidcall -> ID . OPENPAREN expresion altcall
    (117) assign1 -> . DOT ID assign1
    (118) assign1 -> . empty
    (120) empty -> .

    OPENPAREN       shift and go to state 88
    DOT             shift and go to state 89
    EQUALS          reduce using rule 120 (empty -> .)

    assign1                        shift and go to state 87
    empty                          shift and go to state 90

state 68

    (112) condition -> IF . OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (113) condition -> IF . OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition

    OPENPAREN       shift and go to state 91


state 69

    (103) write -> OUTPUT . OPENPAREN varcall altwrite
    (104) write -> OUTPUT . OPENPAREN expresion altwrite

    OPENPAREN       shift and go to state 92


state 70

    (102) read -> INPUT . OPENPAREN ID CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 93


state 71

    (119) return -> RETURN . expresion SEMICOLON
    (81) expresion -> . exp altexpresion
    (92) exp -> . termino
    (93) exp -> . termino altexp
    (97) termino -> . factor
    (98) termino -> . factor alttermino
    (108) factor -> . OPENPAREN expresion CLOSEPAREN
    (109) factor -> . SUM varcall
    (110) factor -> . SUBTRACT varcall
    (111) factor -> . varcall
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 98
    SUM             shift and go to state 99
    SUBTRACT        shift and go to state 101
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111

    expresion                      shift and go to state 94
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    varcall                        shift and go to state 100
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110

state 72

    (64) while -> WHILE . OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    OPENPAREN       shift and go to state 112


state 73

    (13) alt2class -> var alt2class .

    CLASS           reduce using rule 13 (alt2class -> var alt2class .)
    VAR             reduce using rule 13 (alt2class -> var alt2class .)
    FUNC            reduce using rule 13 (alt2class -> var alt2class .)
    MAIN            reduce using rule 13 (alt2class -> var alt2class .)


state 74

    (14) alt2class -> function alt2class .

    CLASS           reduce using rule 14 (alt2class -> function alt2class .)
    VAR             reduce using rule 14 (alt2class -> function alt2class .)
    FUNC            reduce using rule 14 (alt2class -> function alt2class .)
    MAIN            reduce using rule 14 (alt2class -> function alt2class .)


state 75

    (15) alt2class -> constructor CLOSECURLY . SEMICOLON

    SEMICOLON       shift and go to state 113


state 76

    (16) constructor -> CONSTRUCTOR OPENPAREN . altconst CLOSEPAREN OPENCURLY alt2const
    (17) altconst -> . params altconst
    (18) altconst -> . empty
    (40) params -> . ID TWODOTS type altparams
    (120) empty -> .

    ID              shift and go to state 42
    CLOSEPAREN      reduce using rule 120 (empty -> .)

    altconst                       shift and go to state 114
    params                         shift and go to state 115
    empty                          shift and go to state 116

state 77

    (28) listidsaltz -> OPENBRACKET . CTEINT CLOSEBRACKET listidsaltp

    CTEINT          shift and go to state 117


state 78

    (25) listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltz .

    TWODOTS         reduce using rule 25 (listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltz .)


state 79

    (27) listidsaltz -> COMMA . listids
    (23) listids -> . ID listidsalty

    ID              shift and go to state 19

    listids                        shift and go to state 118

state 80

    (29) listidsaltz -> empty .

    TWODOTS         reduce using rule 29 (listidsaltz -> empty .)


state 81

    (40) params -> ID TWODOTS type . altparams
    (41) altparams -> . COMMA ID TWODOTS type altparams
    (42) altparams -> . empty
    (120) empty -> .

    COMMA           shift and go to state 120
    CLOSEPAREN      reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)

    altparams                      shift and go to state 119
    empty                          shift and go to state 121

state 82

    (32) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func . OPENCURLY alt3func

    OPENCURLY       shift and go to state 122


state 83

    (35) alt2func -> TWODOTS . type
    (48) type -> . INT
    (49) type -> . FLOAT
    (50) type -> . STRING
    (51) type -> . ID
    (52) type -> . BOOL

    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    STRING          shift and go to state 37
    ID              shift and go to state 38
    BOOL            shift and go to state 39

    type                           shift and go to state 123

state 84

    (36) alt2func -> empty .

    OPENCURLY       reduce using rule 36 (alt2func -> empty .)


state 85

    (7) altmain -> var altmain .

    $end            reduce using rule 7 (altmain -> var altmain .)


state 86

    (8) altmain -> estatuto altmain .

    $end            reduce using rule 8 (altmain -> estatuto altmain .)


state 87

    (116) assign -> ID assign1 . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 124


state 88

    (60) voidcall -> ID OPENPAREN . CLOSEPAREN
    (61) voidcall -> ID OPENPAREN . expresion altcall
    (81) expresion -> . exp altexpresion
    (92) exp -> . termino
    (93) exp -> . termino altexp
    (97) termino -> . factor
    (98) termino -> . factor alttermino
    (108) factor -> . OPENPAREN expresion CLOSEPAREN
    (109) factor -> . SUM varcall
    (110) factor -> . SUBTRACT varcall
    (111) factor -> . varcall
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    CLOSEPAREN      shift and go to state 125
    OPENPAREN       shift and go to state 98
    SUM             shift and go to state 99
    SUBTRACT        shift and go to state 101
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111

    expresion                      shift and go to state 126
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    varcall                        shift and go to state 100
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110

state 89

    (117) assign1 -> DOT . ID assign1

    ID              shift and go to state 127


state 90

    (118) assign1 -> empty .

    EQUALS          reduce using rule 118 (assign1 -> empty .)


state 91

    (112) condition -> IF OPENPAREN . expresion CLOSEPAREN OPENCURLY altcondition
    (113) condition -> IF OPENPAREN . expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (81) expresion -> . exp altexpresion
    (92) exp -> . termino
    (93) exp -> . termino altexp
    (97) termino -> . factor
    (98) termino -> . factor alttermino
    (108) factor -> . OPENPAREN expresion CLOSEPAREN
    (109) factor -> . SUM varcall
    (110) factor -> . SUBTRACT varcall
    (111) factor -> . varcall
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 98
    SUM             shift and go to state 99
    SUBTRACT        shift and go to state 101
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111

    expresion                      shift and go to state 128
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    varcall                        shift and go to state 100
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110

state 92

    (103) write -> OUTPUT OPENPAREN . varcall altwrite
    (104) write -> OUTPUT OPENPAREN . expresion altwrite
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (81) expresion -> . exp altexpresion
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (92) exp -> . termino
    (93) exp -> . termino altexp
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN
    (97) termino -> . factor
    (98) termino -> . factor alttermino
    (108) factor -> . OPENPAREN expresion CLOSEPAREN
    (109) factor -> . SUM varcall
    (110) factor -> . SUBTRACT varcall
    (111) factor -> . varcall

    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111
    OPENPAREN       shift and go to state 98
    SUM             shift and go to state 99
    SUBTRACT        shift and go to state 101

    varcall                        shift and go to state 129
    expresion                      shift and go to state 130
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    exp                            shift and go to state 95
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110
    termino                        shift and go to state 96
    factor                         shift and go to state 97

state 93

    (102) read -> INPUT OPENPAREN . ID CLOSEPAREN SEMICOLON

    ID              shift and go to state 131


state 94

    (119) return -> RETURN expresion . SEMICOLON

    SEMICOLON       shift and go to state 132


state 95

    (81) expresion -> exp . altexpresion
    (82) altexpresion -> . altexpresion2 exp
    (83) altexpresion -> . empty
    (84) altexpresion2 -> . SAMEAS
    (85) altexpresion2 -> . BIGGERTHAN
    (86) altexpresion2 -> . BIGGEREQUALSTHAN
    (87) altexpresion2 -> . SMALLTHAN
    (88) altexpresion2 -> . SMALLEQUALSTHAN
    (89) altexpresion2 -> . DIFFERENTTHAN
    (90) altexpresion2 -> . AND
    (91) altexpresion2 -> . OR
    (120) empty -> .

    SAMEAS          shift and go to state 136
    BIGGERTHAN      shift and go to state 137
    BIGGEREQUALSTHAN shift and go to state 138
    SMALLTHAN       shift and go to state 139
    SMALLEQUALSTHAN shift and go to state 140
    DIFFERENTTHAN   shift and go to state 141
    AND             shift and go to state 142
    OR              shift and go to state 143
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CLOSEPAREN      reduce using rule 120 (empty -> .)
    OPENPAREN       reduce using rule 120 (empty -> .)
    SUM             reduce using rule 120 (empty -> .)
    SUBTRACT        reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CTEFLOAT        reduce using rule 120 (empty -> .)
    CTESTRING       reduce using rule 120 (empty -> .)
    CTEINT          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    CLOSECURLY      reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    OUTPUT          reduce using rule 120 (empty -> .)
    INPUT           reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)

    altexpresion                   shift and go to state 133
    altexpresion2                  shift and go to state 134
    empty                          shift and go to state 135

state 96

    (92) exp -> termino .
    (93) exp -> termino . altexp
    (94) altexp -> . SUM termino altexp
    (95) altexp -> . SUBTRACT termino altexp
    (96) altexp -> . empty
    (120) empty -> .

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! reduce/reduce conflict for SAMEAS resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for BIGGERTHAN resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for BIGGEREQUALSTHAN resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for SMALLTHAN resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for SMALLEQUALSTHAN resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for DIFFERENTTHAN resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for AND resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for OR resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for COMMA resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for CLOSEPAREN resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for OPENPAREN resolved using rule 92 (exp -> termino .)
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! reduce/reduce conflict for TRUE resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for FALSE resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for CTESTRING resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for CTEINT resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for ID resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for CLOSECURLY resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for VAR resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for IF resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for INPUT resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for RETURN resolved using rule 92 (exp -> termino .)
  ! reduce/reduce conflict for WHILE resolved using rule 92 (exp -> termino .)
    SAMEAS          reduce using rule 92 (exp -> termino .)
    BIGGERTHAN      reduce using rule 92 (exp -> termino .)
    BIGGEREQUALSTHAN reduce using rule 92 (exp -> termino .)
    SMALLTHAN       reduce using rule 92 (exp -> termino .)
    SMALLEQUALSTHAN reduce using rule 92 (exp -> termino .)
    DIFFERENTTHAN   reduce using rule 92 (exp -> termino .)
    AND             reduce using rule 92 (exp -> termino .)
    OR              reduce using rule 92 (exp -> termino .)
    SEMICOLON       reduce using rule 92 (exp -> termino .)
    COMMA           reduce using rule 92 (exp -> termino .)
    CLOSEPAREN      reduce using rule 92 (exp -> termino .)
    OPENPAREN       reduce using rule 92 (exp -> termino .)
    TRUE            reduce using rule 92 (exp -> termino .)
    FALSE           reduce using rule 92 (exp -> termino .)
    CTEFLOAT        reduce using rule 92 (exp -> termino .)
    CTESTRING       reduce using rule 92 (exp -> termino .)
    CTEINT          reduce using rule 92 (exp -> termino .)
    ID              reduce using rule 92 (exp -> termino .)
    CLOSECURLY      reduce using rule 92 (exp -> termino .)
    VAR             reduce using rule 92 (exp -> termino .)
    IF              reduce using rule 92 (exp -> termino .)
    OUTPUT          reduce using rule 92 (exp -> termino .)
    INPUT           reduce using rule 92 (exp -> termino .)
    RETURN          reduce using rule 92 (exp -> termino .)
    WHILE           reduce using rule 92 (exp -> termino .)
    SUM             shift and go to state 145
    SUBTRACT        shift and go to state 146

  ! SUM             [ reduce using rule 92 (exp -> termino .) ]
  ! SUBTRACT        [ reduce using rule 92 (exp -> termino .) ]
  ! SAMEAS          [ reduce using rule 120 (empty -> .) ]
  ! BIGGERTHAN      [ reduce using rule 120 (empty -> .) ]
  ! BIGGEREQUALSTHAN [ reduce using rule 120 (empty -> .) ]
  ! SMALLTHAN       [ reduce using rule 120 (empty -> .) ]
  ! SMALLEQUALSTHAN [ reduce using rule 120 (empty -> .) ]
  ! DIFFERENTTHAN   [ reduce using rule 120 (empty -> .) ]
  ! AND             [ reduce using rule 120 (empty -> .) ]
  ! OR              [ reduce using rule 120 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 120 (empty -> .) ]
  ! COMMA           [ reduce using rule 120 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 120 (empty -> .) ]
  ! OPENPAREN       [ reduce using rule 120 (empty -> .) ]
  ! SUM             [ reduce using rule 120 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 120 (empty -> .) ]
  ! TRUE            [ reduce using rule 120 (empty -> .) ]
  ! FALSE           [ reduce using rule 120 (empty -> .) ]
  ! CTEFLOAT        [ reduce using rule 120 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 120 (empty -> .) ]
  ! CTEINT          [ reduce using rule 120 (empty -> .) ]
  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! CLOSECURLY      [ reduce using rule 120 (empty -> .) ]
  ! VAR             [ reduce using rule 120 (empty -> .) ]
  ! IF              [ reduce using rule 120 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 120 (empty -> .) ]
  ! INPUT           [ reduce using rule 120 (empty -> .) ]
  ! RETURN          [ reduce using rule 120 (empty -> .) ]
  ! WHILE           [ reduce using rule 120 (empty -> .) ]

    altexp                         shift and go to state 144
    empty                          shift and go to state 147

state 97

    (97) termino -> factor .
    (98) termino -> factor . alttermino
    (99) alttermino -> . TIMES factor alttermino
    (100) alttermino -> . DIV factor alttermino
    (101) alttermino -> . empty
    (120) empty -> .

  ! reduce/reduce conflict for SUM resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for SUBTRACT resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for SAMEAS resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for BIGGERTHAN resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for BIGGEREQUALSTHAN resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for SMALLTHAN resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for SMALLEQUALSTHAN resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for DIFFERENTTHAN resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for AND resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for OR resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for COMMA resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for CLOSEPAREN resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for OPENPAREN resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for TRUE resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for FALSE resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for CTESTRING resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for CTEINT resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for ID resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for CLOSECURLY resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for VAR resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for IF resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for INPUT resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for RETURN resolved using rule 97 (termino -> factor .)
  ! reduce/reduce conflict for WHILE resolved using rule 97 (termino -> factor .)
    SUM             reduce using rule 97 (termino -> factor .)
    SUBTRACT        reduce using rule 97 (termino -> factor .)
    SAMEAS          reduce using rule 97 (termino -> factor .)
    BIGGERTHAN      reduce using rule 97 (termino -> factor .)
    BIGGEREQUALSTHAN reduce using rule 97 (termino -> factor .)
    SMALLTHAN       reduce using rule 97 (termino -> factor .)
    SMALLEQUALSTHAN reduce using rule 97 (termino -> factor .)
    DIFFERENTTHAN   reduce using rule 97 (termino -> factor .)
    AND             reduce using rule 97 (termino -> factor .)
    OR              reduce using rule 97 (termino -> factor .)
    SEMICOLON       reduce using rule 97 (termino -> factor .)
    COMMA           reduce using rule 97 (termino -> factor .)
    CLOSEPAREN      reduce using rule 97 (termino -> factor .)
    OPENPAREN       reduce using rule 97 (termino -> factor .)
    TRUE            reduce using rule 97 (termino -> factor .)
    FALSE           reduce using rule 97 (termino -> factor .)
    CTEFLOAT        reduce using rule 97 (termino -> factor .)
    CTESTRING       reduce using rule 97 (termino -> factor .)
    CTEINT          reduce using rule 97 (termino -> factor .)
    ID              reduce using rule 97 (termino -> factor .)
    CLOSECURLY      reduce using rule 97 (termino -> factor .)
    VAR             reduce using rule 97 (termino -> factor .)
    IF              reduce using rule 97 (termino -> factor .)
    OUTPUT          reduce using rule 97 (termino -> factor .)
    INPUT           reduce using rule 97 (termino -> factor .)
    RETURN          reduce using rule 97 (termino -> factor .)
    WHILE           reduce using rule 97 (termino -> factor .)
    TIMES           shift and go to state 149
    DIV             shift and go to state 150

  ! SUM             [ reduce using rule 120 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 120 (empty -> .) ]
  ! SAMEAS          [ reduce using rule 120 (empty -> .) ]
  ! BIGGERTHAN      [ reduce using rule 120 (empty -> .) ]
  ! BIGGEREQUALSTHAN [ reduce using rule 120 (empty -> .) ]
  ! SMALLTHAN       [ reduce using rule 120 (empty -> .) ]
  ! SMALLEQUALSTHAN [ reduce using rule 120 (empty -> .) ]
  ! DIFFERENTTHAN   [ reduce using rule 120 (empty -> .) ]
  ! AND             [ reduce using rule 120 (empty -> .) ]
  ! OR              [ reduce using rule 120 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 120 (empty -> .) ]
  ! COMMA           [ reduce using rule 120 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 120 (empty -> .) ]
  ! OPENPAREN       [ reduce using rule 120 (empty -> .) ]
  ! TRUE            [ reduce using rule 120 (empty -> .) ]
  ! FALSE           [ reduce using rule 120 (empty -> .) ]
  ! CTEFLOAT        [ reduce using rule 120 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 120 (empty -> .) ]
  ! CTEINT          [ reduce using rule 120 (empty -> .) ]
  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! CLOSECURLY      [ reduce using rule 120 (empty -> .) ]
  ! VAR             [ reduce using rule 120 (empty -> .) ]
  ! IF              [ reduce using rule 120 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 120 (empty -> .) ]
  ! INPUT           [ reduce using rule 120 (empty -> .) ]
  ! RETURN          [ reduce using rule 120 (empty -> .) ]
  ! WHILE           [ reduce using rule 120 (empty -> .) ]

    alttermino                     shift and go to state 148
    empty                          shift and go to state 151

state 98

    (108) factor -> OPENPAREN . expresion CLOSEPAREN
    (81) expresion -> . exp altexpresion
    (92) exp -> . termino
    (93) exp -> . termino altexp
    (97) termino -> . factor
    (98) termino -> . factor alttermino
    (108) factor -> . OPENPAREN expresion CLOSEPAREN
    (109) factor -> . SUM varcall
    (110) factor -> . SUBTRACT varcall
    (111) factor -> . varcall
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 98
    SUM             shift and go to state 99
    SUBTRACT        shift and go to state 101
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111

    expresion                      shift and go to state 152
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    varcall                        shift and go to state 100
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110

state 99

    (109) factor -> SUM . varcall
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111

    varcall                        shift and go to state 153
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110

state 100

    (111) factor -> varcall .

    TIMES           reduce using rule 111 (factor -> varcall .)
    DIV             reduce using rule 111 (factor -> varcall .)
    SUM             reduce using rule 111 (factor -> varcall .)
    SUBTRACT        reduce using rule 111 (factor -> varcall .)
    SAMEAS          reduce using rule 111 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 111 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 111 (factor -> varcall .)
    SMALLTHAN       reduce using rule 111 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 111 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 111 (factor -> varcall .)
    AND             reduce using rule 111 (factor -> varcall .)
    OR              reduce using rule 111 (factor -> varcall .)
    SEMICOLON       reduce using rule 111 (factor -> varcall .)
    COMMA           reduce using rule 111 (factor -> varcall .)
    CLOSEPAREN      reduce using rule 111 (factor -> varcall .)
    OPENPAREN       reduce using rule 111 (factor -> varcall .)
    TRUE            reduce using rule 111 (factor -> varcall .)
    FALSE           reduce using rule 111 (factor -> varcall .)
    CTEFLOAT        reduce using rule 111 (factor -> varcall .)
    CTESTRING       reduce using rule 111 (factor -> varcall .)
    CTEINT          reduce using rule 111 (factor -> varcall .)
    ID              reduce using rule 111 (factor -> varcall .)
    CLOSECURLY      reduce using rule 111 (factor -> varcall .)
    VAR             reduce using rule 111 (factor -> varcall .)
    IF              reduce using rule 111 (factor -> varcall .)
    OUTPUT          reduce using rule 111 (factor -> varcall .)
    INPUT           reduce using rule 111 (factor -> varcall .)
    RETURN          reduce using rule 111 (factor -> varcall .)
    WHILE           reduce using rule 111 (factor -> varcall .)


state 101

    (110) factor -> SUBTRACT . varcall
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111

    varcall                        shift and go to state 154
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110

state 102

    (67) varcall -> varcte .

    TIMES           reduce using rule 67 (varcall -> varcte .)
    DIV             reduce using rule 67 (varcall -> varcte .)
    SUM             reduce using rule 67 (varcall -> varcte .)
    SUBTRACT        reduce using rule 67 (varcall -> varcte .)
    SAMEAS          reduce using rule 67 (varcall -> varcte .)
    BIGGERTHAN      reduce using rule 67 (varcall -> varcte .)
    BIGGEREQUALSTHAN reduce using rule 67 (varcall -> varcte .)
    SMALLTHAN       reduce using rule 67 (varcall -> varcte .)
    SMALLEQUALSTHAN reduce using rule 67 (varcall -> varcte .)
    DIFFERENTTHAN   reduce using rule 67 (varcall -> varcte .)
    AND             reduce using rule 67 (varcall -> varcte .)
    OR              reduce using rule 67 (varcall -> varcte .)
    SEMICOLON       reduce using rule 67 (varcall -> varcte .)
    COMMA           reduce using rule 67 (varcall -> varcte .)
    CLOSEPAREN      reduce using rule 67 (varcall -> varcte .)
    OPENPAREN       reduce using rule 67 (varcall -> varcte .)
    TRUE            reduce using rule 67 (varcall -> varcte .)
    FALSE           reduce using rule 67 (varcall -> varcte .)
    CTEFLOAT        reduce using rule 67 (varcall -> varcte .)
    CTESTRING       reduce using rule 67 (varcall -> varcte .)
    CTEINT          reduce using rule 67 (varcall -> varcte .)
    ID              reduce using rule 67 (varcall -> varcte .)
    CLOSECURLY      reduce using rule 67 (varcall -> varcte .)
    VAR             reduce using rule 67 (varcall -> varcte .)
    IF              reduce using rule 67 (varcall -> varcte .)
    OUTPUT          reduce using rule 67 (varcall -> varcte .)
    INPUT           reduce using rule 67 (varcall -> varcte .)
    RETURN          reduce using rule 67 (varcall -> varcte .)
    WHILE           reduce using rule 67 (varcall -> varcte .)


state 103

    (68) varcall -> varcomplicated .

    TIMES           reduce using rule 68 (varcall -> varcomplicated .)
    DIV             reduce using rule 68 (varcall -> varcomplicated .)
    SUM             reduce using rule 68 (varcall -> varcomplicated .)
    SUBTRACT        reduce using rule 68 (varcall -> varcomplicated .)
    SAMEAS          reduce using rule 68 (varcall -> varcomplicated .)
    BIGGERTHAN      reduce using rule 68 (varcall -> varcomplicated .)
    BIGGEREQUALSTHAN reduce using rule 68 (varcall -> varcomplicated .)
    SMALLTHAN       reduce using rule 68 (varcall -> varcomplicated .)
    SMALLEQUALSTHAN reduce using rule 68 (varcall -> varcomplicated .)
    DIFFERENTTHAN   reduce using rule 68 (varcall -> varcomplicated .)
    AND             reduce using rule 68 (varcall -> varcomplicated .)
    OR              reduce using rule 68 (varcall -> varcomplicated .)
    SEMICOLON       reduce using rule 68 (varcall -> varcomplicated .)
    COMMA           reduce using rule 68 (varcall -> varcomplicated .)
    CLOSEPAREN      reduce using rule 68 (varcall -> varcomplicated .)
    OPENPAREN       reduce using rule 68 (varcall -> varcomplicated .)
    TRUE            reduce using rule 68 (varcall -> varcomplicated .)
    FALSE           reduce using rule 68 (varcall -> varcomplicated .)
    CTEFLOAT        reduce using rule 68 (varcall -> varcomplicated .)
    CTESTRING       reduce using rule 68 (varcall -> varcomplicated .)
    CTEINT          reduce using rule 68 (varcall -> varcomplicated .)
    ID              reduce using rule 68 (varcall -> varcomplicated .)
    CLOSECURLY      reduce using rule 68 (varcall -> varcomplicated .)
    VAR             reduce using rule 68 (varcall -> varcomplicated .)
    IF              reduce using rule 68 (varcall -> varcomplicated .)
    OUTPUT          reduce using rule 68 (varcall -> varcomplicated .)
    INPUT           reduce using rule 68 (varcall -> varcomplicated .)
    RETURN          reduce using rule 68 (varcall -> varcomplicated .)
    WHILE           reduce using rule 68 (varcall -> varcomplicated .)


state 104

    (69) varcte -> TRUE .

    TIMES           reduce using rule 69 (varcte -> TRUE .)
    DIV             reduce using rule 69 (varcte -> TRUE .)
    SUM             reduce using rule 69 (varcte -> TRUE .)
    SUBTRACT        reduce using rule 69 (varcte -> TRUE .)
    SAMEAS          reduce using rule 69 (varcte -> TRUE .)
    BIGGERTHAN      reduce using rule 69 (varcte -> TRUE .)
    BIGGEREQUALSTHAN reduce using rule 69 (varcte -> TRUE .)
    SMALLTHAN       reduce using rule 69 (varcte -> TRUE .)
    SMALLEQUALSTHAN reduce using rule 69 (varcte -> TRUE .)
    DIFFERENTTHAN   reduce using rule 69 (varcte -> TRUE .)
    AND             reduce using rule 69 (varcte -> TRUE .)
    OR              reduce using rule 69 (varcte -> TRUE .)
    SEMICOLON       reduce using rule 69 (varcte -> TRUE .)
    COMMA           reduce using rule 69 (varcte -> TRUE .)
    CLOSEPAREN      reduce using rule 69 (varcte -> TRUE .)
    OPENPAREN       reduce using rule 69 (varcte -> TRUE .)
    TRUE            reduce using rule 69 (varcte -> TRUE .)
    FALSE           reduce using rule 69 (varcte -> TRUE .)
    CTEFLOAT        reduce using rule 69 (varcte -> TRUE .)
    CTESTRING       reduce using rule 69 (varcte -> TRUE .)
    CTEINT          reduce using rule 69 (varcte -> TRUE .)
    ID              reduce using rule 69 (varcte -> TRUE .)
    CLOSECURLY      reduce using rule 69 (varcte -> TRUE .)
    VAR             reduce using rule 69 (varcte -> TRUE .)
    IF              reduce using rule 69 (varcte -> TRUE .)
    OUTPUT          reduce using rule 69 (varcte -> TRUE .)
    INPUT           reduce using rule 69 (varcte -> TRUE .)
    RETURN          reduce using rule 69 (varcte -> TRUE .)
    WHILE           reduce using rule 69 (varcte -> TRUE .)


state 105

    (70) varcte -> FALSE .

    TIMES           reduce using rule 70 (varcte -> FALSE .)
    DIV             reduce using rule 70 (varcte -> FALSE .)
    SUM             reduce using rule 70 (varcte -> FALSE .)
    SUBTRACT        reduce using rule 70 (varcte -> FALSE .)
    SAMEAS          reduce using rule 70 (varcte -> FALSE .)
    BIGGERTHAN      reduce using rule 70 (varcte -> FALSE .)
    BIGGEREQUALSTHAN reduce using rule 70 (varcte -> FALSE .)
    SMALLTHAN       reduce using rule 70 (varcte -> FALSE .)
    SMALLEQUALSTHAN reduce using rule 70 (varcte -> FALSE .)
    DIFFERENTTHAN   reduce using rule 70 (varcte -> FALSE .)
    AND             reduce using rule 70 (varcte -> FALSE .)
    OR              reduce using rule 70 (varcte -> FALSE .)
    SEMICOLON       reduce using rule 70 (varcte -> FALSE .)
    COMMA           reduce using rule 70 (varcte -> FALSE .)
    CLOSEPAREN      reduce using rule 70 (varcte -> FALSE .)
    OPENPAREN       reduce using rule 70 (varcte -> FALSE .)
    TRUE            reduce using rule 70 (varcte -> FALSE .)
    FALSE           reduce using rule 70 (varcte -> FALSE .)
    CTEFLOAT        reduce using rule 70 (varcte -> FALSE .)
    CTESTRING       reduce using rule 70 (varcte -> FALSE .)
    CTEINT          reduce using rule 70 (varcte -> FALSE .)
    ID              reduce using rule 70 (varcte -> FALSE .)
    CLOSECURLY      reduce using rule 70 (varcte -> FALSE .)
    VAR             reduce using rule 70 (varcte -> FALSE .)
    IF              reduce using rule 70 (varcte -> FALSE .)
    OUTPUT          reduce using rule 70 (varcte -> FALSE .)
    INPUT           reduce using rule 70 (varcte -> FALSE .)
    RETURN          reduce using rule 70 (varcte -> FALSE .)
    WHILE           reduce using rule 70 (varcte -> FALSE .)


state 106

    (71) varcte -> CTEFLOAT .

    TIMES           reduce using rule 71 (varcte -> CTEFLOAT .)
    DIV             reduce using rule 71 (varcte -> CTEFLOAT .)
    SUM             reduce using rule 71 (varcte -> CTEFLOAT .)
    SUBTRACT        reduce using rule 71 (varcte -> CTEFLOAT .)
    SAMEAS          reduce using rule 71 (varcte -> CTEFLOAT .)
    BIGGERTHAN      reduce using rule 71 (varcte -> CTEFLOAT .)
    BIGGEREQUALSTHAN reduce using rule 71 (varcte -> CTEFLOAT .)
    SMALLTHAN       reduce using rule 71 (varcte -> CTEFLOAT .)
    SMALLEQUALSTHAN reduce using rule 71 (varcte -> CTEFLOAT .)
    DIFFERENTTHAN   reduce using rule 71 (varcte -> CTEFLOAT .)
    AND             reduce using rule 71 (varcte -> CTEFLOAT .)
    OR              reduce using rule 71 (varcte -> CTEFLOAT .)
    SEMICOLON       reduce using rule 71 (varcte -> CTEFLOAT .)
    COMMA           reduce using rule 71 (varcte -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 71 (varcte -> CTEFLOAT .)
    OPENPAREN       reduce using rule 71 (varcte -> CTEFLOAT .)
    TRUE            reduce using rule 71 (varcte -> CTEFLOAT .)
    FALSE           reduce using rule 71 (varcte -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 71 (varcte -> CTEFLOAT .)
    CTESTRING       reduce using rule 71 (varcte -> CTEFLOAT .)
    CTEINT          reduce using rule 71 (varcte -> CTEFLOAT .)
    ID              reduce using rule 71 (varcte -> CTEFLOAT .)
    CLOSECURLY      reduce using rule 71 (varcte -> CTEFLOAT .)
    VAR             reduce using rule 71 (varcte -> CTEFLOAT .)
    IF              reduce using rule 71 (varcte -> CTEFLOAT .)
    OUTPUT          reduce using rule 71 (varcte -> CTEFLOAT .)
    INPUT           reduce using rule 71 (varcte -> CTEFLOAT .)
    RETURN          reduce using rule 71 (varcte -> CTEFLOAT .)
    WHILE           reduce using rule 71 (varcte -> CTEFLOAT .)


state 107

    (72) varcte -> CTESTRING .

    TIMES           reduce using rule 72 (varcte -> CTESTRING .)
    DIV             reduce using rule 72 (varcte -> CTESTRING .)
    SUM             reduce using rule 72 (varcte -> CTESTRING .)
    SUBTRACT        reduce using rule 72 (varcte -> CTESTRING .)
    SAMEAS          reduce using rule 72 (varcte -> CTESTRING .)
    BIGGERTHAN      reduce using rule 72 (varcte -> CTESTRING .)
    BIGGEREQUALSTHAN reduce using rule 72 (varcte -> CTESTRING .)
    SMALLTHAN       reduce using rule 72 (varcte -> CTESTRING .)
    SMALLEQUALSTHAN reduce using rule 72 (varcte -> CTESTRING .)
    DIFFERENTTHAN   reduce using rule 72 (varcte -> CTESTRING .)
    AND             reduce using rule 72 (varcte -> CTESTRING .)
    OR              reduce using rule 72 (varcte -> CTESTRING .)
    SEMICOLON       reduce using rule 72 (varcte -> CTESTRING .)
    COMMA           reduce using rule 72 (varcte -> CTESTRING .)
    CLOSEPAREN      reduce using rule 72 (varcte -> CTESTRING .)
    OPENPAREN       reduce using rule 72 (varcte -> CTESTRING .)
    TRUE            reduce using rule 72 (varcte -> CTESTRING .)
    FALSE           reduce using rule 72 (varcte -> CTESTRING .)
    CTEFLOAT        reduce using rule 72 (varcte -> CTESTRING .)
    CTESTRING       reduce using rule 72 (varcte -> CTESTRING .)
    CTEINT          reduce using rule 72 (varcte -> CTESTRING .)
    ID              reduce using rule 72 (varcte -> CTESTRING .)
    CLOSECURLY      reduce using rule 72 (varcte -> CTESTRING .)
    VAR             reduce using rule 72 (varcte -> CTESTRING .)
    IF              reduce using rule 72 (varcte -> CTESTRING .)
    OUTPUT          reduce using rule 72 (varcte -> CTESTRING .)
    INPUT           reduce using rule 72 (varcte -> CTESTRING .)
    RETURN          reduce using rule 72 (varcte -> CTESTRING .)
    WHILE           reduce using rule 72 (varcte -> CTESTRING .)


state 108

    (73) varcte -> CTEINT .

    TIMES           reduce using rule 73 (varcte -> CTEINT .)
    DIV             reduce using rule 73 (varcte -> CTEINT .)
    SUM             reduce using rule 73 (varcte -> CTEINT .)
    SUBTRACT        reduce using rule 73 (varcte -> CTEINT .)
    SAMEAS          reduce using rule 73 (varcte -> CTEINT .)
    BIGGERTHAN      reduce using rule 73 (varcte -> CTEINT .)
    BIGGEREQUALSTHAN reduce using rule 73 (varcte -> CTEINT .)
    SMALLTHAN       reduce using rule 73 (varcte -> CTEINT .)
    SMALLEQUALSTHAN reduce using rule 73 (varcte -> CTEINT .)
    DIFFERENTTHAN   reduce using rule 73 (varcte -> CTEINT .)
    AND             reduce using rule 73 (varcte -> CTEINT .)
    OR              reduce using rule 73 (varcte -> CTEINT .)
    SEMICOLON       reduce using rule 73 (varcte -> CTEINT .)
    COMMA           reduce using rule 73 (varcte -> CTEINT .)
    CLOSEPAREN      reduce using rule 73 (varcte -> CTEINT .)
    OPENPAREN       reduce using rule 73 (varcte -> CTEINT .)
    TRUE            reduce using rule 73 (varcte -> CTEINT .)
    FALSE           reduce using rule 73 (varcte -> CTEINT .)
    CTEFLOAT        reduce using rule 73 (varcte -> CTEINT .)
    CTESTRING       reduce using rule 73 (varcte -> CTEINT .)
    CTEINT          reduce using rule 73 (varcte -> CTEINT .)
    ID              reduce using rule 73 (varcte -> CTEINT .)
    CLOSECURLY      reduce using rule 73 (varcte -> CTEINT .)
    VAR             reduce using rule 73 (varcte -> CTEINT .)
    IF              reduce using rule 73 (varcte -> CTEINT .)
    OUTPUT          reduce using rule 73 (varcte -> CTEINT .)
    INPUT           reduce using rule 73 (varcte -> CTEINT .)
    RETURN          reduce using rule 73 (varcte -> CTEINT .)
    WHILE           reduce using rule 73 (varcte -> CTEINT .)


state 109

    (74) varcomplicated -> varcomp1 .

    TIMES           reduce using rule 74 (varcomplicated -> varcomp1 .)
    DIV             reduce using rule 74 (varcomplicated -> varcomp1 .)
    SUM             reduce using rule 74 (varcomplicated -> varcomp1 .)
    SUBTRACT        reduce using rule 74 (varcomplicated -> varcomp1 .)
    SAMEAS          reduce using rule 74 (varcomplicated -> varcomp1 .)
    BIGGERTHAN      reduce using rule 74 (varcomplicated -> varcomp1 .)
    BIGGEREQUALSTHAN reduce using rule 74 (varcomplicated -> varcomp1 .)
    SMALLTHAN       reduce using rule 74 (varcomplicated -> varcomp1 .)
    SMALLEQUALSTHAN reduce using rule 74 (varcomplicated -> varcomp1 .)
    DIFFERENTTHAN   reduce using rule 74 (varcomplicated -> varcomp1 .)
    AND             reduce using rule 74 (varcomplicated -> varcomp1 .)
    OR              reduce using rule 74 (varcomplicated -> varcomp1 .)
    SEMICOLON       reduce using rule 74 (varcomplicated -> varcomp1 .)
    COMMA           reduce using rule 74 (varcomplicated -> varcomp1 .)
    CLOSEPAREN      reduce using rule 74 (varcomplicated -> varcomp1 .)
    OPENPAREN       reduce using rule 74 (varcomplicated -> varcomp1 .)
    TRUE            reduce using rule 74 (varcomplicated -> varcomp1 .)
    FALSE           reduce using rule 74 (varcomplicated -> varcomp1 .)
    CTEFLOAT        reduce using rule 74 (varcomplicated -> varcomp1 .)
    CTESTRING       reduce using rule 74 (varcomplicated -> varcomp1 .)
    CTEINT          reduce using rule 74 (varcomplicated -> varcomp1 .)
    ID              reduce using rule 74 (varcomplicated -> varcomp1 .)
    CLOSECURLY      reduce using rule 74 (varcomplicated -> varcomp1 .)
    VAR             reduce using rule 74 (varcomplicated -> varcomp1 .)
    IF              reduce using rule 74 (varcomplicated -> varcomp1 .)
    OUTPUT          reduce using rule 74 (varcomplicated -> varcomp1 .)
    INPUT           reduce using rule 74 (varcomplicated -> varcomp1 .)
    RETURN          reduce using rule 74 (varcomplicated -> varcomp1 .)
    WHILE           reduce using rule 74 (varcomplicated -> varcomp1 .)


state 110

    (75) varcomplicated -> callfunc .

    TIMES           reduce using rule 75 (varcomplicated -> callfunc .)
    DIV             reduce using rule 75 (varcomplicated -> callfunc .)
    SUM             reduce using rule 75 (varcomplicated -> callfunc .)
    SUBTRACT        reduce using rule 75 (varcomplicated -> callfunc .)
    SAMEAS          reduce using rule 75 (varcomplicated -> callfunc .)
    BIGGERTHAN      reduce using rule 75 (varcomplicated -> callfunc .)
    BIGGEREQUALSTHAN reduce using rule 75 (varcomplicated -> callfunc .)
    SMALLTHAN       reduce using rule 75 (varcomplicated -> callfunc .)
    SMALLEQUALSTHAN reduce using rule 75 (varcomplicated -> callfunc .)
    DIFFERENTTHAN   reduce using rule 75 (varcomplicated -> callfunc .)
    AND             reduce using rule 75 (varcomplicated -> callfunc .)
    OR              reduce using rule 75 (varcomplicated -> callfunc .)
    SEMICOLON       reduce using rule 75 (varcomplicated -> callfunc .)
    COMMA           reduce using rule 75 (varcomplicated -> callfunc .)
    CLOSEPAREN      reduce using rule 75 (varcomplicated -> callfunc .)
    OPENPAREN       reduce using rule 75 (varcomplicated -> callfunc .)
    TRUE            reduce using rule 75 (varcomplicated -> callfunc .)
    FALSE           reduce using rule 75 (varcomplicated -> callfunc .)
    CTEFLOAT        reduce using rule 75 (varcomplicated -> callfunc .)
    CTESTRING       reduce using rule 75 (varcomplicated -> callfunc .)
    CTEINT          reduce using rule 75 (varcomplicated -> callfunc .)
    ID              reduce using rule 75 (varcomplicated -> callfunc .)
    CLOSECURLY      reduce using rule 75 (varcomplicated -> callfunc .)
    VAR             reduce using rule 75 (varcomplicated -> callfunc .)
    IF              reduce using rule 75 (varcomplicated -> callfunc .)
    OUTPUT          reduce using rule 75 (varcomplicated -> callfunc .)
    INPUT           reduce using rule 75 (varcomplicated -> callfunc .)
    RETURN          reduce using rule 75 (varcomplicated -> callfunc .)
    WHILE           reduce using rule 75 (varcomplicated -> callfunc .)


state 111

    (76) varcomp1 -> ID . varcomp2
    (43) callfunc -> ID . OPENPAREN altcall CLOSEPAREN
    (77) varcomp2 -> . DOT varcomp3
    (78) varcomp2 -> . empty
    (120) empty -> .

  ! shift/reduce conflict for OPENPAREN resolved as shift
    OPENPAREN       shift and go to state 156
    DOT             shift and go to state 157
    TIMES           reduce using rule 120 (empty -> .)
    DIV             reduce using rule 120 (empty -> .)
    SUM             reduce using rule 120 (empty -> .)
    SUBTRACT        reduce using rule 120 (empty -> .)
    SAMEAS          reduce using rule 120 (empty -> .)
    BIGGERTHAN      reduce using rule 120 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 120 (empty -> .)
    SMALLTHAN       reduce using rule 120 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 120 (empty -> .)
    DIFFERENTTHAN   reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CLOSEPAREN      reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CTEFLOAT        reduce using rule 120 (empty -> .)
    CTESTRING       reduce using rule 120 (empty -> .)
    CTEINT          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    CLOSECURLY      reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    OUTPUT          reduce using rule 120 (empty -> .)
    INPUT           reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)

  ! OPENPAREN       [ reduce using rule 120 (empty -> .) ]

    varcomp2                       shift and go to state 155
    empty                          shift and go to state 158

state 112

    (64) while -> WHILE OPENPAREN . expresion CLOSEPAREN OPENCURLY altwhile
    (81) expresion -> . exp altexpresion
    (92) exp -> . termino
    (93) exp -> . termino altexp
    (97) termino -> . factor
    (98) termino -> . factor alttermino
    (108) factor -> . OPENPAREN expresion CLOSEPAREN
    (109) factor -> . SUM varcall
    (110) factor -> . SUBTRACT varcall
    (111) factor -> . varcall
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 98
    SUM             shift and go to state 99
    SUBTRACT        shift and go to state 101
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111

    expresion                      shift and go to state 159
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    varcall                        shift and go to state 100
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110

state 113

    (15) alt2class -> constructor CLOSECURLY SEMICOLON .

    CLASS           reduce using rule 15 (alt2class -> constructor CLOSECURLY SEMICOLON .)
    VAR             reduce using rule 15 (alt2class -> constructor CLOSECURLY SEMICOLON .)
    FUNC            reduce using rule 15 (alt2class -> constructor CLOSECURLY SEMICOLON .)
    MAIN            reduce using rule 15 (alt2class -> constructor CLOSECURLY SEMICOLON .)


state 114

    (16) constructor -> CONSTRUCTOR OPENPAREN altconst . CLOSEPAREN OPENCURLY alt2const

    CLOSEPAREN      shift and go to state 160


state 115

    (17) altconst -> params . altconst
    (17) altconst -> . params altconst
    (18) altconst -> . empty
    (40) params -> . ID TWODOTS type altparams
    (120) empty -> .

    ID              shift and go to state 42
    CLOSEPAREN      reduce using rule 120 (empty -> .)

    params                         shift and go to state 115
    altconst                       shift and go to state 161
    empty                          shift and go to state 116

state 116

    (18) altconst -> empty .

    CLOSEPAREN      reduce using rule 18 (altconst -> empty .)


state 117

    (28) listidsaltz -> OPENBRACKET CTEINT . CLOSEBRACKET listidsaltp

    CLOSEBRACKET    shift and go to state 162


state 118

    (27) listidsaltz -> COMMA listids .

    TWODOTS         reduce using rule 27 (listidsaltz -> COMMA listids .)


state 119

    (40) params -> ID TWODOTS type altparams .

    CLOSEPAREN      reduce using rule 40 (params -> ID TWODOTS type altparams .)
    ID              reduce using rule 40 (params -> ID TWODOTS type altparams .)


state 120

    (41) altparams -> COMMA . ID TWODOTS type altparams

    ID              shift and go to state 163


state 121

    (42) altparams -> empty .

    CLOSEPAREN      reduce using rule 42 (altparams -> empty .)
    ID              reduce using rule 42 (altparams -> empty .)


state 122

    (32) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY . alt3func
    (37) alt3func -> . var alt3func
    (38) alt3func -> . estatuto alt3func
    (39) alt3func -> . CLOSECURLY
    (22) var -> . VAR listids TWODOTS type SEMICOLON
    (53) estatuto -> . assign
    (54) estatuto -> . condition
    (55) estatuto -> . write
    (56) estatuto -> . read
    (57) estatuto -> . return
    (58) estatuto -> . voidcall
    (59) estatuto -> . while
    (116) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (112) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (113) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (103) write -> . OUTPUT OPENPAREN varcall altwrite
    (104) write -> . OUTPUT OPENPAREN expresion altwrite
    (102) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (119) return -> . RETURN expresion SEMICOLON
    (60) voidcall -> . ID OPENPAREN CLOSEPAREN
    (61) voidcall -> . ID OPENPAREN expresion altcall
    (64) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 167
    VAR             shift and go to state 11
    ID              shift and go to state 67
    IF              shift and go to state 68
    OUTPUT          shift and go to state 69
    INPUT           shift and go to state 70
    RETURN          shift and go to state 71
    WHILE           shift and go to state 72

    alt3func                       shift and go to state 164
    var                            shift and go to state 165
    estatuto                       shift and go to state 166
    assign                         shift and go to state 60
    condition                      shift and go to state 61
    write                          shift and go to state 62
    read                           shift and go to state 63
    return                         shift and go to state 64
    voidcall                       shift and go to state 65
    while                          shift and go to state 66

state 123

    (35) alt2func -> TWODOTS type .

    OPENCURLY       reduce using rule 35 (alt2func -> TWODOTS type .)


state 124

    (116) assign -> ID assign1 EQUALS . expresion SEMICOLON
    (81) expresion -> . exp altexpresion
    (92) exp -> . termino
    (93) exp -> . termino altexp
    (97) termino -> . factor
    (98) termino -> . factor alttermino
    (108) factor -> . OPENPAREN expresion CLOSEPAREN
    (109) factor -> . SUM varcall
    (110) factor -> . SUBTRACT varcall
    (111) factor -> . varcall
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 98
    SUM             shift and go to state 99
    SUBTRACT        shift and go to state 101
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111

    expresion                      shift and go to state 168
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    varcall                        shift and go to state 100
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110

state 125

    (60) voidcall -> ID OPENPAREN CLOSEPAREN .

    CLOSECURLY      reduce using rule 60 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    VAR             reduce using rule 60 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    ID              reduce using rule 60 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    IF              reduce using rule 60 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    OUTPUT          reduce using rule 60 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    INPUT           reduce using rule 60 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    RETURN          reduce using rule 60 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    WHILE           reduce using rule 60 (voidcall -> ID OPENPAREN CLOSEPAREN .)


state 126

    (61) voidcall -> ID OPENPAREN expresion . altcall
    (44) altcall -> . expresion alt2call
    (45) altcall -> . empty
    (62) altcall -> . COMMA expresion altcall
    (63) altcall -> . CLOSEPAREN SEMICOLON
    (81) expresion -> . exp altexpresion
    (120) empty -> .
    (92) exp -> . termino
    (93) exp -> . termino altexp
    (97) termino -> . factor
    (98) termino -> . factor alttermino
    (108) factor -> . OPENPAREN expresion CLOSEPAREN
    (109) factor -> . SUM varcall
    (110) factor -> . SUBTRACT varcall
    (111) factor -> . varcall
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 172
    CLOSEPAREN      shift and go to state 173
    CLOSECURLY      reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    OUTPUT          reduce using rule 120 (empty -> .)
    INPUT           reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    OPENPAREN       shift and go to state 98
    SUM             shift and go to state 99
    SUBTRACT        shift and go to state 101
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111

  ! ID              [ reduce using rule 120 (empty -> .) ]

    expresion                      shift and go to state 169
    altcall                        shift and go to state 170
    empty                          shift and go to state 171
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    varcall                        shift and go to state 100
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110

state 127

    (117) assign1 -> DOT ID . assign1
    (117) assign1 -> . DOT ID assign1
    (118) assign1 -> . empty
    (120) empty -> .

    DOT             shift and go to state 89
    EQUALS          reduce using rule 120 (empty -> .)

    assign1                        shift and go to state 174
    empty                          shift and go to state 90

state 128

    (112) condition -> IF OPENPAREN expresion . CLOSEPAREN OPENCURLY altcondition
    (113) condition -> IF OPENPAREN expresion . CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition

    CLOSEPAREN      shift and go to state 175


state 129

    (103) write -> OUTPUT OPENPAREN varcall . altwrite
    (111) factor -> varcall .
    (105) altwrite -> . COMMA varcall altwrite
    (106) altwrite -> . COMMA expresion altwrite
    (107) altwrite -> . CLOSEPAREN SEMICOLON

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for CLOSEPAREN resolved as shift
    TIMES           reduce using rule 111 (factor -> varcall .)
    DIV             reduce using rule 111 (factor -> varcall .)
    SUM             reduce using rule 111 (factor -> varcall .)
    SUBTRACT        reduce using rule 111 (factor -> varcall .)
    SAMEAS          reduce using rule 111 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 111 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 111 (factor -> varcall .)
    SMALLTHAN       reduce using rule 111 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 111 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 111 (factor -> varcall .)
    AND             reduce using rule 111 (factor -> varcall .)
    OR              reduce using rule 111 (factor -> varcall .)
    COMMA           shift and go to state 177
    CLOSEPAREN      shift and go to state 178

  ! COMMA           [ reduce using rule 111 (factor -> varcall .) ]
  ! CLOSEPAREN      [ reduce using rule 111 (factor -> varcall .) ]

    altwrite                       shift and go to state 176

state 130

    (104) write -> OUTPUT OPENPAREN expresion . altwrite
    (105) altwrite -> . COMMA varcall altwrite
    (106) altwrite -> . COMMA expresion altwrite
    (107) altwrite -> . CLOSEPAREN SEMICOLON

    COMMA           shift and go to state 177
    CLOSEPAREN      shift and go to state 178

    altwrite                       shift and go to state 179

state 131

    (102) read -> INPUT OPENPAREN ID . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 180


state 132

    (119) return -> RETURN expresion SEMICOLON .

    CLOSECURLY      reduce using rule 119 (return -> RETURN expresion SEMICOLON .)
    VAR             reduce using rule 119 (return -> RETURN expresion SEMICOLON .)
    ID              reduce using rule 119 (return -> RETURN expresion SEMICOLON .)
    IF              reduce using rule 119 (return -> RETURN expresion SEMICOLON .)
    OUTPUT          reduce using rule 119 (return -> RETURN expresion SEMICOLON .)
    INPUT           reduce using rule 119 (return -> RETURN expresion SEMICOLON .)
    RETURN          reduce using rule 119 (return -> RETURN expresion SEMICOLON .)
    WHILE           reduce using rule 119 (return -> RETURN expresion SEMICOLON .)


state 133

    (81) expresion -> exp altexpresion .

    SEMICOLON       reduce using rule 81 (expresion -> exp altexpresion .)
    COMMA           reduce using rule 81 (expresion -> exp altexpresion .)
    CLOSEPAREN      reduce using rule 81 (expresion -> exp altexpresion .)
    OPENPAREN       reduce using rule 81 (expresion -> exp altexpresion .)
    SUM             reduce using rule 81 (expresion -> exp altexpresion .)
    SUBTRACT        reduce using rule 81 (expresion -> exp altexpresion .)
    TRUE            reduce using rule 81 (expresion -> exp altexpresion .)
    FALSE           reduce using rule 81 (expresion -> exp altexpresion .)
    CTEFLOAT        reduce using rule 81 (expresion -> exp altexpresion .)
    CTESTRING       reduce using rule 81 (expresion -> exp altexpresion .)
    CTEINT          reduce using rule 81 (expresion -> exp altexpresion .)
    ID              reduce using rule 81 (expresion -> exp altexpresion .)
    CLOSECURLY      reduce using rule 81 (expresion -> exp altexpresion .)
    VAR             reduce using rule 81 (expresion -> exp altexpresion .)
    IF              reduce using rule 81 (expresion -> exp altexpresion .)
    OUTPUT          reduce using rule 81 (expresion -> exp altexpresion .)
    INPUT           reduce using rule 81 (expresion -> exp altexpresion .)
    RETURN          reduce using rule 81 (expresion -> exp altexpresion .)
    WHILE           reduce using rule 81 (expresion -> exp altexpresion .)


state 134

    (82) altexpresion -> altexpresion2 . exp
    (92) exp -> . termino
    (93) exp -> . termino altexp
    (97) termino -> . factor
    (98) termino -> . factor alttermino
    (108) factor -> . OPENPAREN expresion CLOSEPAREN
    (109) factor -> . SUM varcall
    (110) factor -> . SUBTRACT varcall
    (111) factor -> . varcall
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 98
    SUM             shift and go to state 99
    SUBTRACT        shift and go to state 101
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111

    exp                            shift and go to state 181
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    varcall                        shift and go to state 100
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110

state 135

    (83) altexpresion -> empty .

    SEMICOLON       reduce using rule 83 (altexpresion -> empty .)
    COMMA           reduce using rule 83 (altexpresion -> empty .)
    CLOSEPAREN      reduce using rule 83 (altexpresion -> empty .)
    OPENPAREN       reduce using rule 83 (altexpresion -> empty .)
    SUM             reduce using rule 83 (altexpresion -> empty .)
    SUBTRACT        reduce using rule 83 (altexpresion -> empty .)
    TRUE            reduce using rule 83 (altexpresion -> empty .)
    FALSE           reduce using rule 83 (altexpresion -> empty .)
    CTEFLOAT        reduce using rule 83 (altexpresion -> empty .)
    CTESTRING       reduce using rule 83 (altexpresion -> empty .)
    CTEINT          reduce using rule 83 (altexpresion -> empty .)
    ID              reduce using rule 83 (altexpresion -> empty .)
    CLOSECURLY      reduce using rule 83 (altexpresion -> empty .)
    VAR             reduce using rule 83 (altexpresion -> empty .)
    IF              reduce using rule 83 (altexpresion -> empty .)
    OUTPUT          reduce using rule 83 (altexpresion -> empty .)
    INPUT           reduce using rule 83 (altexpresion -> empty .)
    RETURN          reduce using rule 83 (altexpresion -> empty .)
    WHILE           reduce using rule 83 (altexpresion -> empty .)


state 136

    (84) altexpresion2 -> SAMEAS .

    OPENPAREN       reduce using rule 84 (altexpresion2 -> SAMEAS .)
    SUM             reduce using rule 84 (altexpresion2 -> SAMEAS .)
    SUBTRACT        reduce using rule 84 (altexpresion2 -> SAMEAS .)
    TRUE            reduce using rule 84 (altexpresion2 -> SAMEAS .)
    FALSE           reduce using rule 84 (altexpresion2 -> SAMEAS .)
    CTEFLOAT        reduce using rule 84 (altexpresion2 -> SAMEAS .)
    CTESTRING       reduce using rule 84 (altexpresion2 -> SAMEAS .)
    CTEINT          reduce using rule 84 (altexpresion2 -> SAMEAS .)
    ID              reduce using rule 84 (altexpresion2 -> SAMEAS .)


state 137

    (85) altexpresion2 -> BIGGERTHAN .

    OPENPAREN       reduce using rule 85 (altexpresion2 -> BIGGERTHAN .)
    SUM             reduce using rule 85 (altexpresion2 -> BIGGERTHAN .)
    SUBTRACT        reduce using rule 85 (altexpresion2 -> BIGGERTHAN .)
    TRUE            reduce using rule 85 (altexpresion2 -> BIGGERTHAN .)
    FALSE           reduce using rule 85 (altexpresion2 -> BIGGERTHAN .)
    CTEFLOAT        reduce using rule 85 (altexpresion2 -> BIGGERTHAN .)
    CTESTRING       reduce using rule 85 (altexpresion2 -> BIGGERTHAN .)
    CTEINT          reduce using rule 85 (altexpresion2 -> BIGGERTHAN .)
    ID              reduce using rule 85 (altexpresion2 -> BIGGERTHAN .)


state 138

    (86) altexpresion2 -> BIGGEREQUALSTHAN .

    OPENPAREN       reduce using rule 86 (altexpresion2 -> BIGGEREQUALSTHAN .)
    SUM             reduce using rule 86 (altexpresion2 -> BIGGEREQUALSTHAN .)
    SUBTRACT        reduce using rule 86 (altexpresion2 -> BIGGEREQUALSTHAN .)
    TRUE            reduce using rule 86 (altexpresion2 -> BIGGEREQUALSTHAN .)
    FALSE           reduce using rule 86 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTEFLOAT        reduce using rule 86 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTESTRING       reduce using rule 86 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTEINT          reduce using rule 86 (altexpresion2 -> BIGGEREQUALSTHAN .)
    ID              reduce using rule 86 (altexpresion2 -> BIGGEREQUALSTHAN .)


state 139

    (87) altexpresion2 -> SMALLTHAN .

    OPENPAREN       reduce using rule 87 (altexpresion2 -> SMALLTHAN .)
    SUM             reduce using rule 87 (altexpresion2 -> SMALLTHAN .)
    SUBTRACT        reduce using rule 87 (altexpresion2 -> SMALLTHAN .)
    TRUE            reduce using rule 87 (altexpresion2 -> SMALLTHAN .)
    FALSE           reduce using rule 87 (altexpresion2 -> SMALLTHAN .)
    CTEFLOAT        reduce using rule 87 (altexpresion2 -> SMALLTHAN .)
    CTESTRING       reduce using rule 87 (altexpresion2 -> SMALLTHAN .)
    CTEINT          reduce using rule 87 (altexpresion2 -> SMALLTHAN .)
    ID              reduce using rule 87 (altexpresion2 -> SMALLTHAN .)


state 140

    (88) altexpresion2 -> SMALLEQUALSTHAN .

    OPENPAREN       reduce using rule 88 (altexpresion2 -> SMALLEQUALSTHAN .)
    SUM             reduce using rule 88 (altexpresion2 -> SMALLEQUALSTHAN .)
    SUBTRACT        reduce using rule 88 (altexpresion2 -> SMALLEQUALSTHAN .)
    TRUE            reduce using rule 88 (altexpresion2 -> SMALLEQUALSTHAN .)
    FALSE           reduce using rule 88 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTEFLOAT        reduce using rule 88 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTESTRING       reduce using rule 88 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTEINT          reduce using rule 88 (altexpresion2 -> SMALLEQUALSTHAN .)
    ID              reduce using rule 88 (altexpresion2 -> SMALLEQUALSTHAN .)


state 141

    (89) altexpresion2 -> DIFFERENTTHAN .

    OPENPAREN       reduce using rule 89 (altexpresion2 -> DIFFERENTTHAN .)
    SUM             reduce using rule 89 (altexpresion2 -> DIFFERENTTHAN .)
    SUBTRACT        reduce using rule 89 (altexpresion2 -> DIFFERENTTHAN .)
    TRUE            reduce using rule 89 (altexpresion2 -> DIFFERENTTHAN .)
    FALSE           reduce using rule 89 (altexpresion2 -> DIFFERENTTHAN .)
    CTEFLOAT        reduce using rule 89 (altexpresion2 -> DIFFERENTTHAN .)
    CTESTRING       reduce using rule 89 (altexpresion2 -> DIFFERENTTHAN .)
    CTEINT          reduce using rule 89 (altexpresion2 -> DIFFERENTTHAN .)
    ID              reduce using rule 89 (altexpresion2 -> DIFFERENTTHAN .)


state 142

    (90) altexpresion2 -> AND .

    OPENPAREN       reduce using rule 90 (altexpresion2 -> AND .)
    SUM             reduce using rule 90 (altexpresion2 -> AND .)
    SUBTRACT        reduce using rule 90 (altexpresion2 -> AND .)
    TRUE            reduce using rule 90 (altexpresion2 -> AND .)
    FALSE           reduce using rule 90 (altexpresion2 -> AND .)
    CTEFLOAT        reduce using rule 90 (altexpresion2 -> AND .)
    CTESTRING       reduce using rule 90 (altexpresion2 -> AND .)
    CTEINT          reduce using rule 90 (altexpresion2 -> AND .)
    ID              reduce using rule 90 (altexpresion2 -> AND .)


state 143

    (91) altexpresion2 -> OR .

    OPENPAREN       reduce using rule 91 (altexpresion2 -> OR .)
    SUM             reduce using rule 91 (altexpresion2 -> OR .)
    SUBTRACT        reduce using rule 91 (altexpresion2 -> OR .)
    TRUE            reduce using rule 91 (altexpresion2 -> OR .)
    FALSE           reduce using rule 91 (altexpresion2 -> OR .)
    CTEFLOAT        reduce using rule 91 (altexpresion2 -> OR .)
    CTESTRING       reduce using rule 91 (altexpresion2 -> OR .)
    CTEINT          reduce using rule 91 (altexpresion2 -> OR .)
    ID              reduce using rule 91 (altexpresion2 -> OR .)


state 144

    (93) exp -> termino altexp .

    SAMEAS          reduce using rule 93 (exp -> termino altexp .)
    BIGGERTHAN      reduce using rule 93 (exp -> termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 93 (exp -> termino altexp .)
    SMALLTHAN       reduce using rule 93 (exp -> termino altexp .)
    SMALLEQUALSTHAN reduce using rule 93 (exp -> termino altexp .)
    DIFFERENTTHAN   reduce using rule 93 (exp -> termino altexp .)
    AND             reduce using rule 93 (exp -> termino altexp .)
    OR              reduce using rule 93 (exp -> termino altexp .)
    SEMICOLON       reduce using rule 93 (exp -> termino altexp .)
    COMMA           reduce using rule 93 (exp -> termino altexp .)
    CLOSEPAREN      reduce using rule 93 (exp -> termino altexp .)
    OPENPAREN       reduce using rule 93 (exp -> termino altexp .)
    SUM             reduce using rule 93 (exp -> termino altexp .)
    SUBTRACT        reduce using rule 93 (exp -> termino altexp .)
    TRUE            reduce using rule 93 (exp -> termino altexp .)
    FALSE           reduce using rule 93 (exp -> termino altexp .)
    CTEFLOAT        reduce using rule 93 (exp -> termino altexp .)
    CTESTRING       reduce using rule 93 (exp -> termino altexp .)
    CTEINT          reduce using rule 93 (exp -> termino altexp .)
    ID              reduce using rule 93 (exp -> termino altexp .)
    CLOSECURLY      reduce using rule 93 (exp -> termino altexp .)
    VAR             reduce using rule 93 (exp -> termino altexp .)
    IF              reduce using rule 93 (exp -> termino altexp .)
    OUTPUT          reduce using rule 93 (exp -> termino altexp .)
    INPUT           reduce using rule 93 (exp -> termino altexp .)
    RETURN          reduce using rule 93 (exp -> termino altexp .)
    WHILE           reduce using rule 93 (exp -> termino altexp .)


state 145

    (94) altexp -> SUM . termino altexp
    (97) termino -> . factor
    (98) termino -> . factor alttermino
    (108) factor -> . OPENPAREN expresion CLOSEPAREN
    (109) factor -> . SUM varcall
    (110) factor -> . SUBTRACT varcall
    (111) factor -> . varcall
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 98
    SUM             shift and go to state 99
    SUBTRACT        shift and go to state 101
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111

    termino                        shift and go to state 182
    factor                         shift and go to state 97
    varcall                        shift and go to state 100
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110

state 146

    (95) altexp -> SUBTRACT . termino altexp
    (97) termino -> . factor
    (98) termino -> . factor alttermino
    (108) factor -> . OPENPAREN expresion CLOSEPAREN
    (109) factor -> . SUM varcall
    (110) factor -> . SUBTRACT varcall
    (111) factor -> . varcall
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 98
    SUM             shift and go to state 99
    SUBTRACT        shift and go to state 101
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111

    termino                        shift and go to state 183
    factor                         shift and go to state 97
    varcall                        shift and go to state 100
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110

state 147

    (96) altexp -> empty .

    SAMEAS          reduce using rule 96 (altexp -> empty .)
    BIGGERTHAN      reduce using rule 96 (altexp -> empty .)
    BIGGEREQUALSTHAN reduce using rule 96 (altexp -> empty .)
    SMALLTHAN       reduce using rule 96 (altexp -> empty .)
    SMALLEQUALSTHAN reduce using rule 96 (altexp -> empty .)
    DIFFERENTTHAN   reduce using rule 96 (altexp -> empty .)
    AND             reduce using rule 96 (altexp -> empty .)
    OR              reduce using rule 96 (altexp -> empty .)
    SEMICOLON       reduce using rule 96 (altexp -> empty .)
    COMMA           reduce using rule 96 (altexp -> empty .)
    CLOSEPAREN      reduce using rule 96 (altexp -> empty .)
    OPENPAREN       reduce using rule 96 (altexp -> empty .)
    SUM             reduce using rule 96 (altexp -> empty .)
    SUBTRACT        reduce using rule 96 (altexp -> empty .)
    TRUE            reduce using rule 96 (altexp -> empty .)
    FALSE           reduce using rule 96 (altexp -> empty .)
    CTEFLOAT        reduce using rule 96 (altexp -> empty .)
    CTESTRING       reduce using rule 96 (altexp -> empty .)
    CTEINT          reduce using rule 96 (altexp -> empty .)
    ID              reduce using rule 96 (altexp -> empty .)
    CLOSECURLY      reduce using rule 96 (altexp -> empty .)
    VAR             reduce using rule 96 (altexp -> empty .)
    IF              reduce using rule 96 (altexp -> empty .)
    OUTPUT          reduce using rule 96 (altexp -> empty .)
    INPUT           reduce using rule 96 (altexp -> empty .)
    RETURN          reduce using rule 96 (altexp -> empty .)
    WHILE           reduce using rule 96 (altexp -> empty .)


state 148

    (98) termino -> factor alttermino .

    SUM             reduce using rule 98 (termino -> factor alttermino .)
    SUBTRACT        reduce using rule 98 (termino -> factor alttermino .)
    SAMEAS          reduce using rule 98 (termino -> factor alttermino .)
    BIGGERTHAN      reduce using rule 98 (termino -> factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 98 (termino -> factor alttermino .)
    SMALLTHAN       reduce using rule 98 (termino -> factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 98 (termino -> factor alttermino .)
    DIFFERENTTHAN   reduce using rule 98 (termino -> factor alttermino .)
    AND             reduce using rule 98 (termino -> factor alttermino .)
    OR              reduce using rule 98 (termino -> factor alttermino .)
    SEMICOLON       reduce using rule 98 (termino -> factor alttermino .)
    COMMA           reduce using rule 98 (termino -> factor alttermino .)
    CLOSEPAREN      reduce using rule 98 (termino -> factor alttermino .)
    OPENPAREN       reduce using rule 98 (termino -> factor alttermino .)
    TRUE            reduce using rule 98 (termino -> factor alttermino .)
    FALSE           reduce using rule 98 (termino -> factor alttermino .)
    CTEFLOAT        reduce using rule 98 (termino -> factor alttermino .)
    CTESTRING       reduce using rule 98 (termino -> factor alttermino .)
    CTEINT          reduce using rule 98 (termino -> factor alttermino .)
    ID              reduce using rule 98 (termino -> factor alttermino .)
    CLOSECURLY      reduce using rule 98 (termino -> factor alttermino .)
    VAR             reduce using rule 98 (termino -> factor alttermino .)
    IF              reduce using rule 98 (termino -> factor alttermino .)
    OUTPUT          reduce using rule 98 (termino -> factor alttermino .)
    INPUT           reduce using rule 98 (termino -> factor alttermino .)
    RETURN          reduce using rule 98 (termino -> factor alttermino .)
    WHILE           reduce using rule 98 (termino -> factor alttermino .)


state 149

    (99) alttermino -> TIMES . factor alttermino
    (108) factor -> . OPENPAREN expresion CLOSEPAREN
    (109) factor -> . SUM varcall
    (110) factor -> . SUBTRACT varcall
    (111) factor -> . varcall
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 98
    SUM             shift and go to state 99
    SUBTRACT        shift and go to state 101
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111

    factor                         shift and go to state 184
    varcall                        shift and go to state 100
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110

state 150

    (100) alttermino -> DIV . factor alttermino
    (108) factor -> . OPENPAREN expresion CLOSEPAREN
    (109) factor -> . SUM varcall
    (110) factor -> . SUBTRACT varcall
    (111) factor -> . varcall
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 98
    SUM             shift and go to state 99
    SUBTRACT        shift and go to state 101
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111

    factor                         shift and go to state 185
    varcall                        shift and go to state 100
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110

state 151

    (101) alttermino -> empty .

    SUM             reduce using rule 101 (alttermino -> empty .)
    SUBTRACT        reduce using rule 101 (alttermino -> empty .)
    SAMEAS          reduce using rule 101 (alttermino -> empty .)
    BIGGERTHAN      reduce using rule 101 (alttermino -> empty .)
    BIGGEREQUALSTHAN reduce using rule 101 (alttermino -> empty .)
    SMALLTHAN       reduce using rule 101 (alttermino -> empty .)
    SMALLEQUALSTHAN reduce using rule 101 (alttermino -> empty .)
    DIFFERENTTHAN   reduce using rule 101 (alttermino -> empty .)
    AND             reduce using rule 101 (alttermino -> empty .)
    OR              reduce using rule 101 (alttermino -> empty .)
    SEMICOLON       reduce using rule 101 (alttermino -> empty .)
    COMMA           reduce using rule 101 (alttermino -> empty .)
    CLOSEPAREN      reduce using rule 101 (alttermino -> empty .)
    OPENPAREN       reduce using rule 101 (alttermino -> empty .)
    TRUE            reduce using rule 101 (alttermino -> empty .)
    FALSE           reduce using rule 101 (alttermino -> empty .)
    CTEFLOAT        reduce using rule 101 (alttermino -> empty .)
    CTESTRING       reduce using rule 101 (alttermino -> empty .)
    CTEINT          reduce using rule 101 (alttermino -> empty .)
    ID              reduce using rule 101 (alttermino -> empty .)
    CLOSECURLY      reduce using rule 101 (alttermino -> empty .)
    VAR             reduce using rule 101 (alttermino -> empty .)
    IF              reduce using rule 101 (alttermino -> empty .)
    OUTPUT          reduce using rule 101 (alttermino -> empty .)
    INPUT           reduce using rule 101 (alttermino -> empty .)
    RETURN          reduce using rule 101 (alttermino -> empty .)
    WHILE           reduce using rule 101 (alttermino -> empty .)


state 152

    (108) factor -> OPENPAREN expresion . CLOSEPAREN

    CLOSEPAREN      shift and go to state 186


state 153

    (109) factor -> SUM varcall .

    TIMES           reduce using rule 109 (factor -> SUM varcall .)
    DIV             reduce using rule 109 (factor -> SUM varcall .)
    SUM             reduce using rule 109 (factor -> SUM varcall .)
    SUBTRACT        reduce using rule 109 (factor -> SUM varcall .)
    SAMEAS          reduce using rule 109 (factor -> SUM varcall .)
    BIGGERTHAN      reduce using rule 109 (factor -> SUM varcall .)
    BIGGEREQUALSTHAN reduce using rule 109 (factor -> SUM varcall .)
    SMALLTHAN       reduce using rule 109 (factor -> SUM varcall .)
    SMALLEQUALSTHAN reduce using rule 109 (factor -> SUM varcall .)
    DIFFERENTTHAN   reduce using rule 109 (factor -> SUM varcall .)
    AND             reduce using rule 109 (factor -> SUM varcall .)
    OR              reduce using rule 109 (factor -> SUM varcall .)
    SEMICOLON       reduce using rule 109 (factor -> SUM varcall .)
    COMMA           reduce using rule 109 (factor -> SUM varcall .)
    CLOSEPAREN      reduce using rule 109 (factor -> SUM varcall .)
    OPENPAREN       reduce using rule 109 (factor -> SUM varcall .)
    TRUE            reduce using rule 109 (factor -> SUM varcall .)
    FALSE           reduce using rule 109 (factor -> SUM varcall .)
    CTEFLOAT        reduce using rule 109 (factor -> SUM varcall .)
    CTESTRING       reduce using rule 109 (factor -> SUM varcall .)
    CTEINT          reduce using rule 109 (factor -> SUM varcall .)
    ID              reduce using rule 109 (factor -> SUM varcall .)
    CLOSECURLY      reduce using rule 109 (factor -> SUM varcall .)
    VAR             reduce using rule 109 (factor -> SUM varcall .)
    IF              reduce using rule 109 (factor -> SUM varcall .)
    OUTPUT          reduce using rule 109 (factor -> SUM varcall .)
    INPUT           reduce using rule 109 (factor -> SUM varcall .)
    RETURN          reduce using rule 109 (factor -> SUM varcall .)
    WHILE           reduce using rule 109 (factor -> SUM varcall .)


state 154

    (110) factor -> SUBTRACT varcall .

    TIMES           reduce using rule 110 (factor -> SUBTRACT varcall .)
    DIV             reduce using rule 110 (factor -> SUBTRACT varcall .)
    SUM             reduce using rule 110 (factor -> SUBTRACT varcall .)
    SUBTRACT        reduce using rule 110 (factor -> SUBTRACT varcall .)
    SAMEAS          reduce using rule 110 (factor -> SUBTRACT varcall .)
    BIGGERTHAN      reduce using rule 110 (factor -> SUBTRACT varcall .)
    BIGGEREQUALSTHAN reduce using rule 110 (factor -> SUBTRACT varcall .)
    SMALLTHAN       reduce using rule 110 (factor -> SUBTRACT varcall .)
    SMALLEQUALSTHAN reduce using rule 110 (factor -> SUBTRACT varcall .)
    DIFFERENTTHAN   reduce using rule 110 (factor -> SUBTRACT varcall .)
    AND             reduce using rule 110 (factor -> SUBTRACT varcall .)
    OR              reduce using rule 110 (factor -> SUBTRACT varcall .)
    SEMICOLON       reduce using rule 110 (factor -> SUBTRACT varcall .)
    COMMA           reduce using rule 110 (factor -> SUBTRACT varcall .)
    CLOSEPAREN      reduce using rule 110 (factor -> SUBTRACT varcall .)
    OPENPAREN       reduce using rule 110 (factor -> SUBTRACT varcall .)
    TRUE            reduce using rule 110 (factor -> SUBTRACT varcall .)
    FALSE           reduce using rule 110 (factor -> SUBTRACT varcall .)
    CTEFLOAT        reduce using rule 110 (factor -> SUBTRACT varcall .)
    CTESTRING       reduce using rule 110 (factor -> SUBTRACT varcall .)
    CTEINT          reduce using rule 110 (factor -> SUBTRACT varcall .)
    ID              reduce using rule 110 (factor -> SUBTRACT varcall .)
    CLOSECURLY      reduce using rule 110 (factor -> SUBTRACT varcall .)
    VAR             reduce using rule 110 (factor -> SUBTRACT varcall .)
    IF              reduce using rule 110 (factor -> SUBTRACT varcall .)
    OUTPUT          reduce using rule 110 (factor -> SUBTRACT varcall .)
    INPUT           reduce using rule 110 (factor -> SUBTRACT varcall .)
    RETURN          reduce using rule 110 (factor -> SUBTRACT varcall .)
    WHILE           reduce using rule 110 (factor -> SUBTRACT varcall .)


state 155

    (76) varcomp1 -> ID varcomp2 .

    TIMES           reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    DIV             reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    SUM             reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    SUBTRACT        reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    SAMEAS          reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    BIGGERTHAN      reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    BIGGEREQUALSTHAN reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    SMALLTHAN       reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    SMALLEQUALSTHAN reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    DIFFERENTTHAN   reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    AND             reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    OR              reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    SEMICOLON       reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    COMMA           reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    CLOSEPAREN      reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    OPENPAREN       reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    TRUE            reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    FALSE           reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    CTEFLOAT        reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    CTESTRING       reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    CTEINT          reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    ID              reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    CLOSECURLY      reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    VAR             reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    IF              reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    OUTPUT          reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    INPUT           reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    RETURN          reduce using rule 76 (varcomp1 -> ID varcomp2 .)
    WHILE           reduce using rule 76 (varcomp1 -> ID varcomp2 .)


state 156

    (43) callfunc -> ID OPENPAREN . altcall CLOSEPAREN
    (44) altcall -> . expresion alt2call
    (45) altcall -> . empty
    (62) altcall -> . COMMA expresion altcall
    (63) altcall -> . CLOSEPAREN SEMICOLON
    (81) expresion -> . exp altexpresion
    (120) empty -> .
    (92) exp -> . termino
    (93) exp -> . termino altexp
    (97) termino -> . factor
    (98) termino -> . factor alttermino
    (108) factor -> . OPENPAREN expresion CLOSEPAREN
    (109) factor -> . SUM varcall
    (110) factor -> . SUBTRACT varcall
    (111) factor -> . varcall
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
    COMMA           shift and go to state 172
    CLOSEPAREN      shift and go to state 173
    OPENPAREN       shift and go to state 98
    SUM             shift and go to state 99
    SUBTRACT        shift and go to state 101
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111

  ! CLOSEPAREN      [ reduce using rule 120 (empty -> .) ]

    altcall                        shift and go to state 187
    expresion                      shift and go to state 169
    empty                          shift and go to state 171
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    varcall                        shift and go to state 100
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110

state 157

    (77) varcomp2 -> DOT . varcomp3
    (79) varcomp3 -> . varcomp1
    (80) varcomp3 -> . callfunc
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    ID              shift and go to state 111

    varcomp3                       shift and go to state 188
    varcomp1                       shift and go to state 189
    callfunc                       shift and go to state 190

state 158

    (78) varcomp2 -> empty .

    TIMES           reduce using rule 78 (varcomp2 -> empty .)
    DIV             reduce using rule 78 (varcomp2 -> empty .)
    SUM             reduce using rule 78 (varcomp2 -> empty .)
    SUBTRACT        reduce using rule 78 (varcomp2 -> empty .)
    SAMEAS          reduce using rule 78 (varcomp2 -> empty .)
    BIGGERTHAN      reduce using rule 78 (varcomp2 -> empty .)
    BIGGEREQUALSTHAN reduce using rule 78 (varcomp2 -> empty .)
    SMALLTHAN       reduce using rule 78 (varcomp2 -> empty .)
    SMALLEQUALSTHAN reduce using rule 78 (varcomp2 -> empty .)
    DIFFERENTTHAN   reduce using rule 78 (varcomp2 -> empty .)
    AND             reduce using rule 78 (varcomp2 -> empty .)
    OR              reduce using rule 78 (varcomp2 -> empty .)
    SEMICOLON       reduce using rule 78 (varcomp2 -> empty .)
    COMMA           reduce using rule 78 (varcomp2 -> empty .)
    CLOSEPAREN      reduce using rule 78 (varcomp2 -> empty .)
    OPENPAREN       reduce using rule 78 (varcomp2 -> empty .)
    TRUE            reduce using rule 78 (varcomp2 -> empty .)
    FALSE           reduce using rule 78 (varcomp2 -> empty .)
    CTEFLOAT        reduce using rule 78 (varcomp2 -> empty .)
    CTESTRING       reduce using rule 78 (varcomp2 -> empty .)
    CTEINT          reduce using rule 78 (varcomp2 -> empty .)
    ID              reduce using rule 78 (varcomp2 -> empty .)
    CLOSECURLY      reduce using rule 78 (varcomp2 -> empty .)
    VAR             reduce using rule 78 (varcomp2 -> empty .)
    IF              reduce using rule 78 (varcomp2 -> empty .)
    OUTPUT          reduce using rule 78 (varcomp2 -> empty .)
    INPUT           reduce using rule 78 (varcomp2 -> empty .)
    RETURN          reduce using rule 78 (varcomp2 -> empty .)
    WHILE           reduce using rule 78 (varcomp2 -> empty .)


state 159

    (64) while -> WHILE OPENPAREN expresion . CLOSEPAREN OPENCURLY altwhile

    CLOSEPAREN      shift and go to state 191


state 160

    (16) constructor -> CONSTRUCTOR OPENPAREN altconst CLOSEPAREN . OPENCURLY alt2const

    OPENCURLY       shift and go to state 192


state 161

    (17) altconst -> params altconst .

    CLOSEPAREN      reduce using rule 17 (altconst -> params altconst .)


state 162

    (28) listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET . listidsaltp
    (30) listidsaltp -> . COMMA listids
    (31) listidsaltp -> . empty
    (120) empty -> .

    COMMA           shift and go to state 194
    TWODOTS         reduce using rule 120 (empty -> .)

    listidsaltp                    shift and go to state 193
    empty                          shift and go to state 195

state 163

    (41) altparams -> COMMA ID . TWODOTS type altparams

    TWODOTS         shift and go to state 196


state 164

    (32) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func .

    CLASS           reduce using rule 32 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func .)
    VAR             reduce using rule 32 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func .)
    FUNC            reduce using rule 32 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func .)
    MAIN            reduce using rule 32 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func .)
    CONSTRUCTOR     reduce using rule 32 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func .)


state 165

    (37) alt3func -> var . alt3func
    (37) alt3func -> . var alt3func
    (38) alt3func -> . estatuto alt3func
    (39) alt3func -> . CLOSECURLY
    (22) var -> . VAR listids TWODOTS type SEMICOLON
    (53) estatuto -> . assign
    (54) estatuto -> . condition
    (55) estatuto -> . write
    (56) estatuto -> . read
    (57) estatuto -> . return
    (58) estatuto -> . voidcall
    (59) estatuto -> . while
    (116) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (112) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (113) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (103) write -> . OUTPUT OPENPAREN varcall altwrite
    (104) write -> . OUTPUT OPENPAREN expresion altwrite
    (102) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (119) return -> . RETURN expresion SEMICOLON
    (60) voidcall -> . ID OPENPAREN CLOSEPAREN
    (61) voidcall -> . ID OPENPAREN expresion altcall
    (64) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 167
    VAR             shift and go to state 11
    ID              shift and go to state 67
    IF              shift and go to state 68
    OUTPUT          shift and go to state 69
    INPUT           shift and go to state 70
    RETURN          shift and go to state 71
    WHILE           shift and go to state 72

    var                            shift and go to state 165
    alt3func                       shift and go to state 197
    estatuto                       shift and go to state 166
    assign                         shift and go to state 60
    condition                      shift and go to state 61
    write                          shift and go to state 62
    read                           shift and go to state 63
    return                         shift and go to state 64
    voidcall                       shift and go to state 65
    while                          shift and go to state 66

state 166

    (38) alt3func -> estatuto . alt3func
    (37) alt3func -> . var alt3func
    (38) alt3func -> . estatuto alt3func
    (39) alt3func -> . CLOSECURLY
    (22) var -> . VAR listids TWODOTS type SEMICOLON
    (53) estatuto -> . assign
    (54) estatuto -> . condition
    (55) estatuto -> . write
    (56) estatuto -> . read
    (57) estatuto -> . return
    (58) estatuto -> . voidcall
    (59) estatuto -> . while
    (116) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (112) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (113) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (103) write -> . OUTPUT OPENPAREN varcall altwrite
    (104) write -> . OUTPUT OPENPAREN expresion altwrite
    (102) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (119) return -> . RETURN expresion SEMICOLON
    (60) voidcall -> . ID OPENPAREN CLOSEPAREN
    (61) voidcall -> . ID OPENPAREN expresion altcall
    (64) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 167
    VAR             shift and go to state 11
    ID              shift and go to state 67
    IF              shift and go to state 68
    OUTPUT          shift and go to state 69
    INPUT           shift and go to state 70
    RETURN          shift and go to state 71
    WHILE           shift and go to state 72

    estatuto                       shift and go to state 166
    alt3func                       shift and go to state 198
    var                            shift and go to state 165
    assign                         shift and go to state 60
    condition                      shift and go to state 61
    write                          shift and go to state 62
    read                           shift and go to state 63
    return                         shift and go to state 64
    voidcall                       shift and go to state 65
    while                          shift and go to state 66

state 167

    (39) alt3func -> CLOSECURLY .

    CLASS           reduce using rule 39 (alt3func -> CLOSECURLY .)
    VAR             reduce using rule 39 (alt3func -> CLOSECURLY .)
    FUNC            reduce using rule 39 (alt3func -> CLOSECURLY .)
    MAIN            reduce using rule 39 (alt3func -> CLOSECURLY .)
    CONSTRUCTOR     reduce using rule 39 (alt3func -> CLOSECURLY .)


state 168

    (116) assign -> ID assign1 EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 199


state 169

    (44) altcall -> expresion . alt2call
    (46) alt2call -> . COMMA altcall
    (47) alt2call -> . empty
    (120) empty -> .

    COMMA           shift and go to state 201
    CLOSECURLY      reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    OUTPUT          reduce using rule 120 (empty -> .)
    INPUT           reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    CLOSEPAREN      reduce using rule 120 (empty -> .)

    alt2call                       shift and go to state 200
    empty                          shift and go to state 202

state 170

    (61) voidcall -> ID OPENPAREN expresion altcall .

    CLOSECURLY      reduce using rule 61 (voidcall -> ID OPENPAREN expresion altcall .)
    VAR             reduce using rule 61 (voidcall -> ID OPENPAREN expresion altcall .)
    ID              reduce using rule 61 (voidcall -> ID OPENPAREN expresion altcall .)
    IF              reduce using rule 61 (voidcall -> ID OPENPAREN expresion altcall .)
    OUTPUT          reduce using rule 61 (voidcall -> ID OPENPAREN expresion altcall .)
    INPUT           reduce using rule 61 (voidcall -> ID OPENPAREN expresion altcall .)
    RETURN          reduce using rule 61 (voidcall -> ID OPENPAREN expresion altcall .)
    WHILE           reduce using rule 61 (voidcall -> ID OPENPAREN expresion altcall .)


state 171

    (45) altcall -> empty .

    CLOSECURLY      reduce using rule 45 (altcall -> empty .)
    VAR             reduce using rule 45 (altcall -> empty .)
    ID              reduce using rule 45 (altcall -> empty .)
    IF              reduce using rule 45 (altcall -> empty .)
    OUTPUT          reduce using rule 45 (altcall -> empty .)
    INPUT           reduce using rule 45 (altcall -> empty .)
    RETURN          reduce using rule 45 (altcall -> empty .)
    WHILE           reduce using rule 45 (altcall -> empty .)
    CLOSEPAREN      reduce using rule 45 (altcall -> empty .)


state 172

    (62) altcall -> COMMA . expresion altcall
    (81) expresion -> . exp altexpresion
    (92) exp -> . termino
    (93) exp -> . termino altexp
    (97) termino -> . factor
    (98) termino -> . factor alttermino
    (108) factor -> . OPENPAREN expresion CLOSEPAREN
    (109) factor -> . SUM varcall
    (110) factor -> . SUBTRACT varcall
    (111) factor -> . varcall
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 98
    SUM             shift and go to state 99
    SUBTRACT        shift and go to state 101
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111

    expresion                      shift and go to state 203
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    varcall                        shift and go to state 100
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110

state 173

    (63) altcall -> CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 204


state 174

    (117) assign1 -> DOT ID assign1 .

    EQUALS          reduce using rule 117 (assign1 -> DOT ID assign1 .)


state 175

    (112) condition -> IF OPENPAREN expresion CLOSEPAREN . OPENCURLY altcondition
    (113) condition -> IF OPENPAREN expresion CLOSEPAREN . OPENCURLY altcondition ELSE OPENCURLY altcondition

    OPENCURLY       shift and go to state 205


state 176

    (103) write -> OUTPUT OPENPAREN varcall altwrite .

    CLOSECURLY      reduce using rule 103 (write -> OUTPUT OPENPAREN varcall altwrite .)
    VAR             reduce using rule 103 (write -> OUTPUT OPENPAREN varcall altwrite .)
    ID              reduce using rule 103 (write -> OUTPUT OPENPAREN varcall altwrite .)
    IF              reduce using rule 103 (write -> OUTPUT OPENPAREN varcall altwrite .)
    OUTPUT          reduce using rule 103 (write -> OUTPUT OPENPAREN varcall altwrite .)
    INPUT           reduce using rule 103 (write -> OUTPUT OPENPAREN varcall altwrite .)
    RETURN          reduce using rule 103 (write -> OUTPUT OPENPAREN varcall altwrite .)
    WHILE           reduce using rule 103 (write -> OUTPUT OPENPAREN varcall altwrite .)


state 177

    (105) altwrite -> COMMA . varcall altwrite
    (106) altwrite -> COMMA . expresion altwrite
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (81) expresion -> . exp altexpresion
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (92) exp -> . termino
    (93) exp -> . termino altexp
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN
    (97) termino -> . factor
    (98) termino -> . factor alttermino
    (108) factor -> . OPENPAREN expresion CLOSEPAREN
    (109) factor -> . SUM varcall
    (110) factor -> . SUBTRACT varcall
    (111) factor -> . varcall

    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111
    OPENPAREN       shift and go to state 98
    SUM             shift and go to state 99
    SUBTRACT        shift and go to state 101

    varcall                        shift and go to state 206
    expresion                      shift and go to state 207
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    exp                            shift and go to state 95
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110
    termino                        shift and go to state 96
    factor                         shift and go to state 97

state 178

    (107) altwrite -> CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 208


state 179

    (104) write -> OUTPUT OPENPAREN expresion altwrite .

    CLOSECURLY      reduce using rule 104 (write -> OUTPUT OPENPAREN expresion altwrite .)
    VAR             reduce using rule 104 (write -> OUTPUT OPENPAREN expresion altwrite .)
    ID              reduce using rule 104 (write -> OUTPUT OPENPAREN expresion altwrite .)
    IF              reduce using rule 104 (write -> OUTPUT OPENPAREN expresion altwrite .)
    OUTPUT          reduce using rule 104 (write -> OUTPUT OPENPAREN expresion altwrite .)
    INPUT           reduce using rule 104 (write -> OUTPUT OPENPAREN expresion altwrite .)
    RETURN          reduce using rule 104 (write -> OUTPUT OPENPAREN expresion altwrite .)
    WHILE           reduce using rule 104 (write -> OUTPUT OPENPAREN expresion altwrite .)


state 180

    (102) read -> INPUT OPENPAREN ID CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 209


state 181

    (82) altexpresion -> altexpresion2 exp .

    SEMICOLON       reduce using rule 82 (altexpresion -> altexpresion2 exp .)
    COMMA           reduce using rule 82 (altexpresion -> altexpresion2 exp .)
    CLOSEPAREN      reduce using rule 82 (altexpresion -> altexpresion2 exp .)
    OPENPAREN       reduce using rule 82 (altexpresion -> altexpresion2 exp .)
    SUM             reduce using rule 82 (altexpresion -> altexpresion2 exp .)
    SUBTRACT        reduce using rule 82 (altexpresion -> altexpresion2 exp .)
    TRUE            reduce using rule 82 (altexpresion -> altexpresion2 exp .)
    FALSE           reduce using rule 82 (altexpresion -> altexpresion2 exp .)
    CTEFLOAT        reduce using rule 82 (altexpresion -> altexpresion2 exp .)
    CTESTRING       reduce using rule 82 (altexpresion -> altexpresion2 exp .)
    CTEINT          reduce using rule 82 (altexpresion -> altexpresion2 exp .)
    ID              reduce using rule 82 (altexpresion -> altexpresion2 exp .)
    CLOSECURLY      reduce using rule 82 (altexpresion -> altexpresion2 exp .)
    VAR             reduce using rule 82 (altexpresion -> altexpresion2 exp .)
    IF              reduce using rule 82 (altexpresion -> altexpresion2 exp .)
    OUTPUT          reduce using rule 82 (altexpresion -> altexpresion2 exp .)
    INPUT           reduce using rule 82 (altexpresion -> altexpresion2 exp .)
    RETURN          reduce using rule 82 (altexpresion -> altexpresion2 exp .)
    WHILE           reduce using rule 82 (altexpresion -> altexpresion2 exp .)


state 182

    (94) altexp -> SUM termino . altexp
    (94) altexp -> . SUM termino altexp
    (95) altexp -> . SUBTRACT termino altexp
    (96) altexp -> . empty
    (120) empty -> .

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
    SUM             shift and go to state 145
    SUBTRACT        shift and go to state 146
    SAMEAS          reduce using rule 120 (empty -> .)
    BIGGERTHAN      reduce using rule 120 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 120 (empty -> .)
    SMALLTHAN       reduce using rule 120 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 120 (empty -> .)
    DIFFERENTTHAN   reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CLOSEPAREN      reduce using rule 120 (empty -> .)
    OPENPAREN       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CTEFLOAT        reduce using rule 120 (empty -> .)
    CTESTRING       reduce using rule 120 (empty -> .)
    CTEINT          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    CLOSECURLY      reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    OUTPUT          reduce using rule 120 (empty -> .)
    INPUT           reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)

  ! SUM             [ reduce using rule 120 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 120 (empty -> .) ]

    altexp                         shift and go to state 210
    empty                          shift and go to state 147

state 183

    (95) altexp -> SUBTRACT termino . altexp
    (94) altexp -> . SUM termino altexp
    (95) altexp -> . SUBTRACT termino altexp
    (96) altexp -> . empty
    (120) empty -> .

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
    SUM             shift and go to state 145
    SUBTRACT        shift and go to state 146
    SAMEAS          reduce using rule 120 (empty -> .)
    BIGGERTHAN      reduce using rule 120 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 120 (empty -> .)
    SMALLTHAN       reduce using rule 120 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 120 (empty -> .)
    DIFFERENTTHAN   reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CLOSEPAREN      reduce using rule 120 (empty -> .)
    OPENPAREN       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CTEFLOAT        reduce using rule 120 (empty -> .)
    CTESTRING       reduce using rule 120 (empty -> .)
    CTEINT          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    CLOSECURLY      reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    OUTPUT          reduce using rule 120 (empty -> .)
    INPUT           reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)

  ! SUM             [ reduce using rule 120 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 120 (empty -> .) ]

    altexp                         shift and go to state 211
    empty                          shift and go to state 147

state 184

    (99) alttermino -> TIMES factor . alttermino
    (99) alttermino -> . TIMES factor alttermino
    (100) alttermino -> . DIV factor alttermino
    (101) alttermino -> . empty
    (120) empty -> .

    TIMES           shift and go to state 149
    DIV             shift and go to state 150
    SUM             reduce using rule 120 (empty -> .)
    SUBTRACT        reduce using rule 120 (empty -> .)
    SAMEAS          reduce using rule 120 (empty -> .)
    BIGGERTHAN      reduce using rule 120 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 120 (empty -> .)
    SMALLTHAN       reduce using rule 120 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 120 (empty -> .)
    DIFFERENTTHAN   reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CLOSEPAREN      reduce using rule 120 (empty -> .)
    OPENPAREN       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CTEFLOAT        reduce using rule 120 (empty -> .)
    CTESTRING       reduce using rule 120 (empty -> .)
    CTEINT          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    CLOSECURLY      reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    OUTPUT          reduce using rule 120 (empty -> .)
    INPUT           reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)

    alttermino                     shift and go to state 212
    empty                          shift and go to state 151

state 185

    (100) alttermino -> DIV factor . alttermino
    (99) alttermino -> . TIMES factor alttermino
    (100) alttermino -> . DIV factor alttermino
    (101) alttermino -> . empty
    (120) empty -> .

    TIMES           shift and go to state 149
    DIV             shift and go to state 150
    SUM             reduce using rule 120 (empty -> .)
    SUBTRACT        reduce using rule 120 (empty -> .)
    SAMEAS          reduce using rule 120 (empty -> .)
    BIGGERTHAN      reduce using rule 120 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 120 (empty -> .)
    SMALLTHAN       reduce using rule 120 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 120 (empty -> .)
    DIFFERENTTHAN   reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CLOSEPAREN      reduce using rule 120 (empty -> .)
    OPENPAREN       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CTEFLOAT        reduce using rule 120 (empty -> .)
    CTESTRING       reduce using rule 120 (empty -> .)
    CTEINT          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    CLOSECURLY      reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    OUTPUT          reduce using rule 120 (empty -> .)
    INPUT           reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)

    alttermino                     shift and go to state 213
    empty                          shift and go to state 151

state 186

    (108) factor -> OPENPAREN expresion CLOSEPAREN .

    TIMES           reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    DIV             reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SUM             reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SUBTRACT        reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SAMEAS          reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    BIGGERTHAN      reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    BIGGEREQUALSTHAN reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SMALLTHAN       reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SMALLEQUALSTHAN reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    DIFFERENTTHAN   reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    AND             reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    OR              reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SEMICOLON       reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    COMMA           reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    OPENPAREN       reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    TRUE            reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    FALSE           reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CTEFLOAT        reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CTESTRING       reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CTEINT          reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    ID              reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CLOSECURLY      reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    VAR             reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    IF              reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    OUTPUT          reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    INPUT           reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    RETURN          reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)
    WHILE           reduce using rule 108 (factor -> OPENPAREN expresion CLOSEPAREN .)


state 187

    (43) callfunc -> ID OPENPAREN altcall . CLOSEPAREN

    CLOSEPAREN      shift and go to state 214


state 188

    (77) varcomp2 -> DOT varcomp3 .

    TIMES           reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    DIV             reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    SUM             reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    SUBTRACT        reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    SAMEAS          reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    BIGGERTHAN      reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    BIGGEREQUALSTHAN reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    SMALLTHAN       reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    SMALLEQUALSTHAN reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    DIFFERENTTHAN   reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    AND             reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    OR              reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    SEMICOLON       reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    COMMA           reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    CLOSEPAREN      reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    OPENPAREN       reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    TRUE            reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    FALSE           reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    CTEFLOAT        reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    CTESTRING       reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    CTEINT          reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    ID              reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    CLOSECURLY      reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    VAR             reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    IF              reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    OUTPUT          reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    INPUT           reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    RETURN          reduce using rule 77 (varcomp2 -> DOT varcomp3 .)
    WHILE           reduce using rule 77 (varcomp2 -> DOT varcomp3 .)


state 189

    (79) varcomp3 -> varcomp1 .

    TIMES           reduce using rule 79 (varcomp3 -> varcomp1 .)
    DIV             reduce using rule 79 (varcomp3 -> varcomp1 .)
    SUM             reduce using rule 79 (varcomp3 -> varcomp1 .)
    SUBTRACT        reduce using rule 79 (varcomp3 -> varcomp1 .)
    SAMEAS          reduce using rule 79 (varcomp3 -> varcomp1 .)
    BIGGERTHAN      reduce using rule 79 (varcomp3 -> varcomp1 .)
    BIGGEREQUALSTHAN reduce using rule 79 (varcomp3 -> varcomp1 .)
    SMALLTHAN       reduce using rule 79 (varcomp3 -> varcomp1 .)
    SMALLEQUALSTHAN reduce using rule 79 (varcomp3 -> varcomp1 .)
    DIFFERENTTHAN   reduce using rule 79 (varcomp3 -> varcomp1 .)
    AND             reduce using rule 79 (varcomp3 -> varcomp1 .)
    OR              reduce using rule 79 (varcomp3 -> varcomp1 .)
    SEMICOLON       reduce using rule 79 (varcomp3 -> varcomp1 .)
    COMMA           reduce using rule 79 (varcomp3 -> varcomp1 .)
    CLOSEPAREN      reduce using rule 79 (varcomp3 -> varcomp1 .)
    OPENPAREN       reduce using rule 79 (varcomp3 -> varcomp1 .)
    TRUE            reduce using rule 79 (varcomp3 -> varcomp1 .)
    FALSE           reduce using rule 79 (varcomp3 -> varcomp1 .)
    CTEFLOAT        reduce using rule 79 (varcomp3 -> varcomp1 .)
    CTESTRING       reduce using rule 79 (varcomp3 -> varcomp1 .)
    CTEINT          reduce using rule 79 (varcomp3 -> varcomp1 .)
    ID              reduce using rule 79 (varcomp3 -> varcomp1 .)
    CLOSECURLY      reduce using rule 79 (varcomp3 -> varcomp1 .)
    VAR             reduce using rule 79 (varcomp3 -> varcomp1 .)
    IF              reduce using rule 79 (varcomp3 -> varcomp1 .)
    OUTPUT          reduce using rule 79 (varcomp3 -> varcomp1 .)
    INPUT           reduce using rule 79 (varcomp3 -> varcomp1 .)
    RETURN          reduce using rule 79 (varcomp3 -> varcomp1 .)
    WHILE           reduce using rule 79 (varcomp3 -> varcomp1 .)


state 190

    (80) varcomp3 -> callfunc .

    TIMES           reduce using rule 80 (varcomp3 -> callfunc .)
    DIV             reduce using rule 80 (varcomp3 -> callfunc .)
    SUM             reduce using rule 80 (varcomp3 -> callfunc .)
    SUBTRACT        reduce using rule 80 (varcomp3 -> callfunc .)
    SAMEAS          reduce using rule 80 (varcomp3 -> callfunc .)
    BIGGERTHAN      reduce using rule 80 (varcomp3 -> callfunc .)
    BIGGEREQUALSTHAN reduce using rule 80 (varcomp3 -> callfunc .)
    SMALLTHAN       reduce using rule 80 (varcomp3 -> callfunc .)
    SMALLEQUALSTHAN reduce using rule 80 (varcomp3 -> callfunc .)
    DIFFERENTTHAN   reduce using rule 80 (varcomp3 -> callfunc .)
    AND             reduce using rule 80 (varcomp3 -> callfunc .)
    OR              reduce using rule 80 (varcomp3 -> callfunc .)
    SEMICOLON       reduce using rule 80 (varcomp3 -> callfunc .)
    COMMA           reduce using rule 80 (varcomp3 -> callfunc .)
    CLOSEPAREN      reduce using rule 80 (varcomp3 -> callfunc .)
    OPENPAREN       reduce using rule 80 (varcomp3 -> callfunc .)
    TRUE            reduce using rule 80 (varcomp3 -> callfunc .)
    FALSE           reduce using rule 80 (varcomp3 -> callfunc .)
    CTEFLOAT        reduce using rule 80 (varcomp3 -> callfunc .)
    CTESTRING       reduce using rule 80 (varcomp3 -> callfunc .)
    CTEINT          reduce using rule 80 (varcomp3 -> callfunc .)
    ID              reduce using rule 80 (varcomp3 -> callfunc .)
    CLOSECURLY      reduce using rule 80 (varcomp3 -> callfunc .)
    VAR             reduce using rule 80 (varcomp3 -> callfunc .)
    IF              reduce using rule 80 (varcomp3 -> callfunc .)
    OUTPUT          reduce using rule 80 (varcomp3 -> callfunc .)
    INPUT           reduce using rule 80 (varcomp3 -> callfunc .)
    RETURN          reduce using rule 80 (varcomp3 -> callfunc .)
    WHILE           reduce using rule 80 (varcomp3 -> callfunc .)


state 191

    (64) while -> WHILE OPENPAREN expresion CLOSEPAREN . OPENCURLY altwhile

    OPENCURLY       shift and go to state 215


state 192

    (16) constructor -> CONSTRUCTOR OPENPAREN altconst CLOSEPAREN OPENCURLY . alt2const
    (19) alt2const -> . var alt2const
    (20) alt2const -> . estatuto alt2const
    (21) alt2const -> . CLOSECURLY
    (22) var -> . VAR listids TWODOTS type SEMICOLON
    (53) estatuto -> . assign
    (54) estatuto -> . condition
    (55) estatuto -> . write
    (56) estatuto -> . read
    (57) estatuto -> . return
    (58) estatuto -> . voidcall
    (59) estatuto -> . while
    (116) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (112) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (113) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (103) write -> . OUTPUT OPENPAREN varcall altwrite
    (104) write -> . OUTPUT OPENPAREN expresion altwrite
    (102) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (119) return -> . RETURN expresion SEMICOLON
    (60) voidcall -> . ID OPENPAREN CLOSEPAREN
    (61) voidcall -> . ID OPENPAREN expresion altcall
    (64) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 219
    VAR             shift and go to state 11
    ID              shift and go to state 67
    IF              shift and go to state 68
    OUTPUT          shift and go to state 69
    INPUT           shift and go to state 70
    RETURN          shift and go to state 71
    WHILE           shift and go to state 72

    alt2const                      shift and go to state 216
    var                            shift and go to state 217
    estatuto                       shift and go to state 218
    assign                         shift and go to state 60
    condition                      shift and go to state 61
    write                          shift and go to state 62
    read                           shift and go to state 63
    return                         shift and go to state 64
    voidcall                       shift and go to state 65
    while                          shift and go to state 66

state 193

    (28) listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltp .

    TWODOTS         reduce using rule 28 (listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltp .)


state 194

    (30) listidsaltp -> COMMA . listids
    (23) listids -> . ID listidsalty

    ID              shift and go to state 19

    listids                        shift and go to state 220

state 195

    (31) listidsaltp -> empty .

    TWODOTS         reduce using rule 31 (listidsaltp -> empty .)


state 196

    (41) altparams -> COMMA ID TWODOTS . type altparams
    (48) type -> . INT
    (49) type -> . FLOAT
    (50) type -> . STRING
    (51) type -> . ID
    (52) type -> . BOOL

    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    STRING          shift and go to state 37
    ID              shift and go to state 38
    BOOL            shift and go to state 39

    type                           shift and go to state 221

state 197

    (37) alt3func -> var alt3func .

    CLASS           reduce using rule 37 (alt3func -> var alt3func .)
    VAR             reduce using rule 37 (alt3func -> var alt3func .)
    FUNC            reduce using rule 37 (alt3func -> var alt3func .)
    MAIN            reduce using rule 37 (alt3func -> var alt3func .)
    CONSTRUCTOR     reduce using rule 37 (alt3func -> var alt3func .)


state 198

    (38) alt3func -> estatuto alt3func .

    CLASS           reduce using rule 38 (alt3func -> estatuto alt3func .)
    VAR             reduce using rule 38 (alt3func -> estatuto alt3func .)
    FUNC            reduce using rule 38 (alt3func -> estatuto alt3func .)
    MAIN            reduce using rule 38 (alt3func -> estatuto alt3func .)
    CONSTRUCTOR     reduce using rule 38 (alt3func -> estatuto alt3func .)


state 199

    (116) assign -> ID assign1 EQUALS expresion SEMICOLON .

    CLOSECURLY      reduce using rule 116 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    VAR             reduce using rule 116 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    ID              reduce using rule 116 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    IF              reduce using rule 116 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    OUTPUT          reduce using rule 116 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    INPUT           reduce using rule 116 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 116 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 116 (assign -> ID assign1 EQUALS expresion SEMICOLON .)


state 200

    (44) altcall -> expresion alt2call .

    CLOSECURLY      reduce using rule 44 (altcall -> expresion alt2call .)
    VAR             reduce using rule 44 (altcall -> expresion alt2call .)
    ID              reduce using rule 44 (altcall -> expresion alt2call .)
    IF              reduce using rule 44 (altcall -> expresion alt2call .)
    OUTPUT          reduce using rule 44 (altcall -> expresion alt2call .)
    INPUT           reduce using rule 44 (altcall -> expresion alt2call .)
    RETURN          reduce using rule 44 (altcall -> expresion alt2call .)
    WHILE           reduce using rule 44 (altcall -> expresion alt2call .)
    CLOSEPAREN      reduce using rule 44 (altcall -> expresion alt2call .)


state 201

    (46) alt2call -> COMMA . altcall
    (44) altcall -> . expresion alt2call
    (45) altcall -> . empty
    (62) altcall -> . COMMA expresion altcall
    (63) altcall -> . CLOSEPAREN SEMICOLON
    (81) expresion -> . exp altexpresion
    (120) empty -> .
    (92) exp -> . termino
    (93) exp -> . termino altexp
    (97) termino -> . factor
    (98) termino -> . factor alttermino
    (108) factor -> . OPENPAREN expresion CLOSEPAREN
    (109) factor -> . SUM varcall
    (110) factor -> . SUBTRACT varcall
    (111) factor -> . varcall
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 172
    CLOSEPAREN      shift and go to state 173
    CLOSECURLY      reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    OUTPUT          reduce using rule 120 (empty -> .)
    INPUT           reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    OPENPAREN       shift and go to state 98
    SUM             shift and go to state 99
    SUBTRACT        shift and go to state 101
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111

  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 120 (empty -> .) ]

    altcall                        shift and go to state 222
    expresion                      shift and go to state 169
    empty                          shift and go to state 171
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    varcall                        shift and go to state 100
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110

state 202

    (47) alt2call -> empty .

    CLOSECURLY      reduce using rule 47 (alt2call -> empty .)
    VAR             reduce using rule 47 (alt2call -> empty .)
    ID              reduce using rule 47 (alt2call -> empty .)
    IF              reduce using rule 47 (alt2call -> empty .)
    OUTPUT          reduce using rule 47 (alt2call -> empty .)
    INPUT           reduce using rule 47 (alt2call -> empty .)
    RETURN          reduce using rule 47 (alt2call -> empty .)
    WHILE           reduce using rule 47 (alt2call -> empty .)
    CLOSEPAREN      reduce using rule 47 (alt2call -> empty .)


state 203

    (62) altcall -> COMMA expresion . altcall
    (44) altcall -> . expresion alt2call
    (45) altcall -> . empty
    (62) altcall -> . COMMA expresion altcall
    (63) altcall -> . CLOSEPAREN SEMICOLON
    (81) expresion -> . exp altexpresion
    (120) empty -> .
    (92) exp -> . termino
    (93) exp -> . termino altexp
    (97) termino -> . factor
    (98) termino -> . factor alttermino
    (108) factor -> . OPENPAREN expresion CLOSEPAREN
    (109) factor -> . SUM varcall
    (110) factor -> . SUBTRACT varcall
    (111) factor -> . varcall
    (67) varcall -> . varcte
    (68) varcall -> . varcomplicated
    (69) varcte -> . TRUE
    (70) varcte -> . FALSE
    (71) varcte -> . CTEFLOAT
    (72) varcte -> . CTESTRING
    (73) varcte -> . CTEINT
    (74) varcomplicated -> . varcomp1
    (75) varcomplicated -> . callfunc
    (76) varcomp1 -> . ID varcomp2
    (43) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 172
    CLOSEPAREN      shift and go to state 173
    CLOSECURLY      reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    OUTPUT          reduce using rule 120 (empty -> .)
    INPUT           reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    OPENPAREN       shift and go to state 98
    SUM             shift and go to state 99
    SUBTRACT        shift and go to state 101
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    CTEFLOAT        shift and go to state 106
    CTESTRING       shift and go to state 107
    CTEINT          shift and go to state 108
    ID              shift and go to state 111

  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 120 (empty -> .) ]

    expresion                      shift and go to state 169
    altcall                        shift and go to state 223
    empty                          shift and go to state 171
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    varcall                        shift and go to state 100
    varcte                         shift and go to state 102
    varcomplicated                 shift and go to state 103
    varcomp1                       shift and go to state 109
    callfunc                       shift and go to state 110

state 204

    (63) altcall -> CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 63 (altcall -> CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 63 (altcall -> CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 63 (altcall -> CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 63 (altcall -> CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 63 (altcall -> CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 63 (altcall -> CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 63 (altcall -> CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 63 (altcall -> CLOSEPAREN SEMICOLON .)
    CLOSEPAREN      reduce using rule 63 (altcall -> CLOSEPAREN SEMICOLON .)


state 205

    (112) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY . altcondition
    (113) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY . altcondition ELSE OPENCURLY altcondition
    (114) altcondition -> . estatuto altcondition
    (115) altcondition -> . CLOSECURLY
    (53) estatuto -> . assign
    (54) estatuto -> . condition
    (55) estatuto -> . write
    (56) estatuto -> . read
    (57) estatuto -> . return
    (58) estatuto -> . voidcall
    (59) estatuto -> . while
    (116) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (112) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (113) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (103) write -> . OUTPUT OPENPAREN varcall altwrite
    (104) write -> . OUTPUT OPENPAREN expresion altwrite
    (102) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (119) return -> . RETURN expresion SEMICOLON
    (60) voidcall -> . ID OPENPAREN CLOSEPAREN
    (61) voidcall -> . ID OPENPAREN expresion altcall
    (64) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 226
    ID              shift and go to state 67
    IF              shift and go to state 68
    OUTPUT          shift and go to state 69
    INPUT           shift and go to state 70
    RETURN          shift and go to state 71
    WHILE           shift and go to state 72

    altcondition                   shift and go to state 224
    estatuto                       shift and go to state 225
    assign                         shift and go to state 60
    condition                      shift and go to state 61
    write                          shift and go to state 62
    read                           shift and go to state 63
    return                         shift and go to state 64
    voidcall                       shift and go to state 65
    while                          shift and go to state 66

state 206

    (105) altwrite -> COMMA varcall . altwrite
    (111) factor -> varcall .
    (105) altwrite -> . COMMA varcall altwrite
    (106) altwrite -> . COMMA expresion altwrite
    (107) altwrite -> . CLOSEPAREN SEMICOLON

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for CLOSEPAREN resolved as shift
    TIMES           reduce using rule 111 (factor -> varcall .)
    DIV             reduce using rule 111 (factor -> varcall .)
    SUM             reduce using rule 111 (factor -> varcall .)
    SUBTRACT        reduce using rule 111 (factor -> varcall .)
    SAMEAS          reduce using rule 111 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 111 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 111 (factor -> varcall .)
    SMALLTHAN       reduce using rule 111 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 111 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 111 (factor -> varcall .)
    AND             reduce using rule 111 (factor -> varcall .)
    OR              reduce using rule 111 (factor -> varcall .)
    COMMA           shift and go to state 177
    CLOSEPAREN      shift and go to state 178

  ! COMMA           [ reduce using rule 111 (factor -> varcall .) ]
  ! CLOSEPAREN      [ reduce using rule 111 (factor -> varcall .) ]

    altwrite                       shift and go to state 227

state 207

    (106) altwrite -> COMMA expresion . altwrite
    (105) altwrite -> . COMMA varcall altwrite
    (106) altwrite -> . COMMA expresion altwrite
    (107) altwrite -> . CLOSEPAREN SEMICOLON

    COMMA           shift and go to state 177
    CLOSEPAREN      shift and go to state 178

    altwrite                       shift and go to state 228

state 208

    (107) altwrite -> CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 107 (altwrite -> CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 107 (altwrite -> CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 107 (altwrite -> CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 107 (altwrite -> CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 107 (altwrite -> CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 107 (altwrite -> CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 107 (altwrite -> CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 107 (altwrite -> CLOSEPAREN SEMICOLON .)


state 209

    (102) read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 102 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 102 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 102 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 102 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 102 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 102 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 102 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 102 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)


state 210

    (94) altexp -> SUM termino altexp .

    SAMEAS          reduce using rule 94 (altexp -> SUM termino altexp .)
    BIGGERTHAN      reduce using rule 94 (altexp -> SUM termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 94 (altexp -> SUM termino altexp .)
    SMALLTHAN       reduce using rule 94 (altexp -> SUM termino altexp .)
    SMALLEQUALSTHAN reduce using rule 94 (altexp -> SUM termino altexp .)
    DIFFERENTTHAN   reduce using rule 94 (altexp -> SUM termino altexp .)
    AND             reduce using rule 94 (altexp -> SUM termino altexp .)
    OR              reduce using rule 94 (altexp -> SUM termino altexp .)
    SEMICOLON       reduce using rule 94 (altexp -> SUM termino altexp .)
    COMMA           reduce using rule 94 (altexp -> SUM termino altexp .)
    CLOSEPAREN      reduce using rule 94 (altexp -> SUM termino altexp .)
    OPENPAREN       reduce using rule 94 (altexp -> SUM termino altexp .)
    SUM             reduce using rule 94 (altexp -> SUM termino altexp .)
    SUBTRACT        reduce using rule 94 (altexp -> SUM termino altexp .)
    TRUE            reduce using rule 94 (altexp -> SUM termino altexp .)
    FALSE           reduce using rule 94 (altexp -> SUM termino altexp .)
    CTEFLOAT        reduce using rule 94 (altexp -> SUM termino altexp .)
    CTESTRING       reduce using rule 94 (altexp -> SUM termino altexp .)
    CTEINT          reduce using rule 94 (altexp -> SUM termino altexp .)
    ID              reduce using rule 94 (altexp -> SUM termino altexp .)
    CLOSECURLY      reduce using rule 94 (altexp -> SUM termino altexp .)
    VAR             reduce using rule 94 (altexp -> SUM termino altexp .)
    IF              reduce using rule 94 (altexp -> SUM termino altexp .)
    OUTPUT          reduce using rule 94 (altexp -> SUM termino altexp .)
    INPUT           reduce using rule 94 (altexp -> SUM termino altexp .)
    RETURN          reduce using rule 94 (altexp -> SUM termino altexp .)
    WHILE           reduce using rule 94 (altexp -> SUM termino altexp .)


state 211

    (95) altexp -> SUBTRACT termino altexp .

    SAMEAS          reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    BIGGERTHAN      reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    SMALLTHAN       reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    SMALLEQUALSTHAN reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    DIFFERENTTHAN   reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    AND             reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    OR              reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    SEMICOLON       reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    COMMA           reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    CLOSEPAREN      reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    OPENPAREN       reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    SUM             reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    SUBTRACT        reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    TRUE            reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    FALSE           reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    CTEFLOAT        reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    CTESTRING       reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    CTEINT          reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    ID              reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    CLOSECURLY      reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    VAR             reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    IF              reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    OUTPUT          reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    INPUT           reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    RETURN          reduce using rule 95 (altexp -> SUBTRACT termino altexp .)
    WHILE           reduce using rule 95 (altexp -> SUBTRACT termino altexp .)


state 212

    (99) alttermino -> TIMES factor alttermino .

    SUM             reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    SUBTRACT        reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    SAMEAS          reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    BIGGERTHAN      reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    SMALLTHAN       reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    DIFFERENTTHAN   reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    AND             reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    OR              reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    SEMICOLON       reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    COMMA           reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    CLOSEPAREN      reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    OPENPAREN       reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    TRUE            reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    FALSE           reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    CTEFLOAT        reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    CTESTRING       reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    CTEINT          reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    ID              reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    CLOSECURLY      reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    VAR             reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    IF              reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    OUTPUT          reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    INPUT           reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    RETURN          reduce using rule 99 (alttermino -> TIMES factor alttermino .)
    WHILE           reduce using rule 99 (alttermino -> TIMES factor alttermino .)


state 213

    (100) alttermino -> DIV factor alttermino .

    SUM             reduce using rule 100 (alttermino -> DIV factor alttermino .)
    SUBTRACT        reduce using rule 100 (alttermino -> DIV factor alttermino .)
    SAMEAS          reduce using rule 100 (alttermino -> DIV factor alttermino .)
    BIGGERTHAN      reduce using rule 100 (alttermino -> DIV factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 100 (alttermino -> DIV factor alttermino .)
    SMALLTHAN       reduce using rule 100 (alttermino -> DIV factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 100 (alttermino -> DIV factor alttermino .)
    DIFFERENTTHAN   reduce using rule 100 (alttermino -> DIV factor alttermino .)
    AND             reduce using rule 100 (alttermino -> DIV factor alttermino .)
    OR              reduce using rule 100 (alttermino -> DIV factor alttermino .)
    SEMICOLON       reduce using rule 100 (alttermino -> DIV factor alttermino .)
    COMMA           reduce using rule 100 (alttermino -> DIV factor alttermino .)
    CLOSEPAREN      reduce using rule 100 (alttermino -> DIV factor alttermino .)
    OPENPAREN       reduce using rule 100 (alttermino -> DIV factor alttermino .)
    TRUE            reduce using rule 100 (alttermino -> DIV factor alttermino .)
    FALSE           reduce using rule 100 (alttermino -> DIV factor alttermino .)
    CTEFLOAT        reduce using rule 100 (alttermino -> DIV factor alttermino .)
    CTESTRING       reduce using rule 100 (alttermino -> DIV factor alttermino .)
    CTEINT          reduce using rule 100 (alttermino -> DIV factor alttermino .)
    ID              reduce using rule 100 (alttermino -> DIV factor alttermino .)
    CLOSECURLY      reduce using rule 100 (alttermino -> DIV factor alttermino .)
    VAR             reduce using rule 100 (alttermino -> DIV factor alttermino .)
    IF              reduce using rule 100 (alttermino -> DIV factor alttermino .)
    OUTPUT          reduce using rule 100 (alttermino -> DIV factor alttermino .)
    INPUT           reduce using rule 100 (alttermino -> DIV factor alttermino .)
    RETURN          reduce using rule 100 (alttermino -> DIV factor alttermino .)
    WHILE           reduce using rule 100 (alttermino -> DIV factor alttermino .)


state 214

    (43) callfunc -> ID OPENPAREN altcall CLOSEPAREN .

    TIMES           reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    DIV             reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SUM             reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SUBTRACT        reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SAMEAS          reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    BIGGERTHAN      reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    BIGGEREQUALSTHAN reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SMALLTHAN       reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SMALLEQUALSTHAN reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    DIFFERENTTHAN   reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    AND             reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OR              reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SEMICOLON       reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    COMMA           reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OPENPAREN       reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    TRUE            reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    FALSE           reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTEFLOAT        reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTESTRING       reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTEINT          reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    ID              reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CLOSECURLY      reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    VAR             reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    IF              reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OUTPUT          reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    INPUT           reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    RETURN          reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    WHILE           reduce using rule 43 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)


state 215

    (64) while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY . altwhile
    (65) altwhile -> . estatuto altwhile
    (66) altwhile -> . CLOSECURLY
    (53) estatuto -> . assign
    (54) estatuto -> . condition
    (55) estatuto -> . write
    (56) estatuto -> . read
    (57) estatuto -> . return
    (58) estatuto -> . voidcall
    (59) estatuto -> . while
    (116) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (112) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (113) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (103) write -> . OUTPUT OPENPAREN varcall altwrite
    (104) write -> . OUTPUT OPENPAREN expresion altwrite
    (102) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (119) return -> . RETURN expresion SEMICOLON
    (60) voidcall -> . ID OPENPAREN CLOSEPAREN
    (61) voidcall -> . ID OPENPAREN expresion altcall
    (64) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 231
    ID              shift and go to state 67
    IF              shift and go to state 68
    OUTPUT          shift and go to state 69
    INPUT           shift and go to state 70
    RETURN          shift and go to state 71
    WHILE           shift and go to state 72

    altwhile                       shift and go to state 229
    estatuto                       shift and go to state 230
    assign                         shift and go to state 60
    condition                      shift and go to state 61
    write                          shift and go to state 62
    read                           shift and go to state 63
    return                         shift and go to state 64
    voidcall                       shift and go to state 65
    while                          shift and go to state 66

state 216

    (16) constructor -> CONSTRUCTOR OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const .

    CLOSECURLY      reduce using rule 16 (constructor -> CONSTRUCTOR OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const .)


state 217

    (19) alt2const -> var . alt2const
    (19) alt2const -> . var alt2const
    (20) alt2const -> . estatuto alt2const
    (21) alt2const -> . CLOSECURLY
    (22) var -> . VAR listids TWODOTS type SEMICOLON
    (53) estatuto -> . assign
    (54) estatuto -> . condition
    (55) estatuto -> . write
    (56) estatuto -> . read
    (57) estatuto -> . return
    (58) estatuto -> . voidcall
    (59) estatuto -> . while
    (116) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (112) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (113) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (103) write -> . OUTPUT OPENPAREN varcall altwrite
    (104) write -> . OUTPUT OPENPAREN expresion altwrite
    (102) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (119) return -> . RETURN expresion SEMICOLON
    (60) voidcall -> . ID OPENPAREN CLOSEPAREN
    (61) voidcall -> . ID OPENPAREN expresion altcall
    (64) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 219
    VAR             shift and go to state 11
    ID              shift and go to state 67
    IF              shift and go to state 68
    OUTPUT          shift and go to state 69
    INPUT           shift and go to state 70
    RETURN          shift and go to state 71
    WHILE           shift and go to state 72

    var                            shift and go to state 217
    alt2const                      shift and go to state 232
    estatuto                       shift and go to state 218
    assign                         shift and go to state 60
    condition                      shift and go to state 61
    write                          shift and go to state 62
    read                           shift and go to state 63
    return                         shift and go to state 64
    voidcall                       shift and go to state 65
    while                          shift and go to state 66

state 218

    (20) alt2const -> estatuto . alt2const
    (19) alt2const -> . var alt2const
    (20) alt2const -> . estatuto alt2const
    (21) alt2const -> . CLOSECURLY
    (22) var -> . VAR listids TWODOTS type SEMICOLON
    (53) estatuto -> . assign
    (54) estatuto -> . condition
    (55) estatuto -> . write
    (56) estatuto -> . read
    (57) estatuto -> . return
    (58) estatuto -> . voidcall
    (59) estatuto -> . while
    (116) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (112) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (113) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (103) write -> . OUTPUT OPENPAREN varcall altwrite
    (104) write -> . OUTPUT OPENPAREN expresion altwrite
    (102) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (119) return -> . RETURN expresion SEMICOLON
    (60) voidcall -> . ID OPENPAREN CLOSEPAREN
    (61) voidcall -> . ID OPENPAREN expresion altcall
    (64) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 219
    VAR             shift and go to state 11
    ID              shift and go to state 67
    IF              shift and go to state 68
    OUTPUT          shift and go to state 69
    INPUT           shift and go to state 70
    RETURN          shift and go to state 71
    WHILE           shift and go to state 72

    estatuto                       shift and go to state 218
    alt2const                      shift and go to state 233
    var                            shift and go to state 217
    assign                         shift and go to state 60
    condition                      shift and go to state 61
    write                          shift and go to state 62
    read                           shift and go to state 63
    return                         shift and go to state 64
    voidcall                       shift and go to state 65
    while                          shift and go to state 66

state 219

    (21) alt2const -> CLOSECURLY .

    CLOSECURLY      reduce using rule 21 (alt2const -> CLOSECURLY .)


state 220

    (30) listidsaltp -> COMMA listids .

    TWODOTS         reduce using rule 30 (listidsaltp -> COMMA listids .)


state 221

    (41) altparams -> COMMA ID TWODOTS type . altparams
    (41) altparams -> . COMMA ID TWODOTS type altparams
    (42) altparams -> . empty
    (120) empty -> .

    COMMA           shift and go to state 120
    CLOSEPAREN      reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)

    altparams                      shift and go to state 234
    empty                          shift and go to state 121

state 222

    (46) alt2call -> COMMA altcall .

    CLOSECURLY      reduce using rule 46 (alt2call -> COMMA altcall .)
    VAR             reduce using rule 46 (alt2call -> COMMA altcall .)
    ID              reduce using rule 46 (alt2call -> COMMA altcall .)
    IF              reduce using rule 46 (alt2call -> COMMA altcall .)
    OUTPUT          reduce using rule 46 (alt2call -> COMMA altcall .)
    INPUT           reduce using rule 46 (alt2call -> COMMA altcall .)
    RETURN          reduce using rule 46 (alt2call -> COMMA altcall .)
    WHILE           reduce using rule 46 (alt2call -> COMMA altcall .)
    CLOSEPAREN      reduce using rule 46 (alt2call -> COMMA altcall .)


state 223

    (62) altcall -> COMMA expresion altcall .

    CLOSECURLY      reduce using rule 62 (altcall -> COMMA expresion altcall .)
    VAR             reduce using rule 62 (altcall -> COMMA expresion altcall .)
    ID              reduce using rule 62 (altcall -> COMMA expresion altcall .)
    IF              reduce using rule 62 (altcall -> COMMA expresion altcall .)
    OUTPUT          reduce using rule 62 (altcall -> COMMA expresion altcall .)
    INPUT           reduce using rule 62 (altcall -> COMMA expresion altcall .)
    RETURN          reduce using rule 62 (altcall -> COMMA expresion altcall .)
    WHILE           reduce using rule 62 (altcall -> COMMA expresion altcall .)
    CLOSEPAREN      reduce using rule 62 (altcall -> COMMA expresion altcall .)


state 224

    (112) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .
    (113) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition . ELSE OPENCURLY altcondition

    CLOSECURLY      reduce using rule 112 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    VAR             reduce using rule 112 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    ID              reduce using rule 112 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    IF              reduce using rule 112 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    OUTPUT          reduce using rule 112 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    INPUT           reduce using rule 112 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    RETURN          reduce using rule 112 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    WHILE           reduce using rule 112 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    ELSE            shift and go to state 235


state 225

    (114) altcondition -> estatuto . altcondition
    (114) altcondition -> . estatuto altcondition
    (115) altcondition -> . CLOSECURLY
    (53) estatuto -> . assign
    (54) estatuto -> . condition
    (55) estatuto -> . write
    (56) estatuto -> . read
    (57) estatuto -> . return
    (58) estatuto -> . voidcall
    (59) estatuto -> . while
    (116) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (112) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (113) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (103) write -> . OUTPUT OPENPAREN varcall altwrite
    (104) write -> . OUTPUT OPENPAREN expresion altwrite
    (102) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (119) return -> . RETURN expresion SEMICOLON
    (60) voidcall -> . ID OPENPAREN CLOSEPAREN
    (61) voidcall -> . ID OPENPAREN expresion altcall
    (64) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 226
    ID              shift and go to state 67
    IF              shift and go to state 68
    OUTPUT          shift and go to state 69
    INPUT           shift and go to state 70
    RETURN          shift and go to state 71
    WHILE           shift and go to state 72

    estatuto                       shift and go to state 225
    altcondition                   shift and go to state 236
    assign                         shift and go to state 60
    condition                      shift and go to state 61
    write                          shift and go to state 62
    read                           shift and go to state 63
    return                         shift and go to state 64
    voidcall                       shift and go to state 65
    while                          shift and go to state 66

state 226

    (115) altcondition -> CLOSECURLY .

    ELSE            reduce using rule 115 (altcondition -> CLOSECURLY .)
    CLOSECURLY      reduce using rule 115 (altcondition -> CLOSECURLY .)
    VAR             reduce using rule 115 (altcondition -> CLOSECURLY .)
    ID              reduce using rule 115 (altcondition -> CLOSECURLY .)
    IF              reduce using rule 115 (altcondition -> CLOSECURLY .)
    OUTPUT          reduce using rule 115 (altcondition -> CLOSECURLY .)
    INPUT           reduce using rule 115 (altcondition -> CLOSECURLY .)
    RETURN          reduce using rule 115 (altcondition -> CLOSECURLY .)
    WHILE           reduce using rule 115 (altcondition -> CLOSECURLY .)


state 227

    (105) altwrite -> COMMA varcall altwrite .

    CLOSECURLY      reduce using rule 105 (altwrite -> COMMA varcall altwrite .)
    VAR             reduce using rule 105 (altwrite -> COMMA varcall altwrite .)
    ID              reduce using rule 105 (altwrite -> COMMA varcall altwrite .)
    IF              reduce using rule 105 (altwrite -> COMMA varcall altwrite .)
    OUTPUT          reduce using rule 105 (altwrite -> COMMA varcall altwrite .)
    INPUT           reduce using rule 105 (altwrite -> COMMA varcall altwrite .)
    RETURN          reduce using rule 105 (altwrite -> COMMA varcall altwrite .)
    WHILE           reduce using rule 105 (altwrite -> COMMA varcall altwrite .)


state 228

    (106) altwrite -> COMMA expresion altwrite .

    CLOSECURLY      reduce using rule 106 (altwrite -> COMMA expresion altwrite .)
    VAR             reduce using rule 106 (altwrite -> COMMA expresion altwrite .)
    ID              reduce using rule 106 (altwrite -> COMMA expresion altwrite .)
    IF              reduce using rule 106 (altwrite -> COMMA expresion altwrite .)
    OUTPUT          reduce using rule 106 (altwrite -> COMMA expresion altwrite .)
    INPUT           reduce using rule 106 (altwrite -> COMMA expresion altwrite .)
    RETURN          reduce using rule 106 (altwrite -> COMMA expresion altwrite .)
    WHILE           reduce using rule 106 (altwrite -> COMMA expresion altwrite .)


state 229

    (64) while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .

    CLOSECURLY      reduce using rule 64 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    VAR             reduce using rule 64 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    ID              reduce using rule 64 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    IF              reduce using rule 64 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    OUTPUT          reduce using rule 64 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    INPUT           reduce using rule 64 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    RETURN          reduce using rule 64 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    WHILE           reduce using rule 64 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)


state 230

    (65) altwhile -> estatuto . altwhile
    (65) altwhile -> . estatuto altwhile
    (66) altwhile -> . CLOSECURLY
    (53) estatuto -> . assign
    (54) estatuto -> . condition
    (55) estatuto -> . write
    (56) estatuto -> . read
    (57) estatuto -> . return
    (58) estatuto -> . voidcall
    (59) estatuto -> . while
    (116) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (112) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (113) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (103) write -> . OUTPUT OPENPAREN varcall altwrite
    (104) write -> . OUTPUT OPENPAREN expresion altwrite
    (102) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (119) return -> . RETURN expresion SEMICOLON
    (60) voidcall -> . ID OPENPAREN CLOSEPAREN
    (61) voidcall -> . ID OPENPAREN expresion altcall
    (64) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 231
    ID              shift and go to state 67
    IF              shift and go to state 68
    OUTPUT          shift and go to state 69
    INPUT           shift and go to state 70
    RETURN          shift and go to state 71
    WHILE           shift and go to state 72

    estatuto                       shift and go to state 230
    altwhile                       shift and go to state 237
    assign                         shift and go to state 60
    condition                      shift and go to state 61
    write                          shift and go to state 62
    read                           shift and go to state 63
    return                         shift and go to state 64
    voidcall                       shift and go to state 65
    while                          shift and go to state 66

state 231

    (66) altwhile -> CLOSECURLY .

    CLOSECURLY      reduce using rule 66 (altwhile -> CLOSECURLY .)
    VAR             reduce using rule 66 (altwhile -> CLOSECURLY .)
    ID              reduce using rule 66 (altwhile -> CLOSECURLY .)
    IF              reduce using rule 66 (altwhile -> CLOSECURLY .)
    OUTPUT          reduce using rule 66 (altwhile -> CLOSECURLY .)
    INPUT           reduce using rule 66 (altwhile -> CLOSECURLY .)
    RETURN          reduce using rule 66 (altwhile -> CLOSECURLY .)
    WHILE           reduce using rule 66 (altwhile -> CLOSECURLY .)


state 232

    (19) alt2const -> var alt2const .

    CLOSECURLY      reduce using rule 19 (alt2const -> var alt2const .)


state 233

    (20) alt2const -> estatuto alt2const .

    CLOSECURLY      reduce using rule 20 (alt2const -> estatuto alt2const .)


state 234

    (41) altparams -> COMMA ID TWODOTS type altparams .

    CLOSEPAREN      reduce using rule 41 (altparams -> COMMA ID TWODOTS type altparams .)
    ID              reduce using rule 41 (altparams -> COMMA ID TWODOTS type altparams .)


state 235

    (113) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE . OPENCURLY altcondition

    OPENCURLY       shift and go to state 238


state 236

    (114) altcondition -> estatuto altcondition .

    ELSE            reduce using rule 114 (altcondition -> estatuto altcondition .)
    CLOSECURLY      reduce using rule 114 (altcondition -> estatuto altcondition .)
    VAR             reduce using rule 114 (altcondition -> estatuto altcondition .)
    ID              reduce using rule 114 (altcondition -> estatuto altcondition .)
    IF              reduce using rule 114 (altcondition -> estatuto altcondition .)
    OUTPUT          reduce using rule 114 (altcondition -> estatuto altcondition .)
    INPUT           reduce using rule 114 (altcondition -> estatuto altcondition .)
    RETURN          reduce using rule 114 (altcondition -> estatuto altcondition .)
    WHILE           reduce using rule 114 (altcondition -> estatuto altcondition .)


state 237

    (65) altwhile -> estatuto altwhile .

    CLOSECURLY      reduce using rule 65 (altwhile -> estatuto altwhile .)
    VAR             reduce using rule 65 (altwhile -> estatuto altwhile .)
    ID              reduce using rule 65 (altwhile -> estatuto altwhile .)
    IF              reduce using rule 65 (altwhile -> estatuto altwhile .)
    OUTPUT          reduce using rule 65 (altwhile -> estatuto altwhile .)
    INPUT           reduce using rule 65 (altwhile -> estatuto altwhile .)
    RETURN          reduce using rule 65 (altwhile -> estatuto altwhile .)
    WHILE           reduce using rule 65 (altwhile -> estatuto altwhile .)


state 238

    (113) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY . altcondition
    (114) altcondition -> . estatuto altcondition
    (115) altcondition -> . CLOSECURLY
    (53) estatuto -> . assign
    (54) estatuto -> . condition
    (55) estatuto -> . write
    (56) estatuto -> . read
    (57) estatuto -> . return
    (58) estatuto -> . voidcall
    (59) estatuto -> . while
    (116) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (112) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (113) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (103) write -> . OUTPUT OPENPAREN varcall altwrite
    (104) write -> . OUTPUT OPENPAREN expresion altwrite
    (102) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (119) return -> . RETURN expresion SEMICOLON
    (60) voidcall -> . ID OPENPAREN CLOSEPAREN
    (61) voidcall -> . ID OPENPAREN expresion altcall
    (64) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 226
    ID              shift and go to state 67
    IF              shift and go to state 68
    OUTPUT          shift and go to state 69
    INPUT           shift and go to state 70
    RETURN          shift and go to state 71
    WHILE           shift and go to state 72

    altcondition                   shift and go to state 239
    estatuto                       shift and go to state 225
    assign                         shift and go to state 60
    condition                      shift and go to state 61
    write                          shift and go to state 62
    read                           shift and go to state 63
    return                         shift and go to state 64
    voidcall                       shift and go to state 65
    while                          shift and go to state 66

state 239

    (113) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .

    CLOSECURLY      reduce using rule 113 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    VAR             reduce using rule 113 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    ID              reduce using rule 113 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    IF              reduce using rule 113 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    OUTPUT          reduce using rule 113 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    INPUT           reduce using rule 113 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    RETURN          reduce using rule 113 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    WHILE           reduce using rule 113 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUM in state 96 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 96 resolved as shift
WARNING: shift/reduce conflict for SUM in state 96 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 96 resolved as shift
WARNING: shift/reduce conflict for OPENPAREN in state 111 resolved as shift
WARNING: shift/reduce conflict for ID in state 126 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 129 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 129 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 156 resolved as shift
WARNING: shift/reduce conflict for SUM in state 182 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 182 resolved as shift
WARNING: shift/reduce conflict for SUM in state 183 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 183 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 201 resolved as shift
WARNING: shift/reduce conflict for ID in state 201 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 203 resolved as shift
WARNING: shift/reduce conflict for ID in state 203 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 206 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 206 resolved as shift
WARNING: reduce/reduce conflict in state 96 resolved using rule (exp -> termino)
WARNING: rejected rule (empty -> <empty>) in state 96
WARNING: reduce/reduce conflict in state 97 resolved using rule (termino -> factor)
WARNING: rejected rule (empty -> <empty>) in state 97
