Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID save_program SEMICOLON altprogram
Rule 2     altprogram -> class altprogram
Rule 3     altprogram -> var altprogram
Rule 4     altprogram -> function altprogram
Rule 5     altprogram -> main
Rule 6     save_program -> <empty>
Rule 7     main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain
Rule 8     altmain -> var altmain
Rule 9     altmain -> estatuto altmain
Rule 10    altmain -> CLOSECURLY
Rule 11    save_main -> <empty>
Rule 12    class -> CLASS ID altclass save_class OPENCURLY alt2class
Rule 13    altclass -> TWODOTS ID
Rule 14    altclass -> empty
Rule 15    alt2class -> var alt2class
Rule 16    alt2class -> function alt2class
Rule 17    alt2class -> constructor CLOSECURLY SEMICOLON
Rule 18    save_class -> <empty>
Rule 19    constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const
Rule 20    altconst -> params altconst
Rule 21    altconst -> empty
Rule 22    alt2const -> var alt2const
Rule 23    alt2const -> estatuto alt2const
Rule 24    alt2const -> CLOSECURLY
Rule 25    save_constructor -> <empty>
Rule 26    var -> VAR listids TWODOTS type SEMICOLON
Rule 27    listids -> ID listidsalty
Rule 28    listidsalty -> COMMA listids
Rule 29    listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltz
Rule 30    listidsalty -> empty
Rule 31    listidsaltz -> COMMA listids
Rule 32    listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltp
Rule 33    listidsaltz -> empty
Rule 34    listidsaltp -> COMMA listids
Rule 35    listidsaltp -> empty
Rule 36    function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
Rule 37    altfunc -> params
Rule 38    altfunc -> empty
Rule 39    alt2func -> TWODOTS type
Rule 40    alt2func -> empty
Rule 41    alt3func -> var alt3func
Rule 42    alt3func -> estatuto alt3func
Rule 43    alt3func -> CLOSECURLY
Rule 44    save_function -> <empty>
Rule 45    params -> ID TWODOTS type altparams
Rule 46    altparams -> COMMA ID TWODOTS type altparams
Rule 47    altparams -> empty
Rule 48    callfunc -> ID OPENPAREN altcall CLOSEPAREN
Rule 49    altcall -> expresion alt2call
Rule 50    altcall -> empty
Rule 51    alt2call -> COMMA altcall
Rule 52    alt2call -> empty
Rule 53    type -> INT
Rule 54    type -> FLOAT
Rule 55    type -> STRING
Rule 56    type -> ID
Rule 57    type -> BOOL
Rule 58    estatuto -> assign
Rule 59    estatuto -> condition
Rule 60    estatuto -> write
Rule 61    estatuto -> read
Rule 62    estatuto -> return
Rule 63    estatuto -> voidcall
Rule 64    estatuto -> while
Rule 65    voidcall -> ID OPENPAREN CLOSEPAREN
Rule 66    voidcall -> ID OPENPAREN expresion altcall
Rule 67    altcall -> COMMA expresion altcall
Rule 68    altcall -> CLOSEPAREN SEMICOLON
Rule 69    while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile
Rule 70    altwhile -> estatuto altwhile
Rule 71    altwhile -> CLOSECURLY
Rule 72    varcall -> varcte
Rule 73    varcall -> varcomplicated
Rule 74    varcte -> TRUE
Rule 75    varcte -> FALSE
Rule 76    varcte -> CTEFLOAT
Rule 77    varcte -> CTESTRING
Rule 78    varcte -> CTEINT
Rule 79    varcomplicated -> varcomp1
Rule 80    varcomplicated -> callfunc
Rule 81    varcomp1 -> ID varcomp2
Rule 82    varcomp2 -> DOT varcomp3
Rule 83    varcomp2 -> empty
Rule 84    varcomp3 -> varcomp1
Rule 85    varcomp3 -> callfunc
Rule 86    expresion -> exp altexpresion
Rule 87    altexpresion -> altexpresion2 exp
Rule 88    altexpresion -> empty
Rule 89    altexpresion2 -> SAMEAS
Rule 90    altexpresion2 -> BIGGERTHAN
Rule 91    altexpresion2 -> BIGGEREQUALSTHAN
Rule 92    altexpresion2 -> SMALLTHAN
Rule 93    altexpresion2 -> SMALLEQUALSTHAN
Rule 94    altexpresion2 -> DIFFERENTTHAN
Rule 95    altexpresion2 -> AND
Rule 96    altexpresion2 -> OR
Rule 97    exp -> termino
Rule 98    exp -> termino altexp
Rule 99    altexp -> SUM termino altexp
Rule 100   altexp -> SUBTRACT termino altexp
Rule 101   altexp -> empty
Rule 102   termino -> factor
Rule 103   termino -> factor alttermino
Rule 104   alttermino -> TIMES factor alttermino
Rule 105   alttermino -> DIV factor alttermino
Rule 106   alttermino -> empty
Rule 107   read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
Rule 108   write -> OUTPUT OPENPAREN varcall altwrite
Rule 109   write -> OUTPUT OPENPAREN expresion altwrite
Rule 110   altwrite -> COMMA varcall altwrite
Rule 111   altwrite -> COMMA expresion altwrite
Rule 112   altwrite -> CLOSEPAREN SEMICOLON
Rule 113   factor -> OPENPAREN expresion CLOSEPAREN
Rule 114   factor -> SUM varcall
Rule 115   factor -> SUBTRACT varcall
Rule 116   factor -> varcall
Rule 117   condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
Rule 118   condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
Rule 119   altcondition -> estatuto altcondition
Rule 120   altcondition -> CLOSECURLY
Rule 121   assign -> ID assign1 EQUALS expresion SEMICOLON
Rule 122   assign1 -> DOT ID assign1
Rule 123   assign1 -> empty
Rule 124   return -> RETURN expresion SEMICOLON
Rule 125   empty -> <empty>

Terminals, with rules where they appear

AND                  : 95
BIGGEREQUALSTHAN     : 91
BIGGERTHAN           : 90
BOOL                 : 57
CLASS                : 12
CLOSEBRACKET         : 29 32
CLOSECURLY           : 10 17 24 43 71 120
CLOSEPAREN           : 7 19 36 48 65 68 69 107 112 113 117 118
COMMA                : 28 31 34 46 51 67 110 111
CONSTRUCTOR          : 19
CTEFLOAT             : 76
CTEINT               : 29 32 78
CTESTRING            : 77
DIFFERENTTHAN        : 94
DIV                  : 105
DOT                  : 82 122
ELSE                 : 118
EQUALS               : 121
FALSE                : 75
FLOAT                : 54
FUNC                 : 36
ID                   : 1 12 13 27 36 45 46 48 56 65 66 81 107 121 122
IF                   : 117 118
INPUT                : 107
INT                  : 53
MAIN                 : 7
OPENBRACKET          : 29 32
OPENCURLY            : 7 12 19 36 69 117 118 118
OPENPAREN            : 7 19 36 48 65 66 69 107 108 109 113 117 118
OR                   : 96
OUTPUT               : 108 109
PROGRAM              : 1
RETURN               : 124
SAMEAS               : 89
SEMICOLON            : 1 17 26 68 107 112 121 124
SMALLEQUALSTHAN      : 93
SMALLTHAN            : 92
STRING               : 55
SUBTRACT             : 100 115
SUM                  : 99 114
TIMES                : 104
TRUE                 : 74
TWODOTS              : 13 26 39 45 46
VAR                  : 26
WHILE                : 69
error                : 

Nonterminals, with rules where they appear

alt2call             : 49
alt2class            : 12 15 16
alt2const            : 19 22 23
alt2func             : 36
alt3func             : 36 41 42
altcall              : 48 51 66 67
altclass             : 12
altcondition         : 117 118 118 119
altconst             : 19 20
altexp               : 98 99 100
altexpresion         : 86
altexpresion2        : 87
altfunc              : 36
altmain              : 7 8 9
altparams            : 45 46
altprogram           : 1 2 3 4
alttermino           : 103 104 105
altwhile             : 69 70
altwrite             : 108 109 110 111
assign               : 58
assign1              : 121 122
callfunc             : 80 85
class                : 2
condition            : 59
constructor          : 17
empty                : 14 21 30 33 35 38 40 47 50 52 83 88 101 106 123
estatuto             : 9 23 42 70 119
exp                  : 86 87
expresion            : 49 66 67 69 109 111 113 117 118 121 124
factor               : 102 103 104 105
function             : 4 16
listids              : 26 28 31 34
listidsaltp          : 32
listidsalty          : 27
listidsaltz          : 29
main                 : 5
params               : 20 37
program              : 0
read                 : 61
return               : 62
save_class           : 12
save_constructor     : 19
save_function        : 36
save_main            : 7
save_program         : 1
termino              : 97 98 99 100
type                 : 26 39 45 46
var                  : 3 8 15 22 41
varcall              : 108 110 114 115 116
varcomp1             : 79 84
varcomp2             : 81
varcomp3             : 82
varcomplicated       : 73
varcte               : 72
voidcall             : 63
while                : 64
write                : 60

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID save_program SEMICOLON altprogram

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID save_program SEMICOLON altprogram

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . save_program SEMICOLON altprogram
    (6) save_program -> .

    SEMICOLON       reduce using rule 6 (save_program -> .)

    save_program                   shift and go to state 4

state 4

    (1) program -> PROGRAM ID save_program . SEMICOLON altprogram

    SEMICOLON       shift and go to state 5


state 5

    (1) program -> PROGRAM ID save_program SEMICOLON . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (12) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (26) var -> . VAR listids TWODOTS type SEMICOLON
    (36) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    altprogram                     shift and go to state 6
    class                          shift and go to state 7
    var                            shift and go to state 8
    function                       shift and go to state 9
    main                           shift and go to state 10

state 6

    (1) program -> PROGRAM ID save_program SEMICOLON altprogram .

    $end            reduce using rule 1 (program -> PROGRAM ID save_program SEMICOLON altprogram .)


state 7

    (2) altprogram -> class . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (12) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (26) var -> . VAR listids TWODOTS type SEMICOLON
    (36) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    class                          shift and go to state 7
    altprogram                     shift and go to state 15
    var                            shift and go to state 8
    function                       shift and go to state 9
    main                           shift and go to state 10

state 8

    (3) altprogram -> var . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (12) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (26) var -> . VAR listids TWODOTS type SEMICOLON
    (36) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    var                            shift and go to state 8
    altprogram                     shift and go to state 16
    class                          shift and go to state 7
    function                       shift and go to state 9
    main                           shift and go to state 10

state 9

    (4) altprogram -> function . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (12) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (26) var -> . VAR listids TWODOTS type SEMICOLON
    (36) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    function                       shift and go to state 9
    altprogram                     shift and go to state 17
    class                          shift and go to state 7
    var                            shift and go to state 8
    main                           shift and go to state 10

state 10

    (5) altprogram -> main .

    $end            reduce using rule 5 (altprogram -> main .)


state 11

    (12) class -> CLASS . ID altclass save_class OPENCURLY alt2class

    ID              shift and go to state 18


state 12

    (26) var -> VAR . listids TWODOTS type SEMICOLON
    (27) listids -> . ID listidsalty

    ID              shift and go to state 20

    listids                        shift and go to state 19

state 13

    (36) function -> FUNC . ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func

    ID              shift and go to state 21


state 14

    (7) main -> MAIN . save_main OPENPAREN CLOSEPAREN OPENCURLY altmain
    (11) save_main -> .

    OPENPAREN       reduce using rule 11 (save_main -> .)

    save_main                      shift and go to state 22

state 15

    (2) altprogram -> class altprogram .

    $end            reduce using rule 2 (altprogram -> class altprogram .)


state 16

    (3) altprogram -> var altprogram .

    $end            reduce using rule 3 (altprogram -> var altprogram .)


state 17

    (4) altprogram -> function altprogram .

    $end            reduce using rule 4 (altprogram -> function altprogram .)


state 18

    (12) class -> CLASS ID . altclass save_class OPENCURLY alt2class
    (13) altclass -> . TWODOTS ID
    (14) altclass -> . empty
    (125) empty -> .

    TWODOTS         shift and go to state 24
    OPENCURLY       reduce using rule 125 (empty -> .)

    altclass                       shift and go to state 23
    empty                          shift and go to state 25

state 19

    (26) var -> VAR listids . TWODOTS type SEMICOLON

    TWODOTS         shift and go to state 26


state 20

    (27) listids -> ID . listidsalty
    (28) listidsalty -> . COMMA listids
    (29) listidsalty -> . OPENBRACKET CTEINT CLOSEBRACKET listidsaltz
    (30) listidsalty -> . empty
    (125) empty -> .

    COMMA           shift and go to state 28
    OPENBRACKET     shift and go to state 29
    TWODOTS         reduce using rule 125 (empty -> .)

    listidsalty                    shift and go to state 27
    empty                          shift and go to state 30

state 21

    (36) function -> FUNC ID . OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func

    OPENPAREN       shift and go to state 31


state 22

    (7) main -> MAIN save_main . OPENPAREN CLOSEPAREN OPENCURLY altmain

    OPENPAREN       shift and go to state 32


state 23

    (12) class -> CLASS ID altclass . save_class OPENCURLY alt2class
    (18) save_class -> .

    OPENCURLY       reduce using rule 18 (save_class -> .)

    save_class                     shift and go to state 33

state 24

    (13) altclass -> TWODOTS . ID

    ID              shift and go to state 34


state 25

    (14) altclass -> empty .

    OPENCURLY       reduce using rule 14 (altclass -> empty .)


state 26

    (26) var -> VAR listids TWODOTS . type SEMICOLON
    (53) type -> . INT
    (54) type -> . FLOAT
    (55) type -> . STRING
    (56) type -> . ID
    (57) type -> . BOOL

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    STRING          shift and go to state 38
    ID              shift and go to state 39
    BOOL            shift and go to state 40

    type                           shift and go to state 35

state 27

    (27) listids -> ID listidsalty .

    TWODOTS         reduce using rule 27 (listids -> ID listidsalty .)


state 28

    (28) listidsalty -> COMMA . listids
    (27) listids -> . ID listidsalty

    ID              shift and go to state 20

    listids                        shift and go to state 41

state 29

    (29) listidsalty -> OPENBRACKET . CTEINT CLOSEBRACKET listidsaltz

    CTEINT          shift and go to state 42


state 30

    (30) listidsalty -> empty .

    TWODOTS         reduce using rule 30 (listidsalty -> empty .)


state 31

    (36) function -> FUNC ID OPENPAREN . altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (37) altfunc -> . params
    (38) altfunc -> . empty
    (45) params -> . ID TWODOTS type altparams
    (125) empty -> .

    ID              shift and go to state 43
    CLOSEPAREN      reduce using rule 125 (empty -> .)

    altfunc                        shift and go to state 44
    params                         shift and go to state 45
    empty                          shift and go to state 46

state 32

    (7) main -> MAIN save_main OPENPAREN . CLOSEPAREN OPENCURLY altmain

    CLOSEPAREN      shift and go to state 47


state 33

    (12) class -> CLASS ID altclass save_class . OPENCURLY alt2class

    OPENCURLY       shift and go to state 48


state 34

    (13) altclass -> TWODOTS ID .

    OPENCURLY       reduce using rule 13 (altclass -> TWODOTS ID .)


state 35

    (26) var -> VAR listids TWODOTS type . SEMICOLON

    SEMICOLON       shift and go to state 49


state 36

    (53) type -> INT .

    SEMICOLON       reduce using rule 53 (type -> INT .)
    COMMA           reduce using rule 53 (type -> INT .)
    CLOSEPAREN      reduce using rule 53 (type -> INT .)
    ID              reduce using rule 53 (type -> INT .)
    OPENCURLY       reduce using rule 53 (type -> INT .)


state 37

    (54) type -> FLOAT .

    SEMICOLON       reduce using rule 54 (type -> FLOAT .)
    COMMA           reduce using rule 54 (type -> FLOAT .)
    CLOSEPAREN      reduce using rule 54 (type -> FLOAT .)
    ID              reduce using rule 54 (type -> FLOAT .)
    OPENCURLY       reduce using rule 54 (type -> FLOAT .)


state 38

    (55) type -> STRING .

    SEMICOLON       reduce using rule 55 (type -> STRING .)
    COMMA           reduce using rule 55 (type -> STRING .)
    CLOSEPAREN      reduce using rule 55 (type -> STRING .)
    ID              reduce using rule 55 (type -> STRING .)
    OPENCURLY       reduce using rule 55 (type -> STRING .)


state 39

    (56) type -> ID .

    SEMICOLON       reduce using rule 56 (type -> ID .)
    COMMA           reduce using rule 56 (type -> ID .)
    CLOSEPAREN      reduce using rule 56 (type -> ID .)
    ID              reduce using rule 56 (type -> ID .)
    OPENCURLY       reduce using rule 56 (type -> ID .)


state 40

    (57) type -> BOOL .

    SEMICOLON       reduce using rule 57 (type -> BOOL .)
    COMMA           reduce using rule 57 (type -> BOOL .)
    CLOSEPAREN      reduce using rule 57 (type -> BOOL .)
    ID              reduce using rule 57 (type -> BOOL .)
    OPENCURLY       reduce using rule 57 (type -> BOOL .)


state 41

    (28) listidsalty -> COMMA listids .

    TWODOTS         reduce using rule 28 (listidsalty -> COMMA listids .)


state 42

    (29) listidsalty -> OPENBRACKET CTEINT . CLOSEBRACKET listidsaltz

    CLOSEBRACKET    shift and go to state 50


state 43

    (45) params -> ID . TWODOTS type altparams

    TWODOTS         shift and go to state 51


state 44

    (36) function -> FUNC ID OPENPAREN altfunc . CLOSEPAREN alt2func save_function OPENCURLY alt3func

    CLOSEPAREN      shift and go to state 52


state 45

    (37) altfunc -> params .

    CLOSEPAREN      reduce using rule 37 (altfunc -> params .)


state 46

    (38) altfunc -> empty .

    CLOSEPAREN      reduce using rule 38 (altfunc -> empty .)


state 47

    (7) main -> MAIN save_main OPENPAREN CLOSEPAREN . OPENCURLY altmain

    OPENCURLY       shift and go to state 53


state 48

    (12) class -> CLASS ID altclass save_class OPENCURLY . alt2class
    (15) alt2class -> . var alt2class
    (16) alt2class -> . function alt2class
    (17) alt2class -> . constructor CLOSECURLY SEMICOLON
    (26) var -> . VAR listids TWODOTS type SEMICOLON
    (36) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (19) constructor -> . CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    CONSTRUCTOR     shift and go to state 58

    alt2class                      shift and go to state 54
    var                            shift and go to state 55
    function                       shift and go to state 56
    constructor                    shift and go to state 57

state 49

    (26) var -> VAR listids TWODOTS type SEMICOLON .

    CLASS           reduce using rule 26 (var -> VAR listids TWODOTS type SEMICOLON .)
    VAR             reduce using rule 26 (var -> VAR listids TWODOTS type SEMICOLON .)
    FUNC            reduce using rule 26 (var -> VAR listids TWODOTS type SEMICOLON .)
    MAIN            reduce using rule 26 (var -> VAR listids TWODOTS type SEMICOLON .)
    CONSTRUCTOR     reduce using rule 26 (var -> VAR listids TWODOTS type SEMICOLON .)
    CLOSECURLY      reduce using rule 26 (var -> VAR listids TWODOTS type SEMICOLON .)
    ID              reduce using rule 26 (var -> VAR listids TWODOTS type SEMICOLON .)
    IF              reduce using rule 26 (var -> VAR listids TWODOTS type SEMICOLON .)
    OUTPUT          reduce using rule 26 (var -> VAR listids TWODOTS type SEMICOLON .)
    INPUT           reduce using rule 26 (var -> VAR listids TWODOTS type SEMICOLON .)
    RETURN          reduce using rule 26 (var -> VAR listids TWODOTS type SEMICOLON .)
    WHILE           reduce using rule 26 (var -> VAR listids TWODOTS type SEMICOLON .)


state 50

    (29) listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET . listidsaltz
    (31) listidsaltz -> . COMMA listids
    (32) listidsaltz -> . OPENBRACKET CTEINT CLOSEBRACKET listidsaltp
    (33) listidsaltz -> . empty
    (125) empty -> .

    COMMA           shift and go to state 61
    OPENBRACKET     shift and go to state 59
    TWODOTS         reduce using rule 125 (empty -> .)

    listidsaltz                    shift and go to state 60
    empty                          shift and go to state 62

state 51

    (45) params -> ID TWODOTS . type altparams
    (53) type -> . INT
    (54) type -> . FLOAT
    (55) type -> . STRING
    (56) type -> . ID
    (57) type -> . BOOL

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    STRING          shift and go to state 38
    ID              shift and go to state 39
    BOOL            shift and go to state 40

    type                           shift and go to state 63

state 52

    (36) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN . alt2func save_function OPENCURLY alt3func
    (39) alt2func -> . TWODOTS type
    (40) alt2func -> . empty
    (125) empty -> .

    TWODOTS         shift and go to state 65
    OPENCURLY       reduce using rule 125 (empty -> .)

    alt2func                       shift and go to state 64
    empty                          shift and go to state 66

state 53

    (7) main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY . altmain
    (8) altmain -> . var altmain
    (9) altmain -> . estatuto altmain
    (10) altmain -> . CLOSECURLY
    (26) var -> . VAR listids TWODOTS type SEMICOLON
    (58) estatuto -> . assign
    (59) estatuto -> . condition
    (60) estatuto -> . write
    (61) estatuto -> . read
    (62) estatuto -> . return
    (63) estatuto -> . voidcall
    (64) estatuto -> . while
    (121) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (117) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (118) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (108) write -> . OUTPUT OPENPAREN varcall altwrite
    (109) write -> . OUTPUT OPENPAREN expresion altwrite
    (107) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (124) return -> . RETURN expresion SEMICOLON
    (65) voidcall -> . ID OPENPAREN CLOSEPAREN
    (66) voidcall -> . ID OPENPAREN expresion altcall
    (69) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 70
    VAR             shift and go to state 12
    ID              shift and go to state 78
    IF              shift and go to state 79
    OUTPUT          shift and go to state 80
    INPUT           shift and go to state 81
    RETURN          shift and go to state 82
    WHILE           shift and go to state 83

    altmain                        shift and go to state 67
    var                            shift and go to state 68
    estatuto                       shift and go to state 69
    assign                         shift and go to state 71
    condition                      shift and go to state 72
    write                          shift and go to state 73
    read                           shift and go to state 74
    return                         shift and go to state 75
    voidcall                       shift and go to state 76
    while                          shift and go to state 77

state 54

    (12) class -> CLASS ID altclass save_class OPENCURLY alt2class .

    CLASS           reduce using rule 12 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)
    VAR             reduce using rule 12 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)
    FUNC            reduce using rule 12 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)
    MAIN            reduce using rule 12 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)


state 55

    (15) alt2class -> var . alt2class
    (15) alt2class -> . var alt2class
    (16) alt2class -> . function alt2class
    (17) alt2class -> . constructor CLOSECURLY SEMICOLON
    (26) var -> . VAR listids TWODOTS type SEMICOLON
    (36) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (19) constructor -> . CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    CONSTRUCTOR     shift and go to state 58

    var                            shift and go to state 55
    alt2class                      shift and go to state 84
    function                       shift and go to state 56
    constructor                    shift and go to state 57

state 56

    (16) alt2class -> function . alt2class
    (15) alt2class -> . var alt2class
    (16) alt2class -> . function alt2class
    (17) alt2class -> . constructor CLOSECURLY SEMICOLON
    (26) var -> . VAR listids TWODOTS type SEMICOLON
    (36) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (19) constructor -> . CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    CONSTRUCTOR     shift and go to state 58

    function                       shift and go to state 56
    alt2class                      shift and go to state 85
    var                            shift and go to state 55
    constructor                    shift and go to state 57

state 57

    (17) alt2class -> constructor . CLOSECURLY SEMICOLON

    CLOSECURLY      shift and go to state 86


state 58

    (19) constructor -> CONSTRUCTOR . save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const
    (25) save_constructor -> .

    OPENPAREN       reduce using rule 25 (save_constructor -> .)

    save_constructor               shift and go to state 87

state 59

    (32) listidsaltz -> OPENBRACKET . CTEINT CLOSEBRACKET listidsaltp

    CTEINT          shift and go to state 88


state 60

    (29) listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltz .

    TWODOTS         reduce using rule 29 (listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltz .)


state 61

    (31) listidsaltz -> COMMA . listids
    (27) listids -> . ID listidsalty

    ID              shift and go to state 20

    listids                        shift and go to state 89

state 62

    (33) listidsaltz -> empty .

    TWODOTS         reduce using rule 33 (listidsaltz -> empty .)


state 63

    (45) params -> ID TWODOTS type . altparams
    (46) altparams -> . COMMA ID TWODOTS type altparams
    (47) altparams -> . empty
    (125) empty -> .

    COMMA           shift and go to state 91
    CLOSEPAREN      reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)

    altparams                      shift and go to state 90
    empty                          shift and go to state 92

state 64

    (36) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func . save_function OPENCURLY alt3func
    (44) save_function -> .

    OPENCURLY       reduce using rule 44 (save_function -> .)

    save_function                  shift and go to state 93

state 65

    (39) alt2func -> TWODOTS . type
    (53) type -> . INT
    (54) type -> . FLOAT
    (55) type -> . STRING
    (56) type -> . ID
    (57) type -> . BOOL

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    STRING          shift and go to state 38
    ID              shift and go to state 39
    BOOL            shift and go to state 40

    type                           shift and go to state 94

state 66

    (40) alt2func -> empty .

    OPENCURLY       reduce using rule 40 (alt2func -> empty .)


state 67

    (7) main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain .

    $end            reduce using rule 7 (main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain .)


state 68

    (8) altmain -> var . altmain
    (8) altmain -> . var altmain
    (9) altmain -> . estatuto altmain
    (10) altmain -> . CLOSECURLY
    (26) var -> . VAR listids TWODOTS type SEMICOLON
    (58) estatuto -> . assign
    (59) estatuto -> . condition
    (60) estatuto -> . write
    (61) estatuto -> . read
    (62) estatuto -> . return
    (63) estatuto -> . voidcall
    (64) estatuto -> . while
    (121) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (117) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (118) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (108) write -> . OUTPUT OPENPAREN varcall altwrite
    (109) write -> . OUTPUT OPENPAREN expresion altwrite
    (107) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (124) return -> . RETURN expresion SEMICOLON
    (65) voidcall -> . ID OPENPAREN CLOSEPAREN
    (66) voidcall -> . ID OPENPAREN expresion altcall
    (69) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 70
    VAR             shift and go to state 12
    ID              shift and go to state 78
    IF              shift and go to state 79
    OUTPUT          shift and go to state 80
    INPUT           shift and go to state 81
    RETURN          shift and go to state 82
    WHILE           shift and go to state 83

    var                            shift and go to state 68
    altmain                        shift and go to state 95
    estatuto                       shift and go to state 69
    assign                         shift and go to state 71
    condition                      shift and go to state 72
    write                          shift and go to state 73
    read                           shift and go to state 74
    return                         shift and go to state 75
    voidcall                       shift and go to state 76
    while                          shift and go to state 77

state 69

    (9) altmain -> estatuto . altmain
    (8) altmain -> . var altmain
    (9) altmain -> . estatuto altmain
    (10) altmain -> . CLOSECURLY
    (26) var -> . VAR listids TWODOTS type SEMICOLON
    (58) estatuto -> . assign
    (59) estatuto -> . condition
    (60) estatuto -> . write
    (61) estatuto -> . read
    (62) estatuto -> . return
    (63) estatuto -> . voidcall
    (64) estatuto -> . while
    (121) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (117) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (118) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (108) write -> . OUTPUT OPENPAREN varcall altwrite
    (109) write -> . OUTPUT OPENPAREN expresion altwrite
    (107) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (124) return -> . RETURN expresion SEMICOLON
    (65) voidcall -> . ID OPENPAREN CLOSEPAREN
    (66) voidcall -> . ID OPENPAREN expresion altcall
    (69) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 70
    VAR             shift and go to state 12
    ID              shift and go to state 78
    IF              shift and go to state 79
    OUTPUT          shift and go to state 80
    INPUT           shift and go to state 81
    RETURN          shift and go to state 82
    WHILE           shift and go to state 83

    estatuto                       shift and go to state 69
    altmain                        shift and go to state 96
    var                            shift and go to state 68
    assign                         shift and go to state 71
    condition                      shift and go to state 72
    write                          shift and go to state 73
    read                           shift and go to state 74
    return                         shift and go to state 75
    voidcall                       shift and go to state 76
    while                          shift and go to state 77

state 70

    (10) altmain -> CLOSECURLY .

    $end            reduce using rule 10 (altmain -> CLOSECURLY .)


state 71

    (58) estatuto -> assign .

    CLOSECURLY      reduce using rule 58 (estatuto -> assign .)
    VAR             reduce using rule 58 (estatuto -> assign .)
    ID              reduce using rule 58 (estatuto -> assign .)
    IF              reduce using rule 58 (estatuto -> assign .)
    OUTPUT          reduce using rule 58 (estatuto -> assign .)
    INPUT           reduce using rule 58 (estatuto -> assign .)
    RETURN          reduce using rule 58 (estatuto -> assign .)
    WHILE           reduce using rule 58 (estatuto -> assign .)


state 72

    (59) estatuto -> condition .

    CLOSECURLY      reduce using rule 59 (estatuto -> condition .)
    VAR             reduce using rule 59 (estatuto -> condition .)
    ID              reduce using rule 59 (estatuto -> condition .)
    IF              reduce using rule 59 (estatuto -> condition .)
    OUTPUT          reduce using rule 59 (estatuto -> condition .)
    INPUT           reduce using rule 59 (estatuto -> condition .)
    RETURN          reduce using rule 59 (estatuto -> condition .)
    WHILE           reduce using rule 59 (estatuto -> condition .)


state 73

    (60) estatuto -> write .

    CLOSECURLY      reduce using rule 60 (estatuto -> write .)
    VAR             reduce using rule 60 (estatuto -> write .)
    ID              reduce using rule 60 (estatuto -> write .)
    IF              reduce using rule 60 (estatuto -> write .)
    OUTPUT          reduce using rule 60 (estatuto -> write .)
    INPUT           reduce using rule 60 (estatuto -> write .)
    RETURN          reduce using rule 60 (estatuto -> write .)
    WHILE           reduce using rule 60 (estatuto -> write .)


state 74

    (61) estatuto -> read .

    CLOSECURLY      reduce using rule 61 (estatuto -> read .)
    VAR             reduce using rule 61 (estatuto -> read .)
    ID              reduce using rule 61 (estatuto -> read .)
    IF              reduce using rule 61 (estatuto -> read .)
    OUTPUT          reduce using rule 61 (estatuto -> read .)
    INPUT           reduce using rule 61 (estatuto -> read .)
    RETURN          reduce using rule 61 (estatuto -> read .)
    WHILE           reduce using rule 61 (estatuto -> read .)


state 75

    (62) estatuto -> return .

    CLOSECURLY      reduce using rule 62 (estatuto -> return .)
    VAR             reduce using rule 62 (estatuto -> return .)
    ID              reduce using rule 62 (estatuto -> return .)
    IF              reduce using rule 62 (estatuto -> return .)
    OUTPUT          reduce using rule 62 (estatuto -> return .)
    INPUT           reduce using rule 62 (estatuto -> return .)
    RETURN          reduce using rule 62 (estatuto -> return .)
    WHILE           reduce using rule 62 (estatuto -> return .)


state 76

    (63) estatuto -> voidcall .

    CLOSECURLY      reduce using rule 63 (estatuto -> voidcall .)
    VAR             reduce using rule 63 (estatuto -> voidcall .)
    ID              reduce using rule 63 (estatuto -> voidcall .)
    IF              reduce using rule 63 (estatuto -> voidcall .)
    OUTPUT          reduce using rule 63 (estatuto -> voidcall .)
    INPUT           reduce using rule 63 (estatuto -> voidcall .)
    RETURN          reduce using rule 63 (estatuto -> voidcall .)
    WHILE           reduce using rule 63 (estatuto -> voidcall .)


state 77

    (64) estatuto -> while .

    CLOSECURLY      reduce using rule 64 (estatuto -> while .)
    VAR             reduce using rule 64 (estatuto -> while .)
    ID              reduce using rule 64 (estatuto -> while .)
    IF              reduce using rule 64 (estatuto -> while .)
    OUTPUT          reduce using rule 64 (estatuto -> while .)
    INPUT           reduce using rule 64 (estatuto -> while .)
    RETURN          reduce using rule 64 (estatuto -> while .)
    WHILE           reduce using rule 64 (estatuto -> while .)


state 78

    (121) assign -> ID . assign1 EQUALS expresion SEMICOLON
    (65) voidcall -> ID . OPENPAREN CLOSEPAREN
    (66) voidcall -> ID . OPENPAREN expresion altcall
    (122) assign1 -> . DOT ID assign1
    (123) assign1 -> . empty
    (125) empty -> .

    OPENPAREN       shift and go to state 98
    DOT             shift and go to state 99
    EQUALS          reduce using rule 125 (empty -> .)

    assign1                        shift and go to state 97
    empty                          shift and go to state 100

state 79

    (117) condition -> IF . OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (118) condition -> IF . OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition

    OPENPAREN       shift and go to state 101


state 80

    (108) write -> OUTPUT . OPENPAREN varcall altwrite
    (109) write -> OUTPUT . OPENPAREN expresion altwrite

    OPENPAREN       shift and go to state 102


state 81

    (107) read -> INPUT . OPENPAREN ID CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 103


state 82

    (124) return -> RETURN . expresion SEMICOLON
    (86) expresion -> . exp altexpresion
    (97) exp -> . termino
    (98) exp -> . termino altexp
    (102) termino -> . factor
    (103) termino -> . factor alttermino
    (113) factor -> . OPENPAREN expresion CLOSEPAREN
    (114) factor -> . SUM varcall
    (115) factor -> . SUBTRACT varcall
    (116) factor -> . varcall
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 108
    SUM             shift and go to state 109
    SUBTRACT        shift and go to state 111
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121

    expresion                      shift and go to state 104
    exp                            shift and go to state 105
    termino                        shift and go to state 106
    factor                         shift and go to state 107
    varcall                        shift and go to state 110
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120

state 83

    (69) while -> WHILE . OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    OPENPAREN       shift and go to state 122


state 84

    (15) alt2class -> var alt2class .

    CLASS           reduce using rule 15 (alt2class -> var alt2class .)
    VAR             reduce using rule 15 (alt2class -> var alt2class .)
    FUNC            reduce using rule 15 (alt2class -> var alt2class .)
    MAIN            reduce using rule 15 (alt2class -> var alt2class .)


state 85

    (16) alt2class -> function alt2class .

    CLASS           reduce using rule 16 (alt2class -> function alt2class .)
    VAR             reduce using rule 16 (alt2class -> function alt2class .)
    FUNC            reduce using rule 16 (alt2class -> function alt2class .)
    MAIN            reduce using rule 16 (alt2class -> function alt2class .)


state 86

    (17) alt2class -> constructor CLOSECURLY . SEMICOLON

    SEMICOLON       shift and go to state 123


state 87

    (19) constructor -> CONSTRUCTOR save_constructor . OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    OPENPAREN       shift and go to state 124


state 88

    (32) listidsaltz -> OPENBRACKET CTEINT . CLOSEBRACKET listidsaltp

    CLOSEBRACKET    shift and go to state 125


state 89

    (31) listidsaltz -> COMMA listids .

    TWODOTS         reduce using rule 31 (listidsaltz -> COMMA listids .)


state 90

    (45) params -> ID TWODOTS type altparams .

    CLOSEPAREN      reduce using rule 45 (params -> ID TWODOTS type altparams .)
    ID              reduce using rule 45 (params -> ID TWODOTS type altparams .)


state 91

    (46) altparams -> COMMA . ID TWODOTS type altparams

    ID              shift and go to state 126


state 92

    (47) altparams -> empty .

    CLOSEPAREN      reduce using rule 47 (altparams -> empty .)
    ID              reduce using rule 47 (altparams -> empty .)


state 93

    (36) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function . OPENCURLY alt3func

    OPENCURLY       shift and go to state 127


state 94

    (39) alt2func -> TWODOTS type .

    OPENCURLY       reduce using rule 39 (alt2func -> TWODOTS type .)


state 95

    (8) altmain -> var altmain .

    $end            reduce using rule 8 (altmain -> var altmain .)


state 96

    (9) altmain -> estatuto altmain .

    $end            reduce using rule 9 (altmain -> estatuto altmain .)


state 97

    (121) assign -> ID assign1 . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 128


state 98

    (65) voidcall -> ID OPENPAREN . CLOSEPAREN
    (66) voidcall -> ID OPENPAREN . expresion altcall
    (86) expresion -> . exp altexpresion
    (97) exp -> . termino
    (98) exp -> . termino altexp
    (102) termino -> . factor
    (103) termino -> . factor alttermino
    (113) factor -> . OPENPAREN expresion CLOSEPAREN
    (114) factor -> . SUM varcall
    (115) factor -> . SUBTRACT varcall
    (116) factor -> . varcall
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    CLOSEPAREN      shift and go to state 129
    OPENPAREN       shift and go to state 108
    SUM             shift and go to state 109
    SUBTRACT        shift and go to state 111
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121

    expresion                      shift and go to state 130
    exp                            shift and go to state 105
    termino                        shift and go to state 106
    factor                         shift and go to state 107
    varcall                        shift and go to state 110
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120

state 99

    (122) assign1 -> DOT . ID assign1

    ID              shift and go to state 131


state 100

    (123) assign1 -> empty .

    EQUALS          reduce using rule 123 (assign1 -> empty .)


state 101

    (117) condition -> IF OPENPAREN . expresion CLOSEPAREN OPENCURLY altcondition
    (118) condition -> IF OPENPAREN . expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (86) expresion -> . exp altexpresion
    (97) exp -> . termino
    (98) exp -> . termino altexp
    (102) termino -> . factor
    (103) termino -> . factor alttermino
    (113) factor -> . OPENPAREN expresion CLOSEPAREN
    (114) factor -> . SUM varcall
    (115) factor -> . SUBTRACT varcall
    (116) factor -> . varcall
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 108
    SUM             shift and go to state 109
    SUBTRACT        shift and go to state 111
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121

    expresion                      shift and go to state 132
    exp                            shift and go to state 105
    termino                        shift and go to state 106
    factor                         shift and go to state 107
    varcall                        shift and go to state 110
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120

state 102

    (108) write -> OUTPUT OPENPAREN . varcall altwrite
    (109) write -> OUTPUT OPENPAREN . expresion altwrite
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (86) expresion -> . exp altexpresion
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (97) exp -> . termino
    (98) exp -> . termino altexp
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN
    (102) termino -> . factor
    (103) termino -> . factor alttermino
    (113) factor -> . OPENPAREN expresion CLOSEPAREN
    (114) factor -> . SUM varcall
    (115) factor -> . SUBTRACT varcall
    (116) factor -> . varcall

    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121
    OPENPAREN       shift and go to state 108
    SUM             shift and go to state 109
    SUBTRACT        shift and go to state 111

    varcall                        shift and go to state 133
    expresion                      shift and go to state 134
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    exp                            shift and go to state 105
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120
    termino                        shift and go to state 106
    factor                         shift and go to state 107

state 103

    (107) read -> INPUT OPENPAREN . ID CLOSEPAREN SEMICOLON

    ID              shift and go to state 135


state 104

    (124) return -> RETURN expresion . SEMICOLON

    SEMICOLON       shift and go to state 136


state 105

    (86) expresion -> exp . altexpresion
    (87) altexpresion -> . altexpresion2 exp
    (88) altexpresion -> . empty
    (89) altexpresion2 -> . SAMEAS
    (90) altexpresion2 -> . BIGGERTHAN
    (91) altexpresion2 -> . BIGGEREQUALSTHAN
    (92) altexpresion2 -> . SMALLTHAN
    (93) altexpresion2 -> . SMALLEQUALSTHAN
    (94) altexpresion2 -> . DIFFERENTTHAN
    (95) altexpresion2 -> . AND
    (96) altexpresion2 -> . OR
    (125) empty -> .

    SAMEAS          shift and go to state 140
    BIGGERTHAN      shift and go to state 141
    BIGGEREQUALSTHAN shift and go to state 142
    SMALLTHAN       shift and go to state 143
    SMALLEQUALSTHAN shift and go to state 144
    DIFFERENTTHAN   shift and go to state 145
    AND             shift and go to state 146
    OR              shift and go to state 147
    SEMICOLON       reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    CLOSEPAREN      reduce using rule 125 (empty -> .)
    OPENPAREN       reduce using rule 125 (empty -> .)
    SUM             reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    TRUE            reduce using rule 125 (empty -> .)
    FALSE           reduce using rule 125 (empty -> .)
    CTEFLOAT        reduce using rule 125 (empty -> .)
    CTESTRING       reduce using rule 125 (empty -> .)
    CTEINT          reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    CLOSECURLY      reduce using rule 125 (empty -> .)
    VAR             reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    OUTPUT          reduce using rule 125 (empty -> .)
    INPUT           reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    WHILE           reduce using rule 125 (empty -> .)

    altexpresion                   shift and go to state 137
    altexpresion2                  shift and go to state 138
    empty                          shift and go to state 139

state 106

    (97) exp -> termino .
    (98) exp -> termino . altexp
    (99) altexp -> . SUM termino altexp
    (100) altexp -> . SUBTRACT termino altexp
    (101) altexp -> . empty
    (125) empty -> .

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! reduce/reduce conflict for SAMEAS resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for BIGGERTHAN resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for BIGGEREQUALSTHAN resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for SMALLTHAN resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for SMALLEQUALSTHAN resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for DIFFERENTTHAN resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for AND resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for OR resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for COMMA resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for CLOSEPAREN resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for OPENPAREN resolved using rule 97 (exp -> termino .)
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! reduce/reduce conflict for TRUE resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for FALSE resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for CTESTRING resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for CTEINT resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for ID resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for CLOSECURLY resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for VAR resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for IF resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for INPUT resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for RETURN resolved using rule 97 (exp -> termino .)
  ! reduce/reduce conflict for WHILE resolved using rule 97 (exp -> termino .)
    SAMEAS          reduce using rule 97 (exp -> termino .)
    BIGGERTHAN      reduce using rule 97 (exp -> termino .)
    BIGGEREQUALSTHAN reduce using rule 97 (exp -> termino .)
    SMALLTHAN       reduce using rule 97 (exp -> termino .)
    SMALLEQUALSTHAN reduce using rule 97 (exp -> termino .)
    DIFFERENTTHAN   reduce using rule 97 (exp -> termino .)
    AND             reduce using rule 97 (exp -> termino .)
    OR              reduce using rule 97 (exp -> termino .)
    SEMICOLON       reduce using rule 97 (exp -> termino .)
    COMMA           reduce using rule 97 (exp -> termino .)
    CLOSEPAREN      reduce using rule 97 (exp -> termino .)
    OPENPAREN       reduce using rule 97 (exp -> termino .)
    TRUE            reduce using rule 97 (exp -> termino .)
    FALSE           reduce using rule 97 (exp -> termino .)
    CTEFLOAT        reduce using rule 97 (exp -> termino .)
    CTESTRING       reduce using rule 97 (exp -> termino .)
    CTEINT          reduce using rule 97 (exp -> termino .)
    ID              reduce using rule 97 (exp -> termino .)
    CLOSECURLY      reduce using rule 97 (exp -> termino .)
    VAR             reduce using rule 97 (exp -> termino .)
    IF              reduce using rule 97 (exp -> termino .)
    OUTPUT          reduce using rule 97 (exp -> termino .)
    INPUT           reduce using rule 97 (exp -> termino .)
    RETURN          reduce using rule 97 (exp -> termino .)
    WHILE           reduce using rule 97 (exp -> termino .)
    SUM             shift and go to state 149
    SUBTRACT        shift and go to state 150

  ! SUM             [ reduce using rule 97 (exp -> termino .) ]
  ! SUBTRACT        [ reduce using rule 97 (exp -> termino .) ]
  ! SAMEAS          [ reduce using rule 125 (empty -> .) ]
  ! BIGGERTHAN      [ reduce using rule 125 (empty -> .) ]
  ! BIGGEREQUALSTHAN [ reduce using rule 125 (empty -> .) ]
  ! SMALLTHAN       [ reduce using rule 125 (empty -> .) ]
  ! SMALLEQUALSTHAN [ reduce using rule 125 (empty -> .) ]
  ! DIFFERENTTHAN   [ reduce using rule 125 (empty -> .) ]
  ! AND             [ reduce using rule 125 (empty -> .) ]
  ! OR              [ reduce using rule 125 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 125 (empty -> .) ]
  ! COMMA           [ reduce using rule 125 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 125 (empty -> .) ]
  ! OPENPAREN       [ reduce using rule 125 (empty -> .) ]
  ! SUM             [ reduce using rule 125 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 125 (empty -> .) ]
  ! TRUE            [ reduce using rule 125 (empty -> .) ]
  ! FALSE           [ reduce using rule 125 (empty -> .) ]
  ! CTEFLOAT        [ reduce using rule 125 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 125 (empty -> .) ]
  ! CTEINT          [ reduce using rule 125 (empty -> .) ]
  ! ID              [ reduce using rule 125 (empty -> .) ]
  ! CLOSECURLY      [ reduce using rule 125 (empty -> .) ]
  ! VAR             [ reduce using rule 125 (empty -> .) ]
  ! IF              [ reduce using rule 125 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 125 (empty -> .) ]
  ! INPUT           [ reduce using rule 125 (empty -> .) ]
  ! RETURN          [ reduce using rule 125 (empty -> .) ]
  ! WHILE           [ reduce using rule 125 (empty -> .) ]

    altexp                         shift and go to state 148
    empty                          shift and go to state 151

state 107

    (102) termino -> factor .
    (103) termino -> factor . alttermino
    (104) alttermino -> . TIMES factor alttermino
    (105) alttermino -> . DIV factor alttermino
    (106) alttermino -> . empty
    (125) empty -> .

  ! reduce/reduce conflict for SUM resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for SUBTRACT resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for SAMEAS resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for BIGGERTHAN resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for BIGGEREQUALSTHAN resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for SMALLTHAN resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for SMALLEQUALSTHAN resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for DIFFERENTTHAN resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for AND resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for OR resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for COMMA resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for CLOSEPAREN resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for OPENPAREN resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for TRUE resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for FALSE resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for CTESTRING resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for CTEINT resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for ID resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for CLOSECURLY resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for VAR resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for IF resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for INPUT resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for RETURN resolved using rule 102 (termino -> factor .)
  ! reduce/reduce conflict for WHILE resolved using rule 102 (termino -> factor .)
    SUM             reduce using rule 102 (termino -> factor .)
    SUBTRACT        reduce using rule 102 (termino -> factor .)
    SAMEAS          reduce using rule 102 (termino -> factor .)
    BIGGERTHAN      reduce using rule 102 (termino -> factor .)
    BIGGEREQUALSTHAN reduce using rule 102 (termino -> factor .)
    SMALLTHAN       reduce using rule 102 (termino -> factor .)
    SMALLEQUALSTHAN reduce using rule 102 (termino -> factor .)
    DIFFERENTTHAN   reduce using rule 102 (termino -> factor .)
    AND             reduce using rule 102 (termino -> factor .)
    OR              reduce using rule 102 (termino -> factor .)
    SEMICOLON       reduce using rule 102 (termino -> factor .)
    COMMA           reduce using rule 102 (termino -> factor .)
    CLOSEPAREN      reduce using rule 102 (termino -> factor .)
    OPENPAREN       reduce using rule 102 (termino -> factor .)
    TRUE            reduce using rule 102 (termino -> factor .)
    FALSE           reduce using rule 102 (termino -> factor .)
    CTEFLOAT        reduce using rule 102 (termino -> factor .)
    CTESTRING       reduce using rule 102 (termino -> factor .)
    CTEINT          reduce using rule 102 (termino -> factor .)
    ID              reduce using rule 102 (termino -> factor .)
    CLOSECURLY      reduce using rule 102 (termino -> factor .)
    VAR             reduce using rule 102 (termino -> factor .)
    IF              reduce using rule 102 (termino -> factor .)
    OUTPUT          reduce using rule 102 (termino -> factor .)
    INPUT           reduce using rule 102 (termino -> factor .)
    RETURN          reduce using rule 102 (termino -> factor .)
    WHILE           reduce using rule 102 (termino -> factor .)
    TIMES           shift and go to state 153
    DIV             shift and go to state 154

  ! SUM             [ reduce using rule 125 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 125 (empty -> .) ]
  ! SAMEAS          [ reduce using rule 125 (empty -> .) ]
  ! BIGGERTHAN      [ reduce using rule 125 (empty -> .) ]
  ! BIGGEREQUALSTHAN [ reduce using rule 125 (empty -> .) ]
  ! SMALLTHAN       [ reduce using rule 125 (empty -> .) ]
  ! SMALLEQUALSTHAN [ reduce using rule 125 (empty -> .) ]
  ! DIFFERENTTHAN   [ reduce using rule 125 (empty -> .) ]
  ! AND             [ reduce using rule 125 (empty -> .) ]
  ! OR              [ reduce using rule 125 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 125 (empty -> .) ]
  ! COMMA           [ reduce using rule 125 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 125 (empty -> .) ]
  ! OPENPAREN       [ reduce using rule 125 (empty -> .) ]
  ! TRUE            [ reduce using rule 125 (empty -> .) ]
  ! FALSE           [ reduce using rule 125 (empty -> .) ]
  ! CTEFLOAT        [ reduce using rule 125 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 125 (empty -> .) ]
  ! CTEINT          [ reduce using rule 125 (empty -> .) ]
  ! ID              [ reduce using rule 125 (empty -> .) ]
  ! CLOSECURLY      [ reduce using rule 125 (empty -> .) ]
  ! VAR             [ reduce using rule 125 (empty -> .) ]
  ! IF              [ reduce using rule 125 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 125 (empty -> .) ]
  ! INPUT           [ reduce using rule 125 (empty -> .) ]
  ! RETURN          [ reduce using rule 125 (empty -> .) ]
  ! WHILE           [ reduce using rule 125 (empty -> .) ]

    alttermino                     shift and go to state 152
    empty                          shift and go to state 155

state 108

    (113) factor -> OPENPAREN . expresion CLOSEPAREN
    (86) expresion -> . exp altexpresion
    (97) exp -> . termino
    (98) exp -> . termino altexp
    (102) termino -> . factor
    (103) termino -> . factor alttermino
    (113) factor -> . OPENPAREN expresion CLOSEPAREN
    (114) factor -> . SUM varcall
    (115) factor -> . SUBTRACT varcall
    (116) factor -> . varcall
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 108
    SUM             shift and go to state 109
    SUBTRACT        shift and go to state 111
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121

    expresion                      shift and go to state 156
    exp                            shift and go to state 105
    termino                        shift and go to state 106
    factor                         shift and go to state 107
    varcall                        shift and go to state 110
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120

state 109

    (114) factor -> SUM . varcall
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121

    varcall                        shift and go to state 157
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120

state 110

    (116) factor -> varcall .

    TIMES           reduce using rule 116 (factor -> varcall .)
    DIV             reduce using rule 116 (factor -> varcall .)
    SUM             reduce using rule 116 (factor -> varcall .)
    SUBTRACT        reduce using rule 116 (factor -> varcall .)
    SAMEAS          reduce using rule 116 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 116 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 116 (factor -> varcall .)
    SMALLTHAN       reduce using rule 116 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 116 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 116 (factor -> varcall .)
    AND             reduce using rule 116 (factor -> varcall .)
    OR              reduce using rule 116 (factor -> varcall .)
    SEMICOLON       reduce using rule 116 (factor -> varcall .)
    COMMA           reduce using rule 116 (factor -> varcall .)
    CLOSEPAREN      reduce using rule 116 (factor -> varcall .)
    OPENPAREN       reduce using rule 116 (factor -> varcall .)
    TRUE            reduce using rule 116 (factor -> varcall .)
    FALSE           reduce using rule 116 (factor -> varcall .)
    CTEFLOAT        reduce using rule 116 (factor -> varcall .)
    CTESTRING       reduce using rule 116 (factor -> varcall .)
    CTEINT          reduce using rule 116 (factor -> varcall .)
    ID              reduce using rule 116 (factor -> varcall .)
    CLOSECURLY      reduce using rule 116 (factor -> varcall .)
    VAR             reduce using rule 116 (factor -> varcall .)
    IF              reduce using rule 116 (factor -> varcall .)
    OUTPUT          reduce using rule 116 (factor -> varcall .)
    INPUT           reduce using rule 116 (factor -> varcall .)
    RETURN          reduce using rule 116 (factor -> varcall .)
    WHILE           reduce using rule 116 (factor -> varcall .)


state 111

    (115) factor -> SUBTRACT . varcall
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121

    varcall                        shift and go to state 158
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120

state 112

    (72) varcall -> varcte .

    TIMES           reduce using rule 72 (varcall -> varcte .)
    DIV             reduce using rule 72 (varcall -> varcte .)
    SUM             reduce using rule 72 (varcall -> varcte .)
    SUBTRACT        reduce using rule 72 (varcall -> varcte .)
    SAMEAS          reduce using rule 72 (varcall -> varcte .)
    BIGGERTHAN      reduce using rule 72 (varcall -> varcte .)
    BIGGEREQUALSTHAN reduce using rule 72 (varcall -> varcte .)
    SMALLTHAN       reduce using rule 72 (varcall -> varcte .)
    SMALLEQUALSTHAN reduce using rule 72 (varcall -> varcte .)
    DIFFERENTTHAN   reduce using rule 72 (varcall -> varcte .)
    AND             reduce using rule 72 (varcall -> varcte .)
    OR              reduce using rule 72 (varcall -> varcte .)
    SEMICOLON       reduce using rule 72 (varcall -> varcte .)
    COMMA           reduce using rule 72 (varcall -> varcte .)
    CLOSEPAREN      reduce using rule 72 (varcall -> varcte .)
    OPENPAREN       reduce using rule 72 (varcall -> varcte .)
    TRUE            reduce using rule 72 (varcall -> varcte .)
    FALSE           reduce using rule 72 (varcall -> varcte .)
    CTEFLOAT        reduce using rule 72 (varcall -> varcte .)
    CTESTRING       reduce using rule 72 (varcall -> varcte .)
    CTEINT          reduce using rule 72 (varcall -> varcte .)
    ID              reduce using rule 72 (varcall -> varcte .)
    CLOSECURLY      reduce using rule 72 (varcall -> varcte .)
    VAR             reduce using rule 72 (varcall -> varcte .)
    IF              reduce using rule 72 (varcall -> varcte .)
    OUTPUT          reduce using rule 72 (varcall -> varcte .)
    INPUT           reduce using rule 72 (varcall -> varcte .)
    RETURN          reduce using rule 72 (varcall -> varcte .)
    WHILE           reduce using rule 72 (varcall -> varcte .)


state 113

    (73) varcall -> varcomplicated .

    TIMES           reduce using rule 73 (varcall -> varcomplicated .)
    DIV             reduce using rule 73 (varcall -> varcomplicated .)
    SUM             reduce using rule 73 (varcall -> varcomplicated .)
    SUBTRACT        reduce using rule 73 (varcall -> varcomplicated .)
    SAMEAS          reduce using rule 73 (varcall -> varcomplicated .)
    BIGGERTHAN      reduce using rule 73 (varcall -> varcomplicated .)
    BIGGEREQUALSTHAN reduce using rule 73 (varcall -> varcomplicated .)
    SMALLTHAN       reduce using rule 73 (varcall -> varcomplicated .)
    SMALLEQUALSTHAN reduce using rule 73 (varcall -> varcomplicated .)
    DIFFERENTTHAN   reduce using rule 73 (varcall -> varcomplicated .)
    AND             reduce using rule 73 (varcall -> varcomplicated .)
    OR              reduce using rule 73 (varcall -> varcomplicated .)
    SEMICOLON       reduce using rule 73 (varcall -> varcomplicated .)
    COMMA           reduce using rule 73 (varcall -> varcomplicated .)
    CLOSEPAREN      reduce using rule 73 (varcall -> varcomplicated .)
    OPENPAREN       reduce using rule 73 (varcall -> varcomplicated .)
    TRUE            reduce using rule 73 (varcall -> varcomplicated .)
    FALSE           reduce using rule 73 (varcall -> varcomplicated .)
    CTEFLOAT        reduce using rule 73 (varcall -> varcomplicated .)
    CTESTRING       reduce using rule 73 (varcall -> varcomplicated .)
    CTEINT          reduce using rule 73 (varcall -> varcomplicated .)
    ID              reduce using rule 73 (varcall -> varcomplicated .)
    CLOSECURLY      reduce using rule 73 (varcall -> varcomplicated .)
    VAR             reduce using rule 73 (varcall -> varcomplicated .)
    IF              reduce using rule 73 (varcall -> varcomplicated .)
    OUTPUT          reduce using rule 73 (varcall -> varcomplicated .)
    INPUT           reduce using rule 73 (varcall -> varcomplicated .)
    RETURN          reduce using rule 73 (varcall -> varcomplicated .)
    WHILE           reduce using rule 73 (varcall -> varcomplicated .)


state 114

    (74) varcte -> TRUE .

    TIMES           reduce using rule 74 (varcte -> TRUE .)
    DIV             reduce using rule 74 (varcte -> TRUE .)
    SUM             reduce using rule 74 (varcte -> TRUE .)
    SUBTRACT        reduce using rule 74 (varcte -> TRUE .)
    SAMEAS          reduce using rule 74 (varcte -> TRUE .)
    BIGGERTHAN      reduce using rule 74 (varcte -> TRUE .)
    BIGGEREQUALSTHAN reduce using rule 74 (varcte -> TRUE .)
    SMALLTHAN       reduce using rule 74 (varcte -> TRUE .)
    SMALLEQUALSTHAN reduce using rule 74 (varcte -> TRUE .)
    DIFFERENTTHAN   reduce using rule 74 (varcte -> TRUE .)
    AND             reduce using rule 74 (varcte -> TRUE .)
    OR              reduce using rule 74 (varcte -> TRUE .)
    SEMICOLON       reduce using rule 74 (varcte -> TRUE .)
    COMMA           reduce using rule 74 (varcte -> TRUE .)
    CLOSEPAREN      reduce using rule 74 (varcte -> TRUE .)
    OPENPAREN       reduce using rule 74 (varcte -> TRUE .)
    TRUE            reduce using rule 74 (varcte -> TRUE .)
    FALSE           reduce using rule 74 (varcte -> TRUE .)
    CTEFLOAT        reduce using rule 74 (varcte -> TRUE .)
    CTESTRING       reduce using rule 74 (varcte -> TRUE .)
    CTEINT          reduce using rule 74 (varcte -> TRUE .)
    ID              reduce using rule 74 (varcte -> TRUE .)
    CLOSECURLY      reduce using rule 74 (varcte -> TRUE .)
    VAR             reduce using rule 74 (varcte -> TRUE .)
    IF              reduce using rule 74 (varcte -> TRUE .)
    OUTPUT          reduce using rule 74 (varcte -> TRUE .)
    INPUT           reduce using rule 74 (varcte -> TRUE .)
    RETURN          reduce using rule 74 (varcte -> TRUE .)
    WHILE           reduce using rule 74 (varcte -> TRUE .)


state 115

    (75) varcte -> FALSE .

    TIMES           reduce using rule 75 (varcte -> FALSE .)
    DIV             reduce using rule 75 (varcte -> FALSE .)
    SUM             reduce using rule 75 (varcte -> FALSE .)
    SUBTRACT        reduce using rule 75 (varcte -> FALSE .)
    SAMEAS          reduce using rule 75 (varcte -> FALSE .)
    BIGGERTHAN      reduce using rule 75 (varcte -> FALSE .)
    BIGGEREQUALSTHAN reduce using rule 75 (varcte -> FALSE .)
    SMALLTHAN       reduce using rule 75 (varcte -> FALSE .)
    SMALLEQUALSTHAN reduce using rule 75 (varcte -> FALSE .)
    DIFFERENTTHAN   reduce using rule 75 (varcte -> FALSE .)
    AND             reduce using rule 75 (varcte -> FALSE .)
    OR              reduce using rule 75 (varcte -> FALSE .)
    SEMICOLON       reduce using rule 75 (varcte -> FALSE .)
    COMMA           reduce using rule 75 (varcte -> FALSE .)
    CLOSEPAREN      reduce using rule 75 (varcte -> FALSE .)
    OPENPAREN       reduce using rule 75 (varcte -> FALSE .)
    TRUE            reduce using rule 75 (varcte -> FALSE .)
    FALSE           reduce using rule 75 (varcte -> FALSE .)
    CTEFLOAT        reduce using rule 75 (varcte -> FALSE .)
    CTESTRING       reduce using rule 75 (varcte -> FALSE .)
    CTEINT          reduce using rule 75 (varcte -> FALSE .)
    ID              reduce using rule 75 (varcte -> FALSE .)
    CLOSECURLY      reduce using rule 75 (varcte -> FALSE .)
    VAR             reduce using rule 75 (varcte -> FALSE .)
    IF              reduce using rule 75 (varcte -> FALSE .)
    OUTPUT          reduce using rule 75 (varcte -> FALSE .)
    INPUT           reduce using rule 75 (varcte -> FALSE .)
    RETURN          reduce using rule 75 (varcte -> FALSE .)
    WHILE           reduce using rule 75 (varcte -> FALSE .)


state 116

    (76) varcte -> CTEFLOAT .

    TIMES           reduce using rule 76 (varcte -> CTEFLOAT .)
    DIV             reduce using rule 76 (varcte -> CTEFLOAT .)
    SUM             reduce using rule 76 (varcte -> CTEFLOAT .)
    SUBTRACT        reduce using rule 76 (varcte -> CTEFLOAT .)
    SAMEAS          reduce using rule 76 (varcte -> CTEFLOAT .)
    BIGGERTHAN      reduce using rule 76 (varcte -> CTEFLOAT .)
    BIGGEREQUALSTHAN reduce using rule 76 (varcte -> CTEFLOAT .)
    SMALLTHAN       reduce using rule 76 (varcte -> CTEFLOAT .)
    SMALLEQUALSTHAN reduce using rule 76 (varcte -> CTEFLOAT .)
    DIFFERENTTHAN   reduce using rule 76 (varcte -> CTEFLOAT .)
    AND             reduce using rule 76 (varcte -> CTEFLOAT .)
    OR              reduce using rule 76 (varcte -> CTEFLOAT .)
    SEMICOLON       reduce using rule 76 (varcte -> CTEFLOAT .)
    COMMA           reduce using rule 76 (varcte -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 76 (varcte -> CTEFLOAT .)
    OPENPAREN       reduce using rule 76 (varcte -> CTEFLOAT .)
    TRUE            reduce using rule 76 (varcte -> CTEFLOAT .)
    FALSE           reduce using rule 76 (varcte -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 76 (varcte -> CTEFLOAT .)
    CTESTRING       reduce using rule 76 (varcte -> CTEFLOAT .)
    CTEINT          reduce using rule 76 (varcte -> CTEFLOAT .)
    ID              reduce using rule 76 (varcte -> CTEFLOAT .)
    CLOSECURLY      reduce using rule 76 (varcte -> CTEFLOAT .)
    VAR             reduce using rule 76 (varcte -> CTEFLOAT .)
    IF              reduce using rule 76 (varcte -> CTEFLOAT .)
    OUTPUT          reduce using rule 76 (varcte -> CTEFLOAT .)
    INPUT           reduce using rule 76 (varcte -> CTEFLOAT .)
    RETURN          reduce using rule 76 (varcte -> CTEFLOAT .)
    WHILE           reduce using rule 76 (varcte -> CTEFLOAT .)


state 117

    (77) varcte -> CTESTRING .

    TIMES           reduce using rule 77 (varcte -> CTESTRING .)
    DIV             reduce using rule 77 (varcte -> CTESTRING .)
    SUM             reduce using rule 77 (varcte -> CTESTRING .)
    SUBTRACT        reduce using rule 77 (varcte -> CTESTRING .)
    SAMEAS          reduce using rule 77 (varcte -> CTESTRING .)
    BIGGERTHAN      reduce using rule 77 (varcte -> CTESTRING .)
    BIGGEREQUALSTHAN reduce using rule 77 (varcte -> CTESTRING .)
    SMALLTHAN       reduce using rule 77 (varcte -> CTESTRING .)
    SMALLEQUALSTHAN reduce using rule 77 (varcte -> CTESTRING .)
    DIFFERENTTHAN   reduce using rule 77 (varcte -> CTESTRING .)
    AND             reduce using rule 77 (varcte -> CTESTRING .)
    OR              reduce using rule 77 (varcte -> CTESTRING .)
    SEMICOLON       reduce using rule 77 (varcte -> CTESTRING .)
    COMMA           reduce using rule 77 (varcte -> CTESTRING .)
    CLOSEPAREN      reduce using rule 77 (varcte -> CTESTRING .)
    OPENPAREN       reduce using rule 77 (varcte -> CTESTRING .)
    TRUE            reduce using rule 77 (varcte -> CTESTRING .)
    FALSE           reduce using rule 77 (varcte -> CTESTRING .)
    CTEFLOAT        reduce using rule 77 (varcte -> CTESTRING .)
    CTESTRING       reduce using rule 77 (varcte -> CTESTRING .)
    CTEINT          reduce using rule 77 (varcte -> CTESTRING .)
    ID              reduce using rule 77 (varcte -> CTESTRING .)
    CLOSECURLY      reduce using rule 77 (varcte -> CTESTRING .)
    VAR             reduce using rule 77 (varcte -> CTESTRING .)
    IF              reduce using rule 77 (varcte -> CTESTRING .)
    OUTPUT          reduce using rule 77 (varcte -> CTESTRING .)
    INPUT           reduce using rule 77 (varcte -> CTESTRING .)
    RETURN          reduce using rule 77 (varcte -> CTESTRING .)
    WHILE           reduce using rule 77 (varcte -> CTESTRING .)


state 118

    (78) varcte -> CTEINT .

    TIMES           reduce using rule 78 (varcte -> CTEINT .)
    DIV             reduce using rule 78 (varcte -> CTEINT .)
    SUM             reduce using rule 78 (varcte -> CTEINT .)
    SUBTRACT        reduce using rule 78 (varcte -> CTEINT .)
    SAMEAS          reduce using rule 78 (varcte -> CTEINT .)
    BIGGERTHAN      reduce using rule 78 (varcte -> CTEINT .)
    BIGGEREQUALSTHAN reduce using rule 78 (varcte -> CTEINT .)
    SMALLTHAN       reduce using rule 78 (varcte -> CTEINT .)
    SMALLEQUALSTHAN reduce using rule 78 (varcte -> CTEINT .)
    DIFFERENTTHAN   reduce using rule 78 (varcte -> CTEINT .)
    AND             reduce using rule 78 (varcte -> CTEINT .)
    OR              reduce using rule 78 (varcte -> CTEINT .)
    SEMICOLON       reduce using rule 78 (varcte -> CTEINT .)
    COMMA           reduce using rule 78 (varcte -> CTEINT .)
    CLOSEPAREN      reduce using rule 78 (varcte -> CTEINT .)
    OPENPAREN       reduce using rule 78 (varcte -> CTEINT .)
    TRUE            reduce using rule 78 (varcte -> CTEINT .)
    FALSE           reduce using rule 78 (varcte -> CTEINT .)
    CTEFLOAT        reduce using rule 78 (varcte -> CTEINT .)
    CTESTRING       reduce using rule 78 (varcte -> CTEINT .)
    CTEINT          reduce using rule 78 (varcte -> CTEINT .)
    ID              reduce using rule 78 (varcte -> CTEINT .)
    CLOSECURLY      reduce using rule 78 (varcte -> CTEINT .)
    VAR             reduce using rule 78 (varcte -> CTEINT .)
    IF              reduce using rule 78 (varcte -> CTEINT .)
    OUTPUT          reduce using rule 78 (varcte -> CTEINT .)
    INPUT           reduce using rule 78 (varcte -> CTEINT .)
    RETURN          reduce using rule 78 (varcte -> CTEINT .)
    WHILE           reduce using rule 78 (varcte -> CTEINT .)


state 119

    (79) varcomplicated -> varcomp1 .

    TIMES           reduce using rule 79 (varcomplicated -> varcomp1 .)
    DIV             reduce using rule 79 (varcomplicated -> varcomp1 .)
    SUM             reduce using rule 79 (varcomplicated -> varcomp1 .)
    SUBTRACT        reduce using rule 79 (varcomplicated -> varcomp1 .)
    SAMEAS          reduce using rule 79 (varcomplicated -> varcomp1 .)
    BIGGERTHAN      reduce using rule 79 (varcomplicated -> varcomp1 .)
    BIGGEREQUALSTHAN reduce using rule 79 (varcomplicated -> varcomp1 .)
    SMALLTHAN       reduce using rule 79 (varcomplicated -> varcomp1 .)
    SMALLEQUALSTHAN reduce using rule 79 (varcomplicated -> varcomp1 .)
    DIFFERENTTHAN   reduce using rule 79 (varcomplicated -> varcomp1 .)
    AND             reduce using rule 79 (varcomplicated -> varcomp1 .)
    OR              reduce using rule 79 (varcomplicated -> varcomp1 .)
    SEMICOLON       reduce using rule 79 (varcomplicated -> varcomp1 .)
    COMMA           reduce using rule 79 (varcomplicated -> varcomp1 .)
    CLOSEPAREN      reduce using rule 79 (varcomplicated -> varcomp1 .)
    OPENPAREN       reduce using rule 79 (varcomplicated -> varcomp1 .)
    TRUE            reduce using rule 79 (varcomplicated -> varcomp1 .)
    FALSE           reduce using rule 79 (varcomplicated -> varcomp1 .)
    CTEFLOAT        reduce using rule 79 (varcomplicated -> varcomp1 .)
    CTESTRING       reduce using rule 79 (varcomplicated -> varcomp1 .)
    CTEINT          reduce using rule 79 (varcomplicated -> varcomp1 .)
    ID              reduce using rule 79 (varcomplicated -> varcomp1 .)
    CLOSECURLY      reduce using rule 79 (varcomplicated -> varcomp1 .)
    VAR             reduce using rule 79 (varcomplicated -> varcomp1 .)
    IF              reduce using rule 79 (varcomplicated -> varcomp1 .)
    OUTPUT          reduce using rule 79 (varcomplicated -> varcomp1 .)
    INPUT           reduce using rule 79 (varcomplicated -> varcomp1 .)
    RETURN          reduce using rule 79 (varcomplicated -> varcomp1 .)
    WHILE           reduce using rule 79 (varcomplicated -> varcomp1 .)


state 120

    (80) varcomplicated -> callfunc .

    TIMES           reduce using rule 80 (varcomplicated -> callfunc .)
    DIV             reduce using rule 80 (varcomplicated -> callfunc .)
    SUM             reduce using rule 80 (varcomplicated -> callfunc .)
    SUBTRACT        reduce using rule 80 (varcomplicated -> callfunc .)
    SAMEAS          reduce using rule 80 (varcomplicated -> callfunc .)
    BIGGERTHAN      reduce using rule 80 (varcomplicated -> callfunc .)
    BIGGEREQUALSTHAN reduce using rule 80 (varcomplicated -> callfunc .)
    SMALLTHAN       reduce using rule 80 (varcomplicated -> callfunc .)
    SMALLEQUALSTHAN reduce using rule 80 (varcomplicated -> callfunc .)
    DIFFERENTTHAN   reduce using rule 80 (varcomplicated -> callfunc .)
    AND             reduce using rule 80 (varcomplicated -> callfunc .)
    OR              reduce using rule 80 (varcomplicated -> callfunc .)
    SEMICOLON       reduce using rule 80 (varcomplicated -> callfunc .)
    COMMA           reduce using rule 80 (varcomplicated -> callfunc .)
    CLOSEPAREN      reduce using rule 80 (varcomplicated -> callfunc .)
    OPENPAREN       reduce using rule 80 (varcomplicated -> callfunc .)
    TRUE            reduce using rule 80 (varcomplicated -> callfunc .)
    FALSE           reduce using rule 80 (varcomplicated -> callfunc .)
    CTEFLOAT        reduce using rule 80 (varcomplicated -> callfunc .)
    CTESTRING       reduce using rule 80 (varcomplicated -> callfunc .)
    CTEINT          reduce using rule 80 (varcomplicated -> callfunc .)
    ID              reduce using rule 80 (varcomplicated -> callfunc .)
    CLOSECURLY      reduce using rule 80 (varcomplicated -> callfunc .)
    VAR             reduce using rule 80 (varcomplicated -> callfunc .)
    IF              reduce using rule 80 (varcomplicated -> callfunc .)
    OUTPUT          reduce using rule 80 (varcomplicated -> callfunc .)
    INPUT           reduce using rule 80 (varcomplicated -> callfunc .)
    RETURN          reduce using rule 80 (varcomplicated -> callfunc .)
    WHILE           reduce using rule 80 (varcomplicated -> callfunc .)


state 121

    (81) varcomp1 -> ID . varcomp2
    (48) callfunc -> ID . OPENPAREN altcall CLOSEPAREN
    (82) varcomp2 -> . DOT varcomp3
    (83) varcomp2 -> . empty
    (125) empty -> .

  ! shift/reduce conflict for OPENPAREN resolved as shift
    OPENPAREN       shift and go to state 160
    DOT             shift and go to state 161
    TIMES           reduce using rule 125 (empty -> .)
    DIV             reduce using rule 125 (empty -> .)
    SUM             reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    SAMEAS          reduce using rule 125 (empty -> .)
    BIGGERTHAN      reduce using rule 125 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 125 (empty -> .)
    SMALLTHAN       reduce using rule 125 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 125 (empty -> .)
    DIFFERENTTHAN   reduce using rule 125 (empty -> .)
    AND             reduce using rule 125 (empty -> .)
    OR              reduce using rule 125 (empty -> .)
    SEMICOLON       reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    CLOSEPAREN      reduce using rule 125 (empty -> .)
    TRUE            reduce using rule 125 (empty -> .)
    FALSE           reduce using rule 125 (empty -> .)
    CTEFLOAT        reduce using rule 125 (empty -> .)
    CTESTRING       reduce using rule 125 (empty -> .)
    CTEINT          reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    CLOSECURLY      reduce using rule 125 (empty -> .)
    VAR             reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    OUTPUT          reduce using rule 125 (empty -> .)
    INPUT           reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    WHILE           reduce using rule 125 (empty -> .)

  ! OPENPAREN       [ reduce using rule 125 (empty -> .) ]

    varcomp2                       shift and go to state 159
    empty                          shift and go to state 162

state 122

    (69) while -> WHILE OPENPAREN . expresion CLOSEPAREN OPENCURLY altwhile
    (86) expresion -> . exp altexpresion
    (97) exp -> . termino
    (98) exp -> . termino altexp
    (102) termino -> . factor
    (103) termino -> . factor alttermino
    (113) factor -> . OPENPAREN expresion CLOSEPAREN
    (114) factor -> . SUM varcall
    (115) factor -> . SUBTRACT varcall
    (116) factor -> . varcall
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 108
    SUM             shift and go to state 109
    SUBTRACT        shift and go to state 111
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121

    expresion                      shift and go to state 163
    exp                            shift and go to state 105
    termino                        shift and go to state 106
    factor                         shift and go to state 107
    varcall                        shift and go to state 110
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120

state 123

    (17) alt2class -> constructor CLOSECURLY SEMICOLON .

    CLASS           reduce using rule 17 (alt2class -> constructor CLOSECURLY SEMICOLON .)
    VAR             reduce using rule 17 (alt2class -> constructor CLOSECURLY SEMICOLON .)
    FUNC            reduce using rule 17 (alt2class -> constructor CLOSECURLY SEMICOLON .)
    MAIN            reduce using rule 17 (alt2class -> constructor CLOSECURLY SEMICOLON .)


state 124

    (19) constructor -> CONSTRUCTOR save_constructor OPENPAREN . altconst CLOSEPAREN OPENCURLY alt2const
    (20) altconst -> . params altconst
    (21) altconst -> . empty
    (45) params -> . ID TWODOTS type altparams
    (125) empty -> .

    ID              shift and go to state 43
    CLOSEPAREN      reduce using rule 125 (empty -> .)

    altconst                       shift and go to state 164
    params                         shift and go to state 165
    empty                          shift and go to state 166

state 125

    (32) listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET . listidsaltp
    (34) listidsaltp -> . COMMA listids
    (35) listidsaltp -> . empty
    (125) empty -> .

    COMMA           shift and go to state 168
    TWODOTS         reduce using rule 125 (empty -> .)

    listidsaltp                    shift and go to state 167
    empty                          shift and go to state 169

state 126

    (46) altparams -> COMMA ID . TWODOTS type altparams

    TWODOTS         shift and go to state 170


state 127

    (36) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY . alt3func
    (41) alt3func -> . var alt3func
    (42) alt3func -> . estatuto alt3func
    (43) alt3func -> . CLOSECURLY
    (26) var -> . VAR listids TWODOTS type SEMICOLON
    (58) estatuto -> . assign
    (59) estatuto -> . condition
    (60) estatuto -> . write
    (61) estatuto -> . read
    (62) estatuto -> . return
    (63) estatuto -> . voidcall
    (64) estatuto -> . while
    (121) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (117) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (118) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (108) write -> . OUTPUT OPENPAREN varcall altwrite
    (109) write -> . OUTPUT OPENPAREN expresion altwrite
    (107) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (124) return -> . RETURN expresion SEMICOLON
    (65) voidcall -> . ID OPENPAREN CLOSEPAREN
    (66) voidcall -> . ID OPENPAREN expresion altcall
    (69) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 174
    VAR             shift and go to state 12
    ID              shift and go to state 78
    IF              shift and go to state 79
    OUTPUT          shift and go to state 80
    INPUT           shift and go to state 81
    RETURN          shift and go to state 82
    WHILE           shift and go to state 83

    alt3func                       shift and go to state 171
    var                            shift and go to state 172
    estatuto                       shift and go to state 173
    assign                         shift and go to state 71
    condition                      shift and go to state 72
    write                          shift and go to state 73
    read                           shift and go to state 74
    return                         shift and go to state 75
    voidcall                       shift and go to state 76
    while                          shift and go to state 77

state 128

    (121) assign -> ID assign1 EQUALS . expresion SEMICOLON
    (86) expresion -> . exp altexpresion
    (97) exp -> . termino
    (98) exp -> . termino altexp
    (102) termino -> . factor
    (103) termino -> . factor alttermino
    (113) factor -> . OPENPAREN expresion CLOSEPAREN
    (114) factor -> . SUM varcall
    (115) factor -> . SUBTRACT varcall
    (116) factor -> . varcall
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 108
    SUM             shift and go to state 109
    SUBTRACT        shift and go to state 111
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121

    expresion                      shift and go to state 175
    exp                            shift and go to state 105
    termino                        shift and go to state 106
    factor                         shift and go to state 107
    varcall                        shift and go to state 110
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120

state 129

    (65) voidcall -> ID OPENPAREN CLOSEPAREN .

    CLOSECURLY      reduce using rule 65 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    VAR             reduce using rule 65 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    ID              reduce using rule 65 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    IF              reduce using rule 65 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    OUTPUT          reduce using rule 65 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    INPUT           reduce using rule 65 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    RETURN          reduce using rule 65 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    WHILE           reduce using rule 65 (voidcall -> ID OPENPAREN CLOSEPAREN .)


state 130

    (66) voidcall -> ID OPENPAREN expresion . altcall
    (49) altcall -> . expresion alt2call
    (50) altcall -> . empty
    (67) altcall -> . COMMA expresion altcall
    (68) altcall -> . CLOSEPAREN SEMICOLON
    (86) expresion -> . exp altexpresion
    (125) empty -> .
    (97) exp -> . termino
    (98) exp -> . termino altexp
    (102) termino -> . factor
    (103) termino -> . factor alttermino
    (113) factor -> . OPENPAREN expresion CLOSEPAREN
    (114) factor -> . SUM varcall
    (115) factor -> . SUBTRACT varcall
    (116) factor -> . varcall
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 179
    CLOSEPAREN      shift and go to state 180
    CLOSECURLY      reduce using rule 125 (empty -> .)
    VAR             reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    OUTPUT          reduce using rule 125 (empty -> .)
    INPUT           reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    WHILE           reduce using rule 125 (empty -> .)
    OPENPAREN       shift and go to state 108
    SUM             shift and go to state 109
    SUBTRACT        shift and go to state 111
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121

  ! ID              [ reduce using rule 125 (empty -> .) ]

    expresion                      shift and go to state 176
    altcall                        shift and go to state 177
    empty                          shift and go to state 178
    exp                            shift and go to state 105
    termino                        shift and go to state 106
    factor                         shift and go to state 107
    varcall                        shift and go to state 110
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120

state 131

    (122) assign1 -> DOT ID . assign1
    (122) assign1 -> . DOT ID assign1
    (123) assign1 -> . empty
    (125) empty -> .

    DOT             shift and go to state 99
    EQUALS          reduce using rule 125 (empty -> .)

    assign1                        shift and go to state 181
    empty                          shift and go to state 100

state 132

    (117) condition -> IF OPENPAREN expresion . CLOSEPAREN OPENCURLY altcondition
    (118) condition -> IF OPENPAREN expresion . CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition

    CLOSEPAREN      shift and go to state 182


state 133

    (108) write -> OUTPUT OPENPAREN varcall . altwrite
    (116) factor -> varcall .
    (110) altwrite -> . COMMA varcall altwrite
    (111) altwrite -> . COMMA expresion altwrite
    (112) altwrite -> . CLOSEPAREN SEMICOLON

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for CLOSEPAREN resolved as shift
    TIMES           reduce using rule 116 (factor -> varcall .)
    DIV             reduce using rule 116 (factor -> varcall .)
    SUM             reduce using rule 116 (factor -> varcall .)
    SUBTRACT        reduce using rule 116 (factor -> varcall .)
    SAMEAS          reduce using rule 116 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 116 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 116 (factor -> varcall .)
    SMALLTHAN       reduce using rule 116 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 116 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 116 (factor -> varcall .)
    AND             reduce using rule 116 (factor -> varcall .)
    OR              reduce using rule 116 (factor -> varcall .)
    COMMA           shift and go to state 184
    CLOSEPAREN      shift and go to state 185

  ! COMMA           [ reduce using rule 116 (factor -> varcall .) ]
  ! CLOSEPAREN      [ reduce using rule 116 (factor -> varcall .) ]

    altwrite                       shift and go to state 183

state 134

    (109) write -> OUTPUT OPENPAREN expresion . altwrite
    (110) altwrite -> . COMMA varcall altwrite
    (111) altwrite -> . COMMA expresion altwrite
    (112) altwrite -> . CLOSEPAREN SEMICOLON

    COMMA           shift and go to state 184
    CLOSEPAREN      shift and go to state 185

    altwrite                       shift and go to state 186

state 135

    (107) read -> INPUT OPENPAREN ID . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 187


state 136

    (124) return -> RETURN expresion SEMICOLON .

    CLOSECURLY      reduce using rule 124 (return -> RETURN expresion SEMICOLON .)
    VAR             reduce using rule 124 (return -> RETURN expresion SEMICOLON .)
    ID              reduce using rule 124 (return -> RETURN expresion SEMICOLON .)
    IF              reduce using rule 124 (return -> RETURN expresion SEMICOLON .)
    OUTPUT          reduce using rule 124 (return -> RETURN expresion SEMICOLON .)
    INPUT           reduce using rule 124 (return -> RETURN expresion SEMICOLON .)
    RETURN          reduce using rule 124 (return -> RETURN expresion SEMICOLON .)
    WHILE           reduce using rule 124 (return -> RETURN expresion SEMICOLON .)


state 137

    (86) expresion -> exp altexpresion .

    SEMICOLON       reduce using rule 86 (expresion -> exp altexpresion .)
    COMMA           reduce using rule 86 (expresion -> exp altexpresion .)
    CLOSEPAREN      reduce using rule 86 (expresion -> exp altexpresion .)
    OPENPAREN       reduce using rule 86 (expresion -> exp altexpresion .)
    SUM             reduce using rule 86 (expresion -> exp altexpresion .)
    SUBTRACT        reduce using rule 86 (expresion -> exp altexpresion .)
    TRUE            reduce using rule 86 (expresion -> exp altexpresion .)
    FALSE           reduce using rule 86 (expresion -> exp altexpresion .)
    CTEFLOAT        reduce using rule 86 (expresion -> exp altexpresion .)
    CTESTRING       reduce using rule 86 (expresion -> exp altexpresion .)
    CTEINT          reduce using rule 86 (expresion -> exp altexpresion .)
    ID              reduce using rule 86 (expresion -> exp altexpresion .)
    CLOSECURLY      reduce using rule 86 (expresion -> exp altexpresion .)
    VAR             reduce using rule 86 (expresion -> exp altexpresion .)
    IF              reduce using rule 86 (expresion -> exp altexpresion .)
    OUTPUT          reduce using rule 86 (expresion -> exp altexpresion .)
    INPUT           reduce using rule 86 (expresion -> exp altexpresion .)
    RETURN          reduce using rule 86 (expresion -> exp altexpresion .)
    WHILE           reduce using rule 86 (expresion -> exp altexpresion .)


state 138

    (87) altexpresion -> altexpresion2 . exp
    (97) exp -> . termino
    (98) exp -> . termino altexp
    (102) termino -> . factor
    (103) termino -> . factor alttermino
    (113) factor -> . OPENPAREN expresion CLOSEPAREN
    (114) factor -> . SUM varcall
    (115) factor -> . SUBTRACT varcall
    (116) factor -> . varcall
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 108
    SUM             shift and go to state 109
    SUBTRACT        shift and go to state 111
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121

    exp                            shift and go to state 188
    termino                        shift and go to state 106
    factor                         shift and go to state 107
    varcall                        shift and go to state 110
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120

state 139

    (88) altexpresion -> empty .

    SEMICOLON       reduce using rule 88 (altexpresion -> empty .)
    COMMA           reduce using rule 88 (altexpresion -> empty .)
    CLOSEPAREN      reduce using rule 88 (altexpresion -> empty .)
    OPENPAREN       reduce using rule 88 (altexpresion -> empty .)
    SUM             reduce using rule 88 (altexpresion -> empty .)
    SUBTRACT        reduce using rule 88 (altexpresion -> empty .)
    TRUE            reduce using rule 88 (altexpresion -> empty .)
    FALSE           reduce using rule 88 (altexpresion -> empty .)
    CTEFLOAT        reduce using rule 88 (altexpresion -> empty .)
    CTESTRING       reduce using rule 88 (altexpresion -> empty .)
    CTEINT          reduce using rule 88 (altexpresion -> empty .)
    ID              reduce using rule 88 (altexpresion -> empty .)
    CLOSECURLY      reduce using rule 88 (altexpresion -> empty .)
    VAR             reduce using rule 88 (altexpresion -> empty .)
    IF              reduce using rule 88 (altexpresion -> empty .)
    OUTPUT          reduce using rule 88 (altexpresion -> empty .)
    INPUT           reduce using rule 88 (altexpresion -> empty .)
    RETURN          reduce using rule 88 (altexpresion -> empty .)
    WHILE           reduce using rule 88 (altexpresion -> empty .)


state 140

    (89) altexpresion2 -> SAMEAS .

    OPENPAREN       reduce using rule 89 (altexpresion2 -> SAMEAS .)
    SUM             reduce using rule 89 (altexpresion2 -> SAMEAS .)
    SUBTRACT        reduce using rule 89 (altexpresion2 -> SAMEAS .)
    TRUE            reduce using rule 89 (altexpresion2 -> SAMEAS .)
    FALSE           reduce using rule 89 (altexpresion2 -> SAMEAS .)
    CTEFLOAT        reduce using rule 89 (altexpresion2 -> SAMEAS .)
    CTESTRING       reduce using rule 89 (altexpresion2 -> SAMEAS .)
    CTEINT          reduce using rule 89 (altexpresion2 -> SAMEAS .)
    ID              reduce using rule 89 (altexpresion2 -> SAMEAS .)


state 141

    (90) altexpresion2 -> BIGGERTHAN .

    OPENPAREN       reduce using rule 90 (altexpresion2 -> BIGGERTHAN .)
    SUM             reduce using rule 90 (altexpresion2 -> BIGGERTHAN .)
    SUBTRACT        reduce using rule 90 (altexpresion2 -> BIGGERTHAN .)
    TRUE            reduce using rule 90 (altexpresion2 -> BIGGERTHAN .)
    FALSE           reduce using rule 90 (altexpresion2 -> BIGGERTHAN .)
    CTEFLOAT        reduce using rule 90 (altexpresion2 -> BIGGERTHAN .)
    CTESTRING       reduce using rule 90 (altexpresion2 -> BIGGERTHAN .)
    CTEINT          reduce using rule 90 (altexpresion2 -> BIGGERTHAN .)
    ID              reduce using rule 90 (altexpresion2 -> BIGGERTHAN .)


state 142

    (91) altexpresion2 -> BIGGEREQUALSTHAN .

    OPENPAREN       reduce using rule 91 (altexpresion2 -> BIGGEREQUALSTHAN .)
    SUM             reduce using rule 91 (altexpresion2 -> BIGGEREQUALSTHAN .)
    SUBTRACT        reduce using rule 91 (altexpresion2 -> BIGGEREQUALSTHAN .)
    TRUE            reduce using rule 91 (altexpresion2 -> BIGGEREQUALSTHAN .)
    FALSE           reduce using rule 91 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTEFLOAT        reduce using rule 91 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTESTRING       reduce using rule 91 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTEINT          reduce using rule 91 (altexpresion2 -> BIGGEREQUALSTHAN .)
    ID              reduce using rule 91 (altexpresion2 -> BIGGEREQUALSTHAN .)


state 143

    (92) altexpresion2 -> SMALLTHAN .

    OPENPAREN       reduce using rule 92 (altexpresion2 -> SMALLTHAN .)
    SUM             reduce using rule 92 (altexpresion2 -> SMALLTHAN .)
    SUBTRACT        reduce using rule 92 (altexpresion2 -> SMALLTHAN .)
    TRUE            reduce using rule 92 (altexpresion2 -> SMALLTHAN .)
    FALSE           reduce using rule 92 (altexpresion2 -> SMALLTHAN .)
    CTEFLOAT        reduce using rule 92 (altexpresion2 -> SMALLTHAN .)
    CTESTRING       reduce using rule 92 (altexpresion2 -> SMALLTHAN .)
    CTEINT          reduce using rule 92 (altexpresion2 -> SMALLTHAN .)
    ID              reduce using rule 92 (altexpresion2 -> SMALLTHAN .)


state 144

    (93) altexpresion2 -> SMALLEQUALSTHAN .

    OPENPAREN       reduce using rule 93 (altexpresion2 -> SMALLEQUALSTHAN .)
    SUM             reduce using rule 93 (altexpresion2 -> SMALLEQUALSTHAN .)
    SUBTRACT        reduce using rule 93 (altexpresion2 -> SMALLEQUALSTHAN .)
    TRUE            reduce using rule 93 (altexpresion2 -> SMALLEQUALSTHAN .)
    FALSE           reduce using rule 93 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTEFLOAT        reduce using rule 93 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTESTRING       reduce using rule 93 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTEINT          reduce using rule 93 (altexpresion2 -> SMALLEQUALSTHAN .)
    ID              reduce using rule 93 (altexpresion2 -> SMALLEQUALSTHAN .)


state 145

    (94) altexpresion2 -> DIFFERENTTHAN .

    OPENPAREN       reduce using rule 94 (altexpresion2 -> DIFFERENTTHAN .)
    SUM             reduce using rule 94 (altexpresion2 -> DIFFERENTTHAN .)
    SUBTRACT        reduce using rule 94 (altexpresion2 -> DIFFERENTTHAN .)
    TRUE            reduce using rule 94 (altexpresion2 -> DIFFERENTTHAN .)
    FALSE           reduce using rule 94 (altexpresion2 -> DIFFERENTTHAN .)
    CTEFLOAT        reduce using rule 94 (altexpresion2 -> DIFFERENTTHAN .)
    CTESTRING       reduce using rule 94 (altexpresion2 -> DIFFERENTTHAN .)
    CTEINT          reduce using rule 94 (altexpresion2 -> DIFFERENTTHAN .)
    ID              reduce using rule 94 (altexpresion2 -> DIFFERENTTHAN .)


state 146

    (95) altexpresion2 -> AND .

    OPENPAREN       reduce using rule 95 (altexpresion2 -> AND .)
    SUM             reduce using rule 95 (altexpresion2 -> AND .)
    SUBTRACT        reduce using rule 95 (altexpresion2 -> AND .)
    TRUE            reduce using rule 95 (altexpresion2 -> AND .)
    FALSE           reduce using rule 95 (altexpresion2 -> AND .)
    CTEFLOAT        reduce using rule 95 (altexpresion2 -> AND .)
    CTESTRING       reduce using rule 95 (altexpresion2 -> AND .)
    CTEINT          reduce using rule 95 (altexpresion2 -> AND .)
    ID              reduce using rule 95 (altexpresion2 -> AND .)


state 147

    (96) altexpresion2 -> OR .

    OPENPAREN       reduce using rule 96 (altexpresion2 -> OR .)
    SUM             reduce using rule 96 (altexpresion2 -> OR .)
    SUBTRACT        reduce using rule 96 (altexpresion2 -> OR .)
    TRUE            reduce using rule 96 (altexpresion2 -> OR .)
    FALSE           reduce using rule 96 (altexpresion2 -> OR .)
    CTEFLOAT        reduce using rule 96 (altexpresion2 -> OR .)
    CTESTRING       reduce using rule 96 (altexpresion2 -> OR .)
    CTEINT          reduce using rule 96 (altexpresion2 -> OR .)
    ID              reduce using rule 96 (altexpresion2 -> OR .)


state 148

    (98) exp -> termino altexp .

    SAMEAS          reduce using rule 98 (exp -> termino altexp .)
    BIGGERTHAN      reduce using rule 98 (exp -> termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 98 (exp -> termino altexp .)
    SMALLTHAN       reduce using rule 98 (exp -> termino altexp .)
    SMALLEQUALSTHAN reduce using rule 98 (exp -> termino altexp .)
    DIFFERENTTHAN   reduce using rule 98 (exp -> termino altexp .)
    AND             reduce using rule 98 (exp -> termino altexp .)
    OR              reduce using rule 98 (exp -> termino altexp .)
    SEMICOLON       reduce using rule 98 (exp -> termino altexp .)
    COMMA           reduce using rule 98 (exp -> termino altexp .)
    CLOSEPAREN      reduce using rule 98 (exp -> termino altexp .)
    OPENPAREN       reduce using rule 98 (exp -> termino altexp .)
    SUM             reduce using rule 98 (exp -> termino altexp .)
    SUBTRACT        reduce using rule 98 (exp -> termino altexp .)
    TRUE            reduce using rule 98 (exp -> termino altexp .)
    FALSE           reduce using rule 98 (exp -> termino altexp .)
    CTEFLOAT        reduce using rule 98 (exp -> termino altexp .)
    CTESTRING       reduce using rule 98 (exp -> termino altexp .)
    CTEINT          reduce using rule 98 (exp -> termino altexp .)
    ID              reduce using rule 98 (exp -> termino altexp .)
    CLOSECURLY      reduce using rule 98 (exp -> termino altexp .)
    VAR             reduce using rule 98 (exp -> termino altexp .)
    IF              reduce using rule 98 (exp -> termino altexp .)
    OUTPUT          reduce using rule 98 (exp -> termino altexp .)
    INPUT           reduce using rule 98 (exp -> termino altexp .)
    RETURN          reduce using rule 98 (exp -> termino altexp .)
    WHILE           reduce using rule 98 (exp -> termino altexp .)


state 149

    (99) altexp -> SUM . termino altexp
    (102) termino -> . factor
    (103) termino -> . factor alttermino
    (113) factor -> . OPENPAREN expresion CLOSEPAREN
    (114) factor -> . SUM varcall
    (115) factor -> . SUBTRACT varcall
    (116) factor -> . varcall
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 108
    SUM             shift and go to state 109
    SUBTRACT        shift and go to state 111
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121

    termino                        shift and go to state 189
    factor                         shift and go to state 107
    varcall                        shift and go to state 110
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120

state 150

    (100) altexp -> SUBTRACT . termino altexp
    (102) termino -> . factor
    (103) termino -> . factor alttermino
    (113) factor -> . OPENPAREN expresion CLOSEPAREN
    (114) factor -> . SUM varcall
    (115) factor -> . SUBTRACT varcall
    (116) factor -> . varcall
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 108
    SUM             shift and go to state 109
    SUBTRACT        shift and go to state 111
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121

    termino                        shift and go to state 190
    factor                         shift and go to state 107
    varcall                        shift and go to state 110
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120

state 151

    (101) altexp -> empty .

    SAMEAS          reduce using rule 101 (altexp -> empty .)
    BIGGERTHAN      reduce using rule 101 (altexp -> empty .)
    BIGGEREQUALSTHAN reduce using rule 101 (altexp -> empty .)
    SMALLTHAN       reduce using rule 101 (altexp -> empty .)
    SMALLEQUALSTHAN reduce using rule 101 (altexp -> empty .)
    DIFFERENTTHAN   reduce using rule 101 (altexp -> empty .)
    AND             reduce using rule 101 (altexp -> empty .)
    OR              reduce using rule 101 (altexp -> empty .)
    SEMICOLON       reduce using rule 101 (altexp -> empty .)
    COMMA           reduce using rule 101 (altexp -> empty .)
    CLOSEPAREN      reduce using rule 101 (altexp -> empty .)
    OPENPAREN       reduce using rule 101 (altexp -> empty .)
    SUM             reduce using rule 101 (altexp -> empty .)
    SUBTRACT        reduce using rule 101 (altexp -> empty .)
    TRUE            reduce using rule 101 (altexp -> empty .)
    FALSE           reduce using rule 101 (altexp -> empty .)
    CTEFLOAT        reduce using rule 101 (altexp -> empty .)
    CTESTRING       reduce using rule 101 (altexp -> empty .)
    CTEINT          reduce using rule 101 (altexp -> empty .)
    ID              reduce using rule 101 (altexp -> empty .)
    CLOSECURLY      reduce using rule 101 (altexp -> empty .)
    VAR             reduce using rule 101 (altexp -> empty .)
    IF              reduce using rule 101 (altexp -> empty .)
    OUTPUT          reduce using rule 101 (altexp -> empty .)
    INPUT           reduce using rule 101 (altexp -> empty .)
    RETURN          reduce using rule 101 (altexp -> empty .)
    WHILE           reduce using rule 101 (altexp -> empty .)


state 152

    (103) termino -> factor alttermino .

    SUM             reduce using rule 103 (termino -> factor alttermino .)
    SUBTRACT        reduce using rule 103 (termino -> factor alttermino .)
    SAMEAS          reduce using rule 103 (termino -> factor alttermino .)
    BIGGERTHAN      reduce using rule 103 (termino -> factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 103 (termino -> factor alttermino .)
    SMALLTHAN       reduce using rule 103 (termino -> factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 103 (termino -> factor alttermino .)
    DIFFERENTTHAN   reduce using rule 103 (termino -> factor alttermino .)
    AND             reduce using rule 103 (termino -> factor alttermino .)
    OR              reduce using rule 103 (termino -> factor alttermino .)
    SEMICOLON       reduce using rule 103 (termino -> factor alttermino .)
    COMMA           reduce using rule 103 (termino -> factor alttermino .)
    CLOSEPAREN      reduce using rule 103 (termino -> factor alttermino .)
    OPENPAREN       reduce using rule 103 (termino -> factor alttermino .)
    TRUE            reduce using rule 103 (termino -> factor alttermino .)
    FALSE           reduce using rule 103 (termino -> factor alttermino .)
    CTEFLOAT        reduce using rule 103 (termino -> factor alttermino .)
    CTESTRING       reduce using rule 103 (termino -> factor alttermino .)
    CTEINT          reduce using rule 103 (termino -> factor alttermino .)
    ID              reduce using rule 103 (termino -> factor alttermino .)
    CLOSECURLY      reduce using rule 103 (termino -> factor alttermino .)
    VAR             reduce using rule 103 (termino -> factor alttermino .)
    IF              reduce using rule 103 (termino -> factor alttermino .)
    OUTPUT          reduce using rule 103 (termino -> factor alttermino .)
    INPUT           reduce using rule 103 (termino -> factor alttermino .)
    RETURN          reduce using rule 103 (termino -> factor alttermino .)
    WHILE           reduce using rule 103 (termino -> factor alttermino .)


state 153

    (104) alttermino -> TIMES . factor alttermino
    (113) factor -> . OPENPAREN expresion CLOSEPAREN
    (114) factor -> . SUM varcall
    (115) factor -> . SUBTRACT varcall
    (116) factor -> . varcall
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 108
    SUM             shift and go to state 109
    SUBTRACT        shift and go to state 111
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121

    factor                         shift and go to state 191
    varcall                        shift and go to state 110
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120

state 154

    (105) alttermino -> DIV . factor alttermino
    (113) factor -> . OPENPAREN expresion CLOSEPAREN
    (114) factor -> . SUM varcall
    (115) factor -> . SUBTRACT varcall
    (116) factor -> . varcall
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 108
    SUM             shift and go to state 109
    SUBTRACT        shift and go to state 111
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121

    factor                         shift and go to state 192
    varcall                        shift and go to state 110
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120

state 155

    (106) alttermino -> empty .

    SUM             reduce using rule 106 (alttermino -> empty .)
    SUBTRACT        reduce using rule 106 (alttermino -> empty .)
    SAMEAS          reduce using rule 106 (alttermino -> empty .)
    BIGGERTHAN      reduce using rule 106 (alttermino -> empty .)
    BIGGEREQUALSTHAN reduce using rule 106 (alttermino -> empty .)
    SMALLTHAN       reduce using rule 106 (alttermino -> empty .)
    SMALLEQUALSTHAN reduce using rule 106 (alttermino -> empty .)
    DIFFERENTTHAN   reduce using rule 106 (alttermino -> empty .)
    AND             reduce using rule 106 (alttermino -> empty .)
    OR              reduce using rule 106 (alttermino -> empty .)
    SEMICOLON       reduce using rule 106 (alttermino -> empty .)
    COMMA           reduce using rule 106 (alttermino -> empty .)
    CLOSEPAREN      reduce using rule 106 (alttermino -> empty .)
    OPENPAREN       reduce using rule 106 (alttermino -> empty .)
    TRUE            reduce using rule 106 (alttermino -> empty .)
    FALSE           reduce using rule 106 (alttermino -> empty .)
    CTEFLOAT        reduce using rule 106 (alttermino -> empty .)
    CTESTRING       reduce using rule 106 (alttermino -> empty .)
    CTEINT          reduce using rule 106 (alttermino -> empty .)
    ID              reduce using rule 106 (alttermino -> empty .)
    CLOSECURLY      reduce using rule 106 (alttermino -> empty .)
    VAR             reduce using rule 106 (alttermino -> empty .)
    IF              reduce using rule 106 (alttermino -> empty .)
    OUTPUT          reduce using rule 106 (alttermino -> empty .)
    INPUT           reduce using rule 106 (alttermino -> empty .)
    RETURN          reduce using rule 106 (alttermino -> empty .)
    WHILE           reduce using rule 106 (alttermino -> empty .)


state 156

    (113) factor -> OPENPAREN expresion . CLOSEPAREN

    CLOSEPAREN      shift and go to state 193


state 157

    (114) factor -> SUM varcall .

    TIMES           reduce using rule 114 (factor -> SUM varcall .)
    DIV             reduce using rule 114 (factor -> SUM varcall .)
    SUM             reduce using rule 114 (factor -> SUM varcall .)
    SUBTRACT        reduce using rule 114 (factor -> SUM varcall .)
    SAMEAS          reduce using rule 114 (factor -> SUM varcall .)
    BIGGERTHAN      reduce using rule 114 (factor -> SUM varcall .)
    BIGGEREQUALSTHAN reduce using rule 114 (factor -> SUM varcall .)
    SMALLTHAN       reduce using rule 114 (factor -> SUM varcall .)
    SMALLEQUALSTHAN reduce using rule 114 (factor -> SUM varcall .)
    DIFFERENTTHAN   reduce using rule 114 (factor -> SUM varcall .)
    AND             reduce using rule 114 (factor -> SUM varcall .)
    OR              reduce using rule 114 (factor -> SUM varcall .)
    SEMICOLON       reduce using rule 114 (factor -> SUM varcall .)
    COMMA           reduce using rule 114 (factor -> SUM varcall .)
    CLOSEPAREN      reduce using rule 114 (factor -> SUM varcall .)
    OPENPAREN       reduce using rule 114 (factor -> SUM varcall .)
    TRUE            reduce using rule 114 (factor -> SUM varcall .)
    FALSE           reduce using rule 114 (factor -> SUM varcall .)
    CTEFLOAT        reduce using rule 114 (factor -> SUM varcall .)
    CTESTRING       reduce using rule 114 (factor -> SUM varcall .)
    CTEINT          reduce using rule 114 (factor -> SUM varcall .)
    ID              reduce using rule 114 (factor -> SUM varcall .)
    CLOSECURLY      reduce using rule 114 (factor -> SUM varcall .)
    VAR             reduce using rule 114 (factor -> SUM varcall .)
    IF              reduce using rule 114 (factor -> SUM varcall .)
    OUTPUT          reduce using rule 114 (factor -> SUM varcall .)
    INPUT           reduce using rule 114 (factor -> SUM varcall .)
    RETURN          reduce using rule 114 (factor -> SUM varcall .)
    WHILE           reduce using rule 114 (factor -> SUM varcall .)


state 158

    (115) factor -> SUBTRACT varcall .

    TIMES           reduce using rule 115 (factor -> SUBTRACT varcall .)
    DIV             reduce using rule 115 (factor -> SUBTRACT varcall .)
    SUM             reduce using rule 115 (factor -> SUBTRACT varcall .)
    SUBTRACT        reduce using rule 115 (factor -> SUBTRACT varcall .)
    SAMEAS          reduce using rule 115 (factor -> SUBTRACT varcall .)
    BIGGERTHAN      reduce using rule 115 (factor -> SUBTRACT varcall .)
    BIGGEREQUALSTHAN reduce using rule 115 (factor -> SUBTRACT varcall .)
    SMALLTHAN       reduce using rule 115 (factor -> SUBTRACT varcall .)
    SMALLEQUALSTHAN reduce using rule 115 (factor -> SUBTRACT varcall .)
    DIFFERENTTHAN   reduce using rule 115 (factor -> SUBTRACT varcall .)
    AND             reduce using rule 115 (factor -> SUBTRACT varcall .)
    OR              reduce using rule 115 (factor -> SUBTRACT varcall .)
    SEMICOLON       reduce using rule 115 (factor -> SUBTRACT varcall .)
    COMMA           reduce using rule 115 (factor -> SUBTRACT varcall .)
    CLOSEPAREN      reduce using rule 115 (factor -> SUBTRACT varcall .)
    OPENPAREN       reduce using rule 115 (factor -> SUBTRACT varcall .)
    TRUE            reduce using rule 115 (factor -> SUBTRACT varcall .)
    FALSE           reduce using rule 115 (factor -> SUBTRACT varcall .)
    CTEFLOAT        reduce using rule 115 (factor -> SUBTRACT varcall .)
    CTESTRING       reduce using rule 115 (factor -> SUBTRACT varcall .)
    CTEINT          reduce using rule 115 (factor -> SUBTRACT varcall .)
    ID              reduce using rule 115 (factor -> SUBTRACT varcall .)
    CLOSECURLY      reduce using rule 115 (factor -> SUBTRACT varcall .)
    VAR             reduce using rule 115 (factor -> SUBTRACT varcall .)
    IF              reduce using rule 115 (factor -> SUBTRACT varcall .)
    OUTPUT          reduce using rule 115 (factor -> SUBTRACT varcall .)
    INPUT           reduce using rule 115 (factor -> SUBTRACT varcall .)
    RETURN          reduce using rule 115 (factor -> SUBTRACT varcall .)
    WHILE           reduce using rule 115 (factor -> SUBTRACT varcall .)


state 159

    (81) varcomp1 -> ID varcomp2 .

    TIMES           reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    DIV             reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    SUM             reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    SUBTRACT        reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    SAMEAS          reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    BIGGERTHAN      reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    BIGGEREQUALSTHAN reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    SMALLTHAN       reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    SMALLEQUALSTHAN reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    DIFFERENTTHAN   reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    AND             reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    OR              reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    SEMICOLON       reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    COMMA           reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    CLOSEPAREN      reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    OPENPAREN       reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    TRUE            reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    FALSE           reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    CTEFLOAT        reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    CTESTRING       reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    CTEINT          reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    ID              reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    CLOSECURLY      reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    VAR             reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    IF              reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    OUTPUT          reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    INPUT           reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    RETURN          reduce using rule 81 (varcomp1 -> ID varcomp2 .)
    WHILE           reduce using rule 81 (varcomp1 -> ID varcomp2 .)


state 160

    (48) callfunc -> ID OPENPAREN . altcall CLOSEPAREN
    (49) altcall -> . expresion alt2call
    (50) altcall -> . empty
    (67) altcall -> . COMMA expresion altcall
    (68) altcall -> . CLOSEPAREN SEMICOLON
    (86) expresion -> . exp altexpresion
    (125) empty -> .
    (97) exp -> . termino
    (98) exp -> . termino altexp
    (102) termino -> . factor
    (103) termino -> . factor alttermino
    (113) factor -> . OPENPAREN expresion CLOSEPAREN
    (114) factor -> . SUM varcall
    (115) factor -> . SUBTRACT varcall
    (116) factor -> . varcall
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
    COMMA           shift and go to state 179
    CLOSEPAREN      shift and go to state 180
    OPENPAREN       shift and go to state 108
    SUM             shift and go to state 109
    SUBTRACT        shift and go to state 111
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121

  ! CLOSEPAREN      [ reduce using rule 125 (empty -> .) ]

    altcall                        shift and go to state 194
    expresion                      shift and go to state 176
    empty                          shift and go to state 178
    exp                            shift and go to state 105
    termino                        shift and go to state 106
    factor                         shift and go to state 107
    varcall                        shift and go to state 110
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120

state 161

    (82) varcomp2 -> DOT . varcomp3
    (84) varcomp3 -> . varcomp1
    (85) varcomp3 -> . callfunc
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    ID              shift and go to state 121

    varcomp3                       shift and go to state 195
    varcomp1                       shift and go to state 196
    callfunc                       shift and go to state 197

state 162

    (83) varcomp2 -> empty .

    TIMES           reduce using rule 83 (varcomp2 -> empty .)
    DIV             reduce using rule 83 (varcomp2 -> empty .)
    SUM             reduce using rule 83 (varcomp2 -> empty .)
    SUBTRACT        reduce using rule 83 (varcomp2 -> empty .)
    SAMEAS          reduce using rule 83 (varcomp2 -> empty .)
    BIGGERTHAN      reduce using rule 83 (varcomp2 -> empty .)
    BIGGEREQUALSTHAN reduce using rule 83 (varcomp2 -> empty .)
    SMALLTHAN       reduce using rule 83 (varcomp2 -> empty .)
    SMALLEQUALSTHAN reduce using rule 83 (varcomp2 -> empty .)
    DIFFERENTTHAN   reduce using rule 83 (varcomp2 -> empty .)
    AND             reduce using rule 83 (varcomp2 -> empty .)
    OR              reduce using rule 83 (varcomp2 -> empty .)
    SEMICOLON       reduce using rule 83 (varcomp2 -> empty .)
    COMMA           reduce using rule 83 (varcomp2 -> empty .)
    CLOSEPAREN      reduce using rule 83 (varcomp2 -> empty .)
    OPENPAREN       reduce using rule 83 (varcomp2 -> empty .)
    TRUE            reduce using rule 83 (varcomp2 -> empty .)
    FALSE           reduce using rule 83 (varcomp2 -> empty .)
    CTEFLOAT        reduce using rule 83 (varcomp2 -> empty .)
    CTESTRING       reduce using rule 83 (varcomp2 -> empty .)
    CTEINT          reduce using rule 83 (varcomp2 -> empty .)
    ID              reduce using rule 83 (varcomp2 -> empty .)
    CLOSECURLY      reduce using rule 83 (varcomp2 -> empty .)
    VAR             reduce using rule 83 (varcomp2 -> empty .)
    IF              reduce using rule 83 (varcomp2 -> empty .)
    OUTPUT          reduce using rule 83 (varcomp2 -> empty .)
    INPUT           reduce using rule 83 (varcomp2 -> empty .)
    RETURN          reduce using rule 83 (varcomp2 -> empty .)
    WHILE           reduce using rule 83 (varcomp2 -> empty .)


state 163

    (69) while -> WHILE OPENPAREN expresion . CLOSEPAREN OPENCURLY altwhile

    CLOSEPAREN      shift and go to state 198


state 164

    (19) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst . CLOSEPAREN OPENCURLY alt2const

    CLOSEPAREN      shift and go to state 199


state 165

    (20) altconst -> params . altconst
    (20) altconst -> . params altconst
    (21) altconst -> . empty
    (45) params -> . ID TWODOTS type altparams
    (125) empty -> .

    ID              shift and go to state 43
    CLOSEPAREN      reduce using rule 125 (empty -> .)

    params                         shift and go to state 165
    altconst                       shift and go to state 200
    empty                          shift and go to state 166

state 166

    (21) altconst -> empty .

    CLOSEPAREN      reduce using rule 21 (altconst -> empty .)


state 167

    (32) listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltp .

    TWODOTS         reduce using rule 32 (listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltp .)


state 168

    (34) listidsaltp -> COMMA . listids
    (27) listids -> . ID listidsalty

    ID              shift and go to state 20

    listids                        shift and go to state 201

state 169

    (35) listidsaltp -> empty .

    TWODOTS         reduce using rule 35 (listidsaltp -> empty .)


state 170

    (46) altparams -> COMMA ID TWODOTS . type altparams
    (53) type -> . INT
    (54) type -> . FLOAT
    (55) type -> . STRING
    (56) type -> . ID
    (57) type -> . BOOL

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    STRING          shift and go to state 38
    ID              shift and go to state 39
    BOOL            shift and go to state 40

    type                           shift and go to state 202

state 171

    (36) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func .

    CLASS           reduce using rule 36 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func .)
    VAR             reduce using rule 36 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func .)
    FUNC            reduce using rule 36 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func .)
    MAIN            reduce using rule 36 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func .)
    CONSTRUCTOR     reduce using rule 36 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func .)


state 172

    (41) alt3func -> var . alt3func
    (41) alt3func -> . var alt3func
    (42) alt3func -> . estatuto alt3func
    (43) alt3func -> . CLOSECURLY
    (26) var -> . VAR listids TWODOTS type SEMICOLON
    (58) estatuto -> . assign
    (59) estatuto -> . condition
    (60) estatuto -> . write
    (61) estatuto -> . read
    (62) estatuto -> . return
    (63) estatuto -> . voidcall
    (64) estatuto -> . while
    (121) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (117) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (118) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (108) write -> . OUTPUT OPENPAREN varcall altwrite
    (109) write -> . OUTPUT OPENPAREN expresion altwrite
    (107) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (124) return -> . RETURN expresion SEMICOLON
    (65) voidcall -> . ID OPENPAREN CLOSEPAREN
    (66) voidcall -> . ID OPENPAREN expresion altcall
    (69) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 174
    VAR             shift and go to state 12
    ID              shift and go to state 78
    IF              shift and go to state 79
    OUTPUT          shift and go to state 80
    INPUT           shift and go to state 81
    RETURN          shift and go to state 82
    WHILE           shift and go to state 83

    var                            shift and go to state 172
    alt3func                       shift and go to state 203
    estatuto                       shift and go to state 173
    assign                         shift and go to state 71
    condition                      shift and go to state 72
    write                          shift and go to state 73
    read                           shift and go to state 74
    return                         shift and go to state 75
    voidcall                       shift and go to state 76
    while                          shift and go to state 77

state 173

    (42) alt3func -> estatuto . alt3func
    (41) alt3func -> . var alt3func
    (42) alt3func -> . estatuto alt3func
    (43) alt3func -> . CLOSECURLY
    (26) var -> . VAR listids TWODOTS type SEMICOLON
    (58) estatuto -> . assign
    (59) estatuto -> . condition
    (60) estatuto -> . write
    (61) estatuto -> . read
    (62) estatuto -> . return
    (63) estatuto -> . voidcall
    (64) estatuto -> . while
    (121) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (117) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (118) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (108) write -> . OUTPUT OPENPAREN varcall altwrite
    (109) write -> . OUTPUT OPENPAREN expresion altwrite
    (107) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (124) return -> . RETURN expresion SEMICOLON
    (65) voidcall -> . ID OPENPAREN CLOSEPAREN
    (66) voidcall -> . ID OPENPAREN expresion altcall
    (69) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 174
    VAR             shift and go to state 12
    ID              shift and go to state 78
    IF              shift and go to state 79
    OUTPUT          shift and go to state 80
    INPUT           shift and go to state 81
    RETURN          shift and go to state 82
    WHILE           shift and go to state 83

    estatuto                       shift and go to state 173
    alt3func                       shift and go to state 204
    var                            shift and go to state 172
    assign                         shift and go to state 71
    condition                      shift and go to state 72
    write                          shift and go to state 73
    read                           shift and go to state 74
    return                         shift and go to state 75
    voidcall                       shift and go to state 76
    while                          shift and go to state 77

state 174

    (43) alt3func -> CLOSECURLY .

    CLASS           reduce using rule 43 (alt3func -> CLOSECURLY .)
    VAR             reduce using rule 43 (alt3func -> CLOSECURLY .)
    FUNC            reduce using rule 43 (alt3func -> CLOSECURLY .)
    MAIN            reduce using rule 43 (alt3func -> CLOSECURLY .)
    CONSTRUCTOR     reduce using rule 43 (alt3func -> CLOSECURLY .)


state 175

    (121) assign -> ID assign1 EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 205


state 176

    (49) altcall -> expresion . alt2call
    (51) alt2call -> . COMMA altcall
    (52) alt2call -> . empty
    (125) empty -> .

    COMMA           shift and go to state 207
    CLOSECURLY      reduce using rule 125 (empty -> .)
    VAR             reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    OUTPUT          reduce using rule 125 (empty -> .)
    INPUT           reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    WHILE           reduce using rule 125 (empty -> .)
    CLOSEPAREN      reduce using rule 125 (empty -> .)

    alt2call                       shift and go to state 206
    empty                          shift and go to state 208

state 177

    (66) voidcall -> ID OPENPAREN expresion altcall .

    CLOSECURLY      reduce using rule 66 (voidcall -> ID OPENPAREN expresion altcall .)
    VAR             reduce using rule 66 (voidcall -> ID OPENPAREN expresion altcall .)
    ID              reduce using rule 66 (voidcall -> ID OPENPAREN expresion altcall .)
    IF              reduce using rule 66 (voidcall -> ID OPENPAREN expresion altcall .)
    OUTPUT          reduce using rule 66 (voidcall -> ID OPENPAREN expresion altcall .)
    INPUT           reduce using rule 66 (voidcall -> ID OPENPAREN expresion altcall .)
    RETURN          reduce using rule 66 (voidcall -> ID OPENPAREN expresion altcall .)
    WHILE           reduce using rule 66 (voidcall -> ID OPENPAREN expresion altcall .)


state 178

    (50) altcall -> empty .

    CLOSECURLY      reduce using rule 50 (altcall -> empty .)
    VAR             reduce using rule 50 (altcall -> empty .)
    ID              reduce using rule 50 (altcall -> empty .)
    IF              reduce using rule 50 (altcall -> empty .)
    OUTPUT          reduce using rule 50 (altcall -> empty .)
    INPUT           reduce using rule 50 (altcall -> empty .)
    RETURN          reduce using rule 50 (altcall -> empty .)
    WHILE           reduce using rule 50 (altcall -> empty .)
    CLOSEPAREN      reduce using rule 50 (altcall -> empty .)


state 179

    (67) altcall -> COMMA . expresion altcall
    (86) expresion -> . exp altexpresion
    (97) exp -> . termino
    (98) exp -> . termino altexp
    (102) termino -> . factor
    (103) termino -> . factor alttermino
    (113) factor -> . OPENPAREN expresion CLOSEPAREN
    (114) factor -> . SUM varcall
    (115) factor -> . SUBTRACT varcall
    (116) factor -> . varcall
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 108
    SUM             shift and go to state 109
    SUBTRACT        shift and go to state 111
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121

    expresion                      shift and go to state 209
    exp                            shift and go to state 105
    termino                        shift and go to state 106
    factor                         shift and go to state 107
    varcall                        shift and go to state 110
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120

state 180

    (68) altcall -> CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 210


state 181

    (122) assign1 -> DOT ID assign1 .

    EQUALS          reduce using rule 122 (assign1 -> DOT ID assign1 .)


state 182

    (117) condition -> IF OPENPAREN expresion CLOSEPAREN . OPENCURLY altcondition
    (118) condition -> IF OPENPAREN expresion CLOSEPAREN . OPENCURLY altcondition ELSE OPENCURLY altcondition

    OPENCURLY       shift and go to state 211


state 183

    (108) write -> OUTPUT OPENPAREN varcall altwrite .

    CLOSECURLY      reduce using rule 108 (write -> OUTPUT OPENPAREN varcall altwrite .)
    VAR             reduce using rule 108 (write -> OUTPUT OPENPAREN varcall altwrite .)
    ID              reduce using rule 108 (write -> OUTPUT OPENPAREN varcall altwrite .)
    IF              reduce using rule 108 (write -> OUTPUT OPENPAREN varcall altwrite .)
    OUTPUT          reduce using rule 108 (write -> OUTPUT OPENPAREN varcall altwrite .)
    INPUT           reduce using rule 108 (write -> OUTPUT OPENPAREN varcall altwrite .)
    RETURN          reduce using rule 108 (write -> OUTPUT OPENPAREN varcall altwrite .)
    WHILE           reduce using rule 108 (write -> OUTPUT OPENPAREN varcall altwrite .)


state 184

    (110) altwrite -> COMMA . varcall altwrite
    (111) altwrite -> COMMA . expresion altwrite
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (86) expresion -> . exp altexpresion
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (97) exp -> . termino
    (98) exp -> . termino altexp
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN
    (102) termino -> . factor
    (103) termino -> . factor alttermino
    (113) factor -> . OPENPAREN expresion CLOSEPAREN
    (114) factor -> . SUM varcall
    (115) factor -> . SUBTRACT varcall
    (116) factor -> . varcall

    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121
    OPENPAREN       shift and go to state 108
    SUM             shift and go to state 109
    SUBTRACT        shift and go to state 111

    varcall                        shift and go to state 212
    expresion                      shift and go to state 213
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    exp                            shift and go to state 105
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120
    termino                        shift and go to state 106
    factor                         shift and go to state 107

state 185

    (112) altwrite -> CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 214


state 186

    (109) write -> OUTPUT OPENPAREN expresion altwrite .

    CLOSECURLY      reduce using rule 109 (write -> OUTPUT OPENPAREN expresion altwrite .)
    VAR             reduce using rule 109 (write -> OUTPUT OPENPAREN expresion altwrite .)
    ID              reduce using rule 109 (write -> OUTPUT OPENPAREN expresion altwrite .)
    IF              reduce using rule 109 (write -> OUTPUT OPENPAREN expresion altwrite .)
    OUTPUT          reduce using rule 109 (write -> OUTPUT OPENPAREN expresion altwrite .)
    INPUT           reduce using rule 109 (write -> OUTPUT OPENPAREN expresion altwrite .)
    RETURN          reduce using rule 109 (write -> OUTPUT OPENPAREN expresion altwrite .)
    WHILE           reduce using rule 109 (write -> OUTPUT OPENPAREN expresion altwrite .)


state 187

    (107) read -> INPUT OPENPAREN ID CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 215


state 188

    (87) altexpresion -> altexpresion2 exp .

    SEMICOLON       reduce using rule 87 (altexpresion -> altexpresion2 exp .)
    COMMA           reduce using rule 87 (altexpresion -> altexpresion2 exp .)
    CLOSEPAREN      reduce using rule 87 (altexpresion -> altexpresion2 exp .)
    OPENPAREN       reduce using rule 87 (altexpresion -> altexpresion2 exp .)
    SUM             reduce using rule 87 (altexpresion -> altexpresion2 exp .)
    SUBTRACT        reduce using rule 87 (altexpresion -> altexpresion2 exp .)
    TRUE            reduce using rule 87 (altexpresion -> altexpresion2 exp .)
    FALSE           reduce using rule 87 (altexpresion -> altexpresion2 exp .)
    CTEFLOAT        reduce using rule 87 (altexpresion -> altexpresion2 exp .)
    CTESTRING       reduce using rule 87 (altexpresion -> altexpresion2 exp .)
    CTEINT          reduce using rule 87 (altexpresion -> altexpresion2 exp .)
    ID              reduce using rule 87 (altexpresion -> altexpresion2 exp .)
    CLOSECURLY      reduce using rule 87 (altexpresion -> altexpresion2 exp .)
    VAR             reduce using rule 87 (altexpresion -> altexpresion2 exp .)
    IF              reduce using rule 87 (altexpresion -> altexpresion2 exp .)
    OUTPUT          reduce using rule 87 (altexpresion -> altexpresion2 exp .)
    INPUT           reduce using rule 87 (altexpresion -> altexpresion2 exp .)
    RETURN          reduce using rule 87 (altexpresion -> altexpresion2 exp .)
    WHILE           reduce using rule 87 (altexpresion -> altexpresion2 exp .)


state 189

    (99) altexp -> SUM termino . altexp
    (99) altexp -> . SUM termino altexp
    (100) altexp -> . SUBTRACT termino altexp
    (101) altexp -> . empty
    (125) empty -> .

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
    SUM             shift and go to state 149
    SUBTRACT        shift and go to state 150
    SAMEAS          reduce using rule 125 (empty -> .)
    BIGGERTHAN      reduce using rule 125 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 125 (empty -> .)
    SMALLTHAN       reduce using rule 125 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 125 (empty -> .)
    DIFFERENTTHAN   reduce using rule 125 (empty -> .)
    AND             reduce using rule 125 (empty -> .)
    OR              reduce using rule 125 (empty -> .)
    SEMICOLON       reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    CLOSEPAREN      reduce using rule 125 (empty -> .)
    OPENPAREN       reduce using rule 125 (empty -> .)
    TRUE            reduce using rule 125 (empty -> .)
    FALSE           reduce using rule 125 (empty -> .)
    CTEFLOAT        reduce using rule 125 (empty -> .)
    CTESTRING       reduce using rule 125 (empty -> .)
    CTEINT          reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    CLOSECURLY      reduce using rule 125 (empty -> .)
    VAR             reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    OUTPUT          reduce using rule 125 (empty -> .)
    INPUT           reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    WHILE           reduce using rule 125 (empty -> .)

  ! SUM             [ reduce using rule 125 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 125 (empty -> .) ]

    altexp                         shift and go to state 216
    empty                          shift and go to state 151

state 190

    (100) altexp -> SUBTRACT termino . altexp
    (99) altexp -> . SUM termino altexp
    (100) altexp -> . SUBTRACT termino altexp
    (101) altexp -> . empty
    (125) empty -> .

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
    SUM             shift and go to state 149
    SUBTRACT        shift and go to state 150
    SAMEAS          reduce using rule 125 (empty -> .)
    BIGGERTHAN      reduce using rule 125 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 125 (empty -> .)
    SMALLTHAN       reduce using rule 125 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 125 (empty -> .)
    DIFFERENTTHAN   reduce using rule 125 (empty -> .)
    AND             reduce using rule 125 (empty -> .)
    OR              reduce using rule 125 (empty -> .)
    SEMICOLON       reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    CLOSEPAREN      reduce using rule 125 (empty -> .)
    OPENPAREN       reduce using rule 125 (empty -> .)
    TRUE            reduce using rule 125 (empty -> .)
    FALSE           reduce using rule 125 (empty -> .)
    CTEFLOAT        reduce using rule 125 (empty -> .)
    CTESTRING       reduce using rule 125 (empty -> .)
    CTEINT          reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    CLOSECURLY      reduce using rule 125 (empty -> .)
    VAR             reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    OUTPUT          reduce using rule 125 (empty -> .)
    INPUT           reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    WHILE           reduce using rule 125 (empty -> .)

  ! SUM             [ reduce using rule 125 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 125 (empty -> .) ]

    altexp                         shift and go to state 217
    empty                          shift and go to state 151

state 191

    (104) alttermino -> TIMES factor . alttermino
    (104) alttermino -> . TIMES factor alttermino
    (105) alttermino -> . DIV factor alttermino
    (106) alttermino -> . empty
    (125) empty -> .

    TIMES           shift and go to state 153
    DIV             shift and go to state 154
    SUM             reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    SAMEAS          reduce using rule 125 (empty -> .)
    BIGGERTHAN      reduce using rule 125 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 125 (empty -> .)
    SMALLTHAN       reduce using rule 125 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 125 (empty -> .)
    DIFFERENTTHAN   reduce using rule 125 (empty -> .)
    AND             reduce using rule 125 (empty -> .)
    OR              reduce using rule 125 (empty -> .)
    SEMICOLON       reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    CLOSEPAREN      reduce using rule 125 (empty -> .)
    OPENPAREN       reduce using rule 125 (empty -> .)
    TRUE            reduce using rule 125 (empty -> .)
    FALSE           reduce using rule 125 (empty -> .)
    CTEFLOAT        reduce using rule 125 (empty -> .)
    CTESTRING       reduce using rule 125 (empty -> .)
    CTEINT          reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    CLOSECURLY      reduce using rule 125 (empty -> .)
    VAR             reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    OUTPUT          reduce using rule 125 (empty -> .)
    INPUT           reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    WHILE           reduce using rule 125 (empty -> .)

    alttermino                     shift and go to state 218
    empty                          shift and go to state 155

state 192

    (105) alttermino -> DIV factor . alttermino
    (104) alttermino -> . TIMES factor alttermino
    (105) alttermino -> . DIV factor alttermino
    (106) alttermino -> . empty
    (125) empty -> .

    TIMES           shift and go to state 153
    DIV             shift and go to state 154
    SUM             reduce using rule 125 (empty -> .)
    SUBTRACT        reduce using rule 125 (empty -> .)
    SAMEAS          reduce using rule 125 (empty -> .)
    BIGGERTHAN      reduce using rule 125 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 125 (empty -> .)
    SMALLTHAN       reduce using rule 125 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 125 (empty -> .)
    DIFFERENTTHAN   reduce using rule 125 (empty -> .)
    AND             reduce using rule 125 (empty -> .)
    OR              reduce using rule 125 (empty -> .)
    SEMICOLON       reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    CLOSEPAREN      reduce using rule 125 (empty -> .)
    OPENPAREN       reduce using rule 125 (empty -> .)
    TRUE            reduce using rule 125 (empty -> .)
    FALSE           reduce using rule 125 (empty -> .)
    CTEFLOAT        reduce using rule 125 (empty -> .)
    CTESTRING       reduce using rule 125 (empty -> .)
    CTEINT          reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    CLOSECURLY      reduce using rule 125 (empty -> .)
    VAR             reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    OUTPUT          reduce using rule 125 (empty -> .)
    INPUT           reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    WHILE           reduce using rule 125 (empty -> .)

    alttermino                     shift and go to state 219
    empty                          shift and go to state 155

state 193

    (113) factor -> OPENPAREN expresion CLOSEPAREN .

    TIMES           reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    DIV             reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SUM             reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SUBTRACT        reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SAMEAS          reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    BIGGERTHAN      reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    BIGGEREQUALSTHAN reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SMALLTHAN       reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SMALLEQUALSTHAN reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    DIFFERENTTHAN   reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    AND             reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    OR              reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SEMICOLON       reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    COMMA           reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    OPENPAREN       reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    TRUE            reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    FALSE           reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CTEFLOAT        reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CTESTRING       reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CTEINT          reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    ID              reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CLOSECURLY      reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    VAR             reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    IF              reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    OUTPUT          reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    INPUT           reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    RETURN          reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)
    WHILE           reduce using rule 113 (factor -> OPENPAREN expresion CLOSEPAREN .)


state 194

    (48) callfunc -> ID OPENPAREN altcall . CLOSEPAREN

    CLOSEPAREN      shift and go to state 220


state 195

    (82) varcomp2 -> DOT varcomp3 .

    TIMES           reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    DIV             reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    SUM             reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    SUBTRACT        reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    SAMEAS          reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    BIGGERTHAN      reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    BIGGEREQUALSTHAN reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    SMALLTHAN       reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    SMALLEQUALSTHAN reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    DIFFERENTTHAN   reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    AND             reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    OR              reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    SEMICOLON       reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    COMMA           reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    CLOSEPAREN      reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    OPENPAREN       reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    TRUE            reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    FALSE           reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    CTEFLOAT        reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    CTESTRING       reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    CTEINT          reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    ID              reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    CLOSECURLY      reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    VAR             reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    IF              reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    OUTPUT          reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    INPUT           reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    RETURN          reduce using rule 82 (varcomp2 -> DOT varcomp3 .)
    WHILE           reduce using rule 82 (varcomp2 -> DOT varcomp3 .)


state 196

    (84) varcomp3 -> varcomp1 .

    TIMES           reduce using rule 84 (varcomp3 -> varcomp1 .)
    DIV             reduce using rule 84 (varcomp3 -> varcomp1 .)
    SUM             reduce using rule 84 (varcomp3 -> varcomp1 .)
    SUBTRACT        reduce using rule 84 (varcomp3 -> varcomp1 .)
    SAMEAS          reduce using rule 84 (varcomp3 -> varcomp1 .)
    BIGGERTHAN      reduce using rule 84 (varcomp3 -> varcomp1 .)
    BIGGEREQUALSTHAN reduce using rule 84 (varcomp3 -> varcomp1 .)
    SMALLTHAN       reduce using rule 84 (varcomp3 -> varcomp1 .)
    SMALLEQUALSTHAN reduce using rule 84 (varcomp3 -> varcomp1 .)
    DIFFERENTTHAN   reduce using rule 84 (varcomp3 -> varcomp1 .)
    AND             reduce using rule 84 (varcomp3 -> varcomp1 .)
    OR              reduce using rule 84 (varcomp3 -> varcomp1 .)
    SEMICOLON       reduce using rule 84 (varcomp3 -> varcomp1 .)
    COMMA           reduce using rule 84 (varcomp3 -> varcomp1 .)
    CLOSEPAREN      reduce using rule 84 (varcomp3 -> varcomp1 .)
    OPENPAREN       reduce using rule 84 (varcomp3 -> varcomp1 .)
    TRUE            reduce using rule 84 (varcomp3 -> varcomp1 .)
    FALSE           reduce using rule 84 (varcomp3 -> varcomp1 .)
    CTEFLOAT        reduce using rule 84 (varcomp3 -> varcomp1 .)
    CTESTRING       reduce using rule 84 (varcomp3 -> varcomp1 .)
    CTEINT          reduce using rule 84 (varcomp3 -> varcomp1 .)
    ID              reduce using rule 84 (varcomp3 -> varcomp1 .)
    CLOSECURLY      reduce using rule 84 (varcomp3 -> varcomp1 .)
    VAR             reduce using rule 84 (varcomp3 -> varcomp1 .)
    IF              reduce using rule 84 (varcomp3 -> varcomp1 .)
    OUTPUT          reduce using rule 84 (varcomp3 -> varcomp1 .)
    INPUT           reduce using rule 84 (varcomp3 -> varcomp1 .)
    RETURN          reduce using rule 84 (varcomp3 -> varcomp1 .)
    WHILE           reduce using rule 84 (varcomp3 -> varcomp1 .)


state 197

    (85) varcomp3 -> callfunc .

    TIMES           reduce using rule 85 (varcomp3 -> callfunc .)
    DIV             reduce using rule 85 (varcomp3 -> callfunc .)
    SUM             reduce using rule 85 (varcomp3 -> callfunc .)
    SUBTRACT        reduce using rule 85 (varcomp3 -> callfunc .)
    SAMEAS          reduce using rule 85 (varcomp3 -> callfunc .)
    BIGGERTHAN      reduce using rule 85 (varcomp3 -> callfunc .)
    BIGGEREQUALSTHAN reduce using rule 85 (varcomp3 -> callfunc .)
    SMALLTHAN       reduce using rule 85 (varcomp3 -> callfunc .)
    SMALLEQUALSTHAN reduce using rule 85 (varcomp3 -> callfunc .)
    DIFFERENTTHAN   reduce using rule 85 (varcomp3 -> callfunc .)
    AND             reduce using rule 85 (varcomp3 -> callfunc .)
    OR              reduce using rule 85 (varcomp3 -> callfunc .)
    SEMICOLON       reduce using rule 85 (varcomp3 -> callfunc .)
    COMMA           reduce using rule 85 (varcomp3 -> callfunc .)
    CLOSEPAREN      reduce using rule 85 (varcomp3 -> callfunc .)
    OPENPAREN       reduce using rule 85 (varcomp3 -> callfunc .)
    TRUE            reduce using rule 85 (varcomp3 -> callfunc .)
    FALSE           reduce using rule 85 (varcomp3 -> callfunc .)
    CTEFLOAT        reduce using rule 85 (varcomp3 -> callfunc .)
    CTESTRING       reduce using rule 85 (varcomp3 -> callfunc .)
    CTEINT          reduce using rule 85 (varcomp3 -> callfunc .)
    ID              reduce using rule 85 (varcomp3 -> callfunc .)
    CLOSECURLY      reduce using rule 85 (varcomp3 -> callfunc .)
    VAR             reduce using rule 85 (varcomp3 -> callfunc .)
    IF              reduce using rule 85 (varcomp3 -> callfunc .)
    OUTPUT          reduce using rule 85 (varcomp3 -> callfunc .)
    INPUT           reduce using rule 85 (varcomp3 -> callfunc .)
    RETURN          reduce using rule 85 (varcomp3 -> callfunc .)
    WHILE           reduce using rule 85 (varcomp3 -> callfunc .)


state 198

    (69) while -> WHILE OPENPAREN expresion CLOSEPAREN . OPENCURLY altwhile

    OPENCURLY       shift and go to state 221


state 199

    (19) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN . OPENCURLY alt2const

    OPENCURLY       shift and go to state 222


state 200

    (20) altconst -> params altconst .

    CLOSEPAREN      reduce using rule 20 (altconst -> params altconst .)


state 201

    (34) listidsaltp -> COMMA listids .

    TWODOTS         reduce using rule 34 (listidsaltp -> COMMA listids .)


state 202

    (46) altparams -> COMMA ID TWODOTS type . altparams
    (46) altparams -> . COMMA ID TWODOTS type altparams
    (47) altparams -> . empty
    (125) empty -> .

    COMMA           shift and go to state 91
    CLOSEPAREN      reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)

    altparams                      shift and go to state 223
    empty                          shift and go to state 92

state 203

    (41) alt3func -> var alt3func .

    CLASS           reduce using rule 41 (alt3func -> var alt3func .)
    VAR             reduce using rule 41 (alt3func -> var alt3func .)
    FUNC            reduce using rule 41 (alt3func -> var alt3func .)
    MAIN            reduce using rule 41 (alt3func -> var alt3func .)
    CONSTRUCTOR     reduce using rule 41 (alt3func -> var alt3func .)


state 204

    (42) alt3func -> estatuto alt3func .

    CLASS           reduce using rule 42 (alt3func -> estatuto alt3func .)
    VAR             reduce using rule 42 (alt3func -> estatuto alt3func .)
    FUNC            reduce using rule 42 (alt3func -> estatuto alt3func .)
    MAIN            reduce using rule 42 (alt3func -> estatuto alt3func .)
    CONSTRUCTOR     reduce using rule 42 (alt3func -> estatuto alt3func .)


state 205

    (121) assign -> ID assign1 EQUALS expresion SEMICOLON .

    CLOSECURLY      reduce using rule 121 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    VAR             reduce using rule 121 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    ID              reduce using rule 121 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    IF              reduce using rule 121 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    OUTPUT          reduce using rule 121 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    INPUT           reduce using rule 121 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 121 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 121 (assign -> ID assign1 EQUALS expresion SEMICOLON .)


state 206

    (49) altcall -> expresion alt2call .

    CLOSECURLY      reduce using rule 49 (altcall -> expresion alt2call .)
    VAR             reduce using rule 49 (altcall -> expresion alt2call .)
    ID              reduce using rule 49 (altcall -> expresion alt2call .)
    IF              reduce using rule 49 (altcall -> expresion alt2call .)
    OUTPUT          reduce using rule 49 (altcall -> expresion alt2call .)
    INPUT           reduce using rule 49 (altcall -> expresion alt2call .)
    RETURN          reduce using rule 49 (altcall -> expresion alt2call .)
    WHILE           reduce using rule 49 (altcall -> expresion alt2call .)
    CLOSEPAREN      reduce using rule 49 (altcall -> expresion alt2call .)


state 207

    (51) alt2call -> COMMA . altcall
    (49) altcall -> . expresion alt2call
    (50) altcall -> . empty
    (67) altcall -> . COMMA expresion altcall
    (68) altcall -> . CLOSEPAREN SEMICOLON
    (86) expresion -> . exp altexpresion
    (125) empty -> .
    (97) exp -> . termino
    (98) exp -> . termino altexp
    (102) termino -> . factor
    (103) termino -> . factor alttermino
    (113) factor -> . OPENPAREN expresion CLOSEPAREN
    (114) factor -> . SUM varcall
    (115) factor -> . SUBTRACT varcall
    (116) factor -> . varcall
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 179
    CLOSEPAREN      shift and go to state 180
    CLOSECURLY      reduce using rule 125 (empty -> .)
    VAR             reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    OUTPUT          reduce using rule 125 (empty -> .)
    INPUT           reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    WHILE           reduce using rule 125 (empty -> .)
    OPENPAREN       shift and go to state 108
    SUM             shift and go to state 109
    SUBTRACT        shift and go to state 111
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121

  ! ID              [ reduce using rule 125 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 125 (empty -> .) ]

    altcall                        shift and go to state 224
    expresion                      shift and go to state 176
    empty                          shift and go to state 178
    exp                            shift and go to state 105
    termino                        shift and go to state 106
    factor                         shift and go to state 107
    varcall                        shift and go to state 110
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120

state 208

    (52) alt2call -> empty .

    CLOSECURLY      reduce using rule 52 (alt2call -> empty .)
    VAR             reduce using rule 52 (alt2call -> empty .)
    ID              reduce using rule 52 (alt2call -> empty .)
    IF              reduce using rule 52 (alt2call -> empty .)
    OUTPUT          reduce using rule 52 (alt2call -> empty .)
    INPUT           reduce using rule 52 (alt2call -> empty .)
    RETURN          reduce using rule 52 (alt2call -> empty .)
    WHILE           reduce using rule 52 (alt2call -> empty .)
    CLOSEPAREN      reduce using rule 52 (alt2call -> empty .)


state 209

    (67) altcall -> COMMA expresion . altcall
    (49) altcall -> . expresion alt2call
    (50) altcall -> . empty
    (67) altcall -> . COMMA expresion altcall
    (68) altcall -> . CLOSEPAREN SEMICOLON
    (86) expresion -> . exp altexpresion
    (125) empty -> .
    (97) exp -> . termino
    (98) exp -> . termino altexp
    (102) termino -> . factor
    (103) termino -> . factor alttermino
    (113) factor -> . OPENPAREN expresion CLOSEPAREN
    (114) factor -> . SUM varcall
    (115) factor -> . SUBTRACT varcall
    (116) factor -> . varcall
    (72) varcall -> . varcte
    (73) varcall -> . varcomplicated
    (74) varcte -> . TRUE
    (75) varcte -> . FALSE
    (76) varcte -> . CTEFLOAT
    (77) varcte -> . CTESTRING
    (78) varcte -> . CTEINT
    (79) varcomplicated -> . varcomp1
    (80) varcomplicated -> . callfunc
    (81) varcomp1 -> . ID varcomp2
    (48) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 179
    CLOSEPAREN      shift and go to state 180
    CLOSECURLY      reduce using rule 125 (empty -> .)
    VAR             reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    OUTPUT          reduce using rule 125 (empty -> .)
    INPUT           reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    WHILE           reduce using rule 125 (empty -> .)
    OPENPAREN       shift and go to state 108
    SUM             shift and go to state 109
    SUBTRACT        shift and go to state 111
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    CTEFLOAT        shift and go to state 116
    CTESTRING       shift and go to state 117
    CTEINT          shift and go to state 118
    ID              shift and go to state 121

  ! ID              [ reduce using rule 125 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 125 (empty -> .) ]

    expresion                      shift and go to state 176
    altcall                        shift and go to state 225
    empty                          shift and go to state 178
    exp                            shift and go to state 105
    termino                        shift and go to state 106
    factor                         shift and go to state 107
    varcall                        shift and go to state 110
    varcte                         shift and go to state 112
    varcomplicated                 shift and go to state 113
    varcomp1                       shift and go to state 119
    callfunc                       shift and go to state 120

state 210

    (68) altcall -> CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 68 (altcall -> CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 68 (altcall -> CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 68 (altcall -> CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 68 (altcall -> CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 68 (altcall -> CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 68 (altcall -> CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 68 (altcall -> CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 68 (altcall -> CLOSEPAREN SEMICOLON .)
    CLOSEPAREN      reduce using rule 68 (altcall -> CLOSEPAREN SEMICOLON .)


state 211

    (117) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY . altcondition
    (118) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY . altcondition ELSE OPENCURLY altcondition
    (119) altcondition -> . estatuto altcondition
    (120) altcondition -> . CLOSECURLY
    (58) estatuto -> . assign
    (59) estatuto -> . condition
    (60) estatuto -> . write
    (61) estatuto -> . read
    (62) estatuto -> . return
    (63) estatuto -> . voidcall
    (64) estatuto -> . while
    (121) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (117) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (118) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (108) write -> . OUTPUT OPENPAREN varcall altwrite
    (109) write -> . OUTPUT OPENPAREN expresion altwrite
    (107) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (124) return -> . RETURN expresion SEMICOLON
    (65) voidcall -> . ID OPENPAREN CLOSEPAREN
    (66) voidcall -> . ID OPENPAREN expresion altcall
    (69) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 228
    ID              shift and go to state 78
    IF              shift and go to state 79
    OUTPUT          shift and go to state 80
    INPUT           shift and go to state 81
    RETURN          shift and go to state 82
    WHILE           shift and go to state 83

    altcondition                   shift and go to state 226
    estatuto                       shift and go to state 227
    assign                         shift and go to state 71
    condition                      shift and go to state 72
    write                          shift and go to state 73
    read                           shift and go to state 74
    return                         shift and go to state 75
    voidcall                       shift and go to state 76
    while                          shift and go to state 77

state 212

    (110) altwrite -> COMMA varcall . altwrite
    (116) factor -> varcall .
    (110) altwrite -> . COMMA varcall altwrite
    (111) altwrite -> . COMMA expresion altwrite
    (112) altwrite -> . CLOSEPAREN SEMICOLON

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for CLOSEPAREN resolved as shift
    TIMES           reduce using rule 116 (factor -> varcall .)
    DIV             reduce using rule 116 (factor -> varcall .)
    SUM             reduce using rule 116 (factor -> varcall .)
    SUBTRACT        reduce using rule 116 (factor -> varcall .)
    SAMEAS          reduce using rule 116 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 116 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 116 (factor -> varcall .)
    SMALLTHAN       reduce using rule 116 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 116 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 116 (factor -> varcall .)
    AND             reduce using rule 116 (factor -> varcall .)
    OR              reduce using rule 116 (factor -> varcall .)
    COMMA           shift and go to state 184
    CLOSEPAREN      shift and go to state 185

  ! COMMA           [ reduce using rule 116 (factor -> varcall .) ]
  ! CLOSEPAREN      [ reduce using rule 116 (factor -> varcall .) ]

    altwrite                       shift and go to state 229

state 213

    (111) altwrite -> COMMA expresion . altwrite
    (110) altwrite -> . COMMA varcall altwrite
    (111) altwrite -> . COMMA expresion altwrite
    (112) altwrite -> . CLOSEPAREN SEMICOLON

    COMMA           shift and go to state 184
    CLOSEPAREN      shift and go to state 185

    altwrite                       shift and go to state 230

state 214

    (112) altwrite -> CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 112 (altwrite -> CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 112 (altwrite -> CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 112 (altwrite -> CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 112 (altwrite -> CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 112 (altwrite -> CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 112 (altwrite -> CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 112 (altwrite -> CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 112 (altwrite -> CLOSEPAREN SEMICOLON .)


state 215

    (107) read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 107 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 107 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 107 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 107 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 107 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 107 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 107 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 107 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)


state 216

    (99) altexp -> SUM termino altexp .

    SAMEAS          reduce using rule 99 (altexp -> SUM termino altexp .)
    BIGGERTHAN      reduce using rule 99 (altexp -> SUM termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 99 (altexp -> SUM termino altexp .)
    SMALLTHAN       reduce using rule 99 (altexp -> SUM termino altexp .)
    SMALLEQUALSTHAN reduce using rule 99 (altexp -> SUM termino altexp .)
    DIFFERENTTHAN   reduce using rule 99 (altexp -> SUM termino altexp .)
    AND             reduce using rule 99 (altexp -> SUM termino altexp .)
    OR              reduce using rule 99 (altexp -> SUM termino altexp .)
    SEMICOLON       reduce using rule 99 (altexp -> SUM termino altexp .)
    COMMA           reduce using rule 99 (altexp -> SUM termino altexp .)
    CLOSEPAREN      reduce using rule 99 (altexp -> SUM termino altexp .)
    OPENPAREN       reduce using rule 99 (altexp -> SUM termino altexp .)
    SUM             reduce using rule 99 (altexp -> SUM termino altexp .)
    SUBTRACT        reduce using rule 99 (altexp -> SUM termino altexp .)
    TRUE            reduce using rule 99 (altexp -> SUM termino altexp .)
    FALSE           reduce using rule 99 (altexp -> SUM termino altexp .)
    CTEFLOAT        reduce using rule 99 (altexp -> SUM termino altexp .)
    CTESTRING       reduce using rule 99 (altexp -> SUM termino altexp .)
    CTEINT          reduce using rule 99 (altexp -> SUM termino altexp .)
    ID              reduce using rule 99 (altexp -> SUM termino altexp .)
    CLOSECURLY      reduce using rule 99 (altexp -> SUM termino altexp .)
    VAR             reduce using rule 99 (altexp -> SUM termino altexp .)
    IF              reduce using rule 99 (altexp -> SUM termino altexp .)
    OUTPUT          reduce using rule 99 (altexp -> SUM termino altexp .)
    INPUT           reduce using rule 99 (altexp -> SUM termino altexp .)
    RETURN          reduce using rule 99 (altexp -> SUM termino altexp .)
    WHILE           reduce using rule 99 (altexp -> SUM termino altexp .)


state 217

    (100) altexp -> SUBTRACT termino altexp .

    SAMEAS          reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    BIGGERTHAN      reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    SMALLTHAN       reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    SMALLEQUALSTHAN reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    DIFFERENTTHAN   reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    AND             reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    OR              reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    SEMICOLON       reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    COMMA           reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    CLOSEPAREN      reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    OPENPAREN       reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    SUM             reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    SUBTRACT        reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    TRUE            reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    FALSE           reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    CTEFLOAT        reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    CTESTRING       reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    CTEINT          reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    ID              reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    CLOSECURLY      reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    VAR             reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    IF              reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    OUTPUT          reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    INPUT           reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    RETURN          reduce using rule 100 (altexp -> SUBTRACT termino altexp .)
    WHILE           reduce using rule 100 (altexp -> SUBTRACT termino altexp .)


state 218

    (104) alttermino -> TIMES factor alttermino .

    SUM             reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    SUBTRACT        reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    SAMEAS          reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    BIGGERTHAN      reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    SMALLTHAN       reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    DIFFERENTTHAN   reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    AND             reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    OR              reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    SEMICOLON       reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    COMMA           reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    CLOSEPAREN      reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    OPENPAREN       reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    TRUE            reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    FALSE           reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    CTEFLOAT        reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    CTESTRING       reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    CTEINT          reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    ID              reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    CLOSECURLY      reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    VAR             reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    IF              reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    OUTPUT          reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    INPUT           reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    RETURN          reduce using rule 104 (alttermino -> TIMES factor alttermino .)
    WHILE           reduce using rule 104 (alttermino -> TIMES factor alttermino .)


state 219

    (105) alttermino -> DIV factor alttermino .

    SUM             reduce using rule 105 (alttermino -> DIV factor alttermino .)
    SUBTRACT        reduce using rule 105 (alttermino -> DIV factor alttermino .)
    SAMEAS          reduce using rule 105 (alttermino -> DIV factor alttermino .)
    BIGGERTHAN      reduce using rule 105 (alttermino -> DIV factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 105 (alttermino -> DIV factor alttermino .)
    SMALLTHAN       reduce using rule 105 (alttermino -> DIV factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 105 (alttermino -> DIV factor alttermino .)
    DIFFERENTTHAN   reduce using rule 105 (alttermino -> DIV factor alttermino .)
    AND             reduce using rule 105 (alttermino -> DIV factor alttermino .)
    OR              reduce using rule 105 (alttermino -> DIV factor alttermino .)
    SEMICOLON       reduce using rule 105 (alttermino -> DIV factor alttermino .)
    COMMA           reduce using rule 105 (alttermino -> DIV factor alttermino .)
    CLOSEPAREN      reduce using rule 105 (alttermino -> DIV factor alttermino .)
    OPENPAREN       reduce using rule 105 (alttermino -> DIV factor alttermino .)
    TRUE            reduce using rule 105 (alttermino -> DIV factor alttermino .)
    FALSE           reduce using rule 105 (alttermino -> DIV factor alttermino .)
    CTEFLOAT        reduce using rule 105 (alttermino -> DIV factor alttermino .)
    CTESTRING       reduce using rule 105 (alttermino -> DIV factor alttermino .)
    CTEINT          reduce using rule 105 (alttermino -> DIV factor alttermino .)
    ID              reduce using rule 105 (alttermino -> DIV factor alttermino .)
    CLOSECURLY      reduce using rule 105 (alttermino -> DIV factor alttermino .)
    VAR             reduce using rule 105 (alttermino -> DIV factor alttermino .)
    IF              reduce using rule 105 (alttermino -> DIV factor alttermino .)
    OUTPUT          reduce using rule 105 (alttermino -> DIV factor alttermino .)
    INPUT           reduce using rule 105 (alttermino -> DIV factor alttermino .)
    RETURN          reduce using rule 105 (alttermino -> DIV factor alttermino .)
    WHILE           reduce using rule 105 (alttermino -> DIV factor alttermino .)


state 220

    (48) callfunc -> ID OPENPAREN altcall CLOSEPAREN .

    TIMES           reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    DIV             reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SUM             reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SUBTRACT        reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SAMEAS          reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    BIGGERTHAN      reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    BIGGEREQUALSTHAN reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SMALLTHAN       reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SMALLEQUALSTHAN reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    DIFFERENTTHAN   reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    AND             reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OR              reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SEMICOLON       reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    COMMA           reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OPENPAREN       reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    TRUE            reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    FALSE           reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTEFLOAT        reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTESTRING       reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTEINT          reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    ID              reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CLOSECURLY      reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    VAR             reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    IF              reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OUTPUT          reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    INPUT           reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    RETURN          reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    WHILE           reduce using rule 48 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)


state 221

    (69) while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY . altwhile
    (70) altwhile -> . estatuto altwhile
    (71) altwhile -> . CLOSECURLY
    (58) estatuto -> . assign
    (59) estatuto -> . condition
    (60) estatuto -> . write
    (61) estatuto -> . read
    (62) estatuto -> . return
    (63) estatuto -> . voidcall
    (64) estatuto -> . while
    (121) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (117) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (118) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (108) write -> . OUTPUT OPENPAREN varcall altwrite
    (109) write -> . OUTPUT OPENPAREN expresion altwrite
    (107) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (124) return -> . RETURN expresion SEMICOLON
    (65) voidcall -> . ID OPENPAREN CLOSEPAREN
    (66) voidcall -> . ID OPENPAREN expresion altcall
    (69) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 233
    ID              shift and go to state 78
    IF              shift and go to state 79
    OUTPUT          shift and go to state 80
    INPUT           shift and go to state 81
    RETURN          shift and go to state 82
    WHILE           shift and go to state 83

    altwhile                       shift and go to state 231
    estatuto                       shift and go to state 232
    assign                         shift and go to state 71
    condition                      shift and go to state 72
    write                          shift and go to state 73
    read                           shift and go to state 74
    return                         shift and go to state 75
    voidcall                       shift and go to state 76
    while                          shift and go to state 77

state 222

    (19) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY . alt2const
    (22) alt2const -> . var alt2const
    (23) alt2const -> . estatuto alt2const
    (24) alt2const -> . CLOSECURLY
    (26) var -> . VAR listids TWODOTS type SEMICOLON
    (58) estatuto -> . assign
    (59) estatuto -> . condition
    (60) estatuto -> . write
    (61) estatuto -> . read
    (62) estatuto -> . return
    (63) estatuto -> . voidcall
    (64) estatuto -> . while
    (121) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (117) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (118) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (108) write -> . OUTPUT OPENPAREN varcall altwrite
    (109) write -> . OUTPUT OPENPAREN expresion altwrite
    (107) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (124) return -> . RETURN expresion SEMICOLON
    (65) voidcall -> . ID OPENPAREN CLOSEPAREN
    (66) voidcall -> . ID OPENPAREN expresion altcall
    (69) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 237
    VAR             shift and go to state 12
    ID              shift and go to state 78
    IF              shift and go to state 79
    OUTPUT          shift and go to state 80
    INPUT           shift and go to state 81
    RETURN          shift and go to state 82
    WHILE           shift and go to state 83

    alt2const                      shift and go to state 234
    var                            shift and go to state 235
    estatuto                       shift and go to state 236
    assign                         shift and go to state 71
    condition                      shift and go to state 72
    write                          shift and go to state 73
    read                           shift and go to state 74
    return                         shift and go to state 75
    voidcall                       shift and go to state 76
    while                          shift and go to state 77

state 223

    (46) altparams -> COMMA ID TWODOTS type altparams .

    CLOSEPAREN      reduce using rule 46 (altparams -> COMMA ID TWODOTS type altparams .)
    ID              reduce using rule 46 (altparams -> COMMA ID TWODOTS type altparams .)


state 224

    (51) alt2call -> COMMA altcall .

    CLOSECURLY      reduce using rule 51 (alt2call -> COMMA altcall .)
    VAR             reduce using rule 51 (alt2call -> COMMA altcall .)
    ID              reduce using rule 51 (alt2call -> COMMA altcall .)
    IF              reduce using rule 51 (alt2call -> COMMA altcall .)
    OUTPUT          reduce using rule 51 (alt2call -> COMMA altcall .)
    INPUT           reduce using rule 51 (alt2call -> COMMA altcall .)
    RETURN          reduce using rule 51 (alt2call -> COMMA altcall .)
    WHILE           reduce using rule 51 (alt2call -> COMMA altcall .)
    CLOSEPAREN      reduce using rule 51 (alt2call -> COMMA altcall .)


state 225

    (67) altcall -> COMMA expresion altcall .

    CLOSECURLY      reduce using rule 67 (altcall -> COMMA expresion altcall .)
    VAR             reduce using rule 67 (altcall -> COMMA expresion altcall .)
    ID              reduce using rule 67 (altcall -> COMMA expresion altcall .)
    IF              reduce using rule 67 (altcall -> COMMA expresion altcall .)
    OUTPUT          reduce using rule 67 (altcall -> COMMA expresion altcall .)
    INPUT           reduce using rule 67 (altcall -> COMMA expresion altcall .)
    RETURN          reduce using rule 67 (altcall -> COMMA expresion altcall .)
    WHILE           reduce using rule 67 (altcall -> COMMA expresion altcall .)
    CLOSEPAREN      reduce using rule 67 (altcall -> COMMA expresion altcall .)


state 226

    (117) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .
    (118) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition . ELSE OPENCURLY altcondition

    CLOSECURLY      reduce using rule 117 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    VAR             reduce using rule 117 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    ID              reduce using rule 117 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    IF              reduce using rule 117 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    OUTPUT          reduce using rule 117 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    INPUT           reduce using rule 117 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    RETURN          reduce using rule 117 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    WHILE           reduce using rule 117 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    ELSE            shift and go to state 238


state 227

    (119) altcondition -> estatuto . altcondition
    (119) altcondition -> . estatuto altcondition
    (120) altcondition -> . CLOSECURLY
    (58) estatuto -> . assign
    (59) estatuto -> . condition
    (60) estatuto -> . write
    (61) estatuto -> . read
    (62) estatuto -> . return
    (63) estatuto -> . voidcall
    (64) estatuto -> . while
    (121) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (117) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (118) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (108) write -> . OUTPUT OPENPAREN varcall altwrite
    (109) write -> . OUTPUT OPENPAREN expresion altwrite
    (107) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (124) return -> . RETURN expresion SEMICOLON
    (65) voidcall -> . ID OPENPAREN CLOSEPAREN
    (66) voidcall -> . ID OPENPAREN expresion altcall
    (69) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 228
    ID              shift and go to state 78
    IF              shift and go to state 79
    OUTPUT          shift and go to state 80
    INPUT           shift and go to state 81
    RETURN          shift and go to state 82
    WHILE           shift and go to state 83

    estatuto                       shift and go to state 227
    altcondition                   shift and go to state 239
    assign                         shift and go to state 71
    condition                      shift and go to state 72
    write                          shift and go to state 73
    read                           shift and go to state 74
    return                         shift and go to state 75
    voidcall                       shift and go to state 76
    while                          shift and go to state 77

state 228

    (120) altcondition -> CLOSECURLY .

    ELSE            reduce using rule 120 (altcondition -> CLOSECURLY .)
    CLOSECURLY      reduce using rule 120 (altcondition -> CLOSECURLY .)
    VAR             reduce using rule 120 (altcondition -> CLOSECURLY .)
    ID              reduce using rule 120 (altcondition -> CLOSECURLY .)
    IF              reduce using rule 120 (altcondition -> CLOSECURLY .)
    OUTPUT          reduce using rule 120 (altcondition -> CLOSECURLY .)
    INPUT           reduce using rule 120 (altcondition -> CLOSECURLY .)
    RETURN          reduce using rule 120 (altcondition -> CLOSECURLY .)
    WHILE           reduce using rule 120 (altcondition -> CLOSECURLY .)


state 229

    (110) altwrite -> COMMA varcall altwrite .

    CLOSECURLY      reduce using rule 110 (altwrite -> COMMA varcall altwrite .)
    VAR             reduce using rule 110 (altwrite -> COMMA varcall altwrite .)
    ID              reduce using rule 110 (altwrite -> COMMA varcall altwrite .)
    IF              reduce using rule 110 (altwrite -> COMMA varcall altwrite .)
    OUTPUT          reduce using rule 110 (altwrite -> COMMA varcall altwrite .)
    INPUT           reduce using rule 110 (altwrite -> COMMA varcall altwrite .)
    RETURN          reduce using rule 110 (altwrite -> COMMA varcall altwrite .)
    WHILE           reduce using rule 110 (altwrite -> COMMA varcall altwrite .)


state 230

    (111) altwrite -> COMMA expresion altwrite .

    CLOSECURLY      reduce using rule 111 (altwrite -> COMMA expresion altwrite .)
    VAR             reduce using rule 111 (altwrite -> COMMA expresion altwrite .)
    ID              reduce using rule 111 (altwrite -> COMMA expresion altwrite .)
    IF              reduce using rule 111 (altwrite -> COMMA expresion altwrite .)
    OUTPUT          reduce using rule 111 (altwrite -> COMMA expresion altwrite .)
    INPUT           reduce using rule 111 (altwrite -> COMMA expresion altwrite .)
    RETURN          reduce using rule 111 (altwrite -> COMMA expresion altwrite .)
    WHILE           reduce using rule 111 (altwrite -> COMMA expresion altwrite .)


state 231

    (69) while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .

    CLOSECURLY      reduce using rule 69 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    VAR             reduce using rule 69 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    ID              reduce using rule 69 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    IF              reduce using rule 69 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    OUTPUT          reduce using rule 69 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    INPUT           reduce using rule 69 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    RETURN          reduce using rule 69 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    WHILE           reduce using rule 69 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)


state 232

    (70) altwhile -> estatuto . altwhile
    (70) altwhile -> . estatuto altwhile
    (71) altwhile -> . CLOSECURLY
    (58) estatuto -> . assign
    (59) estatuto -> . condition
    (60) estatuto -> . write
    (61) estatuto -> . read
    (62) estatuto -> . return
    (63) estatuto -> . voidcall
    (64) estatuto -> . while
    (121) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (117) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (118) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (108) write -> . OUTPUT OPENPAREN varcall altwrite
    (109) write -> . OUTPUT OPENPAREN expresion altwrite
    (107) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (124) return -> . RETURN expresion SEMICOLON
    (65) voidcall -> . ID OPENPAREN CLOSEPAREN
    (66) voidcall -> . ID OPENPAREN expresion altcall
    (69) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 233
    ID              shift and go to state 78
    IF              shift and go to state 79
    OUTPUT          shift and go to state 80
    INPUT           shift and go to state 81
    RETURN          shift and go to state 82
    WHILE           shift and go to state 83

    estatuto                       shift and go to state 232
    altwhile                       shift and go to state 240
    assign                         shift and go to state 71
    condition                      shift and go to state 72
    write                          shift and go to state 73
    read                           shift and go to state 74
    return                         shift and go to state 75
    voidcall                       shift and go to state 76
    while                          shift and go to state 77

state 233

    (71) altwhile -> CLOSECURLY .

    CLOSECURLY      reduce using rule 71 (altwhile -> CLOSECURLY .)
    VAR             reduce using rule 71 (altwhile -> CLOSECURLY .)
    ID              reduce using rule 71 (altwhile -> CLOSECURLY .)
    IF              reduce using rule 71 (altwhile -> CLOSECURLY .)
    OUTPUT          reduce using rule 71 (altwhile -> CLOSECURLY .)
    INPUT           reduce using rule 71 (altwhile -> CLOSECURLY .)
    RETURN          reduce using rule 71 (altwhile -> CLOSECURLY .)
    WHILE           reduce using rule 71 (altwhile -> CLOSECURLY .)


state 234

    (19) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const .

    CLOSECURLY      reduce using rule 19 (constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const .)


state 235

    (22) alt2const -> var . alt2const
    (22) alt2const -> . var alt2const
    (23) alt2const -> . estatuto alt2const
    (24) alt2const -> . CLOSECURLY
    (26) var -> . VAR listids TWODOTS type SEMICOLON
    (58) estatuto -> . assign
    (59) estatuto -> . condition
    (60) estatuto -> . write
    (61) estatuto -> . read
    (62) estatuto -> . return
    (63) estatuto -> . voidcall
    (64) estatuto -> . while
    (121) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (117) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (118) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (108) write -> . OUTPUT OPENPAREN varcall altwrite
    (109) write -> . OUTPUT OPENPAREN expresion altwrite
    (107) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (124) return -> . RETURN expresion SEMICOLON
    (65) voidcall -> . ID OPENPAREN CLOSEPAREN
    (66) voidcall -> . ID OPENPAREN expresion altcall
    (69) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 237
    VAR             shift and go to state 12
    ID              shift and go to state 78
    IF              shift and go to state 79
    OUTPUT          shift and go to state 80
    INPUT           shift and go to state 81
    RETURN          shift and go to state 82
    WHILE           shift and go to state 83

    var                            shift and go to state 235
    alt2const                      shift and go to state 241
    estatuto                       shift and go to state 236
    assign                         shift and go to state 71
    condition                      shift and go to state 72
    write                          shift and go to state 73
    read                           shift and go to state 74
    return                         shift and go to state 75
    voidcall                       shift and go to state 76
    while                          shift and go to state 77

state 236

    (23) alt2const -> estatuto . alt2const
    (22) alt2const -> . var alt2const
    (23) alt2const -> . estatuto alt2const
    (24) alt2const -> . CLOSECURLY
    (26) var -> . VAR listids TWODOTS type SEMICOLON
    (58) estatuto -> . assign
    (59) estatuto -> . condition
    (60) estatuto -> . write
    (61) estatuto -> . read
    (62) estatuto -> . return
    (63) estatuto -> . voidcall
    (64) estatuto -> . while
    (121) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (117) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (118) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (108) write -> . OUTPUT OPENPAREN varcall altwrite
    (109) write -> . OUTPUT OPENPAREN expresion altwrite
    (107) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (124) return -> . RETURN expresion SEMICOLON
    (65) voidcall -> . ID OPENPAREN CLOSEPAREN
    (66) voidcall -> . ID OPENPAREN expresion altcall
    (69) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 237
    VAR             shift and go to state 12
    ID              shift and go to state 78
    IF              shift and go to state 79
    OUTPUT          shift and go to state 80
    INPUT           shift and go to state 81
    RETURN          shift and go to state 82
    WHILE           shift and go to state 83

    estatuto                       shift and go to state 236
    alt2const                      shift and go to state 242
    var                            shift and go to state 235
    assign                         shift and go to state 71
    condition                      shift and go to state 72
    write                          shift and go to state 73
    read                           shift and go to state 74
    return                         shift and go to state 75
    voidcall                       shift and go to state 76
    while                          shift and go to state 77

state 237

    (24) alt2const -> CLOSECURLY .

    CLOSECURLY      reduce using rule 24 (alt2const -> CLOSECURLY .)


state 238

    (118) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE . OPENCURLY altcondition

    OPENCURLY       shift and go to state 243


state 239

    (119) altcondition -> estatuto altcondition .

    ELSE            reduce using rule 119 (altcondition -> estatuto altcondition .)
    CLOSECURLY      reduce using rule 119 (altcondition -> estatuto altcondition .)
    VAR             reduce using rule 119 (altcondition -> estatuto altcondition .)
    ID              reduce using rule 119 (altcondition -> estatuto altcondition .)
    IF              reduce using rule 119 (altcondition -> estatuto altcondition .)
    OUTPUT          reduce using rule 119 (altcondition -> estatuto altcondition .)
    INPUT           reduce using rule 119 (altcondition -> estatuto altcondition .)
    RETURN          reduce using rule 119 (altcondition -> estatuto altcondition .)
    WHILE           reduce using rule 119 (altcondition -> estatuto altcondition .)


state 240

    (70) altwhile -> estatuto altwhile .

    CLOSECURLY      reduce using rule 70 (altwhile -> estatuto altwhile .)
    VAR             reduce using rule 70 (altwhile -> estatuto altwhile .)
    ID              reduce using rule 70 (altwhile -> estatuto altwhile .)
    IF              reduce using rule 70 (altwhile -> estatuto altwhile .)
    OUTPUT          reduce using rule 70 (altwhile -> estatuto altwhile .)
    INPUT           reduce using rule 70 (altwhile -> estatuto altwhile .)
    RETURN          reduce using rule 70 (altwhile -> estatuto altwhile .)
    WHILE           reduce using rule 70 (altwhile -> estatuto altwhile .)


state 241

    (22) alt2const -> var alt2const .

    CLOSECURLY      reduce using rule 22 (alt2const -> var alt2const .)


state 242

    (23) alt2const -> estatuto alt2const .

    CLOSECURLY      reduce using rule 23 (alt2const -> estatuto alt2const .)


state 243

    (118) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY . altcondition
    (119) altcondition -> . estatuto altcondition
    (120) altcondition -> . CLOSECURLY
    (58) estatuto -> . assign
    (59) estatuto -> . condition
    (60) estatuto -> . write
    (61) estatuto -> . read
    (62) estatuto -> . return
    (63) estatuto -> . voidcall
    (64) estatuto -> . while
    (121) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (117) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (118) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (108) write -> . OUTPUT OPENPAREN varcall altwrite
    (109) write -> . OUTPUT OPENPAREN expresion altwrite
    (107) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (124) return -> . RETURN expresion SEMICOLON
    (65) voidcall -> . ID OPENPAREN CLOSEPAREN
    (66) voidcall -> . ID OPENPAREN expresion altcall
    (69) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 228
    ID              shift and go to state 78
    IF              shift and go to state 79
    OUTPUT          shift and go to state 80
    INPUT           shift and go to state 81
    RETURN          shift and go to state 82
    WHILE           shift and go to state 83

    altcondition                   shift and go to state 244
    estatuto                       shift and go to state 227
    assign                         shift and go to state 71
    condition                      shift and go to state 72
    write                          shift and go to state 73
    read                           shift and go to state 74
    return                         shift and go to state 75
    voidcall                       shift and go to state 76
    while                          shift and go to state 77

state 244

    (118) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .

    CLOSECURLY      reduce using rule 118 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    VAR             reduce using rule 118 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    ID              reduce using rule 118 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    IF              reduce using rule 118 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    OUTPUT          reduce using rule 118 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    INPUT           reduce using rule 118 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    RETURN          reduce using rule 118 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    WHILE           reduce using rule 118 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUM in state 106 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 106 resolved as shift
WARNING: shift/reduce conflict for SUM in state 106 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 106 resolved as shift
WARNING: shift/reduce conflict for OPENPAREN in state 121 resolved as shift
WARNING: shift/reduce conflict for ID in state 130 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 133 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 133 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 160 resolved as shift
WARNING: shift/reduce conflict for SUM in state 189 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 189 resolved as shift
WARNING: shift/reduce conflict for SUM in state 190 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 190 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 207 resolved as shift
WARNING: shift/reduce conflict for ID in state 207 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 209 resolved as shift
WARNING: shift/reduce conflict for ID in state 209 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 212 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 212 resolved as shift
WARNING: reduce/reduce conflict in state 106 resolved using rule (exp -> termino)
WARNING: rejected rule (empty -> <empty>) in state 106
WARNING: reduce/reduce conflict in state 107 resolved using rule (termino -> factor)
WARNING: rejected rule (empty -> <empty>) in state 107
