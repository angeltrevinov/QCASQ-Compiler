Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON altprogram
Rule 2     altprogram -> class altprogram
Rule 3     altprogram -> var altprogram
Rule 4     altprogram -> function altprogram
Rule 5     altprogram -> main
Rule 6     main -> MAIN OPENPAREN CLOSEPAREN OPENCURLY altmain
Rule 7     altmain -> estatuto altmain
Rule 8     altmain -> CLOSECURLY
Rule 9     class -> CLASS ID altclass OPENCURLY alt2class
Rule 10    altclass -> TWODOTS ID
Rule 11    altclass -> empty
Rule 12    alt2class -> var alt2class
Rule 13    alt2class -> function alt2class
Rule 14    alt2class -> constructor CLOSECURLY SEMICOLON
Rule 15    constructor -> CONSTRUCTOR OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const
Rule 16    altconst -> params altconst
Rule 17    altconst -> empty
Rule 18    alt2const -> estatuto alt2const
Rule 19    alt2const -> CLOSECURLY
Rule 20    var -> VAR listids TWODOTS type SEMICOLON
Rule 21    listids -> ID listidsalty
Rule 22    listidsalty -> COMMA listids
Rule 23    listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltz
Rule 24    listidsalty -> empty
Rule 25    listidsaltz -> COMMA listids
Rule 26    listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltp
Rule 27    listidsaltz -> empty
Rule 28    listidsaltp -> COMMA listids
Rule 29    listidsaltp -> empty
Rule 30    function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func
Rule 31    altfunc -> params
Rule 32    altfunc -> empty
Rule 33    alt2func -> TWODOTS type
Rule 34    alt2func -> empty
Rule 35    alt3func -> var alt3func
Rule 36    alt3func -> estatuto alt3func
Rule 37    alt3func -> CLOSECURLY
Rule 38    params -> ID TWODOTS type altparams
Rule 39    altparams -> COMMA ID TWODOTS type altparams
Rule 40    altparams -> empty
Rule 41    callfunc -> ID OPENPAREN altcall CLOSEPAREN
Rule 42    altcall -> expresion alt2call
Rule 43    altcall -> empty
Rule 44    alt2call -> COMMA altcall
Rule 45    alt2call -> empty
Rule 46    type -> INT
Rule 47    type -> FLOAT
Rule 48    type -> STRING
Rule 49    type -> ID
Rule 50    type -> BOOL
Rule 51    estatuto -> assign
Rule 52    estatuto -> condition
Rule 53    estatuto -> write
Rule 54    estatuto -> read
Rule 55    estatuto -> return
Rule 56    estatuto -> voidcall
Rule 57    voidcall -> ID OPENPAREN CLOSEPAREN
Rule 58    voidcall -> ID OPENPAREN expresion altcall
Rule 59    altcall -> COMMA expresion altcall
Rule 60    altcall -> CLOSEPAREN SEMICOLON
Rule 61    varcall -> varcte
Rule 62    varcall -> varcomplicated
Rule 63    varcte -> TRUE
Rule 64    varcte -> FALSE
Rule 65    varcte -> CTEFLOAT
Rule 66    varcte -> CTESTRING
Rule 67    varcte -> CTEINT
Rule 68    varcomplicated -> varcomp1
Rule 69    varcomplicated -> callfunc
Rule 70    varcomp1 -> ID varcomp2
Rule 71    varcomp2 -> DOT varcomp3
Rule 72    varcomp2 -> empty
Rule 73    varcomp3 -> varcomp1
Rule 74    varcomp3 -> callfunc
Rule 75    expresion -> exp altexpresion
Rule 76    altexpresion -> altexpresion2 exp
Rule 77    altexpresion -> empty
Rule 78    altexpresion2 -> SAMEAS
Rule 79    altexpresion2 -> BIGGERTHAN
Rule 80    altexpresion2 -> BIGGEREQUALSTHAN
Rule 81    altexpresion2 -> SMALLTHAN
Rule 82    altexpresion2 -> SMALLEQUALSTHAN
Rule 83    altexpresion2 -> DIFFERENTTHAN
Rule 84    altexpresion2 -> AND
Rule 85    altexpresion2 -> OR
Rule 86    exp -> termino
Rule 87    exp -> termino altexp
Rule 88    altexp -> SUM termino altexp
Rule 89    altexp -> SUBTRACT termino altexp
Rule 90    altexp -> empty
Rule 91    termino -> factor
Rule 92    termino -> factor alttermino
Rule 93    alttermino -> TIMES factor alttermino
Rule 94    alttermino -> DIV factor alttermino
Rule 95    alttermino -> empty
Rule 96    read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
Rule 97    write -> OUTPUT OPENPAREN varcall altwrite
Rule 98    write -> OUTPUT OPENPAREN expresion altwrite
Rule 99    altwrite -> COMMA varcall altwrite
Rule 100   altwrite -> COMMA expresion altwrite
Rule 101   altwrite -> CLOSEPAREN SEMICOLON
Rule 102   factor -> OPENPAREN expresion CLOSEPAREN
Rule 103   factor -> SUM varcall
Rule 104   factor -> SUBTRACT varcall
Rule 105   factor -> varcall
Rule 106   condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
Rule 107   condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
Rule 108   altcondition -> estatuto altcondition
Rule 109   altcondition -> CLOSECURLY
Rule 110   assign -> ID assign1 EQUALS expresion SEMICOLON
Rule 111   assign1 -> DOT ID assign1
Rule 112   assign1 -> empty
Rule 113   return -> RETURN expresion SEMICOLON
Rule 114   empty -> <empty>

Terminals, with rules where they appear

AND                  : 84
BIGGEREQUALSTHAN     : 80
BIGGERTHAN           : 79
BOOL                 : 50
CLASS                : 9
CLOSEBRACKET         : 23 26
CLOSECURLY           : 8 14 19 37 109
CLOSEPAREN           : 6 15 30 41 57 60 96 101 102 106 107
COMMA                : 22 25 28 39 44 59 99 100
CONSTRUCTOR          : 15
CTEFLOAT             : 65
CTEINT               : 23 26 67
CTESTRING            : 66
DIFFERENTTHAN        : 83
DIV                  : 94
DOT                  : 71 111
ELSE                 : 107
EQUALS               : 110
FALSE                : 64
FLOAT                : 47
FUNC                 : 30
ID                   : 1 9 10 21 30 38 39 41 49 57 58 70 96 110 111
IF                   : 106 107
INPUT                : 96
INT                  : 46
MAIN                 : 6
OPENBRACKET          : 23 26
OPENCURLY            : 6 9 15 30 106 107 107
OPENPAREN            : 6 15 30 41 57 58 96 97 98 102 106 107
OR                   : 85
OUTPUT               : 97 98
PROGRAM              : 1
RETURN               : 113
SAMEAS               : 78
SEMICOLON            : 1 14 20 60 96 101 110 113
SMALLEQUALSTHAN      : 82
SMALLTHAN            : 81
STRING               : 48
SUBTRACT             : 89 104
SUM                  : 88 103
TIMES                : 93
TRUE                 : 63
TWODOTS              : 10 20 33 38 39
VAR                  : 20
error                : 

Nonterminals, with rules where they appear

alt2call             : 42
alt2class            : 9 12 13
alt2const            : 15 18
alt2func             : 30
alt3func             : 30 35 36
altcall              : 41 44 58 59
altclass             : 9
altcondition         : 106 107 107 108
altconst             : 15 16
altexp               : 87 88 89
altexpresion         : 75
altexpresion2        : 76
altfunc              : 30
altmain              : 6 7
altparams            : 38 39
altprogram           : 1 2 3 4
alttermino           : 92 93 94
altwrite             : 97 98 99 100
assign               : 51
assign1              : 110 111
callfunc             : 69 74
class                : 2
condition            : 52
constructor          : 14
empty                : 11 17 24 27 29 32 34 40 43 45 72 77 90 95 112
estatuto             : 7 18 36 108
exp                  : 75 76
expresion            : 42 58 59 98 100 102 106 107 110 113
factor               : 91 92 93 94
function             : 4 13
listids              : 20 22 25 28
listidsaltp          : 26
listidsalty          : 21
listidsaltz          : 23
main                 : 5
params               : 16 31
program              : 0
read                 : 54
return               : 55
termino              : 86 87 88 89
type                 : 20 33 38 39
var                  : 3 12 35
varcall              : 97 99 103 104 105
varcomp1             : 68 73
varcomp2             : 70
varcomp3             : 71
varcomplicated       : 62
varcte               : 61
voidcall             : 56
write                : 53

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON altprogram

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON altprogram

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON altprogram

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (9) class -> . CLASS ID altclass OPENCURLY alt2class
    (20) var -> . VAR listids TWODOTS type SEMICOLON
    (30) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func
    (6) main -> . MAIN OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 10
    VAR             shift and go to state 11
    FUNC            shift and go to state 12
    MAIN            shift and go to state 13

    altprogram                     shift and go to state 5
    class                          shift and go to state 6
    var                            shift and go to state 7
    function                       shift and go to state 8
    main                           shift and go to state 9

state 5

    (1) program -> PROGRAM ID SEMICOLON altprogram .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON altprogram .)


state 6

    (2) altprogram -> class . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (9) class -> . CLASS ID altclass OPENCURLY alt2class
    (20) var -> . VAR listids TWODOTS type SEMICOLON
    (30) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func
    (6) main -> . MAIN OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 10
    VAR             shift and go to state 11
    FUNC            shift and go to state 12
    MAIN            shift and go to state 13

    class                          shift and go to state 6
    altprogram                     shift and go to state 14
    var                            shift and go to state 7
    function                       shift and go to state 8
    main                           shift and go to state 9

state 7

    (3) altprogram -> var . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (9) class -> . CLASS ID altclass OPENCURLY alt2class
    (20) var -> . VAR listids TWODOTS type SEMICOLON
    (30) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func
    (6) main -> . MAIN OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 10
    VAR             shift and go to state 11
    FUNC            shift and go to state 12
    MAIN            shift and go to state 13

    var                            shift and go to state 7
    altprogram                     shift and go to state 15
    class                          shift and go to state 6
    function                       shift and go to state 8
    main                           shift and go to state 9

state 8

    (4) altprogram -> function . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (9) class -> . CLASS ID altclass OPENCURLY alt2class
    (20) var -> . VAR listids TWODOTS type SEMICOLON
    (30) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func
    (6) main -> . MAIN OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 10
    VAR             shift and go to state 11
    FUNC            shift and go to state 12
    MAIN            shift and go to state 13

    function                       shift and go to state 8
    altprogram                     shift and go to state 16
    class                          shift and go to state 6
    var                            shift and go to state 7
    main                           shift and go to state 9

state 9

    (5) altprogram -> main .

    $end            reduce using rule 5 (altprogram -> main .)


state 10

    (9) class -> CLASS . ID altclass OPENCURLY alt2class

    ID              shift and go to state 17


state 11

    (20) var -> VAR . listids TWODOTS type SEMICOLON
    (21) listids -> . ID listidsalty

    ID              shift and go to state 19

    listids                        shift and go to state 18

state 12

    (30) function -> FUNC . ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func

    ID              shift and go to state 20


state 13

    (6) main -> MAIN . OPENPAREN CLOSEPAREN OPENCURLY altmain

    OPENPAREN       shift and go to state 21


state 14

    (2) altprogram -> class altprogram .

    $end            reduce using rule 2 (altprogram -> class altprogram .)


state 15

    (3) altprogram -> var altprogram .

    $end            reduce using rule 3 (altprogram -> var altprogram .)


state 16

    (4) altprogram -> function altprogram .

    $end            reduce using rule 4 (altprogram -> function altprogram .)


state 17

    (9) class -> CLASS ID . altclass OPENCURLY alt2class
    (10) altclass -> . TWODOTS ID
    (11) altclass -> . empty
    (114) empty -> .

    TWODOTS         shift and go to state 23
    OPENCURLY       reduce using rule 114 (empty -> .)

    altclass                       shift and go to state 22
    empty                          shift and go to state 24

state 18

    (20) var -> VAR listids . TWODOTS type SEMICOLON

    TWODOTS         shift and go to state 25


state 19

    (21) listids -> ID . listidsalty
    (22) listidsalty -> . COMMA listids
    (23) listidsalty -> . OPENBRACKET CTEINT CLOSEBRACKET listidsaltz
    (24) listidsalty -> . empty
    (114) empty -> .

    COMMA           shift and go to state 27
    OPENBRACKET     shift and go to state 28
    TWODOTS         reduce using rule 114 (empty -> .)

    listidsalty                    shift and go to state 26
    empty                          shift and go to state 29

state 20

    (30) function -> FUNC ID . OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func

    OPENPAREN       shift and go to state 30


state 21

    (6) main -> MAIN OPENPAREN . CLOSEPAREN OPENCURLY altmain

    CLOSEPAREN      shift and go to state 31


state 22

    (9) class -> CLASS ID altclass . OPENCURLY alt2class

    OPENCURLY       shift and go to state 32


state 23

    (10) altclass -> TWODOTS . ID

    ID              shift and go to state 33


state 24

    (11) altclass -> empty .

    OPENCURLY       reduce using rule 11 (altclass -> empty .)


state 25

    (20) var -> VAR listids TWODOTS . type SEMICOLON
    (46) type -> . INT
    (47) type -> . FLOAT
    (48) type -> . STRING
    (49) type -> . ID
    (50) type -> . BOOL

    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    STRING          shift and go to state 37
    ID              shift and go to state 38
    BOOL            shift and go to state 39

    type                           shift and go to state 34

state 26

    (21) listids -> ID listidsalty .

    TWODOTS         reduce using rule 21 (listids -> ID listidsalty .)


state 27

    (22) listidsalty -> COMMA . listids
    (21) listids -> . ID listidsalty

    ID              shift and go to state 19

    listids                        shift and go to state 40

state 28

    (23) listidsalty -> OPENBRACKET . CTEINT CLOSEBRACKET listidsaltz

    CTEINT          shift and go to state 41


state 29

    (24) listidsalty -> empty .

    TWODOTS         reduce using rule 24 (listidsalty -> empty .)


state 30

    (30) function -> FUNC ID OPENPAREN . altfunc CLOSEPAREN alt2func OPENCURLY alt3func
    (31) altfunc -> . params
    (32) altfunc -> . empty
    (38) params -> . ID TWODOTS type altparams
    (114) empty -> .

    ID              shift and go to state 42
    CLOSEPAREN      reduce using rule 114 (empty -> .)

    altfunc                        shift and go to state 43
    params                         shift and go to state 44
    empty                          shift and go to state 45

state 31

    (6) main -> MAIN OPENPAREN CLOSEPAREN . OPENCURLY altmain

    OPENCURLY       shift and go to state 46


state 32

    (9) class -> CLASS ID altclass OPENCURLY . alt2class
    (12) alt2class -> . var alt2class
    (13) alt2class -> . function alt2class
    (14) alt2class -> . constructor CLOSECURLY SEMICOLON
    (20) var -> . VAR listids TWODOTS type SEMICOLON
    (30) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func
    (15) constructor -> . CONSTRUCTOR OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 11
    FUNC            shift and go to state 12
    CONSTRUCTOR     shift and go to state 51

    alt2class                      shift and go to state 47
    var                            shift and go to state 48
    function                       shift and go to state 49
    constructor                    shift and go to state 50

state 33

    (10) altclass -> TWODOTS ID .

    OPENCURLY       reduce using rule 10 (altclass -> TWODOTS ID .)


state 34

    (20) var -> VAR listids TWODOTS type . SEMICOLON

    SEMICOLON       shift and go to state 52


state 35

    (46) type -> INT .

    SEMICOLON       reduce using rule 46 (type -> INT .)
    COMMA           reduce using rule 46 (type -> INT .)
    CLOSEPAREN      reduce using rule 46 (type -> INT .)
    ID              reduce using rule 46 (type -> INT .)
    OPENCURLY       reduce using rule 46 (type -> INT .)


state 36

    (47) type -> FLOAT .

    SEMICOLON       reduce using rule 47 (type -> FLOAT .)
    COMMA           reduce using rule 47 (type -> FLOAT .)
    CLOSEPAREN      reduce using rule 47 (type -> FLOAT .)
    ID              reduce using rule 47 (type -> FLOAT .)
    OPENCURLY       reduce using rule 47 (type -> FLOAT .)


state 37

    (48) type -> STRING .

    SEMICOLON       reduce using rule 48 (type -> STRING .)
    COMMA           reduce using rule 48 (type -> STRING .)
    CLOSEPAREN      reduce using rule 48 (type -> STRING .)
    ID              reduce using rule 48 (type -> STRING .)
    OPENCURLY       reduce using rule 48 (type -> STRING .)


state 38

    (49) type -> ID .

    SEMICOLON       reduce using rule 49 (type -> ID .)
    COMMA           reduce using rule 49 (type -> ID .)
    CLOSEPAREN      reduce using rule 49 (type -> ID .)
    ID              reduce using rule 49 (type -> ID .)
    OPENCURLY       reduce using rule 49 (type -> ID .)


state 39

    (50) type -> BOOL .

    SEMICOLON       reduce using rule 50 (type -> BOOL .)
    COMMA           reduce using rule 50 (type -> BOOL .)
    CLOSEPAREN      reduce using rule 50 (type -> BOOL .)
    ID              reduce using rule 50 (type -> BOOL .)
    OPENCURLY       reduce using rule 50 (type -> BOOL .)


state 40

    (22) listidsalty -> COMMA listids .

    TWODOTS         reduce using rule 22 (listidsalty -> COMMA listids .)


state 41

    (23) listidsalty -> OPENBRACKET CTEINT . CLOSEBRACKET listidsaltz

    CLOSEBRACKET    shift and go to state 53


state 42

    (38) params -> ID . TWODOTS type altparams

    TWODOTS         shift and go to state 54


state 43

    (30) function -> FUNC ID OPENPAREN altfunc . CLOSEPAREN alt2func OPENCURLY alt3func

    CLOSEPAREN      shift and go to state 55


state 44

    (31) altfunc -> params .

    CLOSEPAREN      reduce using rule 31 (altfunc -> params .)


state 45

    (32) altfunc -> empty .

    CLOSEPAREN      reduce using rule 32 (altfunc -> empty .)


state 46

    (6) main -> MAIN OPENPAREN CLOSEPAREN OPENCURLY . altmain
    (7) altmain -> . estatuto altmain
    (8) altmain -> . CLOSECURLY
    (51) estatuto -> . assign
    (52) estatuto -> . condition
    (53) estatuto -> . write
    (54) estatuto -> . read
    (55) estatuto -> . return
    (56) estatuto -> . voidcall
    (110) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (106) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (107) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (97) write -> . OUTPUT OPENPAREN varcall altwrite
    (98) write -> . OUTPUT OPENPAREN expresion altwrite
    (96) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (113) return -> . RETURN expresion SEMICOLON
    (57) voidcall -> . ID OPENPAREN CLOSEPAREN
    (58) voidcall -> . ID OPENPAREN expresion altcall

    CLOSECURLY      shift and go to state 58
    ID              shift and go to state 65
    IF              shift and go to state 66
    OUTPUT          shift and go to state 67
    INPUT           shift and go to state 68
    RETURN          shift and go to state 69

    altmain                        shift and go to state 56
    estatuto                       shift and go to state 57
    assign                         shift and go to state 59
    condition                      shift and go to state 60
    write                          shift and go to state 61
    read                           shift and go to state 62
    return                         shift and go to state 63
    voidcall                       shift and go to state 64

state 47

    (9) class -> CLASS ID altclass OPENCURLY alt2class .

    CLASS           reduce using rule 9 (class -> CLASS ID altclass OPENCURLY alt2class .)
    VAR             reduce using rule 9 (class -> CLASS ID altclass OPENCURLY alt2class .)
    FUNC            reduce using rule 9 (class -> CLASS ID altclass OPENCURLY alt2class .)
    MAIN            reduce using rule 9 (class -> CLASS ID altclass OPENCURLY alt2class .)


state 48

    (12) alt2class -> var . alt2class
    (12) alt2class -> . var alt2class
    (13) alt2class -> . function alt2class
    (14) alt2class -> . constructor CLOSECURLY SEMICOLON
    (20) var -> . VAR listids TWODOTS type SEMICOLON
    (30) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func
    (15) constructor -> . CONSTRUCTOR OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 11
    FUNC            shift and go to state 12
    CONSTRUCTOR     shift and go to state 51

    var                            shift and go to state 48
    alt2class                      shift and go to state 70
    function                       shift and go to state 49
    constructor                    shift and go to state 50

state 49

    (13) alt2class -> function . alt2class
    (12) alt2class -> . var alt2class
    (13) alt2class -> . function alt2class
    (14) alt2class -> . constructor CLOSECURLY SEMICOLON
    (20) var -> . VAR listids TWODOTS type SEMICOLON
    (30) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func
    (15) constructor -> . CONSTRUCTOR OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 11
    FUNC            shift and go to state 12
    CONSTRUCTOR     shift and go to state 51

    function                       shift and go to state 49
    alt2class                      shift and go to state 71
    var                            shift and go to state 48
    constructor                    shift and go to state 50

state 50

    (14) alt2class -> constructor . CLOSECURLY SEMICOLON

    CLOSECURLY      shift and go to state 72


state 51

    (15) constructor -> CONSTRUCTOR . OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    OPENPAREN       shift and go to state 73


state 52

    (20) var -> VAR listids TWODOTS type SEMICOLON .

    CLASS           reduce using rule 20 (var -> VAR listids TWODOTS type SEMICOLON .)
    VAR             reduce using rule 20 (var -> VAR listids TWODOTS type SEMICOLON .)
    FUNC            reduce using rule 20 (var -> VAR listids TWODOTS type SEMICOLON .)
    MAIN            reduce using rule 20 (var -> VAR listids TWODOTS type SEMICOLON .)
    CONSTRUCTOR     reduce using rule 20 (var -> VAR listids TWODOTS type SEMICOLON .)
    CLOSECURLY      reduce using rule 20 (var -> VAR listids TWODOTS type SEMICOLON .)
    ID              reduce using rule 20 (var -> VAR listids TWODOTS type SEMICOLON .)
    IF              reduce using rule 20 (var -> VAR listids TWODOTS type SEMICOLON .)
    OUTPUT          reduce using rule 20 (var -> VAR listids TWODOTS type SEMICOLON .)
    INPUT           reduce using rule 20 (var -> VAR listids TWODOTS type SEMICOLON .)
    RETURN          reduce using rule 20 (var -> VAR listids TWODOTS type SEMICOLON .)


state 53

    (23) listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET . listidsaltz
    (25) listidsaltz -> . COMMA listids
    (26) listidsaltz -> . OPENBRACKET CTEINT CLOSEBRACKET listidsaltp
    (27) listidsaltz -> . empty
    (114) empty -> .

    COMMA           shift and go to state 76
    OPENBRACKET     shift and go to state 74
    TWODOTS         reduce using rule 114 (empty -> .)

    listidsaltz                    shift and go to state 75
    empty                          shift and go to state 77

state 54

    (38) params -> ID TWODOTS . type altparams
    (46) type -> . INT
    (47) type -> . FLOAT
    (48) type -> . STRING
    (49) type -> . ID
    (50) type -> . BOOL

    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    STRING          shift and go to state 37
    ID              shift and go to state 38
    BOOL            shift and go to state 39

    type                           shift and go to state 78

state 55

    (30) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN . alt2func OPENCURLY alt3func
    (33) alt2func -> . TWODOTS type
    (34) alt2func -> . empty
    (114) empty -> .

    TWODOTS         shift and go to state 80
    OPENCURLY       reduce using rule 114 (empty -> .)

    alt2func                       shift and go to state 79
    empty                          shift and go to state 81

state 56

    (6) main -> MAIN OPENPAREN CLOSEPAREN OPENCURLY altmain .

    $end            reduce using rule 6 (main -> MAIN OPENPAREN CLOSEPAREN OPENCURLY altmain .)


state 57

    (7) altmain -> estatuto . altmain
    (7) altmain -> . estatuto altmain
    (8) altmain -> . CLOSECURLY
    (51) estatuto -> . assign
    (52) estatuto -> . condition
    (53) estatuto -> . write
    (54) estatuto -> . read
    (55) estatuto -> . return
    (56) estatuto -> . voidcall
    (110) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (106) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (107) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (97) write -> . OUTPUT OPENPAREN varcall altwrite
    (98) write -> . OUTPUT OPENPAREN expresion altwrite
    (96) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (113) return -> . RETURN expresion SEMICOLON
    (57) voidcall -> . ID OPENPAREN CLOSEPAREN
    (58) voidcall -> . ID OPENPAREN expresion altcall

    CLOSECURLY      shift and go to state 58
    ID              shift and go to state 65
    IF              shift and go to state 66
    OUTPUT          shift and go to state 67
    INPUT           shift and go to state 68
    RETURN          shift and go to state 69

    estatuto                       shift and go to state 57
    altmain                        shift and go to state 82
    assign                         shift and go to state 59
    condition                      shift and go to state 60
    write                          shift and go to state 61
    read                           shift and go to state 62
    return                         shift and go to state 63
    voidcall                       shift and go to state 64

state 58

    (8) altmain -> CLOSECURLY .

    $end            reduce using rule 8 (altmain -> CLOSECURLY .)


state 59

    (51) estatuto -> assign .

    CLOSECURLY      reduce using rule 51 (estatuto -> assign .)
    ID              reduce using rule 51 (estatuto -> assign .)
    IF              reduce using rule 51 (estatuto -> assign .)
    OUTPUT          reduce using rule 51 (estatuto -> assign .)
    INPUT           reduce using rule 51 (estatuto -> assign .)
    RETURN          reduce using rule 51 (estatuto -> assign .)
    VAR             reduce using rule 51 (estatuto -> assign .)


state 60

    (52) estatuto -> condition .

    CLOSECURLY      reduce using rule 52 (estatuto -> condition .)
    ID              reduce using rule 52 (estatuto -> condition .)
    IF              reduce using rule 52 (estatuto -> condition .)
    OUTPUT          reduce using rule 52 (estatuto -> condition .)
    INPUT           reduce using rule 52 (estatuto -> condition .)
    RETURN          reduce using rule 52 (estatuto -> condition .)
    VAR             reduce using rule 52 (estatuto -> condition .)


state 61

    (53) estatuto -> write .

    CLOSECURLY      reduce using rule 53 (estatuto -> write .)
    ID              reduce using rule 53 (estatuto -> write .)
    IF              reduce using rule 53 (estatuto -> write .)
    OUTPUT          reduce using rule 53 (estatuto -> write .)
    INPUT           reduce using rule 53 (estatuto -> write .)
    RETURN          reduce using rule 53 (estatuto -> write .)
    VAR             reduce using rule 53 (estatuto -> write .)


state 62

    (54) estatuto -> read .

    CLOSECURLY      reduce using rule 54 (estatuto -> read .)
    ID              reduce using rule 54 (estatuto -> read .)
    IF              reduce using rule 54 (estatuto -> read .)
    OUTPUT          reduce using rule 54 (estatuto -> read .)
    INPUT           reduce using rule 54 (estatuto -> read .)
    RETURN          reduce using rule 54 (estatuto -> read .)
    VAR             reduce using rule 54 (estatuto -> read .)


state 63

    (55) estatuto -> return .

    CLOSECURLY      reduce using rule 55 (estatuto -> return .)
    ID              reduce using rule 55 (estatuto -> return .)
    IF              reduce using rule 55 (estatuto -> return .)
    OUTPUT          reduce using rule 55 (estatuto -> return .)
    INPUT           reduce using rule 55 (estatuto -> return .)
    RETURN          reduce using rule 55 (estatuto -> return .)
    VAR             reduce using rule 55 (estatuto -> return .)


state 64

    (56) estatuto -> voidcall .

    CLOSECURLY      reduce using rule 56 (estatuto -> voidcall .)
    ID              reduce using rule 56 (estatuto -> voidcall .)
    IF              reduce using rule 56 (estatuto -> voidcall .)
    OUTPUT          reduce using rule 56 (estatuto -> voidcall .)
    INPUT           reduce using rule 56 (estatuto -> voidcall .)
    RETURN          reduce using rule 56 (estatuto -> voidcall .)
    VAR             reduce using rule 56 (estatuto -> voidcall .)


state 65

    (110) assign -> ID . assign1 EQUALS expresion SEMICOLON
    (57) voidcall -> ID . OPENPAREN CLOSEPAREN
    (58) voidcall -> ID . OPENPAREN expresion altcall
    (111) assign1 -> . DOT ID assign1
    (112) assign1 -> . empty
    (114) empty -> .

    OPENPAREN       shift and go to state 84
    DOT             shift and go to state 85
    EQUALS          reduce using rule 114 (empty -> .)

    assign1                        shift and go to state 83
    empty                          shift and go to state 86

state 66

    (106) condition -> IF . OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (107) condition -> IF . OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition

    OPENPAREN       shift and go to state 87


state 67

    (97) write -> OUTPUT . OPENPAREN varcall altwrite
    (98) write -> OUTPUT . OPENPAREN expresion altwrite

    OPENPAREN       shift and go to state 88


state 68

    (96) read -> INPUT . OPENPAREN ID CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 89


state 69

    (113) return -> RETURN . expresion SEMICOLON
    (75) expresion -> . exp altexpresion
    (86) exp -> . termino
    (87) exp -> . termino altexp
    (91) termino -> . factor
    (92) termino -> . factor alttermino
    (102) factor -> . OPENPAREN expresion CLOSEPAREN
    (103) factor -> . SUM varcall
    (104) factor -> . SUBTRACT varcall
    (105) factor -> . varcall
    (61) varcall -> . varcte
    (62) varcall -> . varcomplicated
    (63) varcte -> . TRUE
    (64) varcte -> . FALSE
    (65) varcte -> . CTEFLOAT
    (66) varcte -> . CTESTRING
    (67) varcte -> . CTEINT
    (68) varcomplicated -> . varcomp1
    (69) varcomplicated -> . callfunc
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 94
    SUM             shift and go to state 95
    SUBTRACT        shift and go to state 97
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTESTRING       shift and go to state 103
    CTEINT          shift and go to state 104
    ID              shift and go to state 107

    expresion                      shift and go to state 90
    exp                            shift and go to state 91
    termino                        shift and go to state 92
    factor                         shift and go to state 93
    varcall                        shift and go to state 96
    varcte                         shift and go to state 98
    varcomplicated                 shift and go to state 99
    varcomp1                       shift and go to state 105
    callfunc                       shift and go to state 106

state 70

    (12) alt2class -> var alt2class .

    CLASS           reduce using rule 12 (alt2class -> var alt2class .)
    VAR             reduce using rule 12 (alt2class -> var alt2class .)
    FUNC            reduce using rule 12 (alt2class -> var alt2class .)
    MAIN            reduce using rule 12 (alt2class -> var alt2class .)


state 71

    (13) alt2class -> function alt2class .

    CLASS           reduce using rule 13 (alt2class -> function alt2class .)
    VAR             reduce using rule 13 (alt2class -> function alt2class .)
    FUNC            reduce using rule 13 (alt2class -> function alt2class .)
    MAIN            reduce using rule 13 (alt2class -> function alt2class .)


state 72

    (14) alt2class -> constructor CLOSECURLY . SEMICOLON

    SEMICOLON       shift and go to state 108


state 73

    (15) constructor -> CONSTRUCTOR OPENPAREN . altconst CLOSEPAREN OPENCURLY alt2const
    (16) altconst -> . params altconst
    (17) altconst -> . empty
    (38) params -> . ID TWODOTS type altparams
    (114) empty -> .

    ID              shift and go to state 42
    CLOSEPAREN      reduce using rule 114 (empty -> .)

    altconst                       shift and go to state 109
    params                         shift and go to state 110
    empty                          shift and go to state 111

state 74

    (26) listidsaltz -> OPENBRACKET . CTEINT CLOSEBRACKET listidsaltp

    CTEINT          shift and go to state 112


state 75

    (23) listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltz .

    TWODOTS         reduce using rule 23 (listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltz .)


state 76

    (25) listidsaltz -> COMMA . listids
    (21) listids -> . ID listidsalty

    ID              shift and go to state 19

    listids                        shift and go to state 113

state 77

    (27) listidsaltz -> empty .

    TWODOTS         reduce using rule 27 (listidsaltz -> empty .)


state 78

    (38) params -> ID TWODOTS type . altparams
    (39) altparams -> . COMMA ID TWODOTS type altparams
    (40) altparams -> . empty
    (114) empty -> .

    COMMA           shift and go to state 115
    CLOSEPAREN      reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)

    altparams                      shift and go to state 114
    empty                          shift and go to state 116

state 79

    (30) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func . OPENCURLY alt3func

    OPENCURLY       shift and go to state 117


state 80

    (33) alt2func -> TWODOTS . type
    (46) type -> . INT
    (47) type -> . FLOAT
    (48) type -> . STRING
    (49) type -> . ID
    (50) type -> . BOOL

    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    STRING          shift and go to state 37
    ID              shift and go to state 38
    BOOL            shift and go to state 39

    type                           shift and go to state 118

state 81

    (34) alt2func -> empty .

    OPENCURLY       reduce using rule 34 (alt2func -> empty .)


state 82

    (7) altmain -> estatuto altmain .

    $end            reduce using rule 7 (altmain -> estatuto altmain .)


state 83

    (110) assign -> ID assign1 . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 119


state 84

    (57) voidcall -> ID OPENPAREN . CLOSEPAREN
    (58) voidcall -> ID OPENPAREN . expresion altcall
    (75) expresion -> . exp altexpresion
    (86) exp -> . termino
    (87) exp -> . termino altexp
    (91) termino -> . factor
    (92) termino -> . factor alttermino
    (102) factor -> . OPENPAREN expresion CLOSEPAREN
    (103) factor -> . SUM varcall
    (104) factor -> . SUBTRACT varcall
    (105) factor -> . varcall
    (61) varcall -> . varcte
    (62) varcall -> . varcomplicated
    (63) varcte -> . TRUE
    (64) varcte -> . FALSE
    (65) varcte -> . CTEFLOAT
    (66) varcte -> . CTESTRING
    (67) varcte -> . CTEINT
    (68) varcomplicated -> . varcomp1
    (69) varcomplicated -> . callfunc
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    CLOSEPAREN      shift and go to state 120
    OPENPAREN       shift and go to state 94
    SUM             shift and go to state 95
    SUBTRACT        shift and go to state 97
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTESTRING       shift and go to state 103
    CTEINT          shift and go to state 104
    ID              shift and go to state 107

    expresion                      shift and go to state 121
    exp                            shift and go to state 91
    termino                        shift and go to state 92
    factor                         shift and go to state 93
    varcall                        shift and go to state 96
    varcte                         shift and go to state 98
    varcomplicated                 shift and go to state 99
    varcomp1                       shift and go to state 105
    callfunc                       shift and go to state 106

state 85

    (111) assign1 -> DOT . ID assign1

    ID              shift and go to state 122


state 86

    (112) assign1 -> empty .

    EQUALS          reduce using rule 112 (assign1 -> empty .)


state 87

    (106) condition -> IF OPENPAREN . expresion CLOSEPAREN OPENCURLY altcondition
    (107) condition -> IF OPENPAREN . expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (75) expresion -> . exp altexpresion
    (86) exp -> . termino
    (87) exp -> . termino altexp
    (91) termino -> . factor
    (92) termino -> . factor alttermino
    (102) factor -> . OPENPAREN expresion CLOSEPAREN
    (103) factor -> . SUM varcall
    (104) factor -> . SUBTRACT varcall
    (105) factor -> . varcall
    (61) varcall -> . varcte
    (62) varcall -> . varcomplicated
    (63) varcte -> . TRUE
    (64) varcte -> . FALSE
    (65) varcte -> . CTEFLOAT
    (66) varcte -> . CTESTRING
    (67) varcte -> . CTEINT
    (68) varcomplicated -> . varcomp1
    (69) varcomplicated -> . callfunc
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 94
    SUM             shift and go to state 95
    SUBTRACT        shift and go to state 97
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTESTRING       shift and go to state 103
    CTEINT          shift and go to state 104
    ID              shift and go to state 107

    expresion                      shift and go to state 123
    exp                            shift and go to state 91
    termino                        shift and go to state 92
    factor                         shift and go to state 93
    varcall                        shift and go to state 96
    varcte                         shift and go to state 98
    varcomplicated                 shift and go to state 99
    varcomp1                       shift and go to state 105
    callfunc                       shift and go to state 106

state 88

    (97) write -> OUTPUT OPENPAREN . varcall altwrite
    (98) write -> OUTPUT OPENPAREN . expresion altwrite
    (61) varcall -> . varcte
    (62) varcall -> . varcomplicated
    (75) expresion -> . exp altexpresion
    (63) varcte -> . TRUE
    (64) varcte -> . FALSE
    (65) varcte -> . CTEFLOAT
    (66) varcte -> . CTESTRING
    (67) varcte -> . CTEINT
    (68) varcomplicated -> . varcomp1
    (69) varcomplicated -> . callfunc
    (86) exp -> . termino
    (87) exp -> . termino altexp
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN
    (91) termino -> . factor
    (92) termino -> . factor alttermino
    (102) factor -> . OPENPAREN expresion CLOSEPAREN
    (103) factor -> . SUM varcall
    (104) factor -> . SUBTRACT varcall
    (105) factor -> . varcall

    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTESTRING       shift and go to state 103
    CTEINT          shift and go to state 104
    ID              shift and go to state 107
    OPENPAREN       shift and go to state 94
    SUM             shift and go to state 95
    SUBTRACT        shift and go to state 97

    varcall                        shift and go to state 124
    expresion                      shift and go to state 125
    varcte                         shift and go to state 98
    varcomplicated                 shift and go to state 99
    exp                            shift and go to state 91
    varcomp1                       shift and go to state 105
    callfunc                       shift and go to state 106
    termino                        shift and go to state 92
    factor                         shift and go to state 93

state 89

    (96) read -> INPUT OPENPAREN . ID CLOSEPAREN SEMICOLON

    ID              shift and go to state 126


state 90

    (113) return -> RETURN expresion . SEMICOLON

    SEMICOLON       shift and go to state 127


state 91

    (75) expresion -> exp . altexpresion
    (76) altexpresion -> . altexpresion2 exp
    (77) altexpresion -> . empty
    (78) altexpresion2 -> . SAMEAS
    (79) altexpresion2 -> . BIGGERTHAN
    (80) altexpresion2 -> . BIGGEREQUALSTHAN
    (81) altexpresion2 -> . SMALLTHAN
    (82) altexpresion2 -> . SMALLEQUALSTHAN
    (83) altexpresion2 -> . DIFFERENTTHAN
    (84) altexpresion2 -> . AND
    (85) altexpresion2 -> . OR
    (114) empty -> .

    SAMEAS          shift and go to state 131
    BIGGERTHAN      shift and go to state 132
    BIGGEREQUALSTHAN shift and go to state 133
    SMALLTHAN       shift and go to state 134
    SMALLEQUALSTHAN shift and go to state 135
    DIFFERENTTHAN   shift and go to state 136
    AND             shift and go to state 137
    OR              shift and go to state 138
    SEMICOLON       reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)
    CLOSEPAREN      reduce using rule 114 (empty -> .)
    OPENPAREN       reduce using rule 114 (empty -> .)
    SUM             reduce using rule 114 (empty -> .)
    SUBTRACT        reduce using rule 114 (empty -> .)
    TRUE            reduce using rule 114 (empty -> .)
    FALSE           reduce using rule 114 (empty -> .)
    CTEFLOAT        reduce using rule 114 (empty -> .)
    CTESTRING       reduce using rule 114 (empty -> .)
    CTEINT          reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    CLOSECURLY      reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    OUTPUT          reduce using rule 114 (empty -> .)
    INPUT           reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    VAR             reduce using rule 114 (empty -> .)

    altexpresion                   shift and go to state 128
    altexpresion2                  shift and go to state 129
    empty                          shift and go to state 130

state 92

    (86) exp -> termino .
    (87) exp -> termino . altexp
    (88) altexp -> . SUM termino altexp
    (89) altexp -> . SUBTRACT termino altexp
    (90) altexp -> . empty
    (114) empty -> .

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! reduce/reduce conflict for SAMEAS resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for BIGGERTHAN resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for BIGGEREQUALSTHAN resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for SMALLTHAN resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for SMALLEQUALSTHAN resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for DIFFERENTTHAN resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for AND resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for OR resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for COMMA resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for CLOSEPAREN resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for OPENPAREN resolved using rule 86 (exp -> termino .)
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! reduce/reduce conflict for TRUE resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for FALSE resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for CTESTRING resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for CTEINT resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for ID resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for CLOSECURLY resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for IF resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for INPUT resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for RETURN resolved using rule 86 (exp -> termino .)
  ! reduce/reduce conflict for VAR resolved using rule 86 (exp -> termino .)
    SAMEAS          reduce using rule 86 (exp -> termino .)
    BIGGERTHAN      reduce using rule 86 (exp -> termino .)
    BIGGEREQUALSTHAN reduce using rule 86 (exp -> termino .)
    SMALLTHAN       reduce using rule 86 (exp -> termino .)
    SMALLEQUALSTHAN reduce using rule 86 (exp -> termino .)
    DIFFERENTTHAN   reduce using rule 86 (exp -> termino .)
    AND             reduce using rule 86 (exp -> termino .)
    OR              reduce using rule 86 (exp -> termino .)
    SEMICOLON       reduce using rule 86 (exp -> termino .)
    COMMA           reduce using rule 86 (exp -> termino .)
    CLOSEPAREN      reduce using rule 86 (exp -> termino .)
    OPENPAREN       reduce using rule 86 (exp -> termino .)
    TRUE            reduce using rule 86 (exp -> termino .)
    FALSE           reduce using rule 86 (exp -> termino .)
    CTEFLOAT        reduce using rule 86 (exp -> termino .)
    CTESTRING       reduce using rule 86 (exp -> termino .)
    CTEINT          reduce using rule 86 (exp -> termino .)
    ID              reduce using rule 86 (exp -> termino .)
    CLOSECURLY      reduce using rule 86 (exp -> termino .)
    IF              reduce using rule 86 (exp -> termino .)
    OUTPUT          reduce using rule 86 (exp -> termino .)
    INPUT           reduce using rule 86 (exp -> termino .)
    RETURN          reduce using rule 86 (exp -> termino .)
    VAR             reduce using rule 86 (exp -> termino .)
    SUM             shift and go to state 140
    SUBTRACT        shift and go to state 141

  ! SUM             [ reduce using rule 86 (exp -> termino .) ]
  ! SUBTRACT        [ reduce using rule 86 (exp -> termino .) ]
  ! SAMEAS          [ reduce using rule 114 (empty -> .) ]
  ! BIGGERTHAN      [ reduce using rule 114 (empty -> .) ]
  ! BIGGEREQUALSTHAN [ reduce using rule 114 (empty -> .) ]
  ! SMALLTHAN       [ reduce using rule 114 (empty -> .) ]
  ! SMALLEQUALSTHAN [ reduce using rule 114 (empty -> .) ]
  ! DIFFERENTTHAN   [ reduce using rule 114 (empty -> .) ]
  ! AND             [ reduce using rule 114 (empty -> .) ]
  ! OR              [ reduce using rule 114 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 114 (empty -> .) ]
  ! COMMA           [ reduce using rule 114 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 114 (empty -> .) ]
  ! OPENPAREN       [ reduce using rule 114 (empty -> .) ]
  ! SUM             [ reduce using rule 114 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]
  ! CTEFLOAT        [ reduce using rule 114 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 114 (empty -> .) ]
  ! CTEINT          [ reduce using rule 114 (empty -> .) ]
  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CLOSECURLY      [ reduce using rule 114 (empty -> .) ]
  ! IF              [ reduce using rule 114 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 114 (empty -> .) ]
  ! INPUT           [ reduce using rule 114 (empty -> .) ]
  ! RETURN          [ reduce using rule 114 (empty -> .) ]
  ! VAR             [ reduce using rule 114 (empty -> .) ]

    altexp                         shift and go to state 139
    empty                          shift and go to state 142

state 93

    (91) termino -> factor .
    (92) termino -> factor . alttermino
    (93) alttermino -> . TIMES factor alttermino
    (94) alttermino -> . DIV factor alttermino
    (95) alttermino -> . empty
    (114) empty -> .

  ! reduce/reduce conflict for SUM resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for SUBTRACT resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for SAMEAS resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for BIGGERTHAN resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for BIGGEREQUALSTHAN resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for SMALLTHAN resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for SMALLEQUALSTHAN resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for DIFFERENTTHAN resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for AND resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for OR resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for COMMA resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for CLOSEPAREN resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for OPENPAREN resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for TRUE resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for FALSE resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for CTESTRING resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for CTEINT resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for ID resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for CLOSECURLY resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for IF resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for INPUT resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for RETURN resolved using rule 91 (termino -> factor .)
  ! reduce/reduce conflict for VAR resolved using rule 91 (termino -> factor .)
    SUM             reduce using rule 91 (termino -> factor .)
    SUBTRACT        reduce using rule 91 (termino -> factor .)
    SAMEAS          reduce using rule 91 (termino -> factor .)
    BIGGERTHAN      reduce using rule 91 (termino -> factor .)
    BIGGEREQUALSTHAN reduce using rule 91 (termino -> factor .)
    SMALLTHAN       reduce using rule 91 (termino -> factor .)
    SMALLEQUALSTHAN reduce using rule 91 (termino -> factor .)
    DIFFERENTTHAN   reduce using rule 91 (termino -> factor .)
    AND             reduce using rule 91 (termino -> factor .)
    OR              reduce using rule 91 (termino -> factor .)
    SEMICOLON       reduce using rule 91 (termino -> factor .)
    COMMA           reduce using rule 91 (termino -> factor .)
    CLOSEPAREN      reduce using rule 91 (termino -> factor .)
    OPENPAREN       reduce using rule 91 (termino -> factor .)
    TRUE            reduce using rule 91 (termino -> factor .)
    FALSE           reduce using rule 91 (termino -> factor .)
    CTEFLOAT        reduce using rule 91 (termino -> factor .)
    CTESTRING       reduce using rule 91 (termino -> factor .)
    CTEINT          reduce using rule 91 (termino -> factor .)
    ID              reduce using rule 91 (termino -> factor .)
    CLOSECURLY      reduce using rule 91 (termino -> factor .)
    IF              reduce using rule 91 (termino -> factor .)
    OUTPUT          reduce using rule 91 (termino -> factor .)
    INPUT           reduce using rule 91 (termino -> factor .)
    RETURN          reduce using rule 91 (termino -> factor .)
    VAR             reduce using rule 91 (termino -> factor .)
    TIMES           shift and go to state 144
    DIV             shift and go to state 145

  ! SUM             [ reduce using rule 114 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 114 (empty -> .) ]
  ! SAMEAS          [ reduce using rule 114 (empty -> .) ]
  ! BIGGERTHAN      [ reduce using rule 114 (empty -> .) ]
  ! BIGGEREQUALSTHAN [ reduce using rule 114 (empty -> .) ]
  ! SMALLTHAN       [ reduce using rule 114 (empty -> .) ]
  ! SMALLEQUALSTHAN [ reduce using rule 114 (empty -> .) ]
  ! DIFFERENTTHAN   [ reduce using rule 114 (empty -> .) ]
  ! AND             [ reduce using rule 114 (empty -> .) ]
  ! OR              [ reduce using rule 114 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 114 (empty -> .) ]
  ! COMMA           [ reduce using rule 114 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 114 (empty -> .) ]
  ! OPENPAREN       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]
  ! CTEFLOAT        [ reduce using rule 114 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 114 (empty -> .) ]
  ! CTEINT          [ reduce using rule 114 (empty -> .) ]
  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CLOSECURLY      [ reduce using rule 114 (empty -> .) ]
  ! IF              [ reduce using rule 114 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 114 (empty -> .) ]
  ! INPUT           [ reduce using rule 114 (empty -> .) ]
  ! RETURN          [ reduce using rule 114 (empty -> .) ]
  ! VAR             [ reduce using rule 114 (empty -> .) ]

    alttermino                     shift and go to state 143
    empty                          shift and go to state 146

state 94

    (102) factor -> OPENPAREN . expresion CLOSEPAREN
    (75) expresion -> . exp altexpresion
    (86) exp -> . termino
    (87) exp -> . termino altexp
    (91) termino -> . factor
    (92) termino -> . factor alttermino
    (102) factor -> . OPENPAREN expresion CLOSEPAREN
    (103) factor -> . SUM varcall
    (104) factor -> . SUBTRACT varcall
    (105) factor -> . varcall
    (61) varcall -> . varcte
    (62) varcall -> . varcomplicated
    (63) varcte -> . TRUE
    (64) varcte -> . FALSE
    (65) varcte -> . CTEFLOAT
    (66) varcte -> . CTESTRING
    (67) varcte -> . CTEINT
    (68) varcomplicated -> . varcomp1
    (69) varcomplicated -> . callfunc
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 94
    SUM             shift and go to state 95
    SUBTRACT        shift and go to state 97
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTESTRING       shift and go to state 103
    CTEINT          shift and go to state 104
    ID              shift and go to state 107

    expresion                      shift and go to state 147
    exp                            shift and go to state 91
    termino                        shift and go to state 92
    factor                         shift and go to state 93
    varcall                        shift and go to state 96
    varcte                         shift and go to state 98
    varcomplicated                 shift and go to state 99
    varcomp1                       shift and go to state 105
    callfunc                       shift and go to state 106

state 95

    (103) factor -> SUM . varcall
    (61) varcall -> . varcte
    (62) varcall -> . varcomplicated
    (63) varcte -> . TRUE
    (64) varcte -> . FALSE
    (65) varcte -> . CTEFLOAT
    (66) varcte -> . CTESTRING
    (67) varcte -> . CTEINT
    (68) varcomplicated -> . varcomp1
    (69) varcomplicated -> . callfunc
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTESTRING       shift and go to state 103
    CTEINT          shift and go to state 104
    ID              shift and go to state 107

    varcall                        shift and go to state 148
    varcte                         shift and go to state 98
    varcomplicated                 shift and go to state 99
    varcomp1                       shift and go to state 105
    callfunc                       shift and go to state 106

state 96

    (105) factor -> varcall .

    TIMES           reduce using rule 105 (factor -> varcall .)
    DIV             reduce using rule 105 (factor -> varcall .)
    SUM             reduce using rule 105 (factor -> varcall .)
    SUBTRACT        reduce using rule 105 (factor -> varcall .)
    SAMEAS          reduce using rule 105 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 105 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 105 (factor -> varcall .)
    SMALLTHAN       reduce using rule 105 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 105 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 105 (factor -> varcall .)
    AND             reduce using rule 105 (factor -> varcall .)
    OR              reduce using rule 105 (factor -> varcall .)
    SEMICOLON       reduce using rule 105 (factor -> varcall .)
    COMMA           reduce using rule 105 (factor -> varcall .)
    CLOSEPAREN      reduce using rule 105 (factor -> varcall .)
    OPENPAREN       reduce using rule 105 (factor -> varcall .)
    TRUE            reduce using rule 105 (factor -> varcall .)
    FALSE           reduce using rule 105 (factor -> varcall .)
    CTEFLOAT        reduce using rule 105 (factor -> varcall .)
    CTESTRING       reduce using rule 105 (factor -> varcall .)
    CTEINT          reduce using rule 105 (factor -> varcall .)
    ID              reduce using rule 105 (factor -> varcall .)
    CLOSECURLY      reduce using rule 105 (factor -> varcall .)
    IF              reduce using rule 105 (factor -> varcall .)
    OUTPUT          reduce using rule 105 (factor -> varcall .)
    INPUT           reduce using rule 105 (factor -> varcall .)
    RETURN          reduce using rule 105 (factor -> varcall .)
    VAR             reduce using rule 105 (factor -> varcall .)


state 97

    (104) factor -> SUBTRACT . varcall
    (61) varcall -> . varcte
    (62) varcall -> . varcomplicated
    (63) varcte -> . TRUE
    (64) varcte -> . FALSE
    (65) varcte -> . CTEFLOAT
    (66) varcte -> . CTESTRING
    (67) varcte -> . CTEINT
    (68) varcomplicated -> . varcomp1
    (69) varcomplicated -> . callfunc
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTESTRING       shift and go to state 103
    CTEINT          shift and go to state 104
    ID              shift and go to state 107

    varcall                        shift and go to state 149
    varcte                         shift and go to state 98
    varcomplicated                 shift and go to state 99
    varcomp1                       shift and go to state 105
    callfunc                       shift and go to state 106

state 98

    (61) varcall -> varcte .

    TIMES           reduce using rule 61 (varcall -> varcte .)
    DIV             reduce using rule 61 (varcall -> varcte .)
    SUM             reduce using rule 61 (varcall -> varcte .)
    SUBTRACT        reduce using rule 61 (varcall -> varcte .)
    SAMEAS          reduce using rule 61 (varcall -> varcte .)
    BIGGERTHAN      reduce using rule 61 (varcall -> varcte .)
    BIGGEREQUALSTHAN reduce using rule 61 (varcall -> varcte .)
    SMALLTHAN       reduce using rule 61 (varcall -> varcte .)
    SMALLEQUALSTHAN reduce using rule 61 (varcall -> varcte .)
    DIFFERENTTHAN   reduce using rule 61 (varcall -> varcte .)
    AND             reduce using rule 61 (varcall -> varcte .)
    OR              reduce using rule 61 (varcall -> varcte .)
    SEMICOLON       reduce using rule 61 (varcall -> varcte .)
    COMMA           reduce using rule 61 (varcall -> varcte .)
    CLOSEPAREN      reduce using rule 61 (varcall -> varcte .)
    OPENPAREN       reduce using rule 61 (varcall -> varcte .)
    TRUE            reduce using rule 61 (varcall -> varcte .)
    FALSE           reduce using rule 61 (varcall -> varcte .)
    CTEFLOAT        reduce using rule 61 (varcall -> varcte .)
    CTESTRING       reduce using rule 61 (varcall -> varcte .)
    CTEINT          reduce using rule 61 (varcall -> varcte .)
    ID              reduce using rule 61 (varcall -> varcte .)
    CLOSECURLY      reduce using rule 61 (varcall -> varcte .)
    IF              reduce using rule 61 (varcall -> varcte .)
    OUTPUT          reduce using rule 61 (varcall -> varcte .)
    INPUT           reduce using rule 61 (varcall -> varcte .)
    RETURN          reduce using rule 61 (varcall -> varcte .)
    VAR             reduce using rule 61 (varcall -> varcte .)


state 99

    (62) varcall -> varcomplicated .

    TIMES           reduce using rule 62 (varcall -> varcomplicated .)
    DIV             reduce using rule 62 (varcall -> varcomplicated .)
    SUM             reduce using rule 62 (varcall -> varcomplicated .)
    SUBTRACT        reduce using rule 62 (varcall -> varcomplicated .)
    SAMEAS          reduce using rule 62 (varcall -> varcomplicated .)
    BIGGERTHAN      reduce using rule 62 (varcall -> varcomplicated .)
    BIGGEREQUALSTHAN reduce using rule 62 (varcall -> varcomplicated .)
    SMALLTHAN       reduce using rule 62 (varcall -> varcomplicated .)
    SMALLEQUALSTHAN reduce using rule 62 (varcall -> varcomplicated .)
    DIFFERENTTHAN   reduce using rule 62 (varcall -> varcomplicated .)
    AND             reduce using rule 62 (varcall -> varcomplicated .)
    OR              reduce using rule 62 (varcall -> varcomplicated .)
    SEMICOLON       reduce using rule 62 (varcall -> varcomplicated .)
    COMMA           reduce using rule 62 (varcall -> varcomplicated .)
    CLOSEPAREN      reduce using rule 62 (varcall -> varcomplicated .)
    OPENPAREN       reduce using rule 62 (varcall -> varcomplicated .)
    TRUE            reduce using rule 62 (varcall -> varcomplicated .)
    FALSE           reduce using rule 62 (varcall -> varcomplicated .)
    CTEFLOAT        reduce using rule 62 (varcall -> varcomplicated .)
    CTESTRING       reduce using rule 62 (varcall -> varcomplicated .)
    CTEINT          reduce using rule 62 (varcall -> varcomplicated .)
    ID              reduce using rule 62 (varcall -> varcomplicated .)
    CLOSECURLY      reduce using rule 62 (varcall -> varcomplicated .)
    IF              reduce using rule 62 (varcall -> varcomplicated .)
    OUTPUT          reduce using rule 62 (varcall -> varcomplicated .)
    INPUT           reduce using rule 62 (varcall -> varcomplicated .)
    RETURN          reduce using rule 62 (varcall -> varcomplicated .)
    VAR             reduce using rule 62 (varcall -> varcomplicated .)


state 100

    (63) varcte -> TRUE .

    TIMES           reduce using rule 63 (varcte -> TRUE .)
    DIV             reduce using rule 63 (varcte -> TRUE .)
    SUM             reduce using rule 63 (varcte -> TRUE .)
    SUBTRACT        reduce using rule 63 (varcte -> TRUE .)
    SAMEAS          reduce using rule 63 (varcte -> TRUE .)
    BIGGERTHAN      reduce using rule 63 (varcte -> TRUE .)
    BIGGEREQUALSTHAN reduce using rule 63 (varcte -> TRUE .)
    SMALLTHAN       reduce using rule 63 (varcte -> TRUE .)
    SMALLEQUALSTHAN reduce using rule 63 (varcte -> TRUE .)
    DIFFERENTTHAN   reduce using rule 63 (varcte -> TRUE .)
    AND             reduce using rule 63 (varcte -> TRUE .)
    OR              reduce using rule 63 (varcte -> TRUE .)
    SEMICOLON       reduce using rule 63 (varcte -> TRUE .)
    COMMA           reduce using rule 63 (varcte -> TRUE .)
    CLOSEPAREN      reduce using rule 63 (varcte -> TRUE .)
    OPENPAREN       reduce using rule 63 (varcte -> TRUE .)
    TRUE            reduce using rule 63 (varcte -> TRUE .)
    FALSE           reduce using rule 63 (varcte -> TRUE .)
    CTEFLOAT        reduce using rule 63 (varcte -> TRUE .)
    CTESTRING       reduce using rule 63 (varcte -> TRUE .)
    CTEINT          reduce using rule 63 (varcte -> TRUE .)
    ID              reduce using rule 63 (varcte -> TRUE .)
    CLOSECURLY      reduce using rule 63 (varcte -> TRUE .)
    IF              reduce using rule 63 (varcte -> TRUE .)
    OUTPUT          reduce using rule 63 (varcte -> TRUE .)
    INPUT           reduce using rule 63 (varcte -> TRUE .)
    RETURN          reduce using rule 63 (varcte -> TRUE .)
    VAR             reduce using rule 63 (varcte -> TRUE .)


state 101

    (64) varcte -> FALSE .

    TIMES           reduce using rule 64 (varcte -> FALSE .)
    DIV             reduce using rule 64 (varcte -> FALSE .)
    SUM             reduce using rule 64 (varcte -> FALSE .)
    SUBTRACT        reduce using rule 64 (varcte -> FALSE .)
    SAMEAS          reduce using rule 64 (varcte -> FALSE .)
    BIGGERTHAN      reduce using rule 64 (varcte -> FALSE .)
    BIGGEREQUALSTHAN reduce using rule 64 (varcte -> FALSE .)
    SMALLTHAN       reduce using rule 64 (varcte -> FALSE .)
    SMALLEQUALSTHAN reduce using rule 64 (varcte -> FALSE .)
    DIFFERENTTHAN   reduce using rule 64 (varcte -> FALSE .)
    AND             reduce using rule 64 (varcte -> FALSE .)
    OR              reduce using rule 64 (varcte -> FALSE .)
    SEMICOLON       reduce using rule 64 (varcte -> FALSE .)
    COMMA           reduce using rule 64 (varcte -> FALSE .)
    CLOSEPAREN      reduce using rule 64 (varcte -> FALSE .)
    OPENPAREN       reduce using rule 64 (varcte -> FALSE .)
    TRUE            reduce using rule 64 (varcte -> FALSE .)
    FALSE           reduce using rule 64 (varcte -> FALSE .)
    CTEFLOAT        reduce using rule 64 (varcte -> FALSE .)
    CTESTRING       reduce using rule 64 (varcte -> FALSE .)
    CTEINT          reduce using rule 64 (varcte -> FALSE .)
    ID              reduce using rule 64 (varcte -> FALSE .)
    CLOSECURLY      reduce using rule 64 (varcte -> FALSE .)
    IF              reduce using rule 64 (varcte -> FALSE .)
    OUTPUT          reduce using rule 64 (varcte -> FALSE .)
    INPUT           reduce using rule 64 (varcte -> FALSE .)
    RETURN          reduce using rule 64 (varcte -> FALSE .)
    VAR             reduce using rule 64 (varcte -> FALSE .)


state 102

    (65) varcte -> CTEFLOAT .

    TIMES           reduce using rule 65 (varcte -> CTEFLOAT .)
    DIV             reduce using rule 65 (varcte -> CTEFLOAT .)
    SUM             reduce using rule 65 (varcte -> CTEFLOAT .)
    SUBTRACT        reduce using rule 65 (varcte -> CTEFLOAT .)
    SAMEAS          reduce using rule 65 (varcte -> CTEFLOAT .)
    BIGGERTHAN      reduce using rule 65 (varcte -> CTEFLOAT .)
    BIGGEREQUALSTHAN reduce using rule 65 (varcte -> CTEFLOAT .)
    SMALLTHAN       reduce using rule 65 (varcte -> CTEFLOAT .)
    SMALLEQUALSTHAN reduce using rule 65 (varcte -> CTEFLOAT .)
    DIFFERENTTHAN   reduce using rule 65 (varcte -> CTEFLOAT .)
    AND             reduce using rule 65 (varcte -> CTEFLOAT .)
    OR              reduce using rule 65 (varcte -> CTEFLOAT .)
    SEMICOLON       reduce using rule 65 (varcte -> CTEFLOAT .)
    COMMA           reduce using rule 65 (varcte -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 65 (varcte -> CTEFLOAT .)
    OPENPAREN       reduce using rule 65 (varcte -> CTEFLOAT .)
    TRUE            reduce using rule 65 (varcte -> CTEFLOAT .)
    FALSE           reduce using rule 65 (varcte -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 65 (varcte -> CTEFLOAT .)
    CTESTRING       reduce using rule 65 (varcte -> CTEFLOAT .)
    CTEINT          reduce using rule 65 (varcte -> CTEFLOAT .)
    ID              reduce using rule 65 (varcte -> CTEFLOAT .)
    CLOSECURLY      reduce using rule 65 (varcte -> CTEFLOAT .)
    IF              reduce using rule 65 (varcte -> CTEFLOAT .)
    OUTPUT          reduce using rule 65 (varcte -> CTEFLOAT .)
    INPUT           reduce using rule 65 (varcte -> CTEFLOAT .)
    RETURN          reduce using rule 65 (varcte -> CTEFLOAT .)
    VAR             reduce using rule 65 (varcte -> CTEFLOAT .)


state 103

    (66) varcte -> CTESTRING .

    TIMES           reduce using rule 66 (varcte -> CTESTRING .)
    DIV             reduce using rule 66 (varcte -> CTESTRING .)
    SUM             reduce using rule 66 (varcte -> CTESTRING .)
    SUBTRACT        reduce using rule 66 (varcte -> CTESTRING .)
    SAMEAS          reduce using rule 66 (varcte -> CTESTRING .)
    BIGGERTHAN      reduce using rule 66 (varcte -> CTESTRING .)
    BIGGEREQUALSTHAN reduce using rule 66 (varcte -> CTESTRING .)
    SMALLTHAN       reduce using rule 66 (varcte -> CTESTRING .)
    SMALLEQUALSTHAN reduce using rule 66 (varcte -> CTESTRING .)
    DIFFERENTTHAN   reduce using rule 66 (varcte -> CTESTRING .)
    AND             reduce using rule 66 (varcte -> CTESTRING .)
    OR              reduce using rule 66 (varcte -> CTESTRING .)
    SEMICOLON       reduce using rule 66 (varcte -> CTESTRING .)
    COMMA           reduce using rule 66 (varcte -> CTESTRING .)
    CLOSEPAREN      reduce using rule 66 (varcte -> CTESTRING .)
    OPENPAREN       reduce using rule 66 (varcte -> CTESTRING .)
    TRUE            reduce using rule 66 (varcte -> CTESTRING .)
    FALSE           reduce using rule 66 (varcte -> CTESTRING .)
    CTEFLOAT        reduce using rule 66 (varcte -> CTESTRING .)
    CTESTRING       reduce using rule 66 (varcte -> CTESTRING .)
    CTEINT          reduce using rule 66 (varcte -> CTESTRING .)
    ID              reduce using rule 66 (varcte -> CTESTRING .)
    CLOSECURLY      reduce using rule 66 (varcte -> CTESTRING .)
    IF              reduce using rule 66 (varcte -> CTESTRING .)
    OUTPUT          reduce using rule 66 (varcte -> CTESTRING .)
    INPUT           reduce using rule 66 (varcte -> CTESTRING .)
    RETURN          reduce using rule 66 (varcte -> CTESTRING .)
    VAR             reduce using rule 66 (varcte -> CTESTRING .)


state 104

    (67) varcte -> CTEINT .

    TIMES           reduce using rule 67 (varcte -> CTEINT .)
    DIV             reduce using rule 67 (varcte -> CTEINT .)
    SUM             reduce using rule 67 (varcte -> CTEINT .)
    SUBTRACT        reduce using rule 67 (varcte -> CTEINT .)
    SAMEAS          reduce using rule 67 (varcte -> CTEINT .)
    BIGGERTHAN      reduce using rule 67 (varcte -> CTEINT .)
    BIGGEREQUALSTHAN reduce using rule 67 (varcte -> CTEINT .)
    SMALLTHAN       reduce using rule 67 (varcte -> CTEINT .)
    SMALLEQUALSTHAN reduce using rule 67 (varcte -> CTEINT .)
    DIFFERENTTHAN   reduce using rule 67 (varcte -> CTEINT .)
    AND             reduce using rule 67 (varcte -> CTEINT .)
    OR              reduce using rule 67 (varcte -> CTEINT .)
    SEMICOLON       reduce using rule 67 (varcte -> CTEINT .)
    COMMA           reduce using rule 67 (varcte -> CTEINT .)
    CLOSEPAREN      reduce using rule 67 (varcte -> CTEINT .)
    OPENPAREN       reduce using rule 67 (varcte -> CTEINT .)
    TRUE            reduce using rule 67 (varcte -> CTEINT .)
    FALSE           reduce using rule 67 (varcte -> CTEINT .)
    CTEFLOAT        reduce using rule 67 (varcte -> CTEINT .)
    CTESTRING       reduce using rule 67 (varcte -> CTEINT .)
    CTEINT          reduce using rule 67 (varcte -> CTEINT .)
    ID              reduce using rule 67 (varcte -> CTEINT .)
    CLOSECURLY      reduce using rule 67 (varcte -> CTEINT .)
    IF              reduce using rule 67 (varcte -> CTEINT .)
    OUTPUT          reduce using rule 67 (varcte -> CTEINT .)
    INPUT           reduce using rule 67 (varcte -> CTEINT .)
    RETURN          reduce using rule 67 (varcte -> CTEINT .)
    VAR             reduce using rule 67 (varcte -> CTEINT .)


state 105

    (68) varcomplicated -> varcomp1 .

    TIMES           reduce using rule 68 (varcomplicated -> varcomp1 .)
    DIV             reduce using rule 68 (varcomplicated -> varcomp1 .)
    SUM             reduce using rule 68 (varcomplicated -> varcomp1 .)
    SUBTRACT        reduce using rule 68 (varcomplicated -> varcomp1 .)
    SAMEAS          reduce using rule 68 (varcomplicated -> varcomp1 .)
    BIGGERTHAN      reduce using rule 68 (varcomplicated -> varcomp1 .)
    BIGGEREQUALSTHAN reduce using rule 68 (varcomplicated -> varcomp1 .)
    SMALLTHAN       reduce using rule 68 (varcomplicated -> varcomp1 .)
    SMALLEQUALSTHAN reduce using rule 68 (varcomplicated -> varcomp1 .)
    DIFFERENTTHAN   reduce using rule 68 (varcomplicated -> varcomp1 .)
    AND             reduce using rule 68 (varcomplicated -> varcomp1 .)
    OR              reduce using rule 68 (varcomplicated -> varcomp1 .)
    SEMICOLON       reduce using rule 68 (varcomplicated -> varcomp1 .)
    COMMA           reduce using rule 68 (varcomplicated -> varcomp1 .)
    CLOSEPAREN      reduce using rule 68 (varcomplicated -> varcomp1 .)
    OPENPAREN       reduce using rule 68 (varcomplicated -> varcomp1 .)
    TRUE            reduce using rule 68 (varcomplicated -> varcomp1 .)
    FALSE           reduce using rule 68 (varcomplicated -> varcomp1 .)
    CTEFLOAT        reduce using rule 68 (varcomplicated -> varcomp1 .)
    CTESTRING       reduce using rule 68 (varcomplicated -> varcomp1 .)
    CTEINT          reduce using rule 68 (varcomplicated -> varcomp1 .)
    ID              reduce using rule 68 (varcomplicated -> varcomp1 .)
    CLOSECURLY      reduce using rule 68 (varcomplicated -> varcomp1 .)
    IF              reduce using rule 68 (varcomplicated -> varcomp1 .)
    OUTPUT          reduce using rule 68 (varcomplicated -> varcomp1 .)
    INPUT           reduce using rule 68 (varcomplicated -> varcomp1 .)
    RETURN          reduce using rule 68 (varcomplicated -> varcomp1 .)
    VAR             reduce using rule 68 (varcomplicated -> varcomp1 .)


state 106

    (69) varcomplicated -> callfunc .

    TIMES           reduce using rule 69 (varcomplicated -> callfunc .)
    DIV             reduce using rule 69 (varcomplicated -> callfunc .)
    SUM             reduce using rule 69 (varcomplicated -> callfunc .)
    SUBTRACT        reduce using rule 69 (varcomplicated -> callfunc .)
    SAMEAS          reduce using rule 69 (varcomplicated -> callfunc .)
    BIGGERTHAN      reduce using rule 69 (varcomplicated -> callfunc .)
    BIGGEREQUALSTHAN reduce using rule 69 (varcomplicated -> callfunc .)
    SMALLTHAN       reduce using rule 69 (varcomplicated -> callfunc .)
    SMALLEQUALSTHAN reduce using rule 69 (varcomplicated -> callfunc .)
    DIFFERENTTHAN   reduce using rule 69 (varcomplicated -> callfunc .)
    AND             reduce using rule 69 (varcomplicated -> callfunc .)
    OR              reduce using rule 69 (varcomplicated -> callfunc .)
    SEMICOLON       reduce using rule 69 (varcomplicated -> callfunc .)
    COMMA           reduce using rule 69 (varcomplicated -> callfunc .)
    CLOSEPAREN      reduce using rule 69 (varcomplicated -> callfunc .)
    OPENPAREN       reduce using rule 69 (varcomplicated -> callfunc .)
    TRUE            reduce using rule 69 (varcomplicated -> callfunc .)
    FALSE           reduce using rule 69 (varcomplicated -> callfunc .)
    CTEFLOAT        reduce using rule 69 (varcomplicated -> callfunc .)
    CTESTRING       reduce using rule 69 (varcomplicated -> callfunc .)
    CTEINT          reduce using rule 69 (varcomplicated -> callfunc .)
    ID              reduce using rule 69 (varcomplicated -> callfunc .)
    CLOSECURLY      reduce using rule 69 (varcomplicated -> callfunc .)
    IF              reduce using rule 69 (varcomplicated -> callfunc .)
    OUTPUT          reduce using rule 69 (varcomplicated -> callfunc .)
    INPUT           reduce using rule 69 (varcomplicated -> callfunc .)
    RETURN          reduce using rule 69 (varcomplicated -> callfunc .)
    VAR             reduce using rule 69 (varcomplicated -> callfunc .)


state 107

    (70) varcomp1 -> ID . varcomp2
    (41) callfunc -> ID . OPENPAREN altcall CLOSEPAREN
    (71) varcomp2 -> . DOT varcomp3
    (72) varcomp2 -> . empty
    (114) empty -> .

  ! shift/reduce conflict for OPENPAREN resolved as shift
    OPENPAREN       shift and go to state 151
    DOT             shift and go to state 152
    TIMES           reduce using rule 114 (empty -> .)
    DIV             reduce using rule 114 (empty -> .)
    SUM             reduce using rule 114 (empty -> .)
    SUBTRACT        reduce using rule 114 (empty -> .)
    SAMEAS          reduce using rule 114 (empty -> .)
    BIGGERTHAN      reduce using rule 114 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 114 (empty -> .)
    SMALLTHAN       reduce using rule 114 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 114 (empty -> .)
    DIFFERENTTHAN   reduce using rule 114 (empty -> .)
    AND             reduce using rule 114 (empty -> .)
    OR              reduce using rule 114 (empty -> .)
    SEMICOLON       reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)
    CLOSEPAREN      reduce using rule 114 (empty -> .)
    TRUE            reduce using rule 114 (empty -> .)
    FALSE           reduce using rule 114 (empty -> .)
    CTEFLOAT        reduce using rule 114 (empty -> .)
    CTESTRING       reduce using rule 114 (empty -> .)
    CTEINT          reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    CLOSECURLY      reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    OUTPUT          reduce using rule 114 (empty -> .)
    INPUT           reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    VAR             reduce using rule 114 (empty -> .)

  ! OPENPAREN       [ reduce using rule 114 (empty -> .) ]

    varcomp2                       shift and go to state 150
    empty                          shift and go to state 153

state 108

    (14) alt2class -> constructor CLOSECURLY SEMICOLON .

    CLASS           reduce using rule 14 (alt2class -> constructor CLOSECURLY SEMICOLON .)
    VAR             reduce using rule 14 (alt2class -> constructor CLOSECURLY SEMICOLON .)
    FUNC            reduce using rule 14 (alt2class -> constructor CLOSECURLY SEMICOLON .)
    MAIN            reduce using rule 14 (alt2class -> constructor CLOSECURLY SEMICOLON .)


state 109

    (15) constructor -> CONSTRUCTOR OPENPAREN altconst . CLOSEPAREN OPENCURLY alt2const

    CLOSEPAREN      shift and go to state 154


state 110

    (16) altconst -> params . altconst
    (16) altconst -> . params altconst
    (17) altconst -> . empty
    (38) params -> . ID TWODOTS type altparams
    (114) empty -> .

    ID              shift and go to state 42
    CLOSEPAREN      reduce using rule 114 (empty -> .)

    params                         shift and go to state 110
    altconst                       shift and go to state 155
    empty                          shift and go to state 111

state 111

    (17) altconst -> empty .

    CLOSEPAREN      reduce using rule 17 (altconst -> empty .)


state 112

    (26) listidsaltz -> OPENBRACKET CTEINT . CLOSEBRACKET listidsaltp

    CLOSEBRACKET    shift and go to state 156


state 113

    (25) listidsaltz -> COMMA listids .

    TWODOTS         reduce using rule 25 (listidsaltz -> COMMA listids .)


state 114

    (38) params -> ID TWODOTS type altparams .

    CLOSEPAREN      reduce using rule 38 (params -> ID TWODOTS type altparams .)
    ID              reduce using rule 38 (params -> ID TWODOTS type altparams .)


state 115

    (39) altparams -> COMMA . ID TWODOTS type altparams

    ID              shift and go to state 157


state 116

    (40) altparams -> empty .

    CLOSEPAREN      reduce using rule 40 (altparams -> empty .)
    ID              reduce using rule 40 (altparams -> empty .)


state 117

    (30) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY . alt3func
    (35) alt3func -> . var alt3func
    (36) alt3func -> . estatuto alt3func
    (37) alt3func -> . CLOSECURLY
    (20) var -> . VAR listids TWODOTS type SEMICOLON
    (51) estatuto -> . assign
    (52) estatuto -> . condition
    (53) estatuto -> . write
    (54) estatuto -> . read
    (55) estatuto -> . return
    (56) estatuto -> . voidcall
    (110) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (106) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (107) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (97) write -> . OUTPUT OPENPAREN varcall altwrite
    (98) write -> . OUTPUT OPENPAREN expresion altwrite
    (96) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (113) return -> . RETURN expresion SEMICOLON
    (57) voidcall -> . ID OPENPAREN CLOSEPAREN
    (58) voidcall -> . ID OPENPAREN expresion altcall

    CLOSECURLY      shift and go to state 161
    VAR             shift and go to state 11
    ID              shift and go to state 65
    IF              shift and go to state 66
    OUTPUT          shift and go to state 67
    INPUT           shift and go to state 68
    RETURN          shift and go to state 69

    alt3func                       shift and go to state 158
    var                            shift and go to state 159
    estatuto                       shift and go to state 160
    assign                         shift and go to state 59
    condition                      shift and go to state 60
    write                          shift and go to state 61
    read                           shift and go to state 62
    return                         shift and go to state 63
    voidcall                       shift and go to state 64

state 118

    (33) alt2func -> TWODOTS type .

    OPENCURLY       reduce using rule 33 (alt2func -> TWODOTS type .)


state 119

    (110) assign -> ID assign1 EQUALS . expresion SEMICOLON
    (75) expresion -> . exp altexpresion
    (86) exp -> . termino
    (87) exp -> . termino altexp
    (91) termino -> . factor
    (92) termino -> . factor alttermino
    (102) factor -> . OPENPAREN expresion CLOSEPAREN
    (103) factor -> . SUM varcall
    (104) factor -> . SUBTRACT varcall
    (105) factor -> . varcall
    (61) varcall -> . varcte
    (62) varcall -> . varcomplicated
    (63) varcte -> . TRUE
    (64) varcte -> . FALSE
    (65) varcte -> . CTEFLOAT
    (66) varcte -> . CTESTRING
    (67) varcte -> . CTEINT
    (68) varcomplicated -> . varcomp1
    (69) varcomplicated -> . callfunc
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 94
    SUM             shift and go to state 95
    SUBTRACT        shift and go to state 97
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTESTRING       shift and go to state 103
    CTEINT          shift and go to state 104
    ID              shift and go to state 107

    expresion                      shift and go to state 162
    exp                            shift and go to state 91
    termino                        shift and go to state 92
    factor                         shift and go to state 93
    varcall                        shift and go to state 96
    varcte                         shift and go to state 98
    varcomplicated                 shift and go to state 99
    varcomp1                       shift and go to state 105
    callfunc                       shift and go to state 106

state 120

    (57) voidcall -> ID OPENPAREN CLOSEPAREN .

    CLOSECURLY      reduce using rule 57 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    ID              reduce using rule 57 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    IF              reduce using rule 57 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    OUTPUT          reduce using rule 57 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    INPUT           reduce using rule 57 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    RETURN          reduce using rule 57 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    VAR             reduce using rule 57 (voidcall -> ID OPENPAREN CLOSEPAREN .)


state 121

    (58) voidcall -> ID OPENPAREN expresion . altcall
    (42) altcall -> . expresion alt2call
    (43) altcall -> . empty
    (59) altcall -> . COMMA expresion altcall
    (60) altcall -> . CLOSEPAREN SEMICOLON
    (75) expresion -> . exp altexpresion
    (114) empty -> .
    (86) exp -> . termino
    (87) exp -> . termino altexp
    (91) termino -> . factor
    (92) termino -> . factor alttermino
    (102) factor -> . OPENPAREN expresion CLOSEPAREN
    (103) factor -> . SUM varcall
    (104) factor -> . SUBTRACT varcall
    (105) factor -> . varcall
    (61) varcall -> . varcte
    (62) varcall -> . varcomplicated
    (63) varcte -> . TRUE
    (64) varcte -> . FALSE
    (65) varcte -> . CTEFLOAT
    (66) varcte -> . CTESTRING
    (67) varcte -> . CTEINT
    (68) varcomplicated -> . varcomp1
    (69) varcomplicated -> . callfunc
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 166
    CLOSEPAREN      shift and go to state 167
    CLOSECURLY      reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    OUTPUT          reduce using rule 114 (empty -> .)
    INPUT           reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    VAR             reduce using rule 114 (empty -> .)
    OPENPAREN       shift and go to state 94
    SUM             shift and go to state 95
    SUBTRACT        shift and go to state 97
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTESTRING       shift and go to state 103
    CTEINT          shift and go to state 104
    ID              shift and go to state 107

  ! ID              [ reduce using rule 114 (empty -> .) ]

    expresion                      shift and go to state 163
    altcall                        shift and go to state 164
    empty                          shift and go to state 165
    exp                            shift and go to state 91
    termino                        shift and go to state 92
    factor                         shift and go to state 93
    varcall                        shift and go to state 96
    varcte                         shift and go to state 98
    varcomplicated                 shift and go to state 99
    varcomp1                       shift and go to state 105
    callfunc                       shift and go to state 106

state 122

    (111) assign1 -> DOT ID . assign1
    (111) assign1 -> . DOT ID assign1
    (112) assign1 -> . empty
    (114) empty -> .

    DOT             shift and go to state 85
    EQUALS          reduce using rule 114 (empty -> .)

    assign1                        shift and go to state 168
    empty                          shift and go to state 86

state 123

    (106) condition -> IF OPENPAREN expresion . CLOSEPAREN OPENCURLY altcondition
    (107) condition -> IF OPENPAREN expresion . CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition

    CLOSEPAREN      shift and go to state 169


state 124

    (97) write -> OUTPUT OPENPAREN varcall . altwrite
    (105) factor -> varcall .
    (99) altwrite -> . COMMA varcall altwrite
    (100) altwrite -> . COMMA expresion altwrite
    (101) altwrite -> . CLOSEPAREN SEMICOLON

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for CLOSEPAREN resolved as shift
    TIMES           reduce using rule 105 (factor -> varcall .)
    DIV             reduce using rule 105 (factor -> varcall .)
    SUM             reduce using rule 105 (factor -> varcall .)
    SUBTRACT        reduce using rule 105 (factor -> varcall .)
    SAMEAS          reduce using rule 105 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 105 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 105 (factor -> varcall .)
    SMALLTHAN       reduce using rule 105 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 105 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 105 (factor -> varcall .)
    AND             reduce using rule 105 (factor -> varcall .)
    OR              reduce using rule 105 (factor -> varcall .)
    COMMA           shift and go to state 171
    CLOSEPAREN      shift and go to state 172

  ! COMMA           [ reduce using rule 105 (factor -> varcall .) ]
  ! CLOSEPAREN      [ reduce using rule 105 (factor -> varcall .) ]

    altwrite                       shift and go to state 170

state 125

    (98) write -> OUTPUT OPENPAREN expresion . altwrite
    (99) altwrite -> . COMMA varcall altwrite
    (100) altwrite -> . COMMA expresion altwrite
    (101) altwrite -> . CLOSEPAREN SEMICOLON

    COMMA           shift and go to state 171
    CLOSEPAREN      shift and go to state 172

    altwrite                       shift and go to state 173

state 126

    (96) read -> INPUT OPENPAREN ID . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 174


state 127

    (113) return -> RETURN expresion SEMICOLON .

    CLOSECURLY      reduce using rule 113 (return -> RETURN expresion SEMICOLON .)
    ID              reduce using rule 113 (return -> RETURN expresion SEMICOLON .)
    IF              reduce using rule 113 (return -> RETURN expresion SEMICOLON .)
    OUTPUT          reduce using rule 113 (return -> RETURN expresion SEMICOLON .)
    INPUT           reduce using rule 113 (return -> RETURN expresion SEMICOLON .)
    RETURN          reduce using rule 113 (return -> RETURN expresion SEMICOLON .)
    VAR             reduce using rule 113 (return -> RETURN expresion SEMICOLON .)


state 128

    (75) expresion -> exp altexpresion .

    SEMICOLON       reduce using rule 75 (expresion -> exp altexpresion .)
    COMMA           reduce using rule 75 (expresion -> exp altexpresion .)
    CLOSEPAREN      reduce using rule 75 (expresion -> exp altexpresion .)
    OPENPAREN       reduce using rule 75 (expresion -> exp altexpresion .)
    SUM             reduce using rule 75 (expresion -> exp altexpresion .)
    SUBTRACT        reduce using rule 75 (expresion -> exp altexpresion .)
    TRUE            reduce using rule 75 (expresion -> exp altexpresion .)
    FALSE           reduce using rule 75 (expresion -> exp altexpresion .)
    CTEFLOAT        reduce using rule 75 (expresion -> exp altexpresion .)
    CTESTRING       reduce using rule 75 (expresion -> exp altexpresion .)
    CTEINT          reduce using rule 75 (expresion -> exp altexpresion .)
    ID              reduce using rule 75 (expresion -> exp altexpresion .)
    CLOSECURLY      reduce using rule 75 (expresion -> exp altexpresion .)
    IF              reduce using rule 75 (expresion -> exp altexpresion .)
    OUTPUT          reduce using rule 75 (expresion -> exp altexpresion .)
    INPUT           reduce using rule 75 (expresion -> exp altexpresion .)
    RETURN          reduce using rule 75 (expresion -> exp altexpresion .)
    VAR             reduce using rule 75 (expresion -> exp altexpresion .)


state 129

    (76) altexpresion -> altexpresion2 . exp
    (86) exp -> . termino
    (87) exp -> . termino altexp
    (91) termino -> . factor
    (92) termino -> . factor alttermino
    (102) factor -> . OPENPAREN expresion CLOSEPAREN
    (103) factor -> . SUM varcall
    (104) factor -> . SUBTRACT varcall
    (105) factor -> . varcall
    (61) varcall -> . varcte
    (62) varcall -> . varcomplicated
    (63) varcte -> . TRUE
    (64) varcte -> . FALSE
    (65) varcte -> . CTEFLOAT
    (66) varcte -> . CTESTRING
    (67) varcte -> . CTEINT
    (68) varcomplicated -> . varcomp1
    (69) varcomplicated -> . callfunc
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 94
    SUM             shift and go to state 95
    SUBTRACT        shift and go to state 97
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTESTRING       shift and go to state 103
    CTEINT          shift and go to state 104
    ID              shift and go to state 107

    exp                            shift and go to state 175
    termino                        shift and go to state 92
    factor                         shift and go to state 93
    varcall                        shift and go to state 96
    varcte                         shift and go to state 98
    varcomplicated                 shift and go to state 99
    varcomp1                       shift and go to state 105
    callfunc                       shift and go to state 106

state 130

    (77) altexpresion -> empty .

    SEMICOLON       reduce using rule 77 (altexpresion -> empty .)
    COMMA           reduce using rule 77 (altexpresion -> empty .)
    CLOSEPAREN      reduce using rule 77 (altexpresion -> empty .)
    OPENPAREN       reduce using rule 77 (altexpresion -> empty .)
    SUM             reduce using rule 77 (altexpresion -> empty .)
    SUBTRACT        reduce using rule 77 (altexpresion -> empty .)
    TRUE            reduce using rule 77 (altexpresion -> empty .)
    FALSE           reduce using rule 77 (altexpresion -> empty .)
    CTEFLOAT        reduce using rule 77 (altexpresion -> empty .)
    CTESTRING       reduce using rule 77 (altexpresion -> empty .)
    CTEINT          reduce using rule 77 (altexpresion -> empty .)
    ID              reduce using rule 77 (altexpresion -> empty .)
    CLOSECURLY      reduce using rule 77 (altexpresion -> empty .)
    IF              reduce using rule 77 (altexpresion -> empty .)
    OUTPUT          reduce using rule 77 (altexpresion -> empty .)
    INPUT           reduce using rule 77 (altexpresion -> empty .)
    RETURN          reduce using rule 77 (altexpresion -> empty .)
    VAR             reduce using rule 77 (altexpresion -> empty .)


state 131

    (78) altexpresion2 -> SAMEAS .

    OPENPAREN       reduce using rule 78 (altexpresion2 -> SAMEAS .)
    SUM             reduce using rule 78 (altexpresion2 -> SAMEAS .)
    SUBTRACT        reduce using rule 78 (altexpresion2 -> SAMEAS .)
    TRUE            reduce using rule 78 (altexpresion2 -> SAMEAS .)
    FALSE           reduce using rule 78 (altexpresion2 -> SAMEAS .)
    CTEFLOAT        reduce using rule 78 (altexpresion2 -> SAMEAS .)
    CTESTRING       reduce using rule 78 (altexpresion2 -> SAMEAS .)
    CTEINT          reduce using rule 78 (altexpresion2 -> SAMEAS .)
    ID              reduce using rule 78 (altexpresion2 -> SAMEAS .)


state 132

    (79) altexpresion2 -> BIGGERTHAN .

    OPENPAREN       reduce using rule 79 (altexpresion2 -> BIGGERTHAN .)
    SUM             reduce using rule 79 (altexpresion2 -> BIGGERTHAN .)
    SUBTRACT        reduce using rule 79 (altexpresion2 -> BIGGERTHAN .)
    TRUE            reduce using rule 79 (altexpresion2 -> BIGGERTHAN .)
    FALSE           reduce using rule 79 (altexpresion2 -> BIGGERTHAN .)
    CTEFLOAT        reduce using rule 79 (altexpresion2 -> BIGGERTHAN .)
    CTESTRING       reduce using rule 79 (altexpresion2 -> BIGGERTHAN .)
    CTEINT          reduce using rule 79 (altexpresion2 -> BIGGERTHAN .)
    ID              reduce using rule 79 (altexpresion2 -> BIGGERTHAN .)


state 133

    (80) altexpresion2 -> BIGGEREQUALSTHAN .

    OPENPAREN       reduce using rule 80 (altexpresion2 -> BIGGEREQUALSTHAN .)
    SUM             reduce using rule 80 (altexpresion2 -> BIGGEREQUALSTHAN .)
    SUBTRACT        reduce using rule 80 (altexpresion2 -> BIGGEREQUALSTHAN .)
    TRUE            reduce using rule 80 (altexpresion2 -> BIGGEREQUALSTHAN .)
    FALSE           reduce using rule 80 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTEFLOAT        reduce using rule 80 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTESTRING       reduce using rule 80 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTEINT          reduce using rule 80 (altexpresion2 -> BIGGEREQUALSTHAN .)
    ID              reduce using rule 80 (altexpresion2 -> BIGGEREQUALSTHAN .)


state 134

    (81) altexpresion2 -> SMALLTHAN .

    OPENPAREN       reduce using rule 81 (altexpresion2 -> SMALLTHAN .)
    SUM             reduce using rule 81 (altexpresion2 -> SMALLTHAN .)
    SUBTRACT        reduce using rule 81 (altexpresion2 -> SMALLTHAN .)
    TRUE            reduce using rule 81 (altexpresion2 -> SMALLTHAN .)
    FALSE           reduce using rule 81 (altexpresion2 -> SMALLTHAN .)
    CTEFLOAT        reduce using rule 81 (altexpresion2 -> SMALLTHAN .)
    CTESTRING       reduce using rule 81 (altexpresion2 -> SMALLTHAN .)
    CTEINT          reduce using rule 81 (altexpresion2 -> SMALLTHAN .)
    ID              reduce using rule 81 (altexpresion2 -> SMALLTHAN .)


state 135

    (82) altexpresion2 -> SMALLEQUALSTHAN .

    OPENPAREN       reduce using rule 82 (altexpresion2 -> SMALLEQUALSTHAN .)
    SUM             reduce using rule 82 (altexpresion2 -> SMALLEQUALSTHAN .)
    SUBTRACT        reduce using rule 82 (altexpresion2 -> SMALLEQUALSTHAN .)
    TRUE            reduce using rule 82 (altexpresion2 -> SMALLEQUALSTHAN .)
    FALSE           reduce using rule 82 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTEFLOAT        reduce using rule 82 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTESTRING       reduce using rule 82 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTEINT          reduce using rule 82 (altexpresion2 -> SMALLEQUALSTHAN .)
    ID              reduce using rule 82 (altexpresion2 -> SMALLEQUALSTHAN .)


state 136

    (83) altexpresion2 -> DIFFERENTTHAN .

    OPENPAREN       reduce using rule 83 (altexpresion2 -> DIFFERENTTHAN .)
    SUM             reduce using rule 83 (altexpresion2 -> DIFFERENTTHAN .)
    SUBTRACT        reduce using rule 83 (altexpresion2 -> DIFFERENTTHAN .)
    TRUE            reduce using rule 83 (altexpresion2 -> DIFFERENTTHAN .)
    FALSE           reduce using rule 83 (altexpresion2 -> DIFFERENTTHAN .)
    CTEFLOAT        reduce using rule 83 (altexpresion2 -> DIFFERENTTHAN .)
    CTESTRING       reduce using rule 83 (altexpresion2 -> DIFFERENTTHAN .)
    CTEINT          reduce using rule 83 (altexpresion2 -> DIFFERENTTHAN .)
    ID              reduce using rule 83 (altexpresion2 -> DIFFERENTTHAN .)


state 137

    (84) altexpresion2 -> AND .

    OPENPAREN       reduce using rule 84 (altexpresion2 -> AND .)
    SUM             reduce using rule 84 (altexpresion2 -> AND .)
    SUBTRACT        reduce using rule 84 (altexpresion2 -> AND .)
    TRUE            reduce using rule 84 (altexpresion2 -> AND .)
    FALSE           reduce using rule 84 (altexpresion2 -> AND .)
    CTEFLOAT        reduce using rule 84 (altexpresion2 -> AND .)
    CTESTRING       reduce using rule 84 (altexpresion2 -> AND .)
    CTEINT          reduce using rule 84 (altexpresion2 -> AND .)
    ID              reduce using rule 84 (altexpresion2 -> AND .)


state 138

    (85) altexpresion2 -> OR .

    OPENPAREN       reduce using rule 85 (altexpresion2 -> OR .)
    SUM             reduce using rule 85 (altexpresion2 -> OR .)
    SUBTRACT        reduce using rule 85 (altexpresion2 -> OR .)
    TRUE            reduce using rule 85 (altexpresion2 -> OR .)
    FALSE           reduce using rule 85 (altexpresion2 -> OR .)
    CTEFLOAT        reduce using rule 85 (altexpresion2 -> OR .)
    CTESTRING       reduce using rule 85 (altexpresion2 -> OR .)
    CTEINT          reduce using rule 85 (altexpresion2 -> OR .)
    ID              reduce using rule 85 (altexpresion2 -> OR .)


state 139

    (87) exp -> termino altexp .

    SAMEAS          reduce using rule 87 (exp -> termino altexp .)
    BIGGERTHAN      reduce using rule 87 (exp -> termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 87 (exp -> termino altexp .)
    SMALLTHAN       reduce using rule 87 (exp -> termino altexp .)
    SMALLEQUALSTHAN reduce using rule 87 (exp -> termino altexp .)
    DIFFERENTTHAN   reduce using rule 87 (exp -> termino altexp .)
    AND             reduce using rule 87 (exp -> termino altexp .)
    OR              reduce using rule 87 (exp -> termino altexp .)
    SEMICOLON       reduce using rule 87 (exp -> termino altexp .)
    COMMA           reduce using rule 87 (exp -> termino altexp .)
    CLOSEPAREN      reduce using rule 87 (exp -> termino altexp .)
    OPENPAREN       reduce using rule 87 (exp -> termino altexp .)
    SUM             reduce using rule 87 (exp -> termino altexp .)
    SUBTRACT        reduce using rule 87 (exp -> termino altexp .)
    TRUE            reduce using rule 87 (exp -> termino altexp .)
    FALSE           reduce using rule 87 (exp -> termino altexp .)
    CTEFLOAT        reduce using rule 87 (exp -> termino altexp .)
    CTESTRING       reduce using rule 87 (exp -> termino altexp .)
    CTEINT          reduce using rule 87 (exp -> termino altexp .)
    ID              reduce using rule 87 (exp -> termino altexp .)
    CLOSECURLY      reduce using rule 87 (exp -> termino altexp .)
    IF              reduce using rule 87 (exp -> termino altexp .)
    OUTPUT          reduce using rule 87 (exp -> termino altexp .)
    INPUT           reduce using rule 87 (exp -> termino altexp .)
    RETURN          reduce using rule 87 (exp -> termino altexp .)
    VAR             reduce using rule 87 (exp -> termino altexp .)


state 140

    (88) altexp -> SUM . termino altexp
    (91) termino -> . factor
    (92) termino -> . factor alttermino
    (102) factor -> . OPENPAREN expresion CLOSEPAREN
    (103) factor -> . SUM varcall
    (104) factor -> . SUBTRACT varcall
    (105) factor -> . varcall
    (61) varcall -> . varcte
    (62) varcall -> . varcomplicated
    (63) varcte -> . TRUE
    (64) varcte -> . FALSE
    (65) varcte -> . CTEFLOAT
    (66) varcte -> . CTESTRING
    (67) varcte -> . CTEINT
    (68) varcomplicated -> . varcomp1
    (69) varcomplicated -> . callfunc
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 94
    SUM             shift and go to state 95
    SUBTRACT        shift and go to state 97
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTESTRING       shift and go to state 103
    CTEINT          shift and go to state 104
    ID              shift and go to state 107

    termino                        shift and go to state 176
    factor                         shift and go to state 93
    varcall                        shift and go to state 96
    varcte                         shift and go to state 98
    varcomplicated                 shift and go to state 99
    varcomp1                       shift and go to state 105
    callfunc                       shift and go to state 106

state 141

    (89) altexp -> SUBTRACT . termino altexp
    (91) termino -> . factor
    (92) termino -> . factor alttermino
    (102) factor -> . OPENPAREN expresion CLOSEPAREN
    (103) factor -> . SUM varcall
    (104) factor -> . SUBTRACT varcall
    (105) factor -> . varcall
    (61) varcall -> . varcte
    (62) varcall -> . varcomplicated
    (63) varcte -> . TRUE
    (64) varcte -> . FALSE
    (65) varcte -> . CTEFLOAT
    (66) varcte -> . CTESTRING
    (67) varcte -> . CTEINT
    (68) varcomplicated -> . varcomp1
    (69) varcomplicated -> . callfunc
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 94
    SUM             shift and go to state 95
    SUBTRACT        shift and go to state 97
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTESTRING       shift and go to state 103
    CTEINT          shift and go to state 104
    ID              shift and go to state 107

    termino                        shift and go to state 177
    factor                         shift and go to state 93
    varcall                        shift and go to state 96
    varcte                         shift and go to state 98
    varcomplicated                 shift and go to state 99
    varcomp1                       shift and go to state 105
    callfunc                       shift and go to state 106

state 142

    (90) altexp -> empty .

    SAMEAS          reduce using rule 90 (altexp -> empty .)
    BIGGERTHAN      reduce using rule 90 (altexp -> empty .)
    BIGGEREQUALSTHAN reduce using rule 90 (altexp -> empty .)
    SMALLTHAN       reduce using rule 90 (altexp -> empty .)
    SMALLEQUALSTHAN reduce using rule 90 (altexp -> empty .)
    DIFFERENTTHAN   reduce using rule 90 (altexp -> empty .)
    AND             reduce using rule 90 (altexp -> empty .)
    OR              reduce using rule 90 (altexp -> empty .)
    SEMICOLON       reduce using rule 90 (altexp -> empty .)
    COMMA           reduce using rule 90 (altexp -> empty .)
    CLOSEPAREN      reduce using rule 90 (altexp -> empty .)
    OPENPAREN       reduce using rule 90 (altexp -> empty .)
    SUM             reduce using rule 90 (altexp -> empty .)
    SUBTRACT        reduce using rule 90 (altexp -> empty .)
    TRUE            reduce using rule 90 (altexp -> empty .)
    FALSE           reduce using rule 90 (altexp -> empty .)
    CTEFLOAT        reduce using rule 90 (altexp -> empty .)
    CTESTRING       reduce using rule 90 (altexp -> empty .)
    CTEINT          reduce using rule 90 (altexp -> empty .)
    ID              reduce using rule 90 (altexp -> empty .)
    CLOSECURLY      reduce using rule 90 (altexp -> empty .)
    IF              reduce using rule 90 (altexp -> empty .)
    OUTPUT          reduce using rule 90 (altexp -> empty .)
    INPUT           reduce using rule 90 (altexp -> empty .)
    RETURN          reduce using rule 90 (altexp -> empty .)
    VAR             reduce using rule 90 (altexp -> empty .)


state 143

    (92) termino -> factor alttermino .

    SUM             reduce using rule 92 (termino -> factor alttermino .)
    SUBTRACT        reduce using rule 92 (termino -> factor alttermino .)
    SAMEAS          reduce using rule 92 (termino -> factor alttermino .)
    BIGGERTHAN      reduce using rule 92 (termino -> factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 92 (termino -> factor alttermino .)
    SMALLTHAN       reduce using rule 92 (termino -> factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 92 (termino -> factor alttermino .)
    DIFFERENTTHAN   reduce using rule 92 (termino -> factor alttermino .)
    AND             reduce using rule 92 (termino -> factor alttermino .)
    OR              reduce using rule 92 (termino -> factor alttermino .)
    SEMICOLON       reduce using rule 92 (termino -> factor alttermino .)
    COMMA           reduce using rule 92 (termino -> factor alttermino .)
    CLOSEPAREN      reduce using rule 92 (termino -> factor alttermino .)
    OPENPAREN       reduce using rule 92 (termino -> factor alttermino .)
    TRUE            reduce using rule 92 (termino -> factor alttermino .)
    FALSE           reduce using rule 92 (termino -> factor alttermino .)
    CTEFLOAT        reduce using rule 92 (termino -> factor alttermino .)
    CTESTRING       reduce using rule 92 (termino -> factor alttermino .)
    CTEINT          reduce using rule 92 (termino -> factor alttermino .)
    ID              reduce using rule 92 (termino -> factor alttermino .)
    CLOSECURLY      reduce using rule 92 (termino -> factor alttermino .)
    IF              reduce using rule 92 (termino -> factor alttermino .)
    OUTPUT          reduce using rule 92 (termino -> factor alttermino .)
    INPUT           reduce using rule 92 (termino -> factor alttermino .)
    RETURN          reduce using rule 92 (termino -> factor alttermino .)
    VAR             reduce using rule 92 (termino -> factor alttermino .)


state 144

    (93) alttermino -> TIMES . factor alttermino
    (102) factor -> . OPENPAREN expresion CLOSEPAREN
    (103) factor -> . SUM varcall
    (104) factor -> . SUBTRACT varcall
    (105) factor -> . varcall
    (61) varcall -> . varcte
    (62) varcall -> . varcomplicated
    (63) varcte -> . TRUE
    (64) varcte -> . FALSE
    (65) varcte -> . CTEFLOAT
    (66) varcte -> . CTESTRING
    (67) varcte -> . CTEINT
    (68) varcomplicated -> . varcomp1
    (69) varcomplicated -> . callfunc
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 94
    SUM             shift and go to state 95
    SUBTRACT        shift and go to state 97
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTESTRING       shift and go to state 103
    CTEINT          shift and go to state 104
    ID              shift and go to state 107

    factor                         shift and go to state 178
    varcall                        shift and go to state 96
    varcte                         shift and go to state 98
    varcomplicated                 shift and go to state 99
    varcomp1                       shift and go to state 105
    callfunc                       shift and go to state 106

state 145

    (94) alttermino -> DIV . factor alttermino
    (102) factor -> . OPENPAREN expresion CLOSEPAREN
    (103) factor -> . SUM varcall
    (104) factor -> . SUBTRACT varcall
    (105) factor -> . varcall
    (61) varcall -> . varcte
    (62) varcall -> . varcomplicated
    (63) varcte -> . TRUE
    (64) varcte -> . FALSE
    (65) varcte -> . CTEFLOAT
    (66) varcte -> . CTESTRING
    (67) varcte -> . CTEINT
    (68) varcomplicated -> . varcomp1
    (69) varcomplicated -> . callfunc
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 94
    SUM             shift and go to state 95
    SUBTRACT        shift and go to state 97
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTESTRING       shift and go to state 103
    CTEINT          shift and go to state 104
    ID              shift and go to state 107

    factor                         shift and go to state 179
    varcall                        shift and go to state 96
    varcte                         shift and go to state 98
    varcomplicated                 shift and go to state 99
    varcomp1                       shift and go to state 105
    callfunc                       shift and go to state 106

state 146

    (95) alttermino -> empty .

    SUM             reduce using rule 95 (alttermino -> empty .)
    SUBTRACT        reduce using rule 95 (alttermino -> empty .)
    SAMEAS          reduce using rule 95 (alttermino -> empty .)
    BIGGERTHAN      reduce using rule 95 (alttermino -> empty .)
    BIGGEREQUALSTHAN reduce using rule 95 (alttermino -> empty .)
    SMALLTHAN       reduce using rule 95 (alttermino -> empty .)
    SMALLEQUALSTHAN reduce using rule 95 (alttermino -> empty .)
    DIFFERENTTHAN   reduce using rule 95 (alttermino -> empty .)
    AND             reduce using rule 95 (alttermino -> empty .)
    OR              reduce using rule 95 (alttermino -> empty .)
    SEMICOLON       reduce using rule 95 (alttermino -> empty .)
    COMMA           reduce using rule 95 (alttermino -> empty .)
    CLOSEPAREN      reduce using rule 95 (alttermino -> empty .)
    OPENPAREN       reduce using rule 95 (alttermino -> empty .)
    TRUE            reduce using rule 95 (alttermino -> empty .)
    FALSE           reduce using rule 95 (alttermino -> empty .)
    CTEFLOAT        reduce using rule 95 (alttermino -> empty .)
    CTESTRING       reduce using rule 95 (alttermino -> empty .)
    CTEINT          reduce using rule 95 (alttermino -> empty .)
    ID              reduce using rule 95 (alttermino -> empty .)
    CLOSECURLY      reduce using rule 95 (alttermino -> empty .)
    IF              reduce using rule 95 (alttermino -> empty .)
    OUTPUT          reduce using rule 95 (alttermino -> empty .)
    INPUT           reduce using rule 95 (alttermino -> empty .)
    RETURN          reduce using rule 95 (alttermino -> empty .)
    VAR             reduce using rule 95 (alttermino -> empty .)


state 147

    (102) factor -> OPENPAREN expresion . CLOSEPAREN

    CLOSEPAREN      shift and go to state 180


state 148

    (103) factor -> SUM varcall .

    TIMES           reduce using rule 103 (factor -> SUM varcall .)
    DIV             reduce using rule 103 (factor -> SUM varcall .)
    SUM             reduce using rule 103 (factor -> SUM varcall .)
    SUBTRACT        reduce using rule 103 (factor -> SUM varcall .)
    SAMEAS          reduce using rule 103 (factor -> SUM varcall .)
    BIGGERTHAN      reduce using rule 103 (factor -> SUM varcall .)
    BIGGEREQUALSTHAN reduce using rule 103 (factor -> SUM varcall .)
    SMALLTHAN       reduce using rule 103 (factor -> SUM varcall .)
    SMALLEQUALSTHAN reduce using rule 103 (factor -> SUM varcall .)
    DIFFERENTTHAN   reduce using rule 103 (factor -> SUM varcall .)
    AND             reduce using rule 103 (factor -> SUM varcall .)
    OR              reduce using rule 103 (factor -> SUM varcall .)
    SEMICOLON       reduce using rule 103 (factor -> SUM varcall .)
    COMMA           reduce using rule 103 (factor -> SUM varcall .)
    CLOSEPAREN      reduce using rule 103 (factor -> SUM varcall .)
    OPENPAREN       reduce using rule 103 (factor -> SUM varcall .)
    TRUE            reduce using rule 103 (factor -> SUM varcall .)
    FALSE           reduce using rule 103 (factor -> SUM varcall .)
    CTEFLOAT        reduce using rule 103 (factor -> SUM varcall .)
    CTESTRING       reduce using rule 103 (factor -> SUM varcall .)
    CTEINT          reduce using rule 103 (factor -> SUM varcall .)
    ID              reduce using rule 103 (factor -> SUM varcall .)
    CLOSECURLY      reduce using rule 103 (factor -> SUM varcall .)
    IF              reduce using rule 103 (factor -> SUM varcall .)
    OUTPUT          reduce using rule 103 (factor -> SUM varcall .)
    INPUT           reduce using rule 103 (factor -> SUM varcall .)
    RETURN          reduce using rule 103 (factor -> SUM varcall .)
    VAR             reduce using rule 103 (factor -> SUM varcall .)


state 149

    (104) factor -> SUBTRACT varcall .

    TIMES           reduce using rule 104 (factor -> SUBTRACT varcall .)
    DIV             reduce using rule 104 (factor -> SUBTRACT varcall .)
    SUM             reduce using rule 104 (factor -> SUBTRACT varcall .)
    SUBTRACT        reduce using rule 104 (factor -> SUBTRACT varcall .)
    SAMEAS          reduce using rule 104 (factor -> SUBTRACT varcall .)
    BIGGERTHAN      reduce using rule 104 (factor -> SUBTRACT varcall .)
    BIGGEREQUALSTHAN reduce using rule 104 (factor -> SUBTRACT varcall .)
    SMALLTHAN       reduce using rule 104 (factor -> SUBTRACT varcall .)
    SMALLEQUALSTHAN reduce using rule 104 (factor -> SUBTRACT varcall .)
    DIFFERENTTHAN   reduce using rule 104 (factor -> SUBTRACT varcall .)
    AND             reduce using rule 104 (factor -> SUBTRACT varcall .)
    OR              reduce using rule 104 (factor -> SUBTRACT varcall .)
    SEMICOLON       reduce using rule 104 (factor -> SUBTRACT varcall .)
    COMMA           reduce using rule 104 (factor -> SUBTRACT varcall .)
    CLOSEPAREN      reduce using rule 104 (factor -> SUBTRACT varcall .)
    OPENPAREN       reduce using rule 104 (factor -> SUBTRACT varcall .)
    TRUE            reduce using rule 104 (factor -> SUBTRACT varcall .)
    FALSE           reduce using rule 104 (factor -> SUBTRACT varcall .)
    CTEFLOAT        reduce using rule 104 (factor -> SUBTRACT varcall .)
    CTESTRING       reduce using rule 104 (factor -> SUBTRACT varcall .)
    CTEINT          reduce using rule 104 (factor -> SUBTRACT varcall .)
    ID              reduce using rule 104 (factor -> SUBTRACT varcall .)
    CLOSECURLY      reduce using rule 104 (factor -> SUBTRACT varcall .)
    IF              reduce using rule 104 (factor -> SUBTRACT varcall .)
    OUTPUT          reduce using rule 104 (factor -> SUBTRACT varcall .)
    INPUT           reduce using rule 104 (factor -> SUBTRACT varcall .)
    RETURN          reduce using rule 104 (factor -> SUBTRACT varcall .)
    VAR             reduce using rule 104 (factor -> SUBTRACT varcall .)


state 150

    (70) varcomp1 -> ID varcomp2 .

    TIMES           reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    DIV             reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    SUM             reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    SUBTRACT        reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    SAMEAS          reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    BIGGERTHAN      reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    BIGGEREQUALSTHAN reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    SMALLTHAN       reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    SMALLEQUALSTHAN reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    DIFFERENTTHAN   reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    AND             reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    OR              reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    SEMICOLON       reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    COMMA           reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    CLOSEPAREN      reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    OPENPAREN       reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    TRUE            reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    FALSE           reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    CTEFLOAT        reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    CTESTRING       reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    CTEINT          reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    ID              reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    CLOSECURLY      reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    IF              reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    OUTPUT          reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    INPUT           reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    RETURN          reduce using rule 70 (varcomp1 -> ID varcomp2 .)
    VAR             reduce using rule 70 (varcomp1 -> ID varcomp2 .)


state 151

    (41) callfunc -> ID OPENPAREN . altcall CLOSEPAREN
    (42) altcall -> . expresion alt2call
    (43) altcall -> . empty
    (59) altcall -> . COMMA expresion altcall
    (60) altcall -> . CLOSEPAREN SEMICOLON
    (75) expresion -> . exp altexpresion
    (114) empty -> .
    (86) exp -> . termino
    (87) exp -> . termino altexp
    (91) termino -> . factor
    (92) termino -> . factor alttermino
    (102) factor -> . OPENPAREN expresion CLOSEPAREN
    (103) factor -> . SUM varcall
    (104) factor -> . SUBTRACT varcall
    (105) factor -> . varcall
    (61) varcall -> . varcte
    (62) varcall -> . varcomplicated
    (63) varcte -> . TRUE
    (64) varcte -> . FALSE
    (65) varcte -> . CTEFLOAT
    (66) varcte -> . CTESTRING
    (67) varcte -> . CTEINT
    (68) varcomplicated -> . varcomp1
    (69) varcomplicated -> . callfunc
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
    COMMA           shift and go to state 166
    CLOSEPAREN      shift and go to state 167
    OPENPAREN       shift and go to state 94
    SUM             shift and go to state 95
    SUBTRACT        shift and go to state 97
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTESTRING       shift and go to state 103
    CTEINT          shift and go to state 104
    ID              shift and go to state 107

  ! CLOSEPAREN      [ reduce using rule 114 (empty -> .) ]

    altcall                        shift and go to state 181
    expresion                      shift and go to state 163
    empty                          shift and go to state 165
    exp                            shift and go to state 91
    termino                        shift and go to state 92
    factor                         shift and go to state 93
    varcall                        shift and go to state 96
    varcte                         shift and go to state 98
    varcomplicated                 shift and go to state 99
    varcomp1                       shift and go to state 105
    callfunc                       shift and go to state 106

state 152

    (71) varcomp2 -> DOT . varcomp3
    (73) varcomp3 -> . varcomp1
    (74) varcomp3 -> . callfunc
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    ID              shift and go to state 107

    varcomp3                       shift and go to state 182
    varcomp1                       shift and go to state 183
    callfunc                       shift and go to state 184

state 153

    (72) varcomp2 -> empty .

    TIMES           reduce using rule 72 (varcomp2 -> empty .)
    DIV             reduce using rule 72 (varcomp2 -> empty .)
    SUM             reduce using rule 72 (varcomp2 -> empty .)
    SUBTRACT        reduce using rule 72 (varcomp2 -> empty .)
    SAMEAS          reduce using rule 72 (varcomp2 -> empty .)
    BIGGERTHAN      reduce using rule 72 (varcomp2 -> empty .)
    BIGGEREQUALSTHAN reduce using rule 72 (varcomp2 -> empty .)
    SMALLTHAN       reduce using rule 72 (varcomp2 -> empty .)
    SMALLEQUALSTHAN reduce using rule 72 (varcomp2 -> empty .)
    DIFFERENTTHAN   reduce using rule 72 (varcomp2 -> empty .)
    AND             reduce using rule 72 (varcomp2 -> empty .)
    OR              reduce using rule 72 (varcomp2 -> empty .)
    SEMICOLON       reduce using rule 72 (varcomp2 -> empty .)
    COMMA           reduce using rule 72 (varcomp2 -> empty .)
    CLOSEPAREN      reduce using rule 72 (varcomp2 -> empty .)
    OPENPAREN       reduce using rule 72 (varcomp2 -> empty .)
    TRUE            reduce using rule 72 (varcomp2 -> empty .)
    FALSE           reduce using rule 72 (varcomp2 -> empty .)
    CTEFLOAT        reduce using rule 72 (varcomp2 -> empty .)
    CTESTRING       reduce using rule 72 (varcomp2 -> empty .)
    CTEINT          reduce using rule 72 (varcomp2 -> empty .)
    ID              reduce using rule 72 (varcomp2 -> empty .)
    CLOSECURLY      reduce using rule 72 (varcomp2 -> empty .)
    IF              reduce using rule 72 (varcomp2 -> empty .)
    OUTPUT          reduce using rule 72 (varcomp2 -> empty .)
    INPUT           reduce using rule 72 (varcomp2 -> empty .)
    RETURN          reduce using rule 72 (varcomp2 -> empty .)
    VAR             reduce using rule 72 (varcomp2 -> empty .)


state 154

    (15) constructor -> CONSTRUCTOR OPENPAREN altconst CLOSEPAREN . OPENCURLY alt2const

    OPENCURLY       shift and go to state 185


state 155

    (16) altconst -> params altconst .

    CLOSEPAREN      reduce using rule 16 (altconst -> params altconst .)


state 156

    (26) listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET . listidsaltp
    (28) listidsaltp -> . COMMA listids
    (29) listidsaltp -> . empty
    (114) empty -> .

    COMMA           shift and go to state 187
    TWODOTS         reduce using rule 114 (empty -> .)

    listidsaltp                    shift and go to state 186
    empty                          shift and go to state 188

state 157

    (39) altparams -> COMMA ID . TWODOTS type altparams

    TWODOTS         shift and go to state 189


state 158

    (30) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func .

    CLASS           reduce using rule 30 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func .)
    VAR             reduce using rule 30 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func .)
    FUNC            reduce using rule 30 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func .)
    MAIN            reduce using rule 30 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func .)
    CONSTRUCTOR     reduce using rule 30 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func OPENCURLY alt3func .)


state 159

    (35) alt3func -> var . alt3func
    (35) alt3func -> . var alt3func
    (36) alt3func -> . estatuto alt3func
    (37) alt3func -> . CLOSECURLY
    (20) var -> . VAR listids TWODOTS type SEMICOLON
    (51) estatuto -> . assign
    (52) estatuto -> . condition
    (53) estatuto -> . write
    (54) estatuto -> . read
    (55) estatuto -> . return
    (56) estatuto -> . voidcall
    (110) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (106) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (107) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (97) write -> . OUTPUT OPENPAREN varcall altwrite
    (98) write -> . OUTPUT OPENPAREN expresion altwrite
    (96) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (113) return -> . RETURN expresion SEMICOLON
    (57) voidcall -> . ID OPENPAREN CLOSEPAREN
    (58) voidcall -> . ID OPENPAREN expresion altcall

    CLOSECURLY      shift and go to state 161
    VAR             shift and go to state 11
    ID              shift and go to state 65
    IF              shift and go to state 66
    OUTPUT          shift and go to state 67
    INPUT           shift and go to state 68
    RETURN          shift and go to state 69

    var                            shift and go to state 159
    alt3func                       shift and go to state 190
    estatuto                       shift and go to state 160
    assign                         shift and go to state 59
    condition                      shift and go to state 60
    write                          shift and go to state 61
    read                           shift and go to state 62
    return                         shift and go to state 63
    voidcall                       shift and go to state 64

state 160

    (36) alt3func -> estatuto . alt3func
    (35) alt3func -> . var alt3func
    (36) alt3func -> . estatuto alt3func
    (37) alt3func -> . CLOSECURLY
    (20) var -> . VAR listids TWODOTS type SEMICOLON
    (51) estatuto -> . assign
    (52) estatuto -> . condition
    (53) estatuto -> . write
    (54) estatuto -> . read
    (55) estatuto -> . return
    (56) estatuto -> . voidcall
    (110) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (106) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (107) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (97) write -> . OUTPUT OPENPAREN varcall altwrite
    (98) write -> . OUTPUT OPENPAREN expresion altwrite
    (96) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (113) return -> . RETURN expresion SEMICOLON
    (57) voidcall -> . ID OPENPAREN CLOSEPAREN
    (58) voidcall -> . ID OPENPAREN expresion altcall

    CLOSECURLY      shift and go to state 161
    VAR             shift and go to state 11
    ID              shift and go to state 65
    IF              shift and go to state 66
    OUTPUT          shift and go to state 67
    INPUT           shift and go to state 68
    RETURN          shift and go to state 69

    estatuto                       shift and go to state 160
    alt3func                       shift and go to state 191
    var                            shift and go to state 159
    assign                         shift and go to state 59
    condition                      shift and go to state 60
    write                          shift and go to state 61
    read                           shift and go to state 62
    return                         shift and go to state 63
    voidcall                       shift and go to state 64

state 161

    (37) alt3func -> CLOSECURLY .

    CLASS           reduce using rule 37 (alt3func -> CLOSECURLY .)
    VAR             reduce using rule 37 (alt3func -> CLOSECURLY .)
    FUNC            reduce using rule 37 (alt3func -> CLOSECURLY .)
    MAIN            reduce using rule 37 (alt3func -> CLOSECURLY .)
    CONSTRUCTOR     reduce using rule 37 (alt3func -> CLOSECURLY .)


state 162

    (110) assign -> ID assign1 EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 192


state 163

    (42) altcall -> expresion . alt2call
    (44) alt2call -> . COMMA altcall
    (45) alt2call -> . empty
    (114) empty -> .

    COMMA           shift and go to state 194
    CLOSECURLY      reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    OUTPUT          reduce using rule 114 (empty -> .)
    INPUT           reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    VAR             reduce using rule 114 (empty -> .)
    CLOSEPAREN      reduce using rule 114 (empty -> .)

    alt2call                       shift and go to state 193
    empty                          shift and go to state 195

state 164

    (58) voidcall -> ID OPENPAREN expresion altcall .

    CLOSECURLY      reduce using rule 58 (voidcall -> ID OPENPAREN expresion altcall .)
    ID              reduce using rule 58 (voidcall -> ID OPENPAREN expresion altcall .)
    IF              reduce using rule 58 (voidcall -> ID OPENPAREN expresion altcall .)
    OUTPUT          reduce using rule 58 (voidcall -> ID OPENPAREN expresion altcall .)
    INPUT           reduce using rule 58 (voidcall -> ID OPENPAREN expresion altcall .)
    RETURN          reduce using rule 58 (voidcall -> ID OPENPAREN expresion altcall .)
    VAR             reduce using rule 58 (voidcall -> ID OPENPAREN expresion altcall .)


state 165

    (43) altcall -> empty .

    CLOSECURLY      reduce using rule 43 (altcall -> empty .)
    ID              reduce using rule 43 (altcall -> empty .)
    IF              reduce using rule 43 (altcall -> empty .)
    OUTPUT          reduce using rule 43 (altcall -> empty .)
    INPUT           reduce using rule 43 (altcall -> empty .)
    RETURN          reduce using rule 43 (altcall -> empty .)
    VAR             reduce using rule 43 (altcall -> empty .)
    CLOSEPAREN      reduce using rule 43 (altcall -> empty .)


state 166

    (59) altcall -> COMMA . expresion altcall
    (75) expresion -> . exp altexpresion
    (86) exp -> . termino
    (87) exp -> . termino altexp
    (91) termino -> . factor
    (92) termino -> . factor alttermino
    (102) factor -> . OPENPAREN expresion CLOSEPAREN
    (103) factor -> . SUM varcall
    (104) factor -> . SUBTRACT varcall
    (105) factor -> . varcall
    (61) varcall -> . varcte
    (62) varcall -> . varcomplicated
    (63) varcte -> . TRUE
    (64) varcte -> . FALSE
    (65) varcte -> . CTEFLOAT
    (66) varcte -> . CTESTRING
    (67) varcte -> . CTEINT
    (68) varcomplicated -> . varcomp1
    (69) varcomplicated -> . callfunc
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 94
    SUM             shift and go to state 95
    SUBTRACT        shift and go to state 97
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTESTRING       shift and go to state 103
    CTEINT          shift and go to state 104
    ID              shift and go to state 107

    expresion                      shift and go to state 196
    exp                            shift and go to state 91
    termino                        shift and go to state 92
    factor                         shift and go to state 93
    varcall                        shift and go to state 96
    varcte                         shift and go to state 98
    varcomplicated                 shift and go to state 99
    varcomp1                       shift and go to state 105
    callfunc                       shift and go to state 106

state 167

    (60) altcall -> CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 197


state 168

    (111) assign1 -> DOT ID assign1 .

    EQUALS          reduce using rule 111 (assign1 -> DOT ID assign1 .)


state 169

    (106) condition -> IF OPENPAREN expresion CLOSEPAREN . OPENCURLY altcondition
    (107) condition -> IF OPENPAREN expresion CLOSEPAREN . OPENCURLY altcondition ELSE OPENCURLY altcondition

    OPENCURLY       shift and go to state 198


state 170

    (97) write -> OUTPUT OPENPAREN varcall altwrite .

    CLOSECURLY      reduce using rule 97 (write -> OUTPUT OPENPAREN varcall altwrite .)
    ID              reduce using rule 97 (write -> OUTPUT OPENPAREN varcall altwrite .)
    IF              reduce using rule 97 (write -> OUTPUT OPENPAREN varcall altwrite .)
    OUTPUT          reduce using rule 97 (write -> OUTPUT OPENPAREN varcall altwrite .)
    INPUT           reduce using rule 97 (write -> OUTPUT OPENPAREN varcall altwrite .)
    RETURN          reduce using rule 97 (write -> OUTPUT OPENPAREN varcall altwrite .)
    VAR             reduce using rule 97 (write -> OUTPUT OPENPAREN varcall altwrite .)


state 171

    (99) altwrite -> COMMA . varcall altwrite
    (100) altwrite -> COMMA . expresion altwrite
    (61) varcall -> . varcte
    (62) varcall -> . varcomplicated
    (75) expresion -> . exp altexpresion
    (63) varcte -> . TRUE
    (64) varcte -> . FALSE
    (65) varcte -> . CTEFLOAT
    (66) varcte -> . CTESTRING
    (67) varcte -> . CTEINT
    (68) varcomplicated -> . varcomp1
    (69) varcomplicated -> . callfunc
    (86) exp -> . termino
    (87) exp -> . termino altexp
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN
    (91) termino -> . factor
    (92) termino -> . factor alttermino
    (102) factor -> . OPENPAREN expresion CLOSEPAREN
    (103) factor -> . SUM varcall
    (104) factor -> . SUBTRACT varcall
    (105) factor -> . varcall

    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTESTRING       shift and go to state 103
    CTEINT          shift and go to state 104
    ID              shift and go to state 107
    OPENPAREN       shift and go to state 94
    SUM             shift and go to state 95
    SUBTRACT        shift and go to state 97

    varcall                        shift and go to state 199
    expresion                      shift and go to state 200
    varcte                         shift and go to state 98
    varcomplicated                 shift and go to state 99
    exp                            shift and go to state 91
    varcomp1                       shift and go to state 105
    callfunc                       shift and go to state 106
    termino                        shift and go to state 92
    factor                         shift and go to state 93

state 172

    (101) altwrite -> CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 201


state 173

    (98) write -> OUTPUT OPENPAREN expresion altwrite .

    CLOSECURLY      reduce using rule 98 (write -> OUTPUT OPENPAREN expresion altwrite .)
    ID              reduce using rule 98 (write -> OUTPUT OPENPAREN expresion altwrite .)
    IF              reduce using rule 98 (write -> OUTPUT OPENPAREN expresion altwrite .)
    OUTPUT          reduce using rule 98 (write -> OUTPUT OPENPAREN expresion altwrite .)
    INPUT           reduce using rule 98 (write -> OUTPUT OPENPAREN expresion altwrite .)
    RETURN          reduce using rule 98 (write -> OUTPUT OPENPAREN expresion altwrite .)
    VAR             reduce using rule 98 (write -> OUTPUT OPENPAREN expresion altwrite .)


state 174

    (96) read -> INPUT OPENPAREN ID CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 202


state 175

    (76) altexpresion -> altexpresion2 exp .

    SEMICOLON       reduce using rule 76 (altexpresion -> altexpresion2 exp .)
    COMMA           reduce using rule 76 (altexpresion -> altexpresion2 exp .)
    CLOSEPAREN      reduce using rule 76 (altexpresion -> altexpresion2 exp .)
    OPENPAREN       reduce using rule 76 (altexpresion -> altexpresion2 exp .)
    SUM             reduce using rule 76 (altexpresion -> altexpresion2 exp .)
    SUBTRACT        reduce using rule 76 (altexpresion -> altexpresion2 exp .)
    TRUE            reduce using rule 76 (altexpresion -> altexpresion2 exp .)
    FALSE           reduce using rule 76 (altexpresion -> altexpresion2 exp .)
    CTEFLOAT        reduce using rule 76 (altexpresion -> altexpresion2 exp .)
    CTESTRING       reduce using rule 76 (altexpresion -> altexpresion2 exp .)
    CTEINT          reduce using rule 76 (altexpresion -> altexpresion2 exp .)
    ID              reduce using rule 76 (altexpresion -> altexpresion2 exp .)
    CLOSECURLY      reduce using rule 76 (altexpresion -> altexpresion2 exp .)
    IF              reduce using rule 76 (altexpresion -> altexpresion2 exp .)
    OUTPUT          reduce using rule 76 (altexpresion -> altexpresion2 exp .)
    INPUT           reduce using rule 76 (altexpresion -> altexpresion2 exp .)
    RETURN          reduce using rule 76 (altexpresion -> altexpresion2 exp .)
    VAR             reduce using rule 76 (altexpresion -> altexpresion2 exp .)


state 176

    (88) altexp -> SUM termino . altexp
    (88) altexp -> . SUM termino altexp
    (89) altexp -> . SUBTRACT termino altexp
    (90) altexp -> . empty
    (114) empty -> .

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
    SUM             shift and go to state 140
    SUBTRACT        shift and go to state 141
    SAMEAS          reduce using rule 114 (empty -> .)
    BIGGERTHAN      reduce using rule 114 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 114 (empty -> .)
    SMALLTHAN       reduce using rule 114 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 114 (empty -> .)
    DIFFERENTTHAN   reduce using rule 114 (empty -> .)
    AND             reduce using rule 114 (empty -> .)
    OR              reduce using rule 114 (empty -> .)
    SEMICOLON       reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)
    CLOSEPAREN      reduce using rule 114 (empty -> .)
    OPENPAREN       reduce using rule 114 (empty -> .)
    TRUE            reduce using rule 114 (empty -> .)
    FALSE           reduce using rule 114 (empty -> .)
    CTEFLOAT        reduce using rule 114 (empty -> .)
    CTESTRING       reduce using rule 114 (empty -> .)
    CTEINT          reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    CLOSECURLY      reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    OUTPUT          reduce using rule 114 (empty -> .)
    INPUT           reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    VAR             reduce using rule 114 (empty -> .)

  ! SUM             [ reduce using rule 114 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 114 (empty -> .) ]

    altexp                         shift and go to state 203
    empty                          shift and go to state 142

state 177

    (89) altexp -> SUBTRACT termino . altexp
    (88) altexp -> . SUM termino altexp
    (89) altexp -> . SUBTRACT termino altexp
    (90) altexp -> . empty
    (114) empty -> .

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
    SUM             shift and go to state 140
    SUBTRACT        shift and go to state 141
    SAMEAS          reduce using rule 114 (empty -> .)
    BIGGERTHAN      reduce using rule 114 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 114 (empty -> .)
    SMALLTHAN       reduce using rule 114 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 114 (empty -> .)
    DIFFERENTTHAN   reduce using rule 114 (empty -> .)
    AND             reduce using rule 114 (empty -> .)
    OR              reduce using rule 114 (empty -> .)
    SEMICOLON       reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)
    CLOSEPAREN      reduce using rule 114 (empty -> .)
    OPENPAREN       reduce using rule 114 (empty -> .)
    TRUE            reduce using rule 114 (empty -> .)
    FALSE           reduce using rule 114 (empty -> .)
    CTEFLOAT        reduce using rule 114 (empty -> .)
    CTESTRING       reduce using rule 114 (empty -> .)
    CTEINT          reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    CLOSECURLY      reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    OUTPUT          reduce using rule 114 (empty -> .)
    INPUT           reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    VAR             reduce using rule 114 (empty -> .)

  ! SUM             [ reduce using rule 114 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 114 (empty -> .) ]

    altexp                         shift and go to state 204
    empty                          shift and go to state 142

state 178

    (93) alttermino -> TIMES factor . alttermino
    (93) alttermino -> . TIMES factor alttermino
    (94) alttermino -> . DIV factor alttermino
    (95) alttermino -> . empty
    (114) empty -> .

    TIMES           shift and go to state 144
    DIV             shift and go to state 145
    SUM             reduce using rule 114 (empty -> .)
    SUBTRACT        reduce using rule 114 (empty -> .)
    SAMEAS          reduce using rule 114 (empty -> .)
    BIGGERTHAN      reduce using rule 114 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 114 (empty -> .)
    SMALLTHAN       reduce using rule 114 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 114 (empty -> .)
    DIFFERENTTHAN   reduce using rule 114 (empty -> .)
    AND             reduce using rule 114 (empty -> .)
    OR              reduce using rule 114 (empty -> .)
    SEMICOLON       reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)
    CLOSEPAREN      reduce using rule 114 (empty -> .)
    OPENPAREN       reduce using rule 114 (empty -> .)
    TRUE            reduce using rule 114 (empty -> .)
    FALSE           reduce using rule 114 (empty -> .)
    CTEFLOAT        reduce using rule 114 (empty -> .)
    CTESTRING       reduce using rule 114 (empty -> .)
    CTEINT          reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    CLOSECURLY      reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    OUTPUT          reduce using rule 114 (empty -> .)
    INPUT           reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    VAR             reduce using rule 114 (empty -> .)

    alttermino                     shift and go to state 205
    empty                          shift and go to state 146

state 179

    (94) alttermino -> DIV factor . alttermino
    (93) alttermino -> . TIMES factor alttermino
    (94) alttermino -> . DIV factor alttermino
    (95) alttermino -> . empty
    (114) empty -> .

    TIMES           shift and go to state 144
    DIV             shift and go to state 145
    SUM             reduce using rule 114 (empty -> .)
    SUBTRACT        reduce using rule 114 (empty -> .)
    SAMEAS          reduce using rule 114 (empty -> .)
    BIGGERTHAN      reduce using rule 114 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 114 (empty -> .)
    SMALLTHAN       reduce using rule 114 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 114 (empty -> .)
    DIFFERENTTHAN   reduce using rule 114 (empty -> .)
    AND             reduce using rule 114 (empty -> .)
    OR              reduce using rule 114 (empty -> .)
    SEMICOLON       reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)
    CLOSEPAREN      reduce using rule 114 (empty -> .)
    OPENPAREN       reduce using rule 114 (empty -> .)
    TRUE            reduce using rule 114 (empty -> .)
    FALSE           reduce using rule 114 (empty -> .)
    CTEFLOAT        reduce using rule 114 (empty -> .)
    CTESTRING       reduce using rule 114 (empty -> .)
    CTEINT          reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    CLOSECURLY      reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    OUTPUT          reduce using rule 114 (empty -> .)
    INPUT           reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    VAR             reduce using rule 114 (empty -> .)

    alttermino                     shift and go to state 206
    empty                          shift and go to state 146

state 180

    (102) factor -> OPENPAREN expresion CLOSEPAREN .

    TIMES           reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    DIV             reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SUM             reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SUBTRACT        reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SAMEAS          reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    BIGGERTHAN      reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    BIGGEREQUALSTHAN reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SMALLTHAN       reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SMALLEQUALSTHAN reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    DIFFERENTTHAN   reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    AND             reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    OR              reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SEMICOLON       reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    COMMA           reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    OPENPAREN       reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    TRUE            reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    FALSE           reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CTEFLOAT        reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CTESTRING       reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CTEINT          reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    ID              reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CLOSECURLY      reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    IF              reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    OUTPUT          reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    INPUT           reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    RETURN          reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)
    VAR             reduce using rule 102 (factor -> OPENPAREN expresion CLOSEPAREN .)


state 181

    (41) callfunc -> ID OPENPAREN altcall . CLOSEPAREN

    CLOSEPAREN      shift and go to state 207


state 182

    (71) varcomp2 -> DOT varcomp3 .

    TIMES           reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    DIV             reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    SUM             reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    SUBTRACT        reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    SAMEAS          reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    BIGGERTHAN      reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    BIGGEREQUALSTHAN reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    SMALLTHAN       reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    SMALLEQUALSTHAN reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    DIFFERENTTHAN   reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    AND             reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    OR              reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    SEMICOLON       reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    COMMA           reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    CLOSEPAREN      reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    OPENPAREN       reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    TRUE            reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    FALSE           reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    CTEFLOAT        reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    CTESTRING       reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    CTEINT          reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    ID              reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    CLOSECURLY      reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    IF              reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    OUTPUT          reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    INPUT           reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    RETURN          reduce using rule 71 (varcomp2 -> DOT varcomp3 .)
    VAR             reduce using rule 71 (varcomp2 -> DOT varcomp3 .)


state 183

    (73) varcomp3 -> varcomp1 .

    TIMES           reduce using rule 73 (varcomp3 -> varcomp1 .)
    DIV             reduce using rule 73 (varcomp3 -> varcomp1 .)
    SUM             reduce using rule 73 (varcomp3 -> varcomp1 .)
    SUBTRACT        reduce using rule 73 (varcomp3 -> varcomp1 .)
    SAMEAS          reduce using rule 73 (varcomp3 -> varcomp1 .)
    BIGGERTHAN      reduce using rule 73 (varcomp3 -> varcomp1 .)
    BIGGEREQUALSTHAN reduce using rule 73 (varcomp3 -> varcomp1 .)
    SMALLTHAN       reduce using rule 73 (varcomp3 -> varcomp1 .)
    SMALLEQUALSTHAN reduce using rule 73 (varcomp3 -> varcomp1 .)
    DIFFERENTTHAN   reduce using rule 73 (varcomp3 -> varcomp1 .)
    AND             reduce using rule 73 (varcomp3 -> varcomp1 .)
    OR              reduce using rule 73 (varcomp3 -> varcomp1 .)
    SEMICOLON       reduce using rule 73 (varcomp3 -> varcomp1 .)
    COMMA           reduce using rule 73 (varcomp3 -> varcomp1 .)
    CLOSEPAREN      reduce using rule 73 (varcomp3 -> varcomp1 .)
    OPENPAREN       reduce using rule 73 (varcomp3 -> varcomp1 .)
    TRUE            reduce using rule 73 (varcomp3 -> varcomp1 .)
    FALSE           reduce using rule 73 (varcomp3 -> varcomp1 .)
    CTEFLOAT        reduce using rule 73 (varcomp3 -> varcomp1 .)
    CTESTRING       reduce using rule 73 (varcomp3 -> varcomp1 .)
    CTEINT          reduce using rule 73 (varcomp3 -> varcomp1 .)
    ID              reduce using rule 73 (varcomp3 -> varcomp1 .)
    CLOSECURLY      reduce using rule 73 (varcomp3 -> varcomp1 .)
    IF              reduce using rule 73 (varcomp3 -> varcomp1 .)
    OUTPUT          reduce using rule 73 (varcomp3 -> varcomp1 .)
    INPUT           reduce using rule 73 (varcomp3 -> varcomp1 .)
    RETURN          reduce using rule 73 (varcomp3 -> varcomp1 .)
    VAR             reduce using rule 73 (varcomp3 -> varcomp1 .)


state 184

    (74) varcomp3 -> callfunc .

    TIMES           reduce using rule 74 (varcomp3 -> callfunc .)
    DIV             reduce using rule 74 (varcomp3 -> callfunc .)
    SUM             reduce using rule 74 (varcomp3 -> callfunc .)
    SUBTRACT        reduce using rule 74 (varcomp3 -> callfunc .)
    SAMEAS          reduce using rule 74 (varcomp3 -> callfunc .)
    BIGGERTHAN      reduce using rule 74 (varcomp3 -> callfunc .)
    BIGGEREQUALSTHAN reduce using rule 74 (varcomp3 -> callfunc .)
    SMALLTHAN       reduce using rule 74 (varcomp3 -> callfunc .)
    SMALLEQUALSTHAN reduce using rule 74 (varcomp3 -> callfunc .)
    DIFFERENTTHAN   reduce using rule 74 (varcomp3 -> callfunc .)
    AND             reduce using rule 74 (varcomp3 -> callfunc .)
    OR              reduce using rule 74 (varcomp3 -> callfunc .)
    SEMICOLON       reduce using rule 74 (varcomp3 -> callfunc .)
    COMMA           reduce using rule 74 (varcomp3 -> callfunc .)
    CLOSEPAREN      reduce using rule 74 (varcomp3 -> callfunc .)
    OPENPAREN       reduce using rule 74 (varcomp3 -> callfunc .)
    TRUE            reduce using rule 74 (varcomp3 -> callfunc .)
    FALSE           reduce using rule 74 (varcomp3 -> callfunc .)
    CTEFLOAT        reduce using rule 74 (varcomp3 -> callfunc .)
    CTESTRING       reduce using rule 74 (varcomp3 -> callfunc .)
    CTEINT          reduce using rule 74 (varcomp3 -> callfunc .)
    ID              reduce using rule 74 (varcomp3 -> callfunc .)
    CLOSECURLY      reduce using rule 74 (varcomp3 -> callfunc .)
    IF              reduce using rule 74 (varcomp3 -> callfunc .)
    OUTPUT          reduce using rule 74 (varcomp3 -> callfunc .)
    INPUT           reduce using rule 74 (varcomp3 -> callfunc .)
    RETURN          reduce using rule 74 (varcomp3 -> callfunc .)
    VAR             reduce using rule 74 (varcomp3 -> callfunc .)


state 185

    (15) constructor -> CONSTRUCTOR OPENPAREN altconst CLOSEPAREN OPENCURLY . alt2const
    (18) alt2const -> . estatuto alt2const
    (19) alt2const -> . CLOSECURLY
    (51) estatuto -> . assign
    (52) estatuto -> . condition
    (53) estatuto -> . write
    (54) estatuto -> . read
    (55) estatuto -> . return
    (56) estatuto -> . voidcall
    (110) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (106) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (107) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (97) write -> . OUTPUT OPENPAREN varcall altwrite
    (98) write -> . OUTPUT OPENPAREN expresion altwrite
    (96) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (113) return -> . RETURN expresion SEMICOLON
    (57) voidcall -> . ID OPENPAREN CLOSEPAREN
    (58) voidcall -> . ID OPENPAREN expresion altcall

    CLOSECURLY      shift and go to state 210
    ID              shift and go to state 65
    IF              shift and go to state 66
    OUTPUT          shift and go to state 67
    INPUT           shift and go to state 68
    RETURN          shift and go to state 69

    alt2const                      shift and go to state 208
    estatuto                       shift and go to state 209
    assign                         shift and go to state 59
    condition                      shift and go to state 60
    write                          shift and go to state 61
    read                           shift and go to state 62
    return                         shift and go to state 63
    voidcall                       shift and go to state 64

state 186

    (26) listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltp .

    TWODOTS         reduce using rule 26 (listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltp .)


state 187

    (28) listidsaltp -> COMMA . listids
    (21) listids -> . ID listidsalty

    ID              shift and go to state 19

    listids                        shift and go to state 211

state 188

    (29) listidsaltp -> empty .

    TWODOTS         reduce using rule 29 (listidsaltp -> empty .)


state 189

    (39) altparams -> COMMA ID TWODOTS . type altparams
    (46) type -> . INT
    (47) type -> . FLOAT
    (48) type -> . STRING
    (49) type -> . ID
    (50) type -> . BOOL

    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    STRING          shift and go to state 37
    ID              shift and go to state 38
    BOOL            shift and go to state 39

    type                           shift and go to state 212

state 190

    (35) alt3func -> var alt3func .

    CLASS           reduce using rule 35 (alt3func -> var alt3func .)
    VAR             reduce using rule 35 (alt3func -> var alt3func .)
    FUNC            reduce using rule 35 (alt3func -> var alt3func .)
    MAIN            reduce using rule 35 (alt3func -> var alt3func .)
    CONSTRUCTOR     reduce using rule 35 (alt3func -> var alt3func .)


state 191

    (36) alt3func -> estatuto alt3func .

    CLASS           reduce using rule 36 (alt3func -> estatuto alt3func .)
    VAR             reduce using rule 36 (alt3func -> estatuto alt3func .)
    FUNC            reduce using rule 36 (alt3func -> estatuto alt3func .)
    MAIN            reduce using rule 36 (alt3func -> estatuto alt3func .)
    CONSTRUCTOR     reduce using rule 36 (alt3func -> estatuto alt3func .)


state 192

    (110) assign -> ID assign1 EQUALS expresion SEMICOLON .

    CLOSECURLY      reduce using rule 110 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    ID              reduce using rule 110 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    IF              reduce using rule 110 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    OUTPUT          reduce using rule 110 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    INPUT           reduce using rule 110 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 110 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    VAR             reduce using rule 110 (assign -> ID assign1 EQUALS expresion SEMICOLON .)


state 193

    (42) altcall -> expresion alt2call .

    CLOSECURLY      reduce using rule 42 (altcall -> expresion alt2call .)
    ID              reduce using rule 42 (altcall -> expresion alt2call .)
    IF              reduce using rule 42 (altcall -> expresion alt2call .)
    OUTPUT          reduce using rule 42 (altcall -> expresion alt2call .)
    INPUT           reduce using rule 42 (altcall -> expresion alt2call .)
    RETURN          reduce using rule 42 (altcall -> expresion alt2call .)
    VAR             reduce using rule 42 (altcall -> expresion alt2call .)
    CLOSEPAREN      reduce using rule 42 (altcall -> expresion alt2call .)


state 194

    (44) alt2call -> COMMA . altcall
    (42) altcall -> . expresion alt2call
    (43) altcall -> . empty
    (59) altcall -> . COMMA expresion altcall
    (60) altcall -> . CLOSEPAREN SEMICOLON
    (75) expresion -> . exp altexpresion
    (114) empty -> .
    (86) exp -> . termino
    (87) exp -> . termino altexp
    (91) termino -> . factor
    (92) termino -> . factor alttermino
    (102) factor -> . OPENPAREN expresion CLOSEPAREN
    (103) factor -> . SUM varcall
    (104) factor -> . SUBTRACT varcall
    (105) factor -> . varcall
    (61) varcall -> . varcte
    (62) varcall -> . varcomplicated
    (63) varcte -> . TRUE
    (64) varcte -> . FALSE
    (65) varcte -> . CTEFLOAT
    (66) varcte -> . CTESTRING
    (67) varcte -> . CTEINT
    (68) varcomplicated -> . varcomp1
    (69) varcomplicated -> . callfunc
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 166
    CLOSEPAREN      shift and go to state 167
    CLOSECURLY      reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    OUTPUT          reduce using rule 114 (empty -> .)
    INPUT           reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    VAR             reduce using rule 114 (empty -> .)
    OPENPAREN       shift and go to state 94
    SUM             shift and go to state 95
    SUBTRACT        shift and go to state 97
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTESTRING       shift and go to state 103
    CTEINT          shift and go to state 104
    ID              shift and go to state 107

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 114 (empty -> .) ]

    altcall                        shift and go to state 213
    expresion                      shift and go to state 163
    empty                          shift and go to state 165
    exp                            shift and go to state 91
    termino                        shift and go to state 92
    factor                         shift and go to state 93
    varcall                        shift and go to state 96
    varcte                         shift and go to state 98
    varcomplicated                 shift and go to state 99
    varcomp1                       shift and go to state 105
    callfunc                       shift and go to state 106

state 195

    (45) alt2call -> empty .

    CLOSECURLY      reduce using rule 45 (alt2call -> empty .)
    ID              reduce using rule 45 (alt2call -> empty .)
    IF              reduce using rule 45 (alt2call -> empty .)
    OUTPUT          reduce using rule 45 (alt2call -> empty .)
    INPUT           reduce using rule 45 (alt2call -> empty .)
    RETURN          reduce using rule 45 (alt2call -> empty .)
    VAR             reduce using rule 45 (alt2call -> empty .)
    CLOSEPAREN      reduce using rule 45 (alt2call -> empty .)


state 196

    (59) altcall -> COMMA expresion . altcall
    (42) altcall -> . expresion alt2call
    (43) altcall -> . empty
    (59) altcall -> . COMMA expresion altcall
    (60) altcall -> . CLOSEPAREN SEMICOLON
    (75) expresion -> . exp altexpresion
    (114) empty -> .
    (86) exp -> . termino
    (87) exp -> . termino altexp
    (91) termino -> . factor
    (92) termino -> . factor alttermino
    (102) factor -> . OPENPAREN expresion CLOSEPAREN
    (103) factor -> . SUM varcall
    (104) factor -> . SUBTRACT varcall
    (105) factor -> . varcall
    (61) varcall -> . varcte
    (62) varcall -> . varcomplicated
    (63) varcte -> . TRUE
    (64) varcte -> . FALSE
    (65) varcte -> . CTEFLOAT
    (66) varcte -> . CTESTRING
    (67) varcte -> . CTEINT
    (68) varcomplicated -> . varcomp1
    (69) varcomplicated -> . callfunc
    (70) varcomp1 -> . ID varcomp2
    (41) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 166
    CLOSEPAREN      shift and go to state 167
    CLOSECURLY      reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    OUTPUT          reduce using rule 114 (empty -> .)
    INPUT           reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    VAR             reduce using rule 114 (empty -> .)
    OPENPAREN       shift and go to state 94
    SUM             shift and go to state 95
    SUBTRACT        shift and go to state 97
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTESTRING       shift and go to state 103
    CTEINT          shift and go to state 104
    ID              shift and go to state 107

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 114 (empty -> .) ]

    expresion                      shift and go to state 163
    altcall                        shift and go to state 214
    empty                          shift and go to state 165
    exp                            shift and go to state 91
    termino                        shift and go to state 92
    factor                         shift and go to state 93
    varcall                        shift and go to state 96
    varcte                         shift and go to state 98
    varcomplicated                 shift and go to state 99
    varcomp1                       shift and go to state 105
    callfunc                       shift and go to state 106

state 197

    (60) altcall -> CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 60 (altcall -> CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 60 (altcall -> CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 60 (altcall -> CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 60 (altcall -> CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 60 (altcall -> CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 60 (altcall -> CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 60 (altcall -> CLOSEPAREN SEMICOLON .)
    CLOSEPAREN      reduce using rule 60 (altcall -> CLOSEPAREN SEMICOLON .)


state 198

    (106) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY . altcondition
    (107) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY . altcondition ELSE OPENCURLY altcondition
    (108) altcondition -> . estatuto altcondition
    (109) altcondition -> . CLOSECURLY
    (51) estatuto -> . assign
    (52) estatuto -> . condition
    (53) estatuto -> . write
    (54) estatuto -> . read
    (55) estatuto -> . return
    (56) estatuto -> . voidcall
    (110) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (106) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (107) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (97) write -> . OUTPUT OPENPAREN varcall altwrite
    (98) write -> . OUTPUT OPENPAREN expresion altwrite
    (96) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (113) return -> . RETURN expresion SEMICOLON
    (57) voidcall -> . ID OPENPAREN CLOSEPAREN
    (58) voidcall -> . ID OPENPAREN expresion altcall

    CLOSECURLY      shift and go to state 217
    ID              shift and go to state 65
    IF              shift and go to state 66
    OUTPUT          shift and go to state 67
    INPUT           shift and go to state 68
    RETURN          shift and go to state 69

    altcondition                   shift and go to state 215
    estatuto                       shift and go to state 216
    assign                         shift and go to state 59
    condition                      shift and go to state 60
    write                          shift and go to state 61
    read                           shift and go to state 62
    return                         shift and go to state 63
    voidcall                       shift and go to state 64

state 199

    (99) altwrite -> COMMA varcall . altwrite
    (105) factor -> varcall .
    (99) altwrite -> . COMMA varcall altwrite
    (100) altwrite -> . COMMA expresion altwrite
    (101) altwrite -> . CLOSEPAREN SEMICOLON

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for CLOSEPAREN resolved as shift
    TIMES           reduce using rule 105 (factor -> varcall .)
    DIV             reduce using rule 105 (factor -> varcall .)
    SUM             reduce using rule 105 (factor -> varcall .)
    SUBTRACT        reduce using rule 105 (factor -> varcall .)
    SAMEAS          reduce using rule 105 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 105 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 105 (factor -> varcall .)
    SMALLTHAN       reduce using rule 105 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 105 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 105 (factor -> varcall .)
    AND             reduce using rule 105 (factor -> varcall .)
    OR              reduce using rule 105 (factor -> varcall .)
    COMMA           shift and go to state 171
    CLOSEPAREN      shift and go to state 172

  ! COMMA           [ reduce using rule 105 (factor -> varcall .) ]
  ! CLOSEPAREN      [ reduce using rule 105 (factor -> varcall .) ]

    altwrite                       shift and go to state 218

state 200

    (100) altwrite -> COMMA expresion . altwrite
    (99) altwrite -> . COMMA varcall altwrite
    (100) altwrite -> . COMMA expresion altwrite
    (101) altwrite -> . CLOSEPAREN SEMICOLON

    COMMA           shift and go to state 171
    CLOSEPAREN      shift and go to state 172

    altwrite                       shift and go to state 219

state 201

    (101) altwrite -> CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 101 (altwrite -> CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 101 (altwrite -> CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 101 (altwrite -> CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 101 (altwrite -> CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 101 (altwrite -> CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 101 (altwrite -> CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 101 (altwrite -> CLOSEPAREN SEMICOLON .)


state 202

    (96) read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 96 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 96 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 96 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 96 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 96 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 96 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 96 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)


state 203

    (88) altexp -> SUM termino altexp .

    SAMEAS          reduce using rule 88 (altexp -> SUM termino altexp .)
    BIGGERTHAN      reduce using rule 88 (altexp -> SUM termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 88 (altexp -> SUM termino altexp .)
    SMALLTHAN       reduce using rule 88 (altexp -> SUM termino altexp .)
    SMALLEQUALSTHAN reduce using rule 88 (altexp -> SUM termino altexp .)
    DIFFERENTTHAN   reduce using rule 88 (altexp -> SUM termino altexp .)
    AND             reduce using rule 88 (altexp -> SUM termino altexp .)
    OR              reduce using rule 88 (altexp -> SUM termino altexp .)
    SEMICOLON       reduce using rule 88 (altexp -> SUM termino altexp .)
    COMMA           reduce using rule 88 (altexp -> SUM termino altexp .)
    CLOSEPAREN      reduce using rule 88 (altexp -> SUM termino altexp .)
    OPENPAREN       reduce using rule 88 (altexp -> SUM termino altexp .)
    SUM             reduce using rule 88 (altexp -> SUM termino altexp .)
    SUBTRACT        reduce using rule 88 (altexp -> SUM termino altexp .)
    TRUE            reduce using rule 88 (altexp -> SUM termino altexp .)
    FALSE           reduce using rule 88 (altexp -> SUM termino altexp .)
    CTEFLOAT        reduce using rule 88 (altexp -> SUM termino altexp .)
    CTESTRING       reduce using rule 88 (altexp -> SUM termino altexp .)
    CTEINT          reduce using rule 88 (altexp -> SUM termino altexp .)
    ID              reduce using rule 88 (altexp -> SUM termino altexp .)
    CLOSECURLY      reduce using rule 88 (altexp -> SUM termino altexp .)
    IF              reduce using rule 88 (altexp -> SUM termino altexp .)
    OUTPUT          reduce using rule 88 (altexp -> SUM termino altexp .)
    INPUT           reduce using rule 88 (altexp -> SUM termino altexp .)
    RETURN          reduce using rule 88 (altexp -> SUM termino altexp .)
    VAR             reduce using rule 88 (altexp -> SUM termino altexp .)


state 204

    (89) altexp -> SUBTRACT termino altexp .

    SAMEAS          reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    BIGGERTHAN      reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    SMALLTHAN       reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    SMALLEQUALSTHAN reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    DIFFERENTTHAN   reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    AND             reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    OR              reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    SEMICOLON       reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    COMMA           reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    CLOSEPAREN      reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    OPENPAREN       reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    SUM             reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    SUBTRACT        reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    TRUE            reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    FALSE           reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    CTEFLOAT        reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    CTESTRING       reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    CTEINT          reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    ID              reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    CLOSECURLY      reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    IF              reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    OUTPUT          reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    INPUT           reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    RETURN          reduce using rule 89 (altexp -> SUBTRACT termino altexp .)
    VAR             reduce using rule 89 (altexp -> SUBTRACT termino altexp .)


state 205

    (93) alttermino -> TIMES factor alttermino .

    SUM             reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    SUBTRACT        reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    SAMEAS          reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    BIGGERTHAN      reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    SMALLTHAN       reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    DIFFERENTTHAN   reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    AND             reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    OR              reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    SEMICOLON       reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    COMMA           reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    CLOSEPAREN      reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    OPENPAREN       reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    TRUE            reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    FALSE           reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    CTEFLOAT        reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    CTESTRING       reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    CTEINT          reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    ID              reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    CLOSECURLY      reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    IF              reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    OUTPUT          reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    INPUT           reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    RETURN          reduce using rule 93 (alttermino -> TIMES factor alttermino .)
    VAR             reduce using rule 93 (alttermino -> TIMES factor alttermino .)


state 206

    (94) alttermino -> DIV factor alttermino .

    SUM             reduce using rule 94 (alttermino -> DIV factor alttermino .)
    SUBTRACT        reduce using rule 94 (alttermino -> DIV factor alttermino .)
    SAMEAS          reduce using rule 94 (alttermino -> DIV factor alttermino .)
    BIGGERTHAN      reduce using rule 94 (alttermino -> DIV factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 94 (alttermino -> DIV factor alttermino .)
    SMALLTHAN       reduce using rule 94 (alttermino -> DIV factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 94 (alttermino -> DIV factor alttermino .)
    DIFFERENTTHAN   reduce using rule 94 (alttermino -> DIV factor alttermino .)
    AND             reduce using rule 94 (alttermino -> DIV factor alttermino .)
    OR              reduce using rule 94 (alttermino -> DIV factor alttermino .)
    SEMICOLON       reduce using rule 94 (alttermino -> DIV factor alttermino .)
    COMMA           reduce using rule 94 (alttermino -> DIV factor alttermino .)
    CLOSEPAREN      reduce using rule 94 (alttermino -> DIV factor alttermino .)
    OPENPAREN       reduce using rule 94 (alttermino -> DIV factor alttermino .)
    TRUE            reduce using rule 94 (alttermino -> DIV factor alttermino .)
    FALSE           reduce using rule 94 (alttermino -> DIV factor alttermino .)
    CTEFLOAT        reduce using rule 94 (alttermino -> DIV factor alttermino .)
    CTESTRING       reduce using rule 94 (alttermino -> DIV factor alttermino .)
    CTEINT          reduce using rule 94 (alttermino -> DIV factor alttermino .)
    ID              reduce using rule 94 (alttermino -> DIV factor alttermino .)
    CLOSECURLY      reduce using rule 94 (alttermino -> DIV factor alttermino .)
    IF              reduce using rule 94 (alttermino -> DIV factor alttermino .)
    OUTPUT          reduce using rule 94 (alttermino -> DIV factor alttermino .)
    INPUT           reduce using rule 94 (alttermino -> DIV factor alttermino .)
    RETURN          reduce using rule 94 (alttermino -> DIV factor alttermino .)
    VAR             reduce using rule 94 (alttermino -> DIV factor alttermino .)


state 207

    (41) callfunc -> ID OPENPAREN altcall CLOSEPAREN .

    TIMES           reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    DIV             reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SUM             reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SUBTRACT        reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SAMEAS          reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    BIGGERTHAN      reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    BIGGEREQUALSTHAN reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SMALLTHAN       reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SMALLEQUALSTHAN reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    DIFFERENTTHAN   reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    AND             reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OR              reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SEMICOLON       reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    COMMA           reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OPENPAREN       reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    TRUE            reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    FALSE           reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTEFLOAT        reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTESTRING       reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTEINT          reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    ID              reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CLOSECURLY      reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    IF              reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OUTPUT          reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    INPUT           reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    RETURN          reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    VAR             reduce using rule 41 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)


state 208

    (15) constructor -> CONSTRUCTOR OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const .

    CLOSECURLY      reduce using rule 15 (constructor -> CONSTRUCTOR OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const .)


state 209

    (18) alt2const -> estatuto . alt2const
    (18) alt2const -> . estatuto alt2const
    (19) alt2const -> . CLOSECURLY
    (51) estatuto -> . assign
    (52) estatuto -> . condition
    (53) estatuto -> . write
    (54) estatuto -> . read
    (55) estatuto -> . return
    (56) estatuto -> . voidcall
    (110) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (106) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (107) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (97) write -> . OUTPUT OPENPAREN varcall altwrite
    (98) write -> . OUTPUT OPENPAREN expresion altwrite
    (96) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (113) return -> . RETURN expresion SEMICOLON
    (57) voidcall -> . ID OPENPAREN CLOSEPAREN
    (58) voidcall -> . ID OPENPAREN expresion altcall

    CLOSECURLY      shift and go to state 210
    ID              shift and go to state 65
    IF              shift and go to state 66
    OUTPUT          shift and go to state 67
    INPUT           shift and go to state 68
    RETURN          shift and go to state 69

    estatuto                       shift and go to state 209
    alt2const                      shift and go to state 220
    assign                         shift and go to state 59
    condition                      shift and go to state 60
    write                          shift and go to state 61
    read                           shift and go to state 62
    return                         shift and go to state 63
    voidcall                       shift and go to state 64

state 210

    (19) alt2const -> CLOSECURLY .

    CLOSECURLY      reduce using rule 19 (alt2const -> CLOSECURLY .)


state 211

    (28) listidsaltp -> COMMA listids .

    TWODOTS         reduce using rule 28 (listidsaltp -> COMMA listids .)


state 212

    (39) altparams -> COMMA ID TWODOTS type . altparams
    (39) altparams -> . COMMA ID TWODOTS type altparams
    (40) altparams -> . empty
    (114) empty -> .

    COMMA           shift and go to state 115
    CLOSEPAREN      reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)

    altparams                      shift and go to state 221
    empty                          shift and go to state 116

state 213

    (44) alt2call -> COMMA altcall .

    CLOSECURLY      reduce using rule 44 (alt2call -> COMMA altcall .)
    ID              reduce using rule 44 (alt2call -> COMMA altcall .)
    IF              reduce using rule 44 (alt2call -> COMMA altcall .)
    OUTPUT          reduce using rule 44 (alt2call -> COMMA altcall .)
    INPUT           reduce using rule 44 (alt2call -> COMMA altcall .)
    RETURN          reduce using rule 44 (alt2call -> COMMA altcall .)
    VAR             reduce using rule 44 (alt2call -> COMMA altcall .)
    CLOSEPAREN      reduce using rule 44 (alt2call -> COMMA altcall .)


state 214

    (59) altcall -> COMMA expresion altcall .

    CLOSECURLY      reduce using rule 59 (altcall -> COMMA expresion altcall .)
    ID              reduce using rule 59 (altcall -> COMMA expresion altcall .)
    IF              reduce using rule 59 (altcall -> COMMA expresion altcall .)
    OUTPUT          reduce using rule 59 (altcall -> COMMA expresion altcall .)
    INPUT           reduce using rule 59 (altcall -> COMMA expresion altcall .)
    RETURN          reduce using rule 59 (altcall -> COMMA expresion altcall .)
    VAR             reduce using rule 59 (altcall -> COMMA expresion altcall .)
    CLOSEPAREN      reduce using rule 59 (altcall -> COMMA expresion altcall .)


state 215

    (106) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .
    (107) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition . ELSE OPENCURLY altcondition

    CLOSECURLY      reduce using rule 106 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    ID              reduce using rule 106 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    IF              reduce using rule 106 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    OUTPUT          reduce using rule 106 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    INPUT           reduce using rule 106 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    RETURN          reduce using rule 106 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    VAR             reduce using rule 106 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    ELSE            shift and go to state 222


state 216

    (108) altcondition -> estatuto . altcondition
    (108) altcondition -> . estatuto altcondition
    (109) altcondition -> . CLOSECURLY
    (51) estatuto -> . assign
    (52) estatuto -> . condition
    (53) estatuto -> . write
    (54) estatuto -> . read
    (55) estatuto -> . return
    (56) estatuto -> . voidcall
    (110) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (106) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (107) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (97) write -> . OUTPUT OPENPAREN varcall altwrite
    (98) write -> . OUTPUT OPENPAREN expresion altwrite
    (96) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (113) return -> . RETURN expresion SEMICOLON
    (57) voidcall -> . ID OPENPAREN CLOSEPAREN
    (58) voidcall -> . ID OPENPAREN expresion altcall

    CLOSECURLY      shift and go to state 217
    ID              shift and go to state 65
    IF              shift and go to state 66
    OUTPUT          shift and go to state 67
    INPUT           shift and go to state 68
    RETURN          shift and go to state 69

    estatuto                       shift and go to state 216
    altcondition                   shift and go to state 223
    assign                         shift and go to state 59
    condition                      shift and go to state 60
    write                          shift and go to state 61
    read                           shift and go to state 62
    return                         shift and go to state 63
    voidcall                       shift and go to state 64

state 217

    (109) altcondition -> CLOSECURLY .

    ELSE            reduce using rule 109 (altcondition -> CLOSECURLY .)
    CLOSECURLY      reduce using rule 109 (altcondition -> CLOSECURLY .)
    ID              reduce using rule 109 (altcondition -> CLOSECURLY .)
    IF              reduce using rule 109 (altcondition -> CLOSECURLY .)
    OUTPUT          reduce using rule 109 (altcondition -> CLOSECURLY .)
    INPUT           reduce using rule 109 (altcondition -> CLOSECURLY .)
    RETURN          reduce using rule 109 (altcondition -> CLOSECURLY .)
    VAR             reduce using rule 109 (altcondition -> CLOSECURLY .)


state 218

    (99) altwrite -> COMMA varcall altwrite .

    CLOSECURLY      reduce using rule 99 (altwrite -> COMMA varcall altwrite .)
    ID              reduce using rule 99 (altwrite -> COMMA varcall altwrite .)
    IF              reduce using rule 99 (altwrite -> COMMA varcall altwrite .)
    OUTPUT          reduce using rule 99 (altwrite -> COMMA varcall altwrite .)
    INPUT           reduce using rule 99 (altwrite -> COMMA varcall altwrite .)
    RETURN          reduce using rule 99 (altwrite -> COMMA varcall altwrite .)
    VAR             reduce using rule 99 (altwrite -> COMMA varcall altwrite .)


state 219

    (100) altwrite -> COMMA expresion altwrite .

    CLOSECURLY      reduce using rule 100 (altwrite -> COMMA expresion altwrite .)
    ID              reduce using rule 100 (altwrite -> COMMA expresion altwrite .)
    IF              reduce using rule 100 (altwrite -> COMMA expresion altwrite .)
    OUTPUT          reduce using rule 100 (altwrite -> COMMA expresion altwrite .)
    INPUT           reduce using rule 100 (altwrite -> COMMA expresion altwrite .)
    RETURN          reduce using rule 100 (altwrite -> COMMA expresion altwrite .)
    VAR             reduce using rule 100 (altwrite -> COMMA expresion altwrite .)


state 220

    (18) alt2const -> estatuto alt2const .

    CLOSECURLY      reduce using rule 18 (alt2const -> estatuto alt2const .)


state 221

    (39) altparams -> COMMA ID TWODOTS type altparams .

    CLOSEPAREN      reduce using rule 39 (altparams -> COMMA ID TWODOTS type altparams .)
    ID              reduce using rule 39 (altparams -> COMMA ID TWODOTS type altparams .)


state 222

    (107) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE . OPENCURLY altcondition

    OPENCURLY       shift and go to state 224


state 223

    (108) altcondition -> estatuto altcondition .

    ELSE            reduce using rule 108 (altcondition -> estatuto altcondition .)
    CLOSECURLY      reduce using rule 108 (altcondition -> estatuto altcondition .)
    ID              reduce using rule 108 (altcondition -> estatuto altcondition .)
    IF              reduce using rule 108 (altcondition -> estatuto altcondition .)
    OUTPUT          reduce using rule 108 (altcondition -> estatuto altcondition .)
    INPUT           reduce using rule 108 (altcondition -> estatuto altcondition .)
    RETURN          reduce using rule 108 (altcondition -> estatuto altcondition .)
    VAR             reduce using rule 108 (altcondition -> estatuto altcondition .)


state 224

    (107) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY . altcondition
    (108) altcondition -> . estatuto altcondition
    (109) altcondition -> . CLOSECURLY
    (51) estatuto -> . assign
    (52) estatuto -> . condition
    (53) estatuto -> . write
    (54) estatuto -> . read
    (55) estatuto -> . return
    (56) estatuto -> . voidcall
    (110) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (106) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (107) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (97) write -> . OUTPUT OPENPAREN varcall altwrite
    (98) write -> . OUTPUT OPENPAREN expresion altwrite
    (96) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (113) return -> . RETURN expresion SEMICOLON
    (57) voidcall -> . ID OPENPAREN CLOSEPAREN
    (58) voidcall -> . ID OPENPAREN expresion altcall

    CLOSECURLY      shift and go to state 217
    ID              shift and go to state 65
    IF              shift and go to state 66
    OUTPUT          shift and go to state 67
    INPUT           shift and go to state 68
    RETURN          shift and go to state 69

    altcondition                   shift and go to state 225
    estatuto                       shift and go to state 216
    assign                         shift and go to state 59
    condition                      shift and go to state 60
    write                          shift and go to state 61
    read                           shift and go to state 62
    return                         shift and go to state 63
    voidcall                       shift and go to state 64

state 225

    (107) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .

    CLOSECURLY      reduce using rule 107 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    ID              reduce using rule 107 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    IF              reduce using rule 107 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    OUTPUT          reduce using rule 107 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    INPUT           reduce using rule 107 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    RETURN          reduce using rule 107 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    VAR             reduce using rule 107 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUM in state 92 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 92 resolved as shift
WARNING: shift/reduce conflict for SUM in state 92 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 92 resolved as shift
WARNING: shift/reduce conflict for OPENPAREN in state 107 resolved as shift
WARNING: shift/reduce conflict for ID in state 121 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 124 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 124 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 151 resolved as shift
WARNING: shift/reduce conflict for SUM in state 176 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 176 resolved as shift
WARNING: shift/reduce conflict for SUM in state 177 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 177 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 194 resolved as shift
WARNING: shift/reduce conflict for ID in state 194 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 196 resolved as shift
WARNING: shift/reduce conflict for ID in state 196 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 199 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 199 resolved as shift
WARNING: reduce/reduce conflict in state 92 resolved using rule (exp -> termino)
WARNING: rejected rule (empty -> <empty>) in state 92
WARNING: reduce/reduce conflict in state 93 resolved using rule (termino -> factor)
WARNING: rejected rule (empty -> <empty>) in state 93
