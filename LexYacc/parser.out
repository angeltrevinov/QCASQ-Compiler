Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID save_program SEMICOLON altprogram
Rule 2     altprogram -> class altprogram
Rule 3     altprogram -> var altprogram
Rule 4     altprogram -> function altprogram
Rule 5     altprogram -> main
Rule 6     save_program -> <empty>
Rule 7     main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain
Rule 8     altmain -> var altmain
Rule 9     altmain -> estatuto altmain
Rule 10    altmain -> CLOSECURLY clear_scope
Rule 11    save_main -> <empty>
Rule 12    clear_scope -> <empty>
Rule 13    class -> CLASS ID altclass save_class OPENCURLY alt2class
Rule 14    altclass -> TWODOTS ID
Rule 15    altclass -> empty
Rule 16    alt2class -> var alt2class
Rule 17    alt2class -> function alt2class
Rule 18    alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope
Rule 19    save_class -> <empty>
Rule 20    remove_class_scope -> <empty>
Rule 21    constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const
Rule 22    altconst -> params
Rule 23    altconst -> empty
Rule 24    alt2const -> var alt2const
Rule 25    alt2const -> estatuto alt2const
Rule 26    alt2const -> CLOSECURLY remove_constructor_scope
Rule 27    save_constructor -> <empty>
Rule 28    remove_constructor_scope -> <empty>
Rule 29    var -> VAR listids TWODOTS type save_vars SEMICOLON
Rule 30    save_vars -> <empty>
Rule 31    listids -> ID save_var_name listidsalty
Rule 32    listidsalty -> COMMA listids
Rule 33    listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltz
Rule 34    listidsalty -> empty
Rule 35    listidsaltz -> COMMA listids
Rule 36    listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltp
Rule 37    listidsaltz -> empty
Rule 38    listidsaltp -> COMMA listids
Rule 39    listidsaltp -> empty
Rule 40    save_var_name -> <empty>
Rule 41    function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
Rule 42    altfunc -> params
Rule 43    altfunc -> empty
Rule 44    alt2func -> TWODOTS type
Rule 45    alt2func -> empty
Rule 46    alt3func -> var alt3func
Rule 47    alt3func -> estatuto alt3func
Rule 48    alt3func -> CLOSECURLY remove_function_scope
Rule 49    save_function -> <empty>
Rule 50    store_params -> <empty>
Rule 51    remove_function_scope -> <empty>
Rule 52    params -> ID TWODOTS type save_params altparams
Rule 53    altparams -> COMMA ID TWODOTS type save_params altparams
Rule 54    altparams -> empty
Rule 55    save_params -> <empty>
Rule 56    callfunc -> ID OPENPAREN altcall CLOSEPAREN
Rule 57    altcall -> expresion alt2call
Rule 58    altcall -> empty
Rule 59    alt2call -> COMMA altcall
Rule 60    alt2call -> empty
Rule 61    type -> INT
Rule 62    type -> FLOAT
Rule 63    type -> STRING
Rule 64    type -> ID
Rule 65    type -> BOOL
Rule 66    estatuto -> assign
Rule 67    estatuto -> condition
Rule 68    estatuto -> write
Rule 69    estatuto -> read
Rule 70    estatuto -> return
Rule 71    estatuto -> voidcall
Rule 72    estatuto -> while
Rule 73    voidcall -> ID OPENPAREN CLOSEPAREN
Rule 74    voidcall -> ID OPENPAREN expresion altcall
Rule 75    altcall -> COMMA expresion altcall
Rule 76    altcall -> CLOSEPAREN SEMICOLON
Rule 77    while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile
Rule 78    altwhile -> estatuto altwhile
Rule 79    altwhile -> CLOSECURLY
Rule 80    varcall -> varcte save_const
Rule 81    varcall -> varcomplicated save_comp
Rule 82    varcte -> TRUE
Rule 83    varcte -> FALSE
Rule 84    varcte -> CTEFLOAT
Rule 85    varcte -> CTESTRING
Rule 86    varcte -> CTEINT
Rule 87    varcomplicated -> varcomp1
Rule 88    varcomplicated -> callfunc
Rule 89    varcomp1 -> ID varcomp2
Rule 90    varcomp2 -> DOT varcomp3
Rule 91    varcomp2 -> empty
Rule 92    varcomp3 -> varcomp1
Rule 93    varcomp3 -> callfunc
Rule 94    save_const -> <empty>
Rule 95    save_comp -> <empty>
Rule 96    expresion -> exp altexpresion
Rule 97    altexpresion -> altexpresion2 save_op exp
Rule 98    altexpresion -> empty
Rule 99    altexpresion2 -> SAMEAS
Rule 100   altexpresion2 -> BIGGERTHAN
Rule 101   altexpresion2 -> BIGGEREQUALSTHAN
Rule 102   altexpresion2 -> SMALLTHAN
Rule 103   altexpresion2 -> SMALLEQUALSTHAN
Rule 104   altexpresion2 -> DIFFERENTTHAN
Rule 105   altexpresion2 -> AND
Rule 106   altexpresion2 -> OR
Rule 107   exp -> termino
Rule 108   exp -> termino altexp
Rule 109   altexp -> SUM save_op termino altexp
Rule 110   altexp -> SUBTRACT save_op termino altexp
Rule 111   altexp -> empty
Rule 112   termino -> factor
Rule 113   termino -> factor alttermino
Rule 114   alttermino -> TIMES save_op factor alttermino
Rule 115   alttermino -> DIV save_op factor alttermino
Rule 116   alttermino -> empty
Rule 117   save_op -> <empty>
Rule 118   read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
Rule 119   write -> OUTPUT save_op OPENPAREN varcall altwrite
Rule 120   write -> OUTPUT save_op OPENPAREN expresion altwrite
Rule 121   altwrite -> COMMA save_op varcall altwrite
Rule 122   altwrite -> COMMA save_op expresion altwrite
Rule 123   altwrite -> CLOSEPAREN SEMICOLON
Rule 124   factor -> OPENPAREN save_op expresion CLOSEPAREN save_op
Rule 125   factor -> varcall
Rule 126   condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
Rule 127   condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
Rule 128   altcondition -> estatuto altcondition
Rule 129   altcondition -> CLOSECURLY
Rule 130   assign -> ID save_comp EQUALS save_op expresion SEMICOLON
Rule 131   return -> RETURN save_op expresion SEMICOLON
Rule 132   empty -> <empty>

Terminals, with rules where they appear

AND                  : 105
BIGGEREQUALSTHAN     : 101
BIGGERTHAN           : 100
BOOL                 : 65
CLASS                : 13
CLOSEBRACKET         : 33 36
CLOSECURLY           : 10 18 26 48 79 129
CLOSEPAREN           : 7 21 41 56 73 76 77 118 123 124 126 127
COMMA                : 32 35 38 53 59 75 121 122
CONSTRUCTOR          : 21
CTEFLOAT             : 84
CTEINT               : 33 36 86
CTESTRING            : 85
DIFFERENTTHAN        : 104
DIV                  : 115
DOT                  : 90
ELSE                 : 127
EQUALS               : 130
FALSE                : 83
FLOAT                : 62
FUNC                 : 41
ID                   : 1 13 14 31 41 52 53 56 64 73 74 89 118 130
IF                   : 126 127
INPUT                : 118
INT                  : 61
MAIN                 : 7
OPENBRACKET          : 33 36
OPENCURLY            : 7 13 21 41 77 126 127 127
OPENPAREN            : 7 21 41 56 73 74 77 118 119 120 124 126 127
OR                   : 106
OUTPUT               : 119 120
PROGRAM              : 1
RETURN               : 131
SAMEAS               : 99
SEMICOLON            : 1 18 29 76 118 123 130 131
SMALLEQUALSTHAN      : 103
SMALLTHAN            : 102
STRING               : 63
SUBTRACT             : 110
SUM                  : 109
TIMES                : 114
TRUE                 : 82
TWODOTS              : 14 29 44 52 53
VAR                  : 29
WHILE                : 77
error                : 

Nonterminals, with rules where they appear

alt2call             : 57
alt2class            : 13 16 17
alt2const            : 21 24 25
alt2func             : 41
alt3func             : 41 46 47
altcall              : 56 59 74 75
altclass             : 13
altcondition         : 126 127 127 128
altconst             : 21
altexp               : 108 109 110
altexpresion         : 96
altexpresion2        : 97
altfunc              : 41
altmain              : 7 8 9
altparams            : 52 53
altprogram           : 1 2 3 4
alttermino           : 113 114 115
altwhile             : 77 78
altwrite             : 119 120 121 122
assign               : 66
callfunc             : 88 93
class                : 2
clear_scope          : 10
condition            : 67
constructor          : 18
empty                : 15 23 34 37 39 43 45 54 58 60 91 98 111 116
estatuto             : 9 25 47 78 128
exp                  : 96 97
expresion            : 57 74 75 77 120 122 124 126 127 130 131
factor               : 112 113 114 115
function             : 4 17
listids              : 29 32 35 38
listidsaltp          : 36
listidsalty          : 31
listidsaltz          : 33
main                 : 5
params               : 22 42
program              : 0
read                 : 69
remove_class_scope   : 18
remove_constructor_scope : 26
remove_function_scope : 48
return               : 70
save_class           : 13
save_comp            : 81 118 130
save_const           : 80
save_constructor     : 21
save_function        : 41
save_main            : 7
save_op              : 97 109 110 114 115 118 119 120 121 122 124 124 130 131
save_params          : 52 53
save_program         : 1
save_var_name        : 31
save_vars            : 29
store_params         : 21 41
termino              : 107 108 109 110
type                 : 29 44 52 53
var                  : 3 8 16 24 46
varcall              : 119 121 125
varcomp1             : 87 92
varcomp2             : 89
varcomp3             : 90
varcomplicated       : 81
varcte               : 80
voidcall             : 71
while                : 72
write                : 68

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID save_program SEMICOLON altprogram

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID save_program SEMICOLON altprogram

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . save_program SEMICOLON altprogram
    (6) save_program -> .

    SEMICOLON       reduce using rule 6 (save_program -> .)

    save_program                   shift and go to state 4

state 4

    (1) program -> PROGRAM ID save_program . SEMICOLON altprogram

    SEMICOLON       shift and go to state 5


state 5

    (1) program -> PROGRAM ID save_program SEMICOLON . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (13) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (41) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    altprogram                     shift and go to state 6
    class                          shift and go to state 7
    var                            shift and go to state 8
    function                       shift and go to state 9
    main                           shift and go to state 10

state 6

    (1) program -> PROGRAM ID save_program SEMICOLON altprogram .

    $end            reduce using rule 1 (program -> PROGRAM ID save_program SEMICOLON altprogram .)


state 7

    (2) altprogram -> class . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (13) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (41) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    class                          shift and go to state 7
    altprogram                     shift and go to state 15
    var                            shift and go to state 8
    function                       shift and go to state 9
    main                           shift and go to state 10

state 8

    (3) altprogram -> var . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (13) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (41) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    var                            shift and go to state 8
    altprogram                     shift and go to state 16
    class                          shift and go to state 7
    function                       shift and go to state 9
    main                           shift and go to state 10

state 9

    (4) altprogram -> function . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (13) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (41) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    function                       shift and go to state 9
    altprogram                     shift and go to state 17
    class                          shift and go to state 7
    var                            shift and go to state 8
    main                           shift and go to state 10

state 10

    (5) altprogram -> main .

    $end            reduce using rule 5 (altprogram -> main .)


state 11

    (13) class -> CLASS . ID altclass save_class OPENCURLY alt2class

    ID              shift and go to state 18


state 12

    (29) var -> VAR . listids TWODOTS type save_vars SEMICOLON
    (31) listids -> . ID save_var_name listidsalty

    ID              shift and go to state 20

    listids                        shift and go to state 19

state 13

    (41) function -> FUNC . ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func

    ID              shift and go to state 21


state 14

    (7) main -> MAIN . save_main OPENPAREN CLOSEPAREN OPENCURLY altmain
    (11) save_main -> .

    OPENPAREN       reduce using rule 11 (save_main -> .)

    save_main                      shift and go to state 22

state 15

    (2) altprogram -> class altprogram .

    $end            reduce using rule 2 (altprogram -> class altprogram .)


state 16

    (3) altprogram -> var altprogram .

    $end            reduce using rule 3 (altprogram -> var altprogram .)


state 17

    (4) altprogram -> function altprogram .

    $end            reduce using rule 4 (altprogram -> function altprogram .)


state 18

    (13) class -> CLASS ID . altclass save_class OPENCURLY alt2class
    (14) altclass -> . TWODOTS ID
    (15) altclass -> . empty
    (132) empty -> .

    TWODOTS         shift and go to state 24
    OPENCURLY       reduce using rule 132 (empty -> .)

    altclass                       shift and go to state 23
    empty                          shift and go to state 25

state 19

    (29) var -> VAR listids . TWODOTS type save_vars SEMICOLON

    TWODOTS         shift and go to state 26


state 20

    (31) listids -> ID . save_var_name listidsalty
    (40) save_var_name -> .

    COMMA           reduce using rule 40 (save_var_name -> .)
    OPENBRACKET     reduce using rule 40 (save_var_name -> .)
    TWODOTS         reduce using rule 40 (save_var_name -> .)

    save_var_name                  shift and go to state 27

state 21

    (41) function -> FUNC ID . OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func

    OPENPAREN       shift and go to state 28


state 22

    (7) main -> MAIN save_main . OPENPAREN CLOSEPAREN OPENCURLY altmain

    OPENPAREN       shift and go to state 29


state 23

    (13) class -> CLASS ID altclass . save_class OPENCURLY alt2class
    (19) save_class -> .

    OPENCURLY       reduce using rule 19 (save_class -> .)

    save_class                     shift and go to state 30

state 24

    (14) altclass -> TWODOTS . ID

    ID              shift and go to state 31


state 25

    (15) altclass -> empty .

    OPENCURLY       reduce using rule 15 (altclass -> empty .)


state 26

    (29) var -> VAR listids TWODOTS . type save_vars SEMICOLON
    (61) type -> . INT
    (62) type -> . FLOAT
    (63) type -> . STRING
    (64) type -> . ID
    (65) type -> . BOOL

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 36
    BOOL            shift and go to state 37

    type                           shift and go to state 32

state 27

    (31) listids -> ID save_var_name . listidsalty
    (32) listidsalty -> . COMMA listids
    (33) listidsalty -> . OPENBRACKET CTEINT CLOSEBRACKET listidsaltz
    (34) listidsalty -> . empty
    (132) empty -> .

    COMMA           shift and go to state 39
    OPENBRACKET     shift and go to state 40
    TWODOTS         reduce using rule 132 (empty -> .)

    listidsalty                    shift and go to state 38
    empty                          shift and go to state 41

state 28

    (41) function -> FUNC ID OPENPAREN . altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (42) altfunc -> . params
    (43) altfunc -> . empty
    (52) params -> . ID TWODOTS type save_params altparams
    (132) empty -> .

    ID              shift and go to state 42
    CLOSEPAREN      reduce using rule 132 (empty -> .)

    altfunc                        shift and go to state 43
    params                         shift and go to state 44
    empty                          shift and go to state 45

state 29

    (7) main -> MAIN save_main OPENPAREN . CLOSEPAREN OPENCURLY altmain

    CLOSEPAREN      shift and go to state 46


state 30

    (13) class -> CLASS ID altclass save_class . OPENCURLY alt2class

    OPENCURLY       shift and go to state 47


state 31

    (14) altclass -> TWODOTS ID .

    OPENCURLY       reduce using rule 14 (altclass -> TWODOTS ID .)


state 32

    (29) var -> VAR listids TWODOTS type . save_vars SEMICOLON
    (30) save_vars -> .

    SEMICOLON       reduce using rule 30 (save_vars -> .)

    save_vars                      shift and go to state 48

state 33

    (61) type -> INT .

    SEMICOLON       reduce using rule 61 (type -> INT .)
    COMMA           reduce using rule 61 (type -> INT .)
    CLOSEPAREN      reduce using rule 61 (type -> INT .)
    OPENCURLY       reduce using rule 61 (type -> INT .)


state 34

    (62) type -> FLOAT .

    SEMICOLON       reduce using rule 62 (type -> FLOAT .)
    COMMA           reduce using rule 62 (type -> FLOAT .)
    CLOSEPAREN      reduce using rule 62 (type -> FLOAT .)
    OPENCURLY       reduce using rule 62 (type -> FLOAT .)


state 35

    (63) type -> STRING .

    SEMICOLON       reduce using rule 63 (type -> STRING .)
    COMMA           reduce using rule 63 (type -> STRING .)
    CLOSEPAREN      reduce using rule 63 (type -> STRING .)
    OPENCURLY       reduce using rule 63 (type -> STRING .)


state 36

    (64) type -> ID .

    SEMICOLON       reduce using rule 64 (type -> ID .)
    COMMA           reduce using rule 64 (type -> ID .)
    CLOSEPAREN      reduce using rule 64 (type -> ID .)
    OPENCURLY       reduce using rule 64 (type -> ID .)


state 37

    (65) type -> BOOL .

    SEMICOLON       reduce using rule 65 (type -> BOOL .)
    COMMA           reduce using rule 65 (type -> BOOL .)
    CLOSEPAREN      reduce using rule 65 (type -> BOOL .)
    OPENCURLY       reduce using rule 65 (type -> BOOL .)


state 38

    (31) listids -> ID save_var_name listidsalty .

    TWODOTS         reduce using rule 31 (listids -> ID save_var_name listidsalty .)


state 39

    (32) listidsalty -> COMMA . listids
    (31) listids -> . ID save_var_name listidsalty

    ID              shift and go to state 20

    listids                        shift and go to state 49

state 40

    (33) listidsalty -> OPENBRACKET . CTEINT CLOSEBRACKET listidsaltz

    CTEINT          shift and go to state 50


state 41

    (34) listidsalty -> empty .

    TWODOTS         reduce using rule 34 (listidsalty -> empty .)


state 42

    (52) params -> ID . TWODOTS type save_params altparams

    TWODOTS         shift and go to state 51


state 43

    (41) function -> FUNC ID OPENPAREN altfunc . CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func

    CLOSEPAREN      shift and go to state 52


state 44

    (42) altfunc -> params .

    CLOSEPAREN      reduce using rule 42 (altfunc -> params .)


state 45

    (43) altfunc -> empty .

    CLOSEPAREN      reduce using rule 43 (altfunc -> empty .)


state 46

    (7) main -> MAIN save_main OPENPAREN CLOSEPAREN . OPENCURLY altmain

    OPENCURLY       shift and go to state 53


state 47

    (13) class -> CLASS ID altclass save_class OPENCURLY . alt2class
    (16) alt2class -> . var alt2class
    (17) alt2class -> . function alt2class
    (18) alt2class -> . constructor CLOSECURLY SEMICOLON remove_class_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (41) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (21) constructor -> . CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    CONSTRUCTOR     shift and go to state 58

    alt2class                      shift and go to state 54
    var                            shift and go to state 55
    function                       shift and go to state 56
    constructor                    shift and go to state 57

state 48

    (29) var -> VAR listids TWODOTS type save_vars . SEMICOLON

    SEMICOLON       shift and go to state 59


state 49

    (32) listidsalty -> COMMA listids .

    TWODOTS         reduce using rule 32 (listidsalty -> COMMA listids .)


state 50

    (33) listidsalty -> OPENBRACKET CTEINT . CLOSEBRACKET listidsaltz

    CLOSEBRACKET    shift and go to state 60


state 51

    (52) params -> ID TWODOTS . type save_params altparams
    (61) type -> . INT
    (62) type -> . FLOAT
    (63) type -> . STRING
    (64) type -> . ID
    (65) type -> . BOOL

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 36
    BOOL            shift and go to state 37

    type                           shift and go to state 61

state 52

    (41) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN . alt2func save_function store_params OPENCURLY alt3func
    (44) alt2func -> . TWODOTS type
    (45) alt2func -> . empty
    (132) empty -> .

    TWODOTS         shift and go to state 63
    OPENCURLY       reduce using rule 132 (empty -> .)

    alt2func                       shift and go to state 62
    empty                          shift and go to state 64

state 53

    (7) main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY . altmain
    (8) altmain -> . var altmain
    (9) altmain -> . estatuto altmain
    (10) altmain -> . CLOSECURLY clear_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (66) estatuto -> . assign
    (67) estatuto -> . condition
    (68) estatuto -> . write
    (69) estatuto -> . read
    (70) estatuto -> . return
    (71) estatuto -> . voidcall
    (72) estatuto -> . while
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (126) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (127) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (119) write -> . OUTPUT save_op OPENPAREN varcall altwrite
    (120) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (118) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (73) voidcall -> . ID OPENPAREN CLOSEPAREN
    (74) voidcall -> . ID OPENPAREN expresion altcall
    (77) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 68
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    altmain                        shift and go to state 65
    var                            shift and go to state 66
    estatuto                       shift and go to state 67
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 54

    (13) class -> CLASS ID altclass save_class OPENCURLY alt2class .

    CLASS           reduce using rule 13 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)
    VAR             reduce using rule 13 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)
    FUNC            reduce using rule 13 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)
    MAIN            reduce using rule 13 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)


state 55

    (16) alt2class -> var . alt2class
    (16) alt2class -> . var alt2class
    (17) alt2class -> . function alt2class
    (18) alt2class -> . constructor CLOSECURLY SEMICOLON remove_class_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (41) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (21) constructor -> . CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    CONSTRUCTOR     shift and go to state 58

    var                            shift and go to state 55
    alt2class                      shift and go to state 82
    function                       shift and go to state 56
    constructor                    shift and go to state 57

state 56

    (17) alt2class -> function . alt2class
    (16) alt2class -> . var alt2class
    (17) alt2class -> . function alt2class
    (18) alt2class -> . constructor CLOSECURLY SEMICOLON remove_class_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (41) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (21) constructor -> . CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    CONSTRUCTOR     shift and go to state 58

    function                       shift and go to state 56
    alt2class                      shift and go to state 83
    var                            shift and go to state 55
    constructor                    shift and go to state 57

state 57

    (18) alt2class -> constructor . CLOSECURLY SEMICOLON remove_class_scope

    CLOSECURLY      shift and go to state 84


state 58

    (21) constructor -> CONSTRUCTOR . save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const
    (27) save_constructor -> .

    OPENPAREN       reduce using rule 27 (save_constructor -> .)

    save_constructor               shift and go to state 85

state 59

    (29) var -> VAR listids TWODOTS type save_vars SEMICOLON .

    CLASS           reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    VAR             reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    FUNC            reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    MAIN            reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    CONSTRUCTOR     reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    CLOSECURLY      reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    ID              reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    IF              reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    OUTPUT          reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    INPUT           reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    RETURN          reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    WHILE           reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)


state 60

    (33) listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET . listidsaltz
    (35) listidsaltz -> . COMMA listids
    (36) listidsaltz -> . OPENBRACKET CTEINT CLOSEBRACKET listidsaltp
    (37) listidsaltz -> . empty
    (132) empty -> .

    COMMA           shift and go to state 88
    OPENBRACKET     shift and go to state 86
    TWODOTS         reduce using rule 132 (empty -> .)

    listidsaltz                    shift and go to state 87
    empty                          shift and go to state 89

state 61

    (52) params -> ID TWODOTS type . save_params altparams
    (55) save_params -> .

    COMMA           reduce using rule 55 (save_params -> .)
    CLOSEPAREN      reduce using rule 55 (save_params -> .)

    save_params                    shift and go to state 90

state 62

    (41) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func . save_function store_params OPENCURLY alt3func
    (49) save_function -> .

    OPENCURLY       reduce using rule 49 (save_function -> .)

    save_function                  shift and go to state 91

state 63

    (44) alt2func -> TWODOTS . type
    (61) type -> . INT
    (62) type -> . FLOAT
    (63) type -> . STRING
    (64) type -> . ID
    (65) type -> . BOOL

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 36
    BOOL            shift and go to state 37

    type                           shift and go to state 92

state 64

    (45) alt2func -> empty .

    OPENCURLY       reduce using rule 45 (alt2func -> empty .)


state 65

    (7) main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain .

    $end            reduce using rule 7 (main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain .)


state 66

    (8) altmain -> var . altmain
    (8) altmain -> . var altmain
    (9) altmain -> . estatuto altmain
    (10) altmain -> . CLOSECURLY clear_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (66) estatuto -> . assign
    (67) estatuto -> . condition
    (68) estatuto -> . write
    (69) estatuto -> . read
    (70) estatuto -> . return
    (71) estatuto -> . voidcall
    (72) estatuto -> . while
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (126) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (127) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (119) write -> . OUTPUT save_op OPENPAREN varcall altwrite
    (120) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (118) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (73) voidcall -> . ID OPENPAREN CLOSEPAREN
    (74) voidcall -> . ID OPENPAREN expresion altcall
    (77) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 68
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    var                            shift and go to state 66
    altmain                        shift and go to state 93
    estatuto                       shift and go to state 67
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 67

    (9) altmain -> estatuto . altmain
    (8) altmain -> . var altmain
    (9) altmain -> . estatuto altmain
    (10) altmain -> . CLOSECURLY clear_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (66) estatuto -> . assign
    (67) estatuto -> . condition
    (68) estatuto -> . write
    (69) estatuto -> . read
    (70) estatuto -> . return
    (71) estatuto -> . voidcall
    (72) estatuto -> . while
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (126) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (127) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (119) write -> . OUTPUT save_op OPENPAREN varcall altwrite
    (120) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (118) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (73) voidcall -> . ID OPENPAREN CLOSEPAREN
    (74) voidcall -> . ID OPENPAREN expresion altcall
    (77) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 68
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 67
    altmain                        shift and go to state 94
    var                            shift and go to state 66
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 68

    (10) altmain -> CLOSECURLY . clear_scope
    (12) clear_scope -> .

    $end            reduce using rule 12 (clear_scope -> .)

    clear_scope                    shift and go to state 95

state 69

    (66) estatuto -> assign .

    CLOSECURLY      reduce using rule 66 (estatuto -> assign .)
    VAR             reduce using rule 66 (estatuto -> assign .)
    ID              reduce using rule 66 (estatuto -> assign .)
    IF              reduce using rule 66 (estatuto -> assign .)
    OUTPUT          reduce using rule 66 (estatuto -> assign .)
    INPUT           reduce using rule 66 (estatuto -> assign .)
    RETURN          reduce using rule 66 (estatuto -> assign .)
    WHILE           reduce using rule 66 (estatuto -> assign .)


state 70

    (67) estatuto -> condition .

    CLOSECURLY      reduce using rule 67 (estatuto -> condition .)
    VAR             reduce using rule 67 (estatuto -> condition .)
    ID              reduce using rule 67 (estatuto -> condition .)
    IF              reduce using rule 67 (estatuto -> condition .)
    OUTPUT          reduce using rule 67 (estatuto -> condition .)
    INPUT           reduce using rule 67 (estatuto -> condition .)
    RETURN          reduce using rule 67 (estatuto -> condition .)
    WHILE           reduce using rule 67 (estatuto -> condition .)


state 71

    (68) estatuto -> write .

    CLOSECURLY      reduce using rule 68 (estatuto -> write .)
    VAR             reduce using rule 68 (estatuto -> write .)
    ID              reduce using rule 68 (estatuto -> write .)
    IF              reduce using rule 68 (estatuto -> write .)
    OUTPUT          reduce using rule 68 (estatuto -> write .)
    INPUT           reduce using rule 68 (estatuto -> write .)
    RETURN          reduce using rule 68 (estatuto -> write .)
    WHILE           reduce using rule 68 (estatuto -> write .)


state 72

    (69) estatuto -> read .

    CLOSECURLY      reduce using rule 69 (estatuto -> read .)
    VAR             reduce using rule 69 (estatuto -> read .)
    ID              reduce using rule 69 (estatuto -> read .)
    IF              reduce using rule 69 (estatuto -> read .)
    OUTPUT          reduce using rule 69 (estatuto -> read .)
    INPUT           reduce using rule 69 (estatuto -> read .)
    RETURN          reduce using rule 69 (estatuto -> read .)
    WHILE           reduce using rule 69 (estatuto -> read .)


state 73

    (70) estatuto -> return .

    CLOSECURLY      reduce using rule 70 (estatuto -> return .)
    VAR             reduce using rule 70 (estatuto -> return .)
    ID              reduce using rule 70 (estatuto -> return .)
    IF              reduce using rule 70 (estatuto -> return .)
    OUTPUT          reduce using rule 70 (estatuto -> return .)
    INPUT           reduce using rule 70 (estatuto -> return .)
    RETURN          reduce using rule 70 (estatuto -> return .)
    WHILE           reduce using rule 70 (estatuto -> return .)


state 74

    (71) estatuto -> voidcall .

    CLOSECURLY      reduce using rule 71 (estatuto -> voidcall .)
    VAR             reduce using rule 71 (estatuto -> voidcall .)
    ID              reduce using rule 71 (estatuto -> voidcall .)
    IF              reduce using rule 71 (estatuto -> voidcall .)
    OUTPUT          reduce using rule 71 (estatuto -> voidcall .)
    INPUT           reduce using rule 71 (estatuto -> voidcall .)
    RETURN          reduce using rule 71 (estatuto -> voidcall .)
    WHILE           reduce using rule 71 (estatuto -> voidcall .)


state 75

    (72) estatuto -> while .

    CLOSECURLY      reduce using rule 72 (estatuto -> while .)
    VAR             reduce using rule 72 (estatuto -> while .)
    ID              reduce using rule 72 (estatuto -> while .)
    IF              reduce using rule 72 (estatuto -> while .)
    OUTPUT          reduce using rule 72 (estatuto -> while .)
    INPUT           reduce using rule 72 (estatuto -> while .)
    RETURN          reduce using rule 72 (estatuto -> while .)
    WHILE           reduce using rule 72 (estatuto -> while .)


state 76

    (130) assign -> ID . save_comp EQUALS save_op expresion SEMICOLON
    (73) voidcall -> ID . OPENPAREN CLOSEPAREN
    (74) voidcall -> ID . OPENPAREN expresion altcall
    (95) save_comp -> .

    OPENPAREN       shift and go to state 97
    EQUALS          reduce using rule 95 (save_comp -> .)

    save_comp                      shift and go to state 96

state 77

    (126) condition -> IF . OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (127) condition -> IF . OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition

    OPENPAREN       shift and go to state 98


state 78

    (119) write -> OUTPUT . save_op OPENPAREN varcall altwrite
    (120) write -> OUTPUT . save_op OPENPAREN expresion altwrite
    (117) save_op -> .

    OPENPAREN       reduce using rule 117 (save_op -> .)

    save_op                        shift and go to state 99

state 79

    (118) read -> INPUT . save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (117) save_op -> .

    OPENPAREN       reduce using rule 117 (save_op -> .)

    save_op                        shift and go to state 100

state 80

    (131) return -> RETURN . save_op expresion SEMICOLON
    (117) save_op -> .

    OPENPAREN       reduce using rule 117 (save_op -> .)
    TRUE            reduce using rule 117 (save_op -> .)
    FALSE           reduce using rule 117 (save_op -> .)
    CTEFLOAT        reduce using rule 117 (save_op -> .)
    CTESTRING       reduce using rule 117 (save_op -> .)
    CTEINT          reduce using rule 117 (save_op -> .)
    ID              reduce using rule 117 (save_op -> .)

    save_op                        shift and go to state 101

state 81

    (77) while -> WHILE . OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    OPENPAREN       shift and go to state 102


state 82

    (16) alt2class -> var alt2class .

    CLASS           reduce using rule 16 (alt2class -> var alt2class .)
    VAR             reduce using rule 16 (alt2class -> var alt2class .)
    FUNC            reduce using rule 16 (alt2class -> var alt2class .)
    MAIN            reduce using rule 16 (alt2class -> var alt2class .)


state 83

    (17) alt2class -> function alt2class .

    CLASS           reduce using rule 17 (alt2class -> function alt2class .)
    VAR             reduce using rule 17 (alt2class -> function alt2class .)
    FUNC            reduce using rule 17 (alt2class -> function alt2class .)
    MAIN            reduce using rule 17 (alt2class -> function alt2class .)


state 84

    (18) alt2class -> constructor CLOSECURLY . SEMICOLON remove_class_scope

    SEMICOLON       shift and go to state 103


state 85

    (21) constructor -> CONSTRUCTOR save_constructor . OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const

    OPENPAREN       shift and go to state 104


state 86

    (36) listidsaltz -> OPENBRACKET . CTEINT CLOSEBRACKET listidsaltp

    CTEINT          shift and go to state 105


state 87

    (33) listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltz .

    TWODOTS         reduce using rule 33 (listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltz .)


state 88

    (35) listidsaltz -> COMMA . listids
    (31) listids -> . ID save_var_name listidsalty

    ID              shift and go to state 20

    listids                        shift and go to state 106

state 89

    (37) listidsaltz -> empty .

    TWODOTS         reduce using rule 37 (listidsaltz -> empty .)


state 90

    (52) params -> ID TWODOTS type save_params . altparams
    (53) altparams -> . COMMA ID TWODOTS type save_params altparams
    (54) altparams -> . empty
    (132) empty -> .

    COMMA           shift and go to state 108
    CLOSEPAREN      reduce using rule 132 (empty -> .)

    altparams                      shift and go to state 107
    empty                          shift and go to state 109

state 91

    (41) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function . store_params OPENCURLY alt3func
    (50) store_params -> .

    OPENCURLY       reduce using rule 50 (store_params -> .)

    store_params                   shift and go to state 110

state 92

    (44) alt2func -> TWODOTS type .

    OPENCURLY       reduce using rule 44 (alt2func -> TWODOTS type .)


state 93

    (8) altmain -> var altmain .

    $end            reduce using rule 8 (altmain -> var altmain .)


state 94

    (9) altmain -> estatuto altmain .

    $end            reduce using rule 9 (altmain -> estatuto altmain .)


state 95

    (10) altmain -> CLOSECURLY clear_scope .

    $end            reduce using rule 10 (altmain -> CLOSECURLY clear_scope .)


state 96

    (130) assign -> ID save_comp . EQUALS save_op expresion SEMICOLON

    EQUALS          shift and go to state 111


state 97

    (73) voidcall -> ID OPENPAREN . CLOSEPAREN
    (74) voidcall -> ID OPENPAREN . expresion altcall
    (96) expresion -> . exp altexpresion
    (107) exp -> . termino
    (108) exp -> . termino altexp
    (112) termino -> . factor
    (113) termino -> . factor alttermino
    (124) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (125) factor -> . varcall
    (80) varcall -> . varcte save_const
    (81) varcall -> . varcomplicated save_comp
    (82) varcte -> . TRUE
    (83) varcte -> . FALSE
    (84) varcte -> . CTEFLOAT
    (85) varcte -> . CTESTRING
    (86) varcte -> . CTEINT
    (87) varcomplicated -> . varcomp1
    (88) varcomplicated -> . callfunc
    (89) varcomp1 -> . ID varcomp2
    (56) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    CLOSEPAREN      shift and go to state 114
    OPENPAREN       shift and go to state 113
    TRUE            shift and go to state 122
    FALSE           shift and go to state 123
    CTEFLOAT        shift and go to state 124
    CTESTRING       shift and go to state 125
    CTEINT          shift and go to state 126
    ID              shift and go to state 112

    expresion                      shift and go to state 115
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcall                        shift and go to state 119
    varcte                         shift and go to state 120
    varcomplicated                 shift and go to state 121
    varcomp1                       shift and go to state 127
    callfunc                       shift and go to state 128

state 98

    (126) condition -> IF OPENPAREN . expresion CLOSEPAREN OPENCURLY altcondition
    (127) condition -> IF OPENPAREN . expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (96) expresion -> . exp altexpresion
    (107) exp -> . termino
    (108) exp -> . termino altexp
    (112) termino -> . factor
    (113) termino -> . factor alttermino
    (124) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (125) factor -> . varcall
    (80) varcall -> . varcte save_const
    (81) varcall -> . varcomplicated save_comp
    (82) varcte -> . TRUE
    (83) varcte -> . FALSE
    (84) varcte -> . CTEFLOAT
    (85) varcte -> . CTESTRING
    (86) varcte -> . CTEINT
    (87) varcomplicated -> . varcomp1
    (88) varcomplicated -> . callfunc
    (89) varcomp1 -> . ID varcomp2
    (56) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 113
    TRUE            shift and go to state 122
    FALSE           shift and go to state 123
    CTEFLOAT        shift and go to state 124
    CTESTRING       shift and go to state 125
    CTEINT          shift and go to state 126
    ID              shift and go to state 112

    expresion                      shift and go to state 129
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcall                        shift and go to state 119
    varcte                         shift and go to state 120
    varcomplicated                 shift and go to state 121
    varcomp1                       shift and go to state 127
    callfunc                       shift and go to state 128

state 99

    (119) write -> OUTPUT save_op . OPENPAREN varcall altwrite
    (120) write -> OUTPUT save_op . OPENPAREN expresion altwrite

    OPENPAREN       shift and go to state 130


state 100

    (118) read -> INPUT save_op . OPENPAREN ID save_comp CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 131


state 101

    (131) return -> RETURN save_op . expresion SEMICOLON
    (96) expresion -> . exp altexpresion
    (107) exp -> . termino
    (108) exp -> . termino altexp
    (112) termino -> . factor
    (113) termino -> . factor alttermino
    (124) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (125) factor -> . varcall
    (80) varcall -> . varcte save_const
    (81) varcall -> . varcomplicated save_comp
    (82) varcte -> . TRUE
    (83) varcte -> . FALSE
    (84) varcte -> . CTEFLOAT
    (85) varcte -> . CTESTRING
    (86) varcte -> . CTEINT
    (87) varcomplicated -> . varcomp1
    (88) varcomplicated -> . callfunc
    (89) varcomp1 -> . ID varcomp2
    (56) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 113
    TRUE            shift and go to state 122
    FALSE           shift and go to state 123
    CTEFLOAT        shift and go to state 124
    CTESTRING       shift and go to state 125
    CTEINT          shift and go to state 126
    ID              shift and go to state 112

    expresion                      shift and go to state 132
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcall                        shift and go to state 119
    varcte                         shift and go to state 120
    varcomplicated                 shift and go to state 121
    varcomp1                       shift and go to state 127
    callfunc                       shift and go to state 128

state 102

    (77) while -> WHILE OPENPAREN . expresion CLOSEPAREN OPENCURLY altwhile
    (96) expresion -> . exp altexpresion
    (107) exp -> . termino
    (108) exp -> . termino altexp
    (112) termino -> . factor
    (113) termino -> . factor alttermino
    (124) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (125) factor -> . varcall
    (80) varcall -> . varcte save_const
    (81) varcall -> . varcomplicated save_comp
    (82) varcte -> . TRUE
    (83) varcte -> . FALSE
    (84) varcte -> . CTEFLOAT
    (85) varcte -> . CTESTRING
    (86) varcte -> . CTEINT
    (87) varcomplicated -> . varcomp1
    (88) varcomplicated -> . callfunc
    (89) varcomp1 -> . ID varcomp2
    (56) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 113
    TRUE            shift and go to state 122
    FALSE           shift and go to state 123
    CTEFLOAT        shift and go to state 124
    CTESTRING       shift and go to state 125
    CTEINT          shift and go to state 126
    ID              shift and go to state 112

    expresion                      shift and go to state 133
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcall                        shift and go to state 119
    varcte                         shift and go to state 120
    varcomplicated                 shift and go to state 121
    varcomp1                       shift and go to state 127
    callfunc                       shift and go to state 128

state 103

    (18) alt2class -> constructor CLOSECURLY SEMICOLON . remove_class_scope
    (20) remove_class_scope -> .

    CLASS           reduce using rule 20 (remove_class_scope -> .)
    VAR             reduce using rule 20 (remove_class_scope -> .)
    FUNC            reduce using rule 20 (remove_class_scope -> .)
    MAIN            reduce using rule 20 (remove_class_scope -> .)

    remove_class_scope             shift and go to state 134

state 104

    (21) constructor -> CONSTRUCTOR save_constructor OPENPAREN . altconst store_params CLOSEPAREN OPENCURLY alt2const
    (22) altconst -> . params
    (23) altconst -> . empty
    (52) params -> . ID TWODOTS type save_params altparams
    (132) empty -> .

    ID              shift and go to state 42
    CLOSEPAREN      reduce using rule 132 (empty -> .)

    altconst                       shift and go to state 135
    params                         shift and go to state 136
    empty                          shift and go to state 137

state 105

    (36) listidsaltz -> OPENBRACKET CTEINT . CLOSEBRACKET listidsaltp

    CLOSEBRACKET    shift and go to state 138


state 106

    (35) listidsaltz -> COMMA listids .

    TWODOTS         reduce using rule 35 (listidsaltz -> COMMA listids .)


state 107

    (52) params -> ID TWODOTS type save_params altparams .

    CLOSEPAREN      reduce using rule 52 (params -> ID TWODOTS type save_params altparams .)


state 108

    (53) altparams -> COMMA . ID TWODOTS type save_params altparams

    ID              shift and go to state 139


state 109

    (54) altparams -> empty .

    CLOSEPAREN      reduce using rule 54 (altparams -> empty .)


state 110

    (41) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params . OPENCURLY alt3func

    OPENCURLY       shift and go to state 140


state 111

    (130) assign -> ID save_comp EQUALS . save_op expresion SEMICOLON
    (117) save_op -> .

    OPENPAREN       reduce using rule 117 (save_op -> .)
    TRUE            reduce using rule 117 (save_op -> .)
    FALSE           reduce using rule 117 (save_op -> .)
    CTEFLOAT        reduce using rule 117 (save_op -> .)
    CTESTRING       reduce using rule 117 (save_op -> .)
    CTEINT          reduce using rule 117 (save_op -> .)
    ID              reduce using rule 117 (save_op -> .)

    save_op                        shift and go to state 141

state 112

    (89) varcomp1 -> ID . varcomp2
    (56) callfunc -> ID . OPENPAREN altcall CLOSEPAREN
    (90) varcomp2 -> . DOT varcomp3
    (91) varcomp2 -> . empty
    (132) empty -> .

  ! shift/reduce conflict for OPENPAREN resolved as shift
    OPENPAREN       shift and go to state 143
    DOT             shift and go to state 144
    TIMES           reduce using rule 132 (empty -> .)
    DIV             reduce using rule 132 (empty -> .)
    SUM             reduce using rule 132 (empty -> .)
    SUBTRACT        reduce using rule 132 (empty -> .)
    SAMEAS          reduce using rule 132 (empty -> .)
    BIGGERTHAN      reduce using rule 132 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 132 (empty -> .)
    SMALLTHAN       reduce using rule 132 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 132 (empty -> .)
    DIFFERENTTHAN   reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    TRUE            reduce using rule 132 (empty -> .)
    FALSE           reduce using rule 132 (empty -> .)
    CTEFLOAT        reduce using rule 132 (empty -> .)
    CTESTRING       reduce using rule 132 (empty -> .)
    CTEINT          reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)

  ! OPENPAREN       [ reduce using rule 132 (empty -> .) ]

    varcomp2                       shift and go to state 142
    empty                          shift and go to state 145

state 113

    (124) factor -> OPENPAREN . save_op expresion CLOSEPAREN save_op
    (117) save_op -> .

    OPENPAREN       reduce using rule 117 (save_op -> .)
    TRUE            reduce using rule 117 (save_op -> .)
    FALSE           reduce using rule 117 (save_op -> .)
    CTEFLOAT        reduce using rule 117 (save_op -> .)
    CTESTRING       reduce using rule 117 (save_op -> .)
    CTEINT          reduce using rule 117 (save_op -> .)
    ID              reduce using rule 117 (save_op -> .)

    save_op                        shift and go to state 146

state 114

    (73) voidcall -> ID OPENPAREN CLOSEPAREN .

    CLOSECURLY      reduce using rule 73 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    VAR             reduce using rule 73 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    ID              reduce using rule 73 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    IF              reduce using rule 73 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    OUTPUT          reduce using rule 73 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    INPUT           reduce using rule 73 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    RETURN          reduce using rule 73 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    WHILE           reduce using rule 73 (voidcall -> ID OPENPAREN CLOSEPAREN .)


state 115

    (74) voidcall -> ID OPENPAREN expresion . altcall
    (57) altcall -> . expresion alt2call
    (58) altcall -> . empty
    (75) altcall -> . COMMA expresion altcall
    (76) altcall -> . CLOSEPAREN SEMICOLON
    (96) expresion -> . exp altexpresion
    (132) empty -> .
    (107) exp -> . termino
    (108) exp -> . termino altexp
    (112) termino -> . factor
    (113) termino -> . factor alttermino
    (124) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (125) factor -> . varcall
    (80) varcall -> . varcte save_const
    (81) varcall -> . varcomplicated save_comp
    (82) varcte -> . TRUE
    (83) varcte -> . FALSE
    (84) varcte -> . CTEFLOAT
    (85) varcte -> . CTESTRING
    (86) varcte -> . CTEINT
    (87) varcomplicated -> . varcomp1
    (88) varcomplicated -> . callfunc
    (89) varcomp1 -> . ID varcomp2
    (56) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 150
    CLOSEPAREN      shift and go to state 151
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)
    OPENPAREN       shift and go to state 113
    TRUE            shift and go to state 122
    FALSE           shift and go to state 123
    CTEFLOAT        shift and go to state 124
    CTESTRING       shift and go to state 125
    CTEINT          shift and go to state 126
    ID              shift and go to state 112

  ! ID              [ reduce using rule 132 (empty -> .) ]

    expresion                      shift and go to state 147
    altcall                        shift and go to state 148
    empty                          shift and go to state 149
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcall                        shift and go to state 119
    varcte                         shift and go to state 120
    varcomplicated                 shift and go to state 121
    varcomp1                       shift and go to state 127
    callfunc                       shift and go to state 128

state 116

    (96) expresion -> exp . altexpresion
    (97) altexpresion -> . altexpresion2 save_op exp
    (98) altexpresion -> . empty
    (99) altexpresion2 -> . SAMEAS
    (100) altexpresion2 -> . BIGGERTHAN
    (101) altexpresion2 -> . BIGGEREQUALSTHAN
    (102) altexpresion2 -> . SMALLTHAN
    (103) altexpresion2 -> . SMALLEQUALSTHAN
    (104) altexpresion2 -> . DIFFERENTTHAN
    (105) altexpresion2 -> . AND
    (106) altexpresion2 -> . OR
    (132) empty -> .

    SAMEAS          shift and go to state 155
    BIGGERTHAN      shift and go to state 156
    BIGGEREQUALSTHAN shift and go to state 157
    SMALLTHAN       shift and go to state 158
    SMALLEQUALSTHAN shift and go to state 159
    DIFFERENTTHAN   shift and go to state 160
    AND             shift and go to state 161
    OR              shift and go to state 162
    COMMA           reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    OPENPAREN       reduce using rule 132 (empty -> .)
    TRUE            reduce using rule 132 (empty -> .)
    FALSE           reduce using rule 132 (empty -> .)
    CTEFLOAT        reduce using rule 132 (empty -> .)
    CTESTRING       reduce using rule 132 (empty -> .)
    CTEINT          reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)

    altexpresion                   shift and go to state 152
    altexpresion2                  shift and go to state 153
    empty                          shift and go to state 154

state 117

    (107) exp -> termino .
    (108) exp -> termino . altexp
    (109) altexp -> . SUM save_op termino altexp
    (110) altexp -> . SUBTRACT save_op termino altexp
    (111) altexp -> . empty
    (132) empty -> .

  ! reduce/reduce conflict for SAMEAS resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for BIGGERTHAN resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for BIGGEREQUALSTHAN resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for SMALLTHAN resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for SMALLEQUALSTHAN resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for DIFFERENTTHAN resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for AND resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for OR resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for COMMA resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for CLOSEPAREN resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for OPENPAREN resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for TRUE resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for FALSE resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for CTESTRING resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for CTEINT resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for ID resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for CLOSECURLY resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for VAR resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for IF resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for INPUT resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for RETURN resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for WHILE resolved using rule 107 (exp -> termino .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 107 (exp -> termino .)
    SAMEAS          reduce using rule 107 (exp -> termino .)
    BIGGERTHAN      reduce using rule 107 (exp -> termino .)
    BIGGEREQUALSTHAN reduce using rule 107 (exp -> termino .)
    SMALLTHAN       reduce using rule 107 (exp -> termino .)
    SMALLEQUALSTHAN reduce using rule 107 (exp -> termino .)
    DIFFERENTTHAN   reduce using rule 107 (exp -> termino .)
    AND             reduce using rule 107 (exp -> termino .)
    OR              reduce using rule 107 (exp -> termino .)
    COMMA           reduce using rule 107 (exp -> termino .)
    CLOSEPAREN      reduce using rule 107 (exp -> termino .)
    OPENPAREN       reduce using rule 107 (exp -> termino .)
    TRUE            reduce using rule 107 (exp -> termino .)
    FALSE           reduce using rule 107 (exp -> termino .)
    CTEFLOAT        reduce using rule 107 (exp -> termino .)
    CTESTRING       reduce using rule 107 (exp -> termino .)
    CTEINT          reduce using rule 107 (exp -> termino .)
    ID              reduce using rule 107 (exp -> termino .)
    CLOSECURLY      reduce using rule 107 (exp -> termino .)
    VAR             reduce using rule 107 (exp -> termino .)
    IF              reduce using rule 107 (exp -> termino .)
    OUTPUT          reduce using rule 107 (exp -> termino .)
    INPUT           reduce using rule 107 (exp -> termino .)
    RETURN          reduce using rule 107 (exp -> termino .)
    WHILE           reduce using rule 107 (exp -> termino .)
    SEMICOLON       reduce using rule 107 (exp -> termino .)
    SUM             shift and go to state 164
    SUBTRACT        shift and go to state 165

  ! SAMEAS          [ reduce using rule 132 (empty -> .) ]
  ! BIGGERTHAN      [ reduce using rule 132 (empty -> .) ]
  ! BIGGEREQUALSTHAN [ reduce using rule 132 (empty -> .) ]
  ! SMALLTHAN       [ reduce using rule 132 (empty -> .) ]
  ! SMALLEQUALSTHAN [ reduce using rule 132 (empty -> .) ]
  ! DIFFERENTTHAN   [ reduce using rule 132 (empty -> .) ]
  ! AND             [ reduce using rule 132 (empty -> .) ]
  ! OR              [ reduce using rule 132 (empty -> .) ]
  ! COMMA           [ reduce using rule 132 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 132 (empty -> .) ]
  ! OPENPAREN       [ reduce using rule 132 (empty -> .) ]
  ! TRUE            [ reduce using rule 132 (empty -> .) ]
  ! FALSE           [ reduce using rule 132 (empty -> .) ]
  ! CTEFLOAT        [ reduce using rule 132 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 132 (empty -> .) ]
  ! CTEINT          [ reduce using rule 132 (empty -> .) ]
  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! CLOSECURLY      [ reduce using rule 132 (empty -> .) ]
  ! VAR             [ reduce using rule 132 (empty -> .) ]
  ! IF              [ reduce using rule 132 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 132 (empty -> .) ]
  ! INPUT           [ reduce using rule 132 (empty -> .) ]
  ! RETURN          [ reduce using rule 132 (empty -> .) ]
  ! WHILE           [ reduce using rule 132 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 132 (empty -> .) ]

    altexp                         shift and go to state 163
    empty                          shift and go to state 166

state 118

    (112) termino -> factor .
    (113) termino -> factor . alttermino
    (114) alttermino -> . TIMES save_op factor alttermino
    (115) alttermino -> . DIV save_op factor alttermino
    (116) alttermino -> . empty
    (132) empty -> .

  ! reduce/reduce conflict for SUM resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for SUBTRACT resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for SAMEAS resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for BIGGERTHAN resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for BIGGEREQUALSTHAN resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for SMALLTHAN resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for SMALLEQUALSTHAN resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for DIFFERENTTHAN resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for AND resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for OR resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for COMMA resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for CLOSEPAREN resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for OPENPAREN resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for TRUE resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for FALSE resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for CTESTRING resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for CTEINT resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for ID resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for CLOSECURLY resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for VAR resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for IF resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for INPUT resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for RETURN resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for WHILE resolved using rule 112 (termino -> factor .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 112 (termino -> factor .)
    SUM             reduce using rule 112 (termino -> factor .)
    SUBTRACT        reduce using rule 112 (termino -> factor .)
    SAMEAS          reduce using rule 112 (termino -> factor .)
    BIGGERTHAN      reduce using rule 112 (termino -> factor .)
    BIGGEREQUALSTHAN reduce using rule 112 (termino -> factor .)
    SMALLTHAN       reduce using rule 112 (termino -> factor .)
    SMALLEQUALSTHAN reduce using rule 112 (termino -> factor .)
    DIFFERENTTHAN   reduce using rule 112 (termino -> factor .)
    AND             reduce using rule 112 (termino -> factor .)
    OR              reduce using rule 112 (termino -> factor .)
    COMMA           reduce using rule 112 (termino -> factor .)
    CLOSEPAREN      reduce using rule 112 (termino -> factor .)
    OPENPAREN       reduce using rule 112 (termino -> factor .)
    TRUE            reduce using rule 112 (termino -> factor .)
    FALSE           reduce using rule 112 (termino -> factor .)
    CTEFLOAT        reduce using rule 112 (termino -> factor .)
    CTESTRING       reduce using rule 112 (termino -> factor .)
    CTEINT          reduce using rule 112 (termino -> factor .)
    ID              reduce using rule 112 (termino -> factor .)
    CLOSECURLY      reduce using rule 112 (termino -> factor .)
    VAR             reduce using rule 112 (termino -> factor .)
    IF              reduce using rule 112 (termino -> factor .)
    OUTPUT          reduce using rule 112 (termino -> factor .)
    INPUT           reduce using rule 112 (termino -> factor .)
    RETURN          reduce using rule 112 (termino -> factor .)
    WHILE           reduce using rule 112 (termino -> factor .)
    SEMICOLON       reduce using rule 112 (termino -> factor .)
    TIMES           shift and go to state 168
    DIV             shift and go to state 169

  ! SUM             [ reduce using rule 132 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 132 (empty -> .) ]
  ! SAMEAS          [ reduce using rule 132 (empty -> .) ]
  ! BIGGERTHAN      [ reduce using rule 132 (empty -> .) ]
  ! BIGGEREQUALSTHAN [ reduce using rule 132 (empty -> .) ]
  ! SMALLTHAN       [ reduce using rule 132 (empty -> .) ]
  ! SMALLEQUALSTHAN [ reduce using rule 132 (empty -> .) ]
  ! DIFFERENTTHAN   [ reduce using rule 132 (empty -> .) ]
  ! AND             [ reduce using rule 132 (empty -> .) ]
  ! OR              [ reduce using rule 132 (empty -> .) ]
  ! COMMA           [ reduce using rule 132 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 132 (empty -> .) ]
  ! OPENPAREN       [ reduce using rule 132 (empty -> .) ]
  ! TRUE            [ reduce using rule 132 (empty -> .) ]
  ! FALSE           [ reduce using rule 132 (empty -> .) ]
  ! CTEFLOAT        [ reduce using rule 132 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 132 (empty -> .) ]
  ! CTEINT          [ reduce using rule 132 (empty -> .) ]
  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! CLOSECURLY      [ reduce using rule 132 (empty -> .) ]
  ! VAR             [ reduce using rule 132 (empty -> .) ]
  ! IF              [ reduce using rule 132 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 132 (empty -> .) ]
  ! INPUT           [ reduce using rule 132 (empty -> .) ]
  ! RETURN          [ reduce using rule 132 (empty -> .) ]
  ! WHILE           [ reduce using rule 132 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 132 (empty -> .) ]

    alttermino                     shift and go to state 167
    empty                          shift and go to state 170

state 119

    (125) factor -> varcall .

    TIMES           reduce using rule 125 (factor -> varcall .)
    DIV             reduce using rule 125 (factor -> varcall .)
    SUM             reduce using rule 125 (factor -> varcall .)
    SUBTRACT        reduce using rule 125 (factor -> varcall .)
    SAMEAS          reduce using rule 125 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 125 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 125 (factor -> varcall .)
    SMALLTHAN       reduce using rule 125 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 125 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 125 (factor -> varcall .)
    AND             reduce using rule 125 (factor -> varcall .)
    OR              reduce using rule 125 (factor -> varcall .)
    COMMA           reduce using rule 125 (factor -> varcall .)
    CLOSEPAREN      reduce using rule 125 (factor -> varcall .)
    OPENPAREN       reduce using rule 125 (factor -> varcall .)
    TRUE            reduce using rule 125 (factor -> varcall .)
    FALSE           reduce using rule 125 (factor -> varcall .)
    CTEFLOAT        reduce using rule 125 (factor -> varcall .)
    CTESTRING       reduce using rule 125 (factor -> varcall .)
    CTEINT          reduce using rule 125 (factor -> varcall .)
    ID              reduce using rule 125 (factor -> varcall .)
    CLOSECURLY      reduce using rule 125 (factor -> varcall .)
    VAR             reduce using rule 125 (factor -> varcall .)
    IF              reduce using rule 125 (factor -> varcall .)
    OUTPUT          reduce using rule 125 (factor -> varcall .)
    INPUT           reduce using rule 125 (factor -> varcall .)
    RETURN          reduce using rule 125 (factor -> varcall .)
    WHILE           reduce using rule 125 (factor -> varcall .)
    SEMICOLON       reduce using rule 125 (factor -> varcall .)


state 120

    (80) varcall -> varcte . save_const
    (94) save_const -> .

    TIMES           reduce using rule 94 (save_const -> .)
    DIV             reduce using rule 94 (save_const -> .)
    SUM             reduce using rule 94 (save_const -> .)
    SUBTRACT        reduce using rule 94 (save_const -> .)
    SAMEAS          reduce using rule 94 (save_const -> .)
    BIGGERTHAN      reduce using rule 94 (save_const -> .)
    BIGGEREQUALSTHAN reduce using rule 94 (save_const -> .)
    SMALLTHAN       reduce using rule 94 (save_const -> .)
    SMALLEQUALSTHAN reduce using rule 94 (save_const -> .)
    DIFFERENTTHAN   reduce using rule 94 (save_const -> .)
    AND             reduce using rule 94 (save_const -> .)
    OR              reduce using rule 94 (save_const -> .)
    COMMA           reduce using rule 94 (save_const -> .)
    CLOSEPAREN      reduce using rule 94 (save_const -> .)
    OPENPAREN       reduce using rule 94 (save_const -> .)
    TRUE            reduce using rule 94 (save_const -> .)
    FALSE           reduce using rule 94 (save_const -> .)
    CTEFLOAT        reduce using rule 94 (save_const -> .)
    CTESTRING       reduce using rule 94 (save_const -> .)
    CTEINT          reduce using rule 94 (save_const -> .)
    ID              reduce using rule 94 (save_const -> .)
    CLOSECURLY      reduce using rule 94 (save_const -> .)
    VAR             reduce using rule 94 (save_const -> .)
    IF              reduce using rule 94 (save_const -> .)
    OUTPUT          reduce using rule 94 (save_const -> .)
    INPUT           reduce using rule 94 (save_const -> .)
    RETURN          reduce using rule 94 (save_const -> .)
    WHILE           reduce using rule 94 (save_const -> .)
    SEMICOLON       reduce using rule 94 (save_const -> .)

    save_const                     shift and go to state 171

state 121

    (81) varcall -> varcomplicated . save_comp
    (95) save_comp -> .

    TIMES           reduce using rule 95 (save_comp -> .)
    DIV             reduce using rule 95 (save_comp -> .)
    SUM             reduce using rule 95 (save_comp -> .)
    SUBTRACT        reduce using rule 95 (save_comp -> .)
    SAMEAS          reduce using rule 95 (save_comp -> .)
    BIGGERTHAN      reduce using rule 95 (save_comp -> .)
    BIGGEREQUALSTHAN reduce using rule 95 (save_comp -> .)
    SMALLTHAN       reduce using rule 95 (save_comp -> .)
    SMALLEQUALSTHAN reduce using rule 95 (save_comp -> .)
    DIFFERENTTHAN   reduce using rule 95 (save_comp -> .)
    AND             reduce using rule 95 (save_comp -> .)
    OR              reduce using rule 95 (save_comp -> .)
    COMMA           reduce using rule 95 (save_comp -> .)
    CLOSEPAREN      reduce using rule 95 (save_comp -> .)
    OPENPAREN       reduce using rule 95 (save_comp -> .)
    TRUE            reduce using rule 95 (save_comp -> .)
    FALSE           reduce using rule 95 (save_comp -> .)
    CTEFLOAT        reduce using rule 95 (save_comp -> .)
    CTESTRING       reduce using rule 95 (save_comp -> .)
    CTEINT          reduce using rule 95 (save_comp -> .)
    ID              reduce using rule 95 (save_comp -> .)
    CLOSECURLY      reduce using rule 95 (save_comp -> .)
    VAR             reduce using rule 95 (save_comp -> .)
    IF              reduce using rule 95 (save_comp -> .)
    OUTPUT          reduce using rule 95 (save_comp -> .)
    INPUT           reduce using rule 95 (save_comp -> .)
    RETURN          reduce using rule 95 (save_comp -> .)
    WHILE           reduce using rule 95 (save_comp -> .)
    SEMICOLON       reduce using rule 95 (save_comp -> .)

    save_comp                      shift and go to state 172

state 122

    (82) varcte -> TRUE .

    TIMES           reduce using rule 82 (varcte -> TRUE .)
    DIV             reduce using rule 82 (varcte -> TRUE .)
    SUM             reduce using rule 82 (varcte -> TRUE .)
    SUBTRACT        reduce using rule 82 (varcte -> TRUE .)
    SAMEAS          reduce using rule 82 (varcte -> TRUE .)
    BIGGERTHAN      reduce using rule 82 (varcte -> TRUE .)
    BIGGEREQUALSTHAN reduce using rule 82 (varcte -> TRUE .)
    SMALLTHAN       reduce using rule 82 (varcte -> TRUE .)
    SMALLEQUALSTHAN reduce using rule 82 (varcte -> TRUE .)
    DIFFERENTTHAN   reduce using rule 82 (varcte -> TRUE .)
    AND             reduce using rule 82 (varcte -> TRUE .)
    OR              reduce using rule 82 (varcte -> TRUE .)
    COMMA           reduce using rule 82 (varcte -> TRUE .)
    CLOSEPAREN      reduce using rule 82 (varcte -> TRUE .)
    OPENPAREN       reduce using rule 82 (varcte -> TRUE .)
    TRUE            reduce using rule 82 (varcte -> TRUE .)
    FALSE           reduce using rule 82 (varcte -> TRUE .)
    CTEFLOAT        reduce using rule 82 (varcte -> TRUE .)
    CTESTRING       reduce using rule 82 (varcte -> TRUE .)
    CTEINT          reduce using rule 82 (varcte -> TRUE .)
    ID              reduce using rule 82 (varcte -> TRUE .)
    CLOSECURLY      reduce using rule 82 (varcte -> TRUE .)
    VAR             reduce using rule 82 (varcte -> TRUE .)
    IF              reduce using rule 82 (varcte -> TRUE .)
    OUTPUT          reduce using rule 82 (varcte -> TRUE .)
    INPUT           reduce using rule 82 (varcte -> TRUE .)
    RETURN          reduce using rule 82 (varcte -> TRUE .)
    WHILE           reduce using rule 82 (varcte -> TRUE .)
    SEMICOLON       reduce using rule 82 (varcte -> TRUE .)


state 123

    (83) varcte -> FALSE .

    TIMES           reduce using rule 83 (varcte -> FALSE .)
    DIV             reduce using rule 83 (varcte -> FALSE .)
    SUM             reduce using rule 83 (varcte -> FALSE .)
    SUBTRACT        reduce using rule 83 (varcte -> FALSE .)
    SAMEAS          reduce using rule 83 (varcte -> FALSE .)
    BIGGERTHAN      reduce using rule 83 (varcte -> FALSE .)
    BIGGEREQUALSTHAN reduce using rule 83 (varcte -> FALSE .)
    SMALLTHAN       reduce using rule 83 (varcte -> FALSE .)
    SMALLEQUALSTHAN reduce using rule 83 (varcte -> FALSE .)
    DIFFERENTTHAN   reduce using rule 83 (varcte -> FALSE .)
    AND             reduce using rule 83 (varcte -> FALSE .)
    OR              reduce using rule 83 (varcte -> FALSE .)
    COMMA           reduce using rule 83 (varcte -> FALSE .)
    CLOSEPAREN      reduce using rule 83 (varcte -> FALSE .)
    OPENPAREN       reduce using rule 83 (varcte -> FALSE .)
    TRUE            reduce using rule 83 (varcte -> FALSE .)
    FALSE           reduce using rule 83 (varcte -> FALSE .)
    CTEFLOAT        reduce using rule 83 (varcte -> FALSE .)
    CTESTRING       reduce using rule 83 (varcte -> FALSE .)
    CTEINT          reduce using rule 83 (varcte -> FALSE .)
    ID              reduce using rule 83 (varcte -> FALSE .)
    CLOSECURLY      reduce using rule 83 (varcte -> FALSE .)
    VAR             reduce using rule 83 (varcte -> FALSE .)
    IF              reduce using rule 83 (varcte -> FALSE .)
    OUTPUT          reduce using rule 83 (varcte -> FALSE .)
    INPUT           reduce using rule 83 (varcte -> FALSE .)
    RETURN          reduce using rule 83 (varcte -> FALSE .)
    WHILE           reduce using rule 83 (varcte -> FALSE .)
    SEMICOLON       reduce using rule 83 (varcte -> FALSE .)


state 124

    (84) varcte -> CTEFLOAT .

    TIMES           reduce using rule 84 (varcte -> CTEFLOAT .)
    DIV             reduce using rule 84 (varcte -> CTEFLOAT .)
    SUM             reduce using rule 84 (varcte -> CTEFLOAT .)
    SUBTRACT        reduce using rule 84 (varcte -> CTEFLOAT .)
    SAMEAS          reduce using rule 84 (varcte -> CTEFLOAT .)
    BIGGERTHAN      reduce using rule 84 (varcte -> CTEFLOAT .)
    BIGGEREQUALSTHAN reduce using rule 84 (varcte -> CTEFLOAT .)
    SMALLTHAN       reduce using rule 84 (varcte -> CTEFLOAT .)
    SMALLEQUALSTHAN reduce using rule 84 (varcte -> CTEFLOAT .)
    DIFFERENTTHAN   reduce using rule 84 (varcte -> CTEFLOAT .)
    AND             reduce using rule 84 (varcte -> CTEFLOAT .)
    OR              reduce using rule 84 (varcte -> CTEFLOAT .)
    COMMA           reduce using rule 84 (varcte -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 84 (varcte -> CTEFLOAT .)
    OPENPAREN       reduce using rule 84 (varcte -> CTEFLOAT .)
    TRUE            reduce using rule 84 (varcte -> CTEFLOAT .)
    FALSE           reduce using rule 84 (varcte -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 84 (varcte -> CTEFLOAT .)
    CTESTRING       reduce using rule 84 (varcte -> CTEFLOAT .)
    CTEINT          reduce using rule 84 (varcte -> CTEFLOAT .)
    ID              reduce using rule 84 (varcte -> CTEFLOAT .)
    CLOSECURLY      reduce using rule 84 (varcte -> CTEFLOAT .)
    VAR             reduce using rule 84 (varcte -> CTEFLOAT .)
    IF              reduce using rule 84 (varcte -> CTEFLOAT .)
    OUTPUT          reduce using rule 84 (varcte -> CTEFLOAT .)
    INPUT           reduce using rule 84 (varcte -> CTEFLOAT .)
    RETURN          reduce using rule 84 (varcte -> CTEFLOAT .)
    WHILE           reduce using rule 84 (varcte -> CTEFLOAT .)
    SEMICOLON       reduce using rule 84 (varcte -> CTEFLOAT .)


state 125

    (85) varcte -> CTESTRING .

    TIMES           reduce using rule 85 (varcte -> CTESTRING .)
    DIV             reduce using rule 85 (varcte -> CTESTRING .)
    SUM             reduce using rule 85 (varcte -> CTESTRING .)
    SUBTRACT        reduce using rule 85 (varcte -> CTESTRING .)
    SAMEAS          reduce using rule 85 (varcte -> CTESTRING .)
    BIGGERTHAN      reduce using rule 85 (varcte -> CTESTRING .)
    BIGGEREQUALSTHAN reduce using rule 85 (varcte -> CTESTRING .)
    SMALLTHAN       reduce using rule 85 (varcte -> CTESTRING .)
    SMALLEQUALSTHAN reduce using rule 85 (varcte -> CTESTRING .)
    DIFFERENTTHAN   reduce using rule 85 (varcte -> CTESTRING .)
    AND             reduce using rule 85 (varcte -> CTESTRING .)
    OR              reduce using rule 85 (varcte -> CTESTRING .)
    COMMA           reduce using rule 85 (varcte -> CTESTRING .)
    CLOSEPAREN      reduce using rule 85 (varcte -> CTESTRING .)
    OPENPAREN       reduce using rule 85 (varcte -> CTESTRING .)
    TRUE            reduce using rule 85 (varcte -> CTESTRING .)
    FALSE           reduce using rule 85 (varcte -> CTESTRING .)
    CTEFLOAT        reduce using rule 85 (varcte -> CTESTRING .)
    CTESTRING       reduce using rule 85 (varcte -> CTESTRING .)
    CTEINT          reduce using rule 85 (varcte -> CTESTRING .)
    ID              reduce using rule 85 (varcte -> CTESTRING .)
    CLOSECURLY      reduce using rule 85 (varcte -> CTESTRING .)
    VAR             reduce using rule 85 (varcte -> CTESTRING .)
    IF              reduce using rule 85 (varcte -> CTESTRING .)
    OUTPUT          reduce using rule 85 (varcte -> CTESTRING .)
    INPUT           reduce using rule 85 (varcte -> CTESTRING .)
    RETURN          reduce using rule 85 (varcte -> CTESTRING .)
    WHILE           reduce using rule 85 (varcte -> CTESTRING .)
    SEMICOLON       reduce using rule 85 (varcte -> CTESTRING .)


state 126

    (86) varcte -> CTEINT .

    TIMES           reduce using rule 86 (varcte -> CTEINT .)
    DIV             reduce using rule 86 (varcte -> CTEINT .)
    SUM             reduce using rule 86 (varcte -> CTEINT .)
    SUBTRACT        reduce using rule 86 (varcte -> CTEINT .)
    SAMEAS          reduce using rule 86 (varcte -> CTEINT .)
    BIGGERTHAN      reduce using rule 86 (varcte -> CTEINT .)
    BIGGEREQUALSTHAN reduce using rule 86 (varcte -> CTEINT .)
    SMALLTHAN       reduce using rule 86 (varcte -> CTEINT .)
    SMALLEQUALSTHAN reduce using rule 86 (varcte -> CTEINT .)
    DIFFERENTTHAN   reduce using rule 86 (varcte -> CTEINT .)
    AND             reduce using rule 86 (varcte -> CTEINT .)
    OR              reduce using rule 86 (varcte -> CTEINT .)
    COMMA           reduce using rule 86 (varcte -> CTEINT .)
    CLOSEPAREN      reduce using rule 86 (varcte -> CTEINT .)
    OPENPAREN       reduce using rule 86 (varcte -> CTEINT .)
    TRUE            reduce using rule 86 (varcte -> CTEINT .)
    FALSE           reduce using rule 86 (varcte -> CTEINT .)
    CTEFLOAT        reduce using rule 86 (varcte -> CTEINT .)
    CTESTRING       reduce using rule 86 (varcte -> CTEINT .)
    CTEINT          reduce using rule 86 (varcte -> CTEINT .)
    ID              reduce using rule 86 (varcte -> CTEINT .)
    CLOSECURLY      reduce using rule 86 (varcte -> CTEINT .)
    VAR             reduce using rule 86 (varcte -> CTEINT .)
    IF              reduce using rule 86 (varcte -> CTEINT .)
    OUTPUT          reduce using rule 86 (varcte -> CTEINT .)
    INPUT           reduce using rule 86 (varcte -> CTEINT .)
    RETURN          reduce using rule 86 (varcte -> CTEINT .)
    WHILE           reduce using rule 86 (varcte -> CTEINT .)
    SEMICOLON       reduce using rule 86 (varcte -> CTEINT .)


state 127

    (87) varcomplicated -> varcomp1 .

    TIMES           reduce using rule 87 (varcomplicated -> varcomp1 .)
    DIV             reduce using rule 87 (varcomplicated -> varcomp1 .)
    SUM             reduce using rule 87 (varcomplicated -> varcomp1 .)
    SUBTRACT        reduce using rule 87 (varcomplicated -> varcomp1 .)
    SAMEAS          reduce using rule 87 (varcomplicated -> varcomp1 .)
    BIGGERTHAN      reduce using rule 87 (varcomplicated -> varcomp1 .)
    BIGGEREQUALSTHAN reduce using rule 87 (varcomplicated -> varcomp1 .)
    SMALLTHAN       reduce using rule 87 (varcomplicated -> varcomp1 .)
    SMALLEQUALSTHAN reduce using rule 87 (varcomplicated -> varcomp1 .)
    DIFFERENTTHAN   reduce using rule 87 (varcomplicated -> varcomp1 .)
    AND             reduce using rule 87 (varcomplicated -> varcomp1 .)
    OR              reduce using rule 87 (varcomplicated -> varcomp1 .)
    COMMA           reduce using rule 87 (varcomplicated -> varcomp1 .)
    CLOSEPAREN      reduce using rule 87 (varcomplicated -> varcomp1 .)
    OPENPAREN       reduce using rule 87 (varcomplicated -> varcomp1 .)
    TRUE            reduce using rule 87 (varcomplicated -> varcomp1 .)
    FALSE           reduce using rule 87 (varcomplicated -> varcomp1 .)
    CTEFLOAT        reduce using rule 87 (varcomplicated -> varcomp1 .)
    CTESTRING       reduce using rule 87 (varcomplicated -> varcomp1 .)
    CTEINT          reduce using rule 87 (varcomplicated -> varcomp1 .)
    ID              reduce using rule 87 (varcomplicated -> varcomp1 .)
    CLOSECURLY      reduce using rule 87 (varcomplicated -> varcomp1 .)
    VAR             reduce using rule 87 (varcomplicated -> varcomp1 .)
    IF              reduce using rule 87 (varcomplicated -> varcomp1 .)
    OUTPUT          reduce using rule 87 (varcomplicated -> varcomp1 .)
    INPUT           reduce using rule 87 (varcomplicated -> varcomp1 .)
    RETURN          reduce using rule 87 (varcomplicated -> varcomp1 .)
    WHILE           reduce using rule 87 (varcomplicated -> varcomp1 .)
    SEMICOLON       reduce using rule 87 (varcomplicated -> varcomp1 .)


state 128

    (88) varcomplicated -> callfunc .

    TIMES           reduce using rule 88 (varcomplicated -> callfunc .)
    DIV             reduce using rule 88 (varcomplicated -> callfunc .)
    SUM             reduce using rule 88 (varcomplicated -> callfunc .)
    SUBTRACT        reduce using rule 88 (varcomplicated -> callfunc .)
    SAMEAS          reduce using rule 88 (varcomplicated -> callfunc .)
    BIGGERTHAN      reduce using rule 88 (varcomplicated -> callfunc .)
    BIGGEREQUALSTHAN reduce using rule 88 (varcomplicated -> callfunc .)
    SMALLTHAN       reduce using rule 88 (varcomplicated -> callfunc .)
    SMALLEQUALSTHAN reduce using rule 88 (varcomplicated -> callfunc .)
    DIFFERENTTHAN   reduce using rule 88 (varcomplicated -> callfunc .)
    AND             reduce using rule 88 (varcomplicated -> callfunc .)
    OR              reduce using rule 88 (varcomplicated -> callfunc .)
    COMMA           reduce using rule 88 (varcomplicated -> callfunc .)
    CLOSEPAREN      reduce using rule 88 (varcomplicated -> callfunc .)
    OPENPAREN       reduce using rule 88 (varcomplicated -> callfunc .)
    TRUE            reduce using rule 88 (varcomplicated -> callfunc .)
    FALSE           reduce using rule 88 (varcomplicated -> callfunc .)
    CTEFLOAT        reduce using rule 88 (varcomplicated -> callfunc .)
    CTESTRING       reduce using rule 88 (varcomplicated -> callfunc .)
    CTEINT          reduce using rule 88 (varcomplicated -> callfunc .)
    ID              reduce using rule 88 (varcomplicated -> callfunc .)
    CLOSECURLY      reduce using rule 88 (varcomplicated -> callfunc .)
    VAR             reduce using rule 88 (varcomplicated -> callfunc .)
    IF              reduce using rule 88 (varcomplicated -> callfunc .)
    OUTPUT          reduce using rule 88 (varcomplicated -> callfunc .)
    INPUT           reduce using rule 88 (varcomplicated -> callfunc .)
    RETURN          reduce using rule 88 (varcomplicated -> callfunc .)
    WHILE           reduce using rule 88 (varcomplicated -> callfunc .)
    SEMICOLON       reduce using rule 88 (varcomplicated -> callfunc .)


state 129

    (126) condition -> IF OPENPAREN expresion . CLOSEPAREN OPENCURLY altcondition
    (127) condition -> IF OPENPAREN expresion . CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition

    CLOSEPAREN      shift and go to state 173


state 130

    (119) write -> OUTPUT save_op OPENPAREN . varcall altwrite
    (120) write -> OUTPUT save_op OPENPAREN . expresion altwrite
    (80) varcall -> . varcte save_const
    (81) varcall -> . varcomplicated save_comp
    (96) expresion -> . exp altexpresion
    (82) varcte -> . TRUE
    (83) varcte -> . FALSE
    (84) varcte -> . CTEFLOAT
    (85) varcte -> . CTESTRING
    (86) varcte -> . CTEINT
    (87) varcomplicated -> . varcomp1
    (88) varcomplicated -> . callfunc
    (107) exp -> . termino
    (108) exp -> . termino altexp
    (89) varcomp1 -> . ID varcomp2
    (56) callfunc -> . ID OPENPAREN altcall CLOSEPAREN
    (112) termino -> . factor
    (113) termino -> . factor alttermino
    (124) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (125) factor -> . varcall

    TRUE            shift and go to state 122
    FALSE           shift and go to state 123
    CTEFLOAT        shift and go to state 124
    CTESTRING       shift and go to state 125
    CTEINT          shift and go to state 126
    ID              shift and go to state 112
    OPENPAREN       shift and go to state 113

    varcall                        shift and go to state 174
    expresion                      shift and go to state 175
    varcte                         shift and go to state 120
    varcomplicated                 shift and go to state 121
    exp                            shift and go to state 116
    varcomp1                       shift and go to state 127
    callfunc                       shift and go to state 128
    termino                        shift and go to state 117
    factor                         shift and go to state 118

state 131

    (118) read -> INPUT save_op OPENPAREN . ID save_comp CLOSEPAREN SEMICOLON

    ID              shift and go to state 176


state 132

    (131) return -> RETURN save_op expresion . SEMICOLON

    SEMICOLON       shift and go to state 177


state 133

    (77) while -> WHILE OPENPAREN expresion . CLOSEPAREN OPENCURLY altwhile

    CLOSEPAREN      shift and go to state 178


state 134

    (18) alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .

    CLASS           reduce using rule 18 (alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .)
    VAR             reduce using rule 18 (alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .)
    FUNC            reduce using rule 18 (alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .)
    MAIN            reduce using rule 18 (alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .)


state 135

    (21) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst . store_params CLOSEPAREN OPENCURLY alt2const
    (50) store_params -> .

    CLOSEPAREN      reduce using rule 50 (store_params -> .)

    store_params                   shift and go to state 179

state 136

    (22) altconst -> params .

    CLOSEPAREN      reduce using rule 22 (altconst -> params .)


state 137

    (23) altconst -> empty .

    CLOSEPAREN      reduce using rule 23 (altconst -> empty .)


state 138

    (36) listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET . listidsaltp
    (38) listidsaltp -> . COMMA listids
    (39) listidsaltp -> . empty
    (132) empty -> .

    COMMA           shift and go to state 181
    TWODOTS         reduce using rule 132 (empty -> .)

    listidsaltp                    shift and go to state 180
    empty                          shift and go to state 182

state 139

    (53) altparams -> COMMA ID . TWODOTS type save_params altparams

    TWODOTS         shift and go to state 183


state 140

    (41) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY . alt3func
    (46) alt3func -> . var alt3func
    (47) alt3func -> . estatuto alt3func
    (48) alt3func -> . CLOSECURLY remove_function_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (66) estatuto -> . assign
    (67) estatuto -> . condition
    (68) estatuto -> . write
    (69) estatuto -> . read
    (70) estatuto -> . return
    (71) estatuto -> . voidcall
    (72) estatuto -> . while
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (126) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (127) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (119) write -> . OUTPUT save_op OPENPAREN varcall altwrite
    (120) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (118) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (73) voidcall -> . ID OPENPAREN CLOSEPAREN
    (74) voidcall -> . ID OPENPAREN expresion altcall
    (77) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 187
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    alt3func                       shift and go to state 184
    var                            shift and go to state 185
    estatuto                       shift and go to state 186
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 141

    (130) assign -> ID save_comp EQUALS save_op . expresion SEMICOLON
    (96) expresion -> . exp altexpresion
    (107) exp -> . termino
    (108) exp -> . termino altexp
    (112) termino -> . factor
    (113) termino -> . factor alttermino
    (124) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (125) factor -> . varcall
    (80) varcall -> . varcte save_const
    (81) varcall -> . varcomplicated save_comp
    (82) varcte -> . TRUE
    (83) varcte -> . FALSE
    (84) varcte -> . CTEFLOAT
    (85) varcte -> . CTESTRING
    (86) varcte -> . CTEINT
    (87) varcomplicated -> . varcomp1
    (88) varcomplicated -> . callfunc
    (89) varcomp1 -> . ID varcomp2
    (56) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 113
    TRUE            shift and go to state 122
    FALSE           shift and go to state 123
    CTEFLOAT        shift and go to state 124
    CTESTRING       shift and go to state 125
    CTEINT          shift and go to state 126
    ID              shift and go to state 112

    expresion                      shift and go to state 188
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcall                        shift and go to state 119
    varcte                         shift and go to state 120
    varcomplicated                 shift and go to state 121
    varcomp1                       shift and go to state 127
    callfunc                       shift and go to state 128

state 142

    (89) varcomp1 -> ID varcomp2 .

    TIMES           reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    DIV             reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    SUM             reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    SUBTRACT        reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    SAMEAS          reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    BIGGERTHAN      reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    BIGGEREQUALSTHAN reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    SMALLTHAN       reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    SMALLEQUALSTHAN reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    DIFFERENTTHAN   reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    AND             reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    OR              reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    COMMA           reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    CLOSEPAREN      reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    OPENPAREN       reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    TRUE            reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    FALSE           reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    CTEFLOAT        reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    CTESTRING       reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    CTEINT          reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    ID              reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    CLOSECURLY      reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    VAR             reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    IF              reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    OUTPUT          reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    INPUT           reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    RETURN          reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    WHILE           reduce using rule 89 (varcomp1 -> ID varcomp2 .)
    SEMICOLON       reduce using rule 89 (varcomp1 -> ID varcomp2 .)


state 143

    (56) callfunc -> ID OPENPAREN . altcall CLOSEPAREN
    (57) altcall -> . expresion alt2call
    (58) altcall -> . empty
    (75) altcall -> . COMMA expresion altcall
    (76) altcall -> . CLOSEPAREN SEMICOLON
    (96) expresion -> . exp altexpresion
    (132) empty -> .
    (107) exp -> . termino
    (108) exp -> . termino altexp
    (112) termino -> . factor
    (113) termino -> . factor alttermino
    (124) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (125) factor -> . varcall
    (80) varcall -> . varcte save_const
    (81) varcall -> . varcomplicated save_comp
    (82) varcte -> . TRUE
    (83) varcte -> . FALSE
    (84) varcte -> . CTEFLOAT
    (85) varcte -> . CTESTRING
    (86) varcte -> . CTEINT
    (87) varcomplicated -> . varcomp1
    (88) varcomplicated -> . callfunc
    (89) varcomp1 -> . ID varcomp2
    (56) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
    COMMA           shift and go to state 150
    CLOSEPAREN      shift and go to state 151
    OPENPAREN       shift and go to state 113
    TRUE            shift and go to state 122
    FALSE           shift and go to state 123
    CTEFLOAT        shift and go to state 124
    CTESTRING       shift and go to state 125
    CTEINT          shift and go to state 126
    ID              shift and go to state 112

  ! CLOSEPAREN      [ reduce using rule 132 (empty -> .) ]

    altcall                        shift and go to state 189
    expresion                      shift and go to state 147
    empty                          shift and go to state 149
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcall                        shift and go to state 119
    varcte                         shift and go to state 120
    varcomplicated                 shift and go to state 121
    varcomp1                       shift and go to state 127
    callfunc                       shift and go to state 128

state 144

    (90) varcomp2 -> DOT . varcomp3
    (92) varcomp3 -> . varcomp1
    (93) varcomp3 -> . callfunc
    (89) varcomp1 -> . ID varcomp2
    (56) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    ID              shift and go to state 112

    varcomp3                       shift and go to state 190
    varcomp1                       shift and go to state 191
    callfunc                       shift and go to state 192

state 145

    (91) varcomp2 -> empty .

    TIMES           reduce using rule 91 (varcomp2 -> empty .)
    DIV             reduce using rule 91 (varcomp2 -> empty .)
    SUM             reduce using rule 91 (varcomp2 -> empty .)
    SUBTRACT        reduce using rule 91 (varcomp2 -> empty .)
    SAMEAS          reduce using rule 91 (varcomp2 -> empty .)
    BIGGERTHAN      reduce using rule 91 (varcomp2 -> empty .)
    BIGGEREQUALSTHAN reduce using rule 91 (varcomp2 -> empty .)
    SMALLTHAN       reduce using rule 91 (varcomp2 -> empty .)
    SMALLEQUALSTHAN reduce using rule 91 (varcomp2 -> empty .)
    DIFFERENTTHAN   reduce using rule 91 (varcomp2 -> empty .)
    AND             reduce using rule 91 (varcomp2 -> empty .)
    OR              reduce using rule 91 (varcomp2 -> empty .)
    COMMA           reduce using rule 91 (varcomp2 -> empty .)
    CLOSEPAREN      reduce using rule 91 (varcomp2 -> empty .)
    OPENPAREN       reduce using rule 91 (varcomp2 -> empty .)
    TRUE            reduce using rule 91 (varcomp2 -> empty .)
    FALSE           reduce using rule 91 (varcomp2 -> empty .)
    CTEFLOAT        reduce using rule 91 (varcomp2 -> empty .)
    CTESTRING       reduce using rule 91 (varcomp2 -> empty .)
    CTEINT          reduce using rule 91 (varcomp2 -> empty .)
    ID              reduce using rule 91 (varcomp2 -> empty .)
    CLOSECURLY      reduce using rule 91 (varcomp2 -> empty .)
    VAR             reduce using rule 91 (varcomp2 -> empty .)
    IF              reduce using rule 91 (varcomp2 -> empty .)
    OUTPUT          reduce using rule 91 (varcomp2 -> empty .)
    INPUT           reduce using rule 91 (varcomp2 -> empty .)
    RETURN          reduce using rule 91 (varcomp2 -> empty .)
    WHILE           reduce using rule 91 (varcomp2 -> empty .)
    SEMICOLON       reduce using rule 91 (varcomp2 -> empty .)


state 146

    (124) factor -> OPENPAREN save_op . expresion CLOSEPAREN save_op
    (96) expresion -> . exp altexpresion
    (107) exp -> . termino
    (108) exp -> . termino altexp
    (112) termino -> . factor
    (113) termino -> . factor alttermino
    (124) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (125) factor -> . varcall
    (80) varcall -> . varcte save_const
    (81) varcall -> . varcomplicated save_comp
    (82) varcte -> . TRUE
    (83) varcte -> . FALSE
    (84) varcte -> . CTEFLOAT
    (85) varcte -> . CTESTRING
    (86) varcte -> . CTEINT
    (87) varcomplicated -> . varcomp1
    (88) varcomplicated -> . callfunc
    (89) varcomp1 -> . ID varcomp2
    (56) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 113
    TRUE            shift and go to state 122
    FALSE           shift and go to state 123
    CTEFLOAT        shift and go to state 124
    CTESTRING       shift and go to state 125
    CTEINT          shift and go to state 126
    ID              shift and go to state 112

    expresion                      shift and go to state 193
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcall                        shift and go to state 119
    varcte                         shift and go to state 120
    varcomplicated                 shift and go to state 121
    varcomp1                       shift and go to state 127
    callfunc                       shift and go to state 128

state 147

    (57) altcall -> expresion . alt2call
    (59) alt2call -> . COMMA altcall
    (60) alt2call -> . empty
    (132) empty -> .

    COMMA           shift and go to state 195
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)

    alt2call                       shift and go to state 194
    empty                          shift and go to state 196

state 148

    (74) voidcall -> ID OPENPAREN expresion altcall .

    CLOSECURLY      reduce using rule 74 (voidcall -> ID OPENPAREN expresion altcall .)
    VAR             reduce using rule 74 (voidcall -> ID OPENPAREN expresion altcall .)
    ID              reduce using rule 74 (voidcall -> ID OPENPAREN expresion altcall .)
    IF              reduce using rule 74 (voidcall -> ID OPENPAREN expresion altcall .)
    OUTPUT          reduce using rule 74 (voidcall -> ID OPENPAREN expresion altcall .)
    INPUT           reduce using rule 74 (voidcall -> ID OPENPAREN expresion altcall .)
    RETURN          reduce using rule 74 (voidcall -> ID OPENPAREN expresion altcall .)
    WHILE           reduce using rule 74 (voidcall -> ID OPENPAREN expresion altcall .)


state 149

    (58) altcall -> empty .

    CLOSECURLY      reduce using rule 58 (altcall -> empty .)
    VAR             reduce using rule 58 (altcall -> empty .)
    ID              reduce using rule 58 (altcall -> empty .)
    IF              reduce using rule 58 (altcall -> empty .)
    OUTPUT          reduce using rule 58 (altcall -> empty .)
    INPUT           reduce using rule 58 (altcall -> empty .)
    RETURN          reduce using rule 58 (altcall -> empty .)
    WHILE           reduce using rule 58 (altcall -> empty .)
    CLOSEPAREN      reduce using rule 58 (altcall -> empty .)


state 150

    (75) altcall -> COMMA . expresion altcall
    (96) expresion -> . exp altexpresion
    (107) exp -> . termino
    (108) exp -> . termino altexp
    (112) termino -> . factor
    (113) termino -> . factor alttermino
    (124) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (125) factor -> . varcall
    (80) varcall -> . varcte save_const
    (81) varcall -> . varcomplicated save_comp
    (82) varcte -> . TRUE
    (83) varcte -> . FALSE
    (84) varcte -> . CTEFLOAT
    (85) varcte -> . CTESTRING
    (86) varcte -> . CTEINT
    (87) varcomplicated -> . varcomp1
    (88) varcomplicated -> . callfunc
    (89) varcomp1 -> . ID varcomp2
    (56) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 113
    TRUE            shift and go to state 122
    FALSE           shift and go to state 123
    CTEFLOAT        shift and go to state 124
    CTESTRING       shift and go to state 125
    CTEINT          shift and go to state 126
    ID              shift and go to state 112

    expresion                      shift and go to state 197
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcall                        shift and go to state 119
    varcte                         shift and go to state 120
    varcomplicated                 shift and go to state 121
    varcomp1                       shift and go to state 127
    callfunc                       shift and go to state 128

state 151

    (76) altcall -> CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 198


state 152

    (96) expresion -> exp altexpresion .

    COMMA           reduce using rule 96 (expresion -> exp altexpresion .)
    CLOSEPAREN      reduce using rule 96 (expresion -> exp altexpresion .)
    OPENPAREN       reduce using rule 96 (expresion -> exp altexpresion .)
    TRUE            reduce using rule 96 (expresion -> exp altexpresion .)
    FALSE           reduce using rule 96 (expresion -> exp altexpresion .)
    CTEFLOAT        reduce using rule 96 (expresion -> exp altexpresion .)
    CTESTRING       reduce using rule 96 (expresion -> exp altexpresion .)
    CTEINT          reduce using rule 96 (expresion -> exp altexpresion .)
    ID              reduce using rule 96 (expresion -> exp altexpresion .)
    CLOSECURLY      reduce using rule 96 (expresion -> exp altexpresion .)
    VAR             reduce using rule 96 (expresion -> exp altexpresion .)
    IF              reduce using rule 96 (expresion -> exp altexpresion .)
    OUTPUT          reduce using rule 96 (expresion -> exp altexpresion .)
    INPUT           reduce using rule 96 (expresion -> exp altexpresion .)
    RETURN          reduce using rule 96 (expresion -> exp altexpresion .)
    WHILE           reduce using rule 96 (expresion -> exp altexpresion .)
    SEMICOLON       reduce using rule 96 (expresion -> exp altexpresion .)


state 153

    (97) altexpresion -> altexpresion2 . save_op exp
    (117) save_op -> .

    OPENPAREN       reduce using rule 117 (save_op -> .)
    TRUE            reduce using rule 117 (save_op -> .)
    FALSE           reduce using rule 117 (save_op -> .)
    CTEFLOAT        reduce using rule 117 (save_op -> .)
    CTESTRING       reduce using rule 117 (save_op -> .)
    CTEINT          reduce using rule 117 (save_op -> .)
    ID              reduce using rule 117 (save_op -> .)

    save_op                        shift and go to state 199

state 154

    (98) altexpresion -> empty .

    COMMA           reduce using rule 98 (altexpresion -> empty .)
    CLOSEPAREN      reduce using rule 98 (altexpresion -> empty .)
    OPENPAREN       reduce using rule 98 (altexpresion -> empty .)
    TRUE            reduce using rule 98 (altexpresion -> empty .)
    FALSE           reduce using rule 98 (altexpresion -> empty .)
    CTEFLOAT        reduce using rule 98 (altexpresion -> empty .)
    CTESTRING       reduce using rule 98 (altexpresion -> empty .)
    CTEINT          reduce using rule 98 (altexpresion -> empty .)
    ID              reduce using rule 98 (altexpresion -> empty .)
    CLOSECURLY      reduce using rule 98 (altexpresion -> empty .)
    VAR             reduce using rule 98 (altexpresion -> empty .)
    IF              reduce using rule 98 (altexpresion -> empty .)
    OUTPUT          reduce using rule 98 (altexpresion -> empty .)
    INPUT           reduce using rule 98 (altexpresion -> empty .)
    RETURN          reduce using rule 98 (altexpresion -> empty .)
    WHILE           reduce using rule 98 (altexpresion -> empty .)
    SEMICOLON       reduce using rule 98 (altexpresion -> empty .)


state 155

    (99) altexpresion2 -> SAMEAS .

    OPENPAREN       reduce using rule 99 (altexpresion2 -> SAMEAS .)
    TRUE            reduce using rule 99 (altexpresion2 -> SAMEAS .)
    FALSE           reduce using rule 99 (altexpresion2 -> SAMEAS .)
    CTEFLOAT        reduce using rule 99 (altexpresion2 -> SAMEAS .)
    CTESTRING       reduce using rule 99 (altexpresion2 -> SAMEAS .)
    CTEINT          reduce using rule 99 (altexpresion2 -> SAMEAS .)
    ID              reduce using rule 99 (altexpresion2 -> SAMEAS .)


state 156

    (100) altexpresion2 -> BIGGERTHAN .

    OPENPAREN       reduce using rule 100 (altexpresion2 -> BIGGERTHAN .)
    TRUE            reduce using rule 100 (altexpresion2 -> BIGGERTHAN .)
    FALSE           reduce using rule 100 (altexpresion2 -> BIGGERTHAN .)
    CTEFLOAT        reduce using rule 100 (altexpresion2 -> BIGGERTHAN .)
    CTESTRING       reduce using rule 100 (altexpresion2 -> BIGGERTHAN .)
    CTEINT          reduce using rule 100 (altexpresion2 -> BIGGERTHAN .)
    ID              reduce using rule 100 (altexpresion2 -> BIGGERTHAN .)


state 157

    (101) altexpresion2 -> BIGGEREQUALSTHAN .

    OPENPAREN       reduce using rule 101 (altexpresion2 -> BIGGEREQUALSTHAN .)
    TRUE            reduce using rule 101 (altexpresion2 -> BIGGEREQUALSTHAN .)
    FALSE           reduce using rule 101 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTEFLOAT        reduce using rule 101 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTESTRING       reduce using rule 101 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTEINT          reduce using rule 101 (altexpresion2 -> BIGGEREQUALSTHAN .)
    ID              reduce using rule 101 (altexpresion2 -> BIGGEREQUALSTHAN .)


state 158

    (102) altexpresion2 -> SMALLTHAN .

    OPENPAREN       reduce using rule 102 (altexpresion2 -> SMALLTHAN .)
    TRUE            reduce using rule 102 (altexpresion2 -> SMALLTHAN .)
    FALSE           reduce using rule 102 (altexpresion2 -> SMALLTHAN .)
    CTEFLOAT        reduce using rule 102 (altexpresion2 -> SMALLTHAN .)
    CTESTRING       reduce using rule 102 (altexpresion2 -> SMALLTHAN .)
    CTEINT          reduce using rule 102 (altexpresion2 -> SMALLTHAN .)
    ID              reduce using rule 102 (altexpresion2 -> SMALLTHAN .)


state 159

    (103) altexpresion2 -> SMALLEQUALSTHAN .

    OPENPAREN       reduce using rule 103 (altexpresion2 -> SMALLEQUALSTHAN .)
    TRUE            reduce using rule 103 (altexpresion2 -> SMALLEQUALSTHAN .)
    FALSE           reduce using rule 103 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTEFLOAT        reduce using rule 103 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTESTRING       reduce using rule 103 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTEINT          reduce using rule 103 (altexpresion2 -> SMALLEQUALSTHAN .)
    ID              reduce using rule 103 (altexpresion2 -> SMALLEQUALSTHAN .)


state 160

    (104) altexpresion2 -> DIFFERENTTHAN .

    OPENPAREN       reduce using rule 104 (altexpresion2 -> DIFFERENTTHAN .)
    TRUE            reduce using rule 104 (altexpresion2 -> DIFFERENTTHAN .)
    FALSE           reduce using rule 104 (altexpresion2 -> DIFFERENTTHAN .)
    CTEFLOAT        reduce using rule 104 (altexpresion2 -> DIFFERENTTHAN .)
    CTESTRING       reduce using rule 104 (altexpresion2 -> DIFFERENTTHAN .)
    CTEINT          reduce using rule 104 (altexpresion2 -> DIFFERENTTHAN .)
    ID              reduce using rule 104 (altexpresion2 -> DIFFERENTTHAN .)


state 161

    (105) altexpresion2 -> AND .

    OPENPAREN       reduce using rule 105 (altexpresion2 -> AND .)
    TRUE            reduce using rule 105 (altexpresion2 -> AND .)
    FALSE           reduce using rule 105 (altexpresion2 -> AND .)
    CTEFLOAT        reduce using rule 105 (altexpresion2 -> AND .)
    CTESTRING       reduce using rule 105 (altexpresion2 -> AND .)
    CTEINT          reduce using rule 105 (altexpresion2 -> AND .)
    ID              reduce using rule 105 (altexpresion2 -> AND .)


state 162

    (106) altexpresion2 -> OR .

    OPENPAREN       reduce using rule 106 (altexpresion2 -> OR .)
    TRUE            reduce using rule 106 (altexpresion2 -> OR .)
    FALSE           reduce using rule 106 (altexpresion2 -> OR .)
    CTEFLOAT        reduce using rule 106 (altexpresion2 -> OR .)
    CTESTRING       reduce using rule 106 (altexpresion2 -> OR .)
    CTEINT          reduce using rule 106 (altexpresion2 -> OR .)
    ID              reduce using rule 106 (altexpresion2 -> OR .)


state 163

    (108) exp -> termino altexp .

    SAMEAS          reduce using rule 108 (exp -> termino altexp .)
    BIGGERTHAN      reduce using rule 108 (exp -> termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 108 (exp -> termino altexp .)
    SMALLTHAN       reduce using rule 108 (exp -> termino altexp .)
    SMALLEQUALSTHAN reduce using rule 108 (exp -> termino altexp .)
    DIFFERENTTHAN   reduce using rule 108 (exp -> termino altexp .)
    AND             reduce using rule 108 (exp -> termino altexp .)
    OR              reduce using rule 108 (exp -> termino altexp .)
    COMMA           reduce using rule 108 (exp -> termino altexp .)
    CLOSEPAREN      reduce using rule 108 (exp -> termino altexp .)
    OPENPAREN       reduce using rule 108 (exp -> termino altexp .)
    TRUE            reduce using rule 108 (exp -> termino altexp .)
    FALSE           reduce using rule 108 (exp -> termino altexp .)
    CTEFLOAT        reduce using rule 108 (exp -> termino altexp .)
    CTESTRING       reduce using rule 108 (exp -> termino altexp .)
    CTEINT          reduce using rule 108 (exp -> termino altexp .)
    ID              reduce using rule 108 (exp -> termino altexp .)
    CLOSECURLY      reduce using rule 108 (exp -> termino altexp .)
    VAR             reduce using rule 108 (exp -> termino altexp .)
    IF              reduce using rule 108 (exp -> termino altexp .)
    OUTPUT          reduce using rule 108 (exp -> termino altexp .)
    INPUT           reduce using rule 108 (exp -> termino altexp .)
    RETURN          reduce using rule 108 (exp -> termino altexp .)
    WHILE           reduce using rule 108 (exp -> termino altexp .)
    SEMICOLON       reduce using rule 108 (exp -> termino altexp .)


state 164

    (109) altexp -> SUM . save_op termino altexp
    (117) save_op -> .

    OPENPAREN       reduce using rule 117 (save_op -> .)
    TRUE            reduce using rule 117 (save_op -> .)
    FALSE           reduce using rule 117 (save_op -> .)
    CTEFLOAT        reduce using rule 117 (save_op -> .)
    CTESTRING       reduce using rule 117 (save_op -> .)
    CTEINT          reduce using rule 117 (save_op -> .)
    ID              reduce using rule 117 (save_op -> .)

    save_op                        shift and go to state 200

state 165

    (110) altexp -> SUBTRACT . save_op termino altexp
    (117) save_op -> .

    OPENPAREN       reduce using rule 117 (save_op -> .)
    TRUE            reduce using rule 117 (save_op -> .)
    FALSE           reduce using rule 117 (save_op -> .)
    CTEFLOAT        reduce using rule 117 (save_op -> .)
    CTESTRING       reduce using rule 117 (save_op -> .)
    CTEINT          reduce using rule 117 (save_op -> .)
    ID              reduce using rule 117 (save_op -> .)

    save_op                        shift and go to state 201

state 166

    (111) altexp -> empty .

    SAMEAS          reduce using rule 111 (altexp -> empty .)
    BIGGERTHAN      reduce using rule 111 (altexp -> empty .)
    BIGGEREQUALSTHAN reduce using rule 111 (altexp -> empty .)
    SMALLTHAN       reduce using rule 111 (altexp -> empty .)
    SMALLEQUALSTHAN reduce using rule 111 (altexp -> empty .)
    DIFFERENTTHAN   reduce using rule 111 (altexp -> empty .)
    AND             reduce using rule 111 (altexp -> empty .)
    OR              reduce using rule 111 (altexp -> empty .)
    COMMA           reduce using rule 111 (altexp -> empty .)
    CLOSEPAREN      reduce using rule 111 (altexp -> empty .)
    OPENPAREN       reduce using rule 111 (altexp -> empty .)
    TRUE            reduce using rule 111 (altexp -> empty .)
    FALSE           reduce using rule 111 (altexp -> empty .)
    CTEFLOAT        reduce using rule 111 (altexp -> empty .)
    CTESTRING       reduce using rule 111 (altexp -> empty .)
    CTEINT          reduce using rule 111 (altexp -> empty .)
    ID              reduce using rule 111 (altexp -> empty .)
    CLOSECURLY      reduce using rule 111 (altexp -> empty .)
    VAR             reduce using rule 111 (altexp -> empty .)
    IF              reduce using rule 111 (altexp -> empty .)
    OUTPUT          reduce using rule 111 (altexp -> empty .)
    INPUT           reduce using rule 111 (altexp -> empty .)
    RETURN          reduce using rule 111 (altexp -> empty .)
    WHILE           reduce using rule 111 (altexp -> empty .)
    SEMICOLON       reduce using rule 111 (altexp -> empty .)


state 167

    (113) termino -> factor alttermino .

    SUM             reduce using rule 113 (termino -> factor alttermino .)
    SUBTRACT        reduce using rule 113 (termino -> factor alttermino .)
    SAMEAS          reduce using rule 113 (termino -> factor alttermino .)
    BIGGERTHAN      reduce using rule 113 (termino -> factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 113 (termino -> factor alttermino .)
    SMALLTHAN       reduce using rule 113 (termino -> factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 113 (termino -> factor alttermino .)
    DIFFERENTTHAN   reduce using rule 113 (termino -> factor alttermino .)
    AND             reduce using rule 113 (termino -> factor alttermino .)
    OR              reduce using rule 113 (termino -> factor alttermino .)
    COMMA           reduce using rule 113 (termino -> factor alttermino .)
    CLOSEPAREN      reduce using rule 113 (termino -> factor alttermino .)
    OPENPAREN       reduce using rule 113 (termino -> factor alttermino .)
    TRUE            reduce using rule 113 (termino -> factor alttermino .)
    FALSE           reduce using rule 113 (termino -> factor alttermino .)
    CTEFLOAT        reduce using rule 113 (termino -> factor alttermino .)
    CTESTRING       reduce using rule 113 (termino -> factor alttermino .)
    CTEINT          reduce using rule 113 (termino -> factor alttermino .)
    ID              reduce using rule 113 (termino -> factor alttermino .)
    CLOSECURLY      reduce using rule 113 (termino -> factor alttermino .)
    VAR             reduce using rule 113 (termino -> factor alttermino .)
    IF              reduce using rule 113 (termino -> factor alttermino .)
    OUTPUT          reduce using rule 113 (termino -> factor alttermino .)
    INPUT           reduce using rule 113 (termino -> factor alttermino .)
    RETURN          reduce using rule 113 (termino -> factor alttermino .)
    WHILE           reduce using rule 113 (termino -> factor alttermino .)
    SEMICOLON       reduce using rule 113 (termino -> factor alttermino .)


state 168

    (114) alttermino -> TIMES . save_op factor alttermino
    (117) save_op -> .

    OPENPAREN       reduce using rule 117 (save_op -> .)
    TRUE            reduce using rule 117 (save_op -> .)
    FALSE           reduce using rule 117 (save_op -> .)
    CTEFLOAT        reduce using rule 117 (save_op -> .)
    CTESTRING       reduce using rule 117 (save_op -> .)
    CTEINT          reduce using rule 117 (save_op -> .)
    ID              reduce using rule 117 (save_op -> .)

    save_op                        shift and go to state 202

state 169

    (115) alttermino -> DIV . save_op factor alttermino
    (117) save_op -> .

    OPENPAREN       reduce using rule 117 (save_op -> .)
    TRUE            reduce using rule 117 (save_op -> .)
    FALSE           reduce using rule 117 (save_op -> .)
    CTEFLOAT        reduce using rule 117 (save_op -> .)
    CTESTRING       reduce using rule 117 (save_op -> .)
    CTEINT          reduce using rule 117 (save_op -> .)
    ID              reduce using rule 117 (save_op -> .)

    save_op                        shift and go to state 203

state 170

    (116) alttermino -> empty .

    SUM             reduce using rule 116 (alttermino -> empty .)
    SUBTRACT        reduce using rule 116 (alttermino -> empty .)
    SAMEAS          reduce using rule 116 (alttermino -> empty .)
    BIGGERTHAN      reduce using rule 116 (alttermino -> empty .)
    BIGGEREQUALSTHAN reduce using rule 116 (alttermino -> empty .)
    SMALLTHAN       reduce using rule 116 (alttermino -> empty .)
    SMALLEQUALSTHAN reduce using rule 116 (alttermino -> empty .)
    DIFFERENTTHAN   reduce using rule 116 (alttermino -> empty .)
    AND             reduce using rule 116 (alttermino -> empty .)
    OR              reduce using rule 116 (alttermino -> empty .)
    COMMA           reduce using rule 116 (alttermino -> empty .)
    CLOSEPAREN      reduce using rule 116 (alttermino -> empty .)
    OPENPAREN       reduce using rule 116 (alttermino -> empty .)
    TRUE            reduce using rule 116 (alttermino -> empty .)
    FALSE           reduce using rule 116 (alttermino -> empty .)
    CTEFLOAT        reduce using rule 116 (alttermino -> empty .)
    CTESTRING       reduce using rule 116 (alttermino -> empty .)
    CTEINT          reduce using rule 116 (alttermino -> empty .)
    ID              reduce using rule 116 (alttermino -> empty .)
    CLOSECURLY      reduce using rule 116 (alttermino -> empty .)
    VAR             reduce using rule 116 (alttermino -> empty .)
    IF              reduce using rule 116 (alttermino -> empty .)
    OUTPUT          reduce using rule 116 (alttermino -> empty .)
    INPUT           reduce using rule 116 (alttermino -> empty .)
    RETURN          reduce using rule 116 (alttermino -> empty .)
    WHILE           reduce using rule 116 (alttermino -> empty .)
    SEMICOLON       reduce using rule 116 (alttermino -> empty .)


state 171

    (80) varcall -> varcte save_const .

    TIMES           reduce using rule 80 (varcall -> varcte save_const .)
    DIV             reduce using rule 80 (varcall -> varcte save_const .)
    SUM             reduce using rule 80 (varcall -> varcte save_const .)
    SUBTRACT        reduce using rule 80 (varcall -> varcte save_const .)
    SAMEAS          reduce using rule 80 (varcall -> varcte save_const .)
    BIGGERTHAN      reduce using rule 80 (varcall -> varcte save_const .)
    BIGGEREQUALSTHAN reduce using rule 80 (varcall -> varcte save_const .)
    SMALLTHAN       reduce using rule 80 (varcall -> varcte save_const .)
    SMALLEQUALSTHAN reduce using rule 80 (varcall -> varcte save_const .)
    DIFFERENTTHAN   reduce using rule 80 (varcall -> varcte save_const .)
    AND             reduce using rule 80 (varcall -> varcte save_const .)
    OR              reduce using rule 80 (varcall -> varcte save_const .)
    COMMA           reduce using rule 80 (varcall -> varcte save_const .)
    CLOSEPAREN      reduce using rule 80 (varcall -> varcte save_const .)
    OPENPAREN       reduce using rule 80 (varcall -> varcte save_const .)
    TRUE            reduce using rule 80 (varcall -> varcte save_const .)
    FALSE           reduce using rule 80 (varcall -> varcte save_const .)
    CTEFLOAT        reduce using rule 80 (varcall -> varcte save_const .)
    CTESTRING       reduce using rule 80 (varcall -> varcte save_const .)
    CTEINT          reduce using rule 80 (varcall -> varcte save_const .)
    ID              reduce using rule 80 (varcall -> varcte save_const .)
    CLOSECURLY      reduce using rule 80 (varcall -> varcte save_const .)
    VAR             reduce using rule 80 (varcall -> varcte save_const .)
    IF              reduce using rule 80 (varcall -> varcte save_const .)
    OUTPUT          reduce using rule 80 (varcall -> varcte save_const .)
    INPUT           reduce using rule 80 (varcall -> varcte save_const .)
    RETURN          reduce using rule 80 (varcall -> varcte save_const .)
    WHILE           reduce using rule 80 (varcall -> varcte save_const .)
    SEMICOLON       reduce using rule 80 (varcall -> varcte save_const .)


state 172

    (81) varcall -> varcomplicated save_comp .

    TIMES           reduce using rule 81 (varcall -> varcomplicated save_comp .)
    DIV             reduce using rule 81 (varcall -> varcomplicated save_comp .)
    SUM             reduce using rule 81 (varcall -> varcomplicated save_comp .)
    SUBTRACT        reduce using rule 81 (varcall -> varcomplicated save_comp .)
    SAMEAS          reduce using rule 81 (varcall -> varcomplicated save_comp .)
    BIGGERTHAN      reduce using rule 81 (varcall -> varcomplicated save_comp .)
    BIGGEREQUALSTHAN reduce using rule 81 (varcall -> varcomplicated save_comp .)
    SMALLTHAN       reduce using rule 81 (varcall -> varcomplicated save_comp .)
    SMALLEQUALSTHAN reduce using rule 81 (varcall -> varcomplicated save_comp .)
    DIFFERENTTHAN   reduce using rule 81 (varcall -> varcomplicated save_comp .)
    AND             reduce using rule 81 (varcall -> varcomplicated save_comp .)
    OR              reduce using rule 81 (varcall -> varcomplicated save_comp .)
    COMMA           reduce using rule 81 (varcall -> varcomplicated save_comp .)
    CLOSEPAREN      reduce using rule 81 (varcall -> varcomplicated save_comp .)
    OPENPAREN       reduce using rule 81 (varcall -> varcomplicated save_comp .)
    TRUE            reduce using rule 81 (varcall -> varcomplicated save_comp .)
    FALSE           reduce using rule 81 (varcall -> varcomplicated save_comp .)
    CTEFLOAT        reduce using rule 81 (varcall -> varcomplicated save_comp .)
    CTESTRING       reduce using rule 81 (varcall -> varcomplicated save_comp .)
    CTEINT          reduce using rule 81 (varcall -> varcomplicated save_comp .)
    ID              reduce using rule 81 (varcall -> varcomplicated save_comp .)
    CLOSECURLY      reduce using rule 81 (varcall -> varcomplicated save_comp .)
    VAR             reduce using rule 81 (varcall -> varcomplicated save_comp .)
    IF              reduce using rule 81 (varcall -> varcomplicated save_comp .)
    OUTPUT          reduce using rule 81 (varcall -> varcomplicated save_comp .)
    INPUT           reduce using rule 81 (varcall -> varcomplicated save_comp .)
    RETURN          reduce using rule 81 (varcall -> varcomplicated save_comp .)
    WHILE           reduce using rule 81 (varcall -> varcomplicated save_comp .)
    SEMICOLON       reduce using rule 81 (varcall -> varcomplicated save_comp .)


state 173

    (126) condition -> IF OPENPAREN expresion CLOSEPAREN . OPENCURLY altcondition
    (127) condition -> IF OPENPAREN expresion CLOSEPAREN . OPENCURLY altcondition ELSE OPENCURLY altcondition

    OPENCURLY       shift and go to state 204


state 174

    (119) write -> OUTPUT save_op OPENPAREN varcall . altwrite
    (125) factor -> varcall .
    (121) altwrite -> . COMMA save_op varcall altwrite
    (122) altwrite -> . COMMA save_op expresion altwrite
    (123) altwrite -> . CLOSEPAREN SEMICOLON

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for CLOSEPAREN resolved as shift
    TIMES           reduce using rule 125 (factor -> varcall .)
    DIV             reduce using rule 125 (factor -> varcall .)
    SUM             reduce using rule 125 (factor -> varcall .)
    SUBTRACT        reduce using rule 125 (factor -> varcall .)
    SAMEAS          reduce using rule 125 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 125 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 125 (factor -> varcall .)
    SMALLTHAN       reduce using rule 125 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 125 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 125 (factor -> varcall .)
    AND             reduce using rule 125 (factor -> varcall .)
    OR              reduce using rule 125 (factor -> varcall .)
    COMMA           shift and go to state 206
    CLOSEPAREN      shift and go to state 207

  ! COMMA           [ reduce using rule 125 (factor -> varcall .) ]
  ! CLOSEPAREN      [ reduce using rule 125 (factor -> varcall .) ]

    altwrite                       shift and go to state 205

state 175

    (120) write -> OUTPUT save_op OPENPAREN expresion . altwrite
    (121) altwrite -> . COMMA save_op varcall altwrite
    (122) altwrite -> . COMMA save_op expresion altwrite
    (123) altwrite -> . CLOSEPAREN SEMICOLON

    COMMA           shift and go to state 206
    CLOSEPAREN      shift and go to state 207

    altwrite                       shift and go to state 208

state 176

    (118) read -> INPUT save_op OPENPAREN ID . save_comp CLOSEPAREN SEMICOLON
    (95) save_comp -> .

    CLOSEPAREN      reduce using rule 95 (save_comp -> .)

    save_comp                      shift and go to state 209

state 177

    (131) return -> RETURN save_op expresion SEMICOLON .

    CLOSECURLY      reduce using rule 131 (return -> RETURN save_op expresion SEMICOLON .)
    VAR             reduce using rule 131 (return -> RETURN save_op expresion SEMICOLON .)
    ID              reduce using rule 131 (return -> RETURN save_op expresion SEMICOLON .)
    IF              reduce using rule 131 (return -> RETURN save_op expresion SEMICOLON .)
    OUTPUT          reduce using rule 131 (return -> RETURN save_op expresion SEMICOLON .)
    INPUT           reduce using rule 131 (return -> RETURN save_op expresion SEMICOLON .)
    RETURN          reduce using rule 131 (return -> RETURN save_op expresion SEMICOLON .)
    WHILE           reduce using rule 131 (return -> RETURN save_op expresion SEMICOLON .)


state 178

    (77) while -> WHILE OPENPAREN expresion CLOSEPAREN . OPENCURLY altwhile

    OPENCURLY       shift and go to state 210


state 179

    (21) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params . CLOSEPAREN OPENCURLY alt2const

    CLOSEPAREN      shift and go to state 211


state 180

    (36) listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltp .

    TWODOTS         reduce using rule 36 (listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltp .)


state 181

    (38) listidsaltp -> COMMA . listids
    (31) listids -> . ID save_var_name listidsalty

    ID              shift and go to state 20

    listids                        shift and go to state 212

state 182

    (39) listidsaltp -> empty .

    TWODOTS         reduce using rule 39 (listidsaltp -> empty .)


state 183

    (53) altparams -> COMMA ID TWODOTS . type save_params altparams
    (61) type -> . INT
    (62) type -> . FLOAT
    (63) type -> . STRING
    (64) type -> . ID
    (65) type -> . BOOL

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 36
    BOOL            shift and go to state 37

    type                           shift and go to state 213

state 184

    (41) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func .

    CLASS           reduce using rule 41 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func .)
    VAR             reduce using rule 41 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func .)
    FUNC            reduce using rule 41 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func .)
    MAIN            reduce using rule 41 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func .)
    CONSTRUCTOR     reduce using rule 41 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func .)


state 185

    (46) alt3func -> var . alt3func
    (46) alt3func -> . var alt3func
    (47) alt3func -> . estatuto alt3func
    (48) alt3func -> . CLOSECURLY remove_function_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (66) estatuto -> . assign
    (67) estatuto -> . condition
    (68) estatuto -> . write
    (69) estatuto -> . read
    (70) estatuto -> . return
    (71) estatuto -> . voidcall
    (72) estatuto -> . while
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (126) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (127) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (119) write -> . OUTPUT save_op OPENPAREN varcall altwrite
    (120) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (118) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (73) voidcall -> . ID OPENPAREN CLOSEPAREN
    (74) voidcall -> . ID OPENPAREN expresion altcall
    (77) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 187
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    var                            shift and go to state 185
    alt3func                       shift and go to state 214
    estatuto                       shift and go to state 186
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 186

    (47) alt3func -> estatuto . alt3func
    (46) alt3func -> . var alt3func
    (47) alt3func -> . estatuto alt3func
    (48) alt3func -> . CLOSECURLY remove_function_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (66) estatuto -> . assign
    (67) estatuto -> . condition
    (68) estatuto -> . write
    (69) estatuto -> . read
    (70) estatuto -> . return
    (71) estatuto -> . voidcall
    (72) estatuto -> . while
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (126) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (127) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (119) write -> . OUTPUT save_op OPENPAREN varcall altwrite
    (120) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (118) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (73) voidcall -> . ID OPENPAREN CLOSEPAREN
    (74) voidcall -> . ID OPENPAREN expresion altcall
    (77) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 187
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 186
    alt3func                       shift and go to state 215
    var                            shift and go to state 185
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 187

    (48) alt3func -> CLOSECURLY . remove_function_scope
    (51) remove_function_scope -> .

    CLASS           reduce using rule 51 (remove_function_scope -> .)
    VAR             reduce using rule 51 (remove_function_scope -> .)
    FUNC            reduce using rule 51 (remove_function_scope -> .)
    MAIN            reduce using rule 51 (remove_function_scope -> .)
    CONSTRUCTOR     reduce using rule 51 (remove_function_scope -> .)

    remove_function_scope          shift and go to state 216

state 188

    (130) assign -> ID save_comp EQUALS save_op expresion . SEMICOLON

    SEMICOLON       shift and go to state 217


state 189

    (56) callfunc -> ID OPENPAREN altcall . CLOSEPAREN

    CLOSEPAREN      shift and go to state 218


state 190

    (90) varcomp2 -> DOT varcomp3 .

    TIMES           reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    DIV             reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    SUM             reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    SUBTRACT        reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    SAMEAS          reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    BIGGERTHAN      reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    BIGGEREQUALSTHAN reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    SMALLTHAN       reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    SMALLEQUALSTHAN reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    DIFFERENTTHAN   reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    AND             reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    OR              reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    COMMA           reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    CLOSEPAREN      reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    OPENPAREN       reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    TRUE            reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    FALSE           reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    CTEFLOAT        reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    CTESTRING       reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    CTEINT          reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    ID              reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    CLOSECURLY      reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    VAR             reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    IF              reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    OUTPUT          reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    INPUT           reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    RETURN          reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    WHILE           reduce using rule 90 (varcomp2 -> DOT varcomp3 .)
    SEMICOLON       reduce using rule 90 (varcomp2 -> DOT varcomp3 .)


state 191

    (92) varcomp3 -> varcomp1 .

    TIMES           reduce using rule 92 (varcomp3 -> varcomp1 .)
    DIV             reduce using rule 92 (varcomp3 -> varcomp1 .)
    SUM             reduce using rule 92 (varcomp3 -> varcomp1 .)
    SUBTRACT        reduce using rule 92 (varcomp3 -> varcomp1 .)
    SAMEAS          reduce using rule 92 (varcomp3 -> varcomp1 .)
    BIGGERTHAN      reduce using rule 92 (varcomp3 -> varcomp1 .)
    BIGGEREQUALSTHAN reduce using rule 92 (varcomp3 -> varcomp1 .)
    SMALLTHAN       reduce using rule 92 (varcomp3 -> varcomp1 .)
    SMALLEQUALSTHAN reduce using rule 92 (varcomp3 -> varcomp1 .)
    DIFFERENTTHAN   reduce using rule 92 (varcomp3 -> varcomp1 .)
    AND             reduce using rule 92 (varcomp3 -> varcomp1 .)
    OR              reduce using rule 92 (varcomp3 -> varcomp1 .)
    COMMA           reduce using rule 92 (varcomp3 -> varcomp1 .)
    CLOSEPAREN      reduce using rule 92 (varcomp3 -> varcomp1 .)
    OPENPAREN       reduce using rule 92 (varcomp3 -> varcomp1 .)
    TRUE            reduce using rule 92 (varcomp3 -> varcomp1 .)
    FALSE           reduce using rule 92 (varcomp3 -> varcomp1 .)
    CTEFLOAT        reduce using rule 92 (varcomp3 -> varcomp1 .)
    CTESTRING       reduce using rule 92 (varcomp3 -> varcomp1 .)
    CTEINT          reduce using rule 92 (varcomp3 -> varcomp1 .)
    ID              reduce using rule 92 (varcomp3 -> varcomp1 .)
    CLOSECURLY      reduce using rule 92 (varcomp3 -> varcomp1 .)
    VAR             reduce using rule 92 (varcomp3 -> varcomp1 .)
    IF              reduce using rule 92 (varcomp3 -> varcomp1 .)
    OUTPUT          reduce using rule 92 (varcomp3 -> varcomp1 .)
    INPUT           reduce using rule 92 (varcomp3 -> varcomp1 .)
    RETURN          reduce using rule 92 (varcomp3 -> varcomp1 .)
    WHILE           reduce using rule 92 (varcomp3 -> varcomp1 .)
    SEMICOLON       reduce using rule 92 (varcomp3 -> varcomp1 .)


state 192

    (93) varcomp3 -> callfunc .

    TIMES           reduce using rule 93 (varcomp3 -> callfunc .)
    DIV             reduce using rule 93 (varcomp3 -> callfunc .)
    SUM             reduce using rule 93 (varcomp3 -> callfunc .)
    SUBTRACT        reduce using rule 93 (varcomp3 -> callfunc .)
    SAMEAS          reduce using rule 93 (varcomp3 -> callfunc .)
    BIGGERTHAN      reduce using rule 93 (varcomp3 -> callfunc .)
    BIGGEREQUALSTHAN reduce using rule 93 (varcomp3 -> callfunc .)
    SMALLTHAN       reduce using rule 93 (varcomp3 -> callfunc .)
    SMALLEQUALSTHAN reduce using rule 93 (varcomp3 -> callfunc .)
    DIFFERENTTHAN   reduce using rule 93 (varcomp3 -> callfunc .)
    AND             reduce using rule 93 (varcomp3 -> callfunc .)
    OR              reduce using rule 93 (varcomp3 -> callfunc .)
    COMMA           reduce using rule 93 (varcomp3 -> callfunc .)
    CLOSEPAREN      reduce using rule 93 (varcomp3 -> callfunc .)
    OPENPAREN       reduce using rule 93 (varcomp3 -> callfunc .)
    TRUE            reduce using rule 93 (varcomp3 -> callfunc .)
    FALSE           reduce using rule 93 (varcomp3 -> callfunc .)
    CTEFLOAT        reduce using rule 93 (varcomp3 -> callfunc .)
    CTESTRING       reduce using rule 93 (varcomp3 -> callfunc .)
    CTEINT          reduce using rule 93 (varcomp3 -> callfunc .)
    ID              reduce using rule 93 (varcomp3 -> callfunc .)
    CLOSECURLY      reduce using rule 93 (varcomp3 -> callfunc .)
    VAR             reduce using rule 93 (varcomp3 -> callfunc .)
    IF              reduce using rule 93 (varcomp3 -> callfunc .)
    OUTPUT          reduce using rule 93 (varcomp3 -> callfunc .)
    INPUT           reduce using rule 93 (varcomp3 -> callfunc .)
    RETURN          reduce using rule 93 (varcomp3 -> callfunc .)
    WHILE           reduce using rule 93 (varcomp3 -> callfunc .)
    SEMICOLON       reduce using rule 93 (varcomp3 -> callfunc .)


state 193

    (124) factor -> OPENPAREN save_op expresion . CLOSEPAREN save_op

    CLOSEPAREN      shift and go to state 219


state 194

    (57) altcall -> expresion alt2call .

    CLOSECURLY      reduce using rule 57 (altcall -> expresion alt2call .)
    VAR             reduce using rule 57 (altcall -> expresion alt2call .)
    ID              reduce using rule 57 (altcall -> expresion alt2call .)
    IF              reduce using rule 57 (altcall -> expresion alt2call .)
    OUTPUT          reduce using rule 57 (altcall -> expresion alt2call .)
    INPUT           reduce using rule 57 (altcall -> expresion alt2call .)
    RETURN          reduce using rule 57 (altcall -> expresion alt2call .)
    WHILE           reduce using rule 57 (altcall -> expresion alt2call .)
    CLOSEPAREN      reduce using rule 57 (altcall -> expresion alt2call .)


state 195

    (59) alt2call -> COMMA . altcall
    (57) altcall -> . expresion alt2call
    (58) altcall -> . empty
    (75) altcall -> . COMMA expresion altcall
    (76) altcall -> . CLOSEPAREN SEMICOLON
    (96) expresion -> . exp altexpresion
    (132) empty -> .
    (107) exp -> . termino
    (108) exp -> . termino altexp
    (112) termino -> . factor
    (113) termino -> . factor alttermino
    (124) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (125) factor -> . varcall
    (80) varcall -> . varcte save_const
    (81) varcall -> . varcomplicated save_comp
    (82) varcte -> . TRUE
    (83) varcte -> . FALSE
    (84) varcte -> . CTEFLOAT
    (85) varcte -> . CTESTRING
    (86) varcte -> . CTEINT
    (87) varcomplicated -> . varcomp1
    (88) varcomplicated -> . callfunc
    (89) varcomp1 -> . ID varcomp2
    (56) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 150
    CLOSEPAREN      shift and go to state 151
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)
    OPENPAREN       shift and go to state 113
    TRUE            shift and go to state 122
    FALSE           shift and go to state 123
    CTEFLOAT        shift and go to state 124
    CTESTRING       shift and go to state 125
    CTEINT          shift and go to state 126
    ID              shift and go to state 112

  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 132 (empty -> .) ]

    altcall                        shift and go to state 220
    expresion                      shift and go to state 147
    empty                          shift and go to state 149
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcall                        shift and go to state 119
    varcte                         shift and go to state 120
    varcomplicated                 shift and go to state 121
    varcomp1                       shift and go to state 127
    callfunc                       shift and go to state 128

state 196

    (60) alt2call -> empty .

    CLOSECURLY      reduce using rule 60 (alt2call -> empty .)
    VAR             reduce using rule 60 (alt2call -> empty .)
    ID              reduce using rule 60 (alt2call -> empty .)
    IF              reduce using rule 60 (alt2call -> empty .)
    OUTPUT          reduce using rule 60 (alt2call -> empty .)
    INPUT           reduce using rule 60 (alt2call -> empty .)
    RETURN          reduce using rule 60 (alt2call -> empty .)
    WHILE           reduce using rule 60 (alt2call -> empty .)
    CLOSEPAREN      reduce using rule 60 (alt2call -> empty .)


state 197

    (75) altcall -> COMMA expresion . altcall
    (57) altcall -> . expresion alt2call
    (58) altcall -> . empty
    (75) altcall -> . COMMA expresion altcall
    (76) altcall -> . CLOSEPAREN SEMICOLON
    (96) expresion -> . exp altexpresion
    (132) empty -> .
    (107) exp -> . termino
    (108) exp -> . termino altexp
    (112) termino -> . factor
    (113) termino -> . factor alttermino
    (124) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (125) factor -> . varcall
    (80) varcall -> . varcte save_const
    (81) varcall -> . varcomplicated save_comp
    (82) varcte -> . TRUE
    (83) varcte -> . FALSE
    (84) varcte -> . CTEFLOAT
    (85) varcte -> . CTESTRING
    (86) varcte -> . CTEINT
    (87) varcomplicated -> . varcomp1
    (88) varcomplicated -> . callfunc
    (89) varcomp1 -> . ID varcomp2
    (56) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 150
    CLOSEPAREN      shift and go to state 151
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)
    OPENPAREN       shift and go to state 113
    TRUE            shift and go to state 122
    FALSE           shift and go to state 123
    CTEFLOAT        shift and go to state 124
    CTESTRING       shift and go to state 125
    CTEINT          shift and go to state 126
    ID              shift and go to state 112

  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 132 (empty -> .) ]

    expresion                      shift and go to state 147
    altcall                        shift and go to state 221
    empty                          shift and go to state 149
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcall                        shift and go to state 119
    varcte                         shift and go to state 120
    varcomplicated                 shift and go to state 121
    varcomp1                       shift and go to state 127
    callfunc                       shift and go to state 128

state 198

    (76) altcall -> CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 76 (altcall -> CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 76 (altcall -> CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 76 (altcall -> CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 76 (altcall -> CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 76 (altcall -> CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 76 (altcall -> CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 76 (altcall -> CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 76 (altcall -> CLOSEPAREN SEMICOLON .)
    CLOSEPAREN      reduce using rule 76 (altcall -> CLOSEPAREN SEMICOLON .)


state 199

    (97) altexpresion -> altexpresion2 save_op . exp
    (107) exp -> . termino
    (108) exp -> . termino altexp
    (112) termino -> . factor
    (113) termino -> . factor alttermino
    (124) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (125) factor -> . varcall
    (80) varcall -> . varcte save_const
    (81) varcall -> . varcomplicated save_comp
    (82) varcte -> . TRUE
    (83) varcte -> . FALSE
    (84) varcte -> . CTEFLOAT
    (85) varcte -> . CTESTRING
    (86) varcte -> . CTEINT
    (87) varcomplicated -> . varcomp1
    (88) varcomplicated -> . callfunc
    (89) varcomp1 -> . ID varcomp2
    (56) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 113
    TRUE            shift and go to state 122
    FALSE           shift and go to state 123
    CTEFLOAT        shift and go to state 124
    CTESTRING       shift and go to state 125
    CTEINT          shift and go to state 126
    ID              shift and go to state 112

    exp                            shift and go to state 222
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcall                        shift and go to state 119
    varcte                         shift and go to state 120
    varcomplicated                 shift and go to state 121
    varcomp1                       shift and go to state 127
    callfunc                       shift and go to state 128

state 200

    (109) altexp -> SUM save_op . termino altexp
    (112) termino -> . factor
    (113) termino -> . factor alttermino
    (124) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (125) factor -> . varcall
    (80) varcall -> . varcte save_const
    (81) varcall -> . varcomplicated save_comp
    (82) varcte -> . TRUE
    (83) varcte -> . FALSE
    (84) varcte -> . CTEFLOAT
    (85) varcte -> . CTESTRING
    (86) varcte -> . CTEINT
    (87) varcomplicated -> . varcomp1
    (88) varcomplicated -> . callfunc
    (89) varcomp1 -> . ID varcomp2
    (56) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 113
    TRUE            shift and go to state 122
    FALSE           shift and go to state 123
    CTEFLOAT        shift and go to state 124
    CTESTRING       shift and go to state 125
    CTEINT          shift and go to state 126
    ID              shift and go to state 112

    termino                        shift and go to state 223
    factor                         shift and go to state 118
    varcall                        shift and go to state 119
    varcte                         shift and go to state 120
    varcomplicated                 shift and go to state 121
    varcomp1                       shift and go to state 127
    callfunc                       shift and go to state 128

state 201

    (110) altexp -> SUBTRACT save_op . termino altexp
    (112) termino -> . factor
    (113) termino -> . factor alttermino
    (124) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (125) factor -> . varcall
    (80) varcall -> . varcte save_const
    (81) varcall -> . varcomplicated save_comp
    (82) varcte -> . TRUE
    (83) varcte -> . FALSE
    (84) varcte -> . CTEFLOAT
    (85) varcte -> . CTESTRING
    (86) varcte -> . CTEINT
    (87) varcomplicated -> . varcomp1
    (88) varcomplicated -> . callfunc
    (89) varcomp1 -> . ID varcomp2
    (56) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 113
    TRUE            shift and go to state 122
    FALSE           shift and go to state 123
    CTEFLOAT        shift and go to state 124
    CTESTRING       shift and go to state 125
    CTEINT          shift and go to state 126
    ID              shift and go to state 112

    termino                        shift and go to state 224
    factor                         shift and go to state 118
    varcall                        shift and go to state 119
    varcte                         shift and go to state 120
    varcomplicated                 shift and go to state 121
    varcomp1                       shift and go to state 127
    callfunc                       shift and go to state 128

state 202

    (114) alttermino -> TIMES save_op . factor alttermino
    (124) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (125) factor -> . varcall
    (80) varcall -> . varcte save_const
    (81) varcall -> . varcomplicated save_comp
    (82) varcte -> . TRUE
    (83) varcte -> . FALSE
    (84) varcte -> . CTEFLOAT
    (85) varcte -> . CTESTRING
    (86) varcte -> . CTEINT
    (87) varcomplicated -> . varcomp1
    (88) varcomplicated -> . callfunc
    (89) varcomp1 -> . ID varcomp2
    (56) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 113
    TRUE            shift and go to state 122
    FALSE           shift and go to state 123
    CTEFLOAT        shift and go to state 124
    CTESTRING       shift and go to state 125
    CTEINT          shift and go to state 126
    ID              shift and go to state 112

    factor                         shift and go to state 225
    varcall                        shift and go to state 119
    varcte                         shift and go to state 120
    varcomplicated                 shift and go to state 121
    varcomp1                       shift and go to state 127
    callfunc                       shift and go to state 128

state 203

    (115) alttermino -> DIV save_op . factor alttermino
    (124) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (125) factor -> . varcall
    (80) varcall -> . varcte save_const
    (81) varcall -> . varcomplicated save_comp
    (82) varcte -> . TRUE
    (83) varcte -> . FALSE
    (84) varcte -> . CTEFLOAT
    (85) varcte -> . CTESTRING
    (86) varcte -> . CTEINT
    (87) varcomplicated -> . varcomp1
    (88) varcomplicated -> . callfunc
    (89) varcomp1 -> . ID varcomp2
    (56) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 113
    TRUE            shift and go to state 122
    FALSE           shift and go to state 123
    CTEFLOAT        shift and go to state 124
    CTESTRING       shift and go to state 125
    CTEINT          shift and go to state 126
    ID              shift and go to state 112

    factor                         shift and go to state 226
    varcall                        shift and go to state 119
    varcte                         shift and go to state 120
    varcomplicated                 shift and go to state 121
    varcomp1                       shift and go to state 127
    callfunc                       shift and go to state 128

state 204

    (126) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY . altcondition
    (127) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY . altcondition ELSE OPENCURLY altcondition
    (128) altcondition -> . estatuto altcondition
    (129) altcondition -> . CLOSECURLY
    (66) estatuto -> . assign
    (67) estatuto -> . condition
    (68) estatuto -> . write
    (69) estatuto -> . read
    (70) estatuto -> . return
    (71) estatuto -> . voidcall
    (72) estatuto -> . while
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (126) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (127) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (119) write -> . OUTPUT save_op OPENPAREN varcall altwrite
    (120) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (118) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (73) voidcall -> . ID OPENPAREN CLOSEPAREN
    (74) voidcall -> . ID OPENPAREN expresion altcall
    (77) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 229
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    altcondition                   shift and go to state 227
    estatuto                       shift and go to state 228
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 205

    (119) write -> OUTPUT save_op OPENPAREN varcall altwrite .

    CLOSECURLY      reduce using rule 119 (write -> OUTPUT save_op OPENPAREN varcall altwrite .)
    VAR             reduce using rule 119 (write -> OUTPUT save_op OPENPAREN varcall altwrite .)
    ID              reduce using rule 119 (write -> OUTPUT save_op OPENPAREN varcall altwrite .)
    IF              reduce using rule 119 (write -> OUTPUT save_op OPENPAREN varcall altwrite .)
    OUTPUT          reduce using rule 119 (write -> OUTPUT save_op OPENPAREN varcall altwrite .)
    INPUT           reduce using rule 119 (write -> OUTPUT save_op OPENPAREN varcall altwrite .)
    RETURN          reduce using rule 119 (write -> OUTPUT save_op OPENPAREN varcall altwrite .)
    WHILE           reduce using rule 119 (write -> OUTPUT save_op OPENPAREN varcall altwrite .)


state 206

    (121) altwrite -> COMMA . save_op varcall altwrite
    (122) altwrite -> COMMA . save_op expresion altwrite
    (117) save_op -> .

    TRUE            reduce using rule 117 (save_op -> .)
    FALSE           reduce using rule 117 (save_op -> .)
    CTEFLOAT        reduce using rule 117 (save_op -> .)
    CTESTRING       reduce using rule 117 (save_op -> .)
    CTEINT          reduce using rule 117 (save_op -> .)
    ID              reduce using rule 117 (save_op -> .)
    OPENPAREN       reduce using rule 117 (save_op -> .)

    save_op                        shift and go to state 230

state 207

    (123) altwrite -> CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 231


state 208

    (120) write -> OUTPUT save_op OPENPAREN expresion altwrite .

    CLOSECURLY      reduce using rule 120 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    VAR             reduce using rule 120 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    ID              reduce using rule 120 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    IF              reduce using rule 120 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    OUTPUT          reduce using rule 120 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    INPUT           reduce using rule 120 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    RETURN          reduce using rule 120 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    WHILE           reduce using rule 120 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)


state 209

    (118) read -> INPUT save_op OPENPAREN ID save_comp . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 232


state 210

    (77) while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY . altwhile
    (78) altwhile -> . estatuto altwhile
    (79) altwhile -> . CLOSECURLY
    (66) estatuto -> . assign
    (67) estatuto -> . condition
    (68) estatuto -> . write
    (69) estatuto -> . read
    (70) estatuto -> . return
    (71) estatuto -> . voidcall
    (72) estatuto -> . while
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (126) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (127) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (119) write -> . OUTPUT save_op OPENPAREN varcall altwrite
    (120) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (118) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (73) voidcall -> . ID OPENPAREN CLOSEPAREN
    (74) voidcall -> . ID OPENPAREN expresion altcall
    (77) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 235
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    altwhile                       shift and go to state 233
    estatuto                       shift and go to state 234
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 211

    (21) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN . OPENCURLY alt2const

    OPENCURLY       shift and go to state 236


state 212

    (38) listidsaltp -> COMMA listids .

    TWODOTS         reduce using rule 38 (listidsaltp -> COMMA listids .)


state 213

    (53) altparams -> COMMA ID TWODOTS type . save_params altparams
    (55) save_params -> .

    COMMA           reduce using rule 55 (save_params -> .)
    CLOSEPAREN      reduce using rule 55 (save_params -> .)

    save_params                    shift and go to state 237

state 214

    (46) alt3func -> var alt3func .

    CLASS           reduce using rule 46 (alt3func -> var alt3func .)
    VAR             reduce using rule 46 (alt3func -> var alt3func .)
    FUNC            reduce using rule 46 (alt3func -> var alt3func .)
    MAIN            reduce using rule 46 (alt3func -> var alt3func .)
    CONSTRUCTOR     reduce using rule 46 (alt3func -> var alt3func .)


state 215

    (47) alt3func -> estatuto alt3func .

    CLASS           reduce using rule 47 (alt3func -> estatuto alt3func .)
    VAR             reduce using rule 47 (alt3func -> estatuto alt3func .)
    FUNC            reduce using rule 47 (alt3func -> estatuto alt3func .)
    MAIN            reduce using rule 47 (alt3func -> estatuto alt3func .)
    CONSTRUCTOR     reduce using rule 47 (alt3func -> estatuto alt3func .)


state 216

    (48) alt3func -> CLOSECURLY remove_function_scope .

    CLASS           reduce using rule 48 (alt3func -> CLOSECURLY remove_function_scope .)
    VAR             reduce using rule 48 (alt3func -> CLOSECURLY remove_function_scope .)
    FUNC            reduce using rule 48 (alt3func -> CLOSECURLY remove_function_scope .)
    MAIN            reduce using rule 48 (alt3func -> CLOSECURLY remove_function_scope .)
    CONSTRUCTOR     reduce using rule 48 (alt3func -> CLOSECURLY remove_function_scope .)


state 217

    (130) assign -> ID save_comp EQUALS save_op expresion SEMICOLON .

    CLOSECURLY      reduce using rule 130 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    VAR             reduce using rule 130 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    ID              reduce using rule 130 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    IF              reduce using rule 130 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    OUTPUT          reduce using rule 130 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    INPUT           reduce using rule 130 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    RETURN          reduce using rule 130 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    WHILE           reduce using rule 130 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)


state 218

    (56) callfunc -> ID OPENPAREN altcall CLOSEPAREN .

    TIMES           reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    DIV             reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SUM             reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SUBTRACT        reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SAMEAS          reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    BIGGERTHAN      reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    BIGGEREQUALSTHAN reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SMALLTHAN       reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SMALLEQUALSTHAN reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    DIFFERENTTHAN   reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    AND             reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OR              reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    COMMA           reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OPENPAREN       reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    TRUE            reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    FALSE           reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTEFLOAT        reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTESTRING       reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTEINT          reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    ID              reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CLOSECURLY      reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    VAR             reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    IF              reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OUTPUT          reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    INPUT           reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    RETURN          reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    WHILE           reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SEMICOLON       reduce using rule 56 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)


state 219

    (124) factor -> OPENPAREN save_op expresion CLOSEPAREN . save_op
    (117) save_op -> .

    TIMES           reduce using rule 117 (save_op -> .)
    DIV             reduce using rule 117 (save_op -> .)
    SUM             reduce using rule 117 (save_op -> .)
    SUBTRACT        reduce using rule 117 (save_op -> .)
    SAMEAS          reduce using rule 117 (save_op -> .)
    BIGGERTHAN      reduce using rule 117 (save_op -> .)
    BIGGEREQUALSTHAN reduce using rule 117 (save_op -> .)
    SMALLTHAN       reduce using rule 117 (save_op -> .)
    SMALLEQUALSTHAN reduce using rule 117 (save_op -> .)
    DIFFERENTTHAN   reduce using rule 117 (save_op -> .)
    AND             reduce using rule 117 (save_op -> .)
    OR              reduce using rule 117 (save_op -> .)
    COMMA           reduce using rule 117 (save_op -> .)
    CLOSEPAREN      reduce using rule 117 (save_op -> .)
    OPENPAREN       reduce using rule 117 (save_op -> .)
    TRUE            reduce using rule 117 (save_op -> .)
    FALSE           reduce using rule 117 (save_op -> .)
    CTEFLOAT        reduce using rule 117 (save_op -> .)
    CTESTRING       reduce using rule 117 (save_op -> .)
    CTEINT          reduce using rule 117 (save_op -> .)
    ID              reduce using rule 117 (save_op -> .)
    CLOSECURLY      reduce using rule 117 (save_op -> .)
    VAR             reduce using rule 117 (save_op -> .)
    IF              reduce using rule 117 (save_op -> .)
    OUTPUT          reduce using rule 117 (save_op -> .)
    INPUT           reduce using rule 117 (save_op -> .)
    RETURN          reduce using rule 117 (save_op -> .)
    WHILE           reduce using rule 117 (save_op -> .)
    SEMICOLON       reduce using rule 117 (save_op -> .)

    save_op                        shift and go to state 238

state 220

    (59) alt2call -> COMMA altcall .

    CLOSECURLY      reduce using rule 59 (alt2call -> COMMA altcall .)
    VAR             reduce using rule 59 (alt2call -> COMMA altcall .)
    ID              reduce using rule 59 (alt2call -> COMMA altcall .)
    IF              reduce using rule 59 (alt2call -> COMMA altcall .)
    OUTPUT          reduce using rule 59 (alt2call -> COMMA altcall .)
    INPUT           reduce using rule 59 (alt2call -> COMMA altcall .)
    RETURN          reduce using rule 59 (alt2call -> COMMA altcall .)
    WHILE           reduce using rule 59 (alt2call -> COMMA altcall .)
    CLOSEPAREN      reduce using rule 59 (alt2call -> COMMA altcall .)


state 221

    (75) altcall -> COMMA expresion altcall .

    CLOSECURLY      reduce using rule 75 (altcall -> COMMA expresion altcall .)
    VAR             reduce using rule 75 (altcall -> COMMA expresion altcall .)
    ID              reduce using rule 75 (altcall -> COMMA expresion altcall .)
    IF              reduce using rule 75 (altcall -> COMMA expresion altcall .)
    OUTPUT          reduce using rule 75 (altcall -> COMMA expresion altcall .)
    INPUT           reduce using rule 75 (altcall -> COMMA expresion altcall .)
    RETURN          reduce using rule 75 (altcall -> COMMA expresion altcall .)
    WHILE           reduce using rule 75 (altcall -> COMMA expresion altcall .)
    CLOSEPAREN      reduce using rule 75 (altcall -> COMMA expresion altcall .)


state 222

    (97) altexpresion -> altexpresion2 save_op exp .

    COMMA           reduce using rule 97 (altexpresion -> altexpresion2 save_op exp .)
    CLOSEPAREN      reduce using rule 97 (altexpresion -> altexpresion2 save_op exp .)
    OPENPAREN       reduce using rule 97 (altexpresion -> altexpresion2 save_op exp .)
    TRUE            reduce using rule 97 (altexpresion -> altexpresion2 save_op exp .)
    FALSE           reduce using rule 97 (altexpresion -> altexpresion2 save_op exp .)
    CTEFLOAT        reduce using rule 97 (altexpresion -> altexpresion2 save_op exp .)
    CTESTRING       reduce using rule 97 (altexpresion -> altexpresion2 save_op exp .)
    CTEINT          reduce using rule 97 (altexpresion -> altexpresion2 save_op exp .)
    ID              reduce using rule 97 (altexpresion -> altexpresion2 save_op exp .)
    CLOSECURLY      reduce using rule 97 (altexpresion -> altexpresion2 save_op exp .)
    VAR             reduce using rule 97 (altexpresion -> altexpresion2 save_op exp .)
    IF              reduce using rule 97 (altexpresion -> altexpresion2 save_op exp .)
    OUTPUT          reduce using rule 97 (altexpresion -> altexpresion2 save_op exp .)
    INPUT           reduce using rule 97 (altexpresion -> altexpresion2 save_op exp .)
    RETURN          reduce using rule 97 (altexpresion -> altexpresion2 save_op exp .)
    WHILE           reduce using rule 97 (altexpresion -> altexpresion2 save_op exp .)
    SEMICOLON       reduce using rule 97 (altexpresion -> altexpresion2 save_op exp .)


state 223

    (109) altexp -> SUM save_op termino . altexp
    (109) altexp -> . SUM save_op termino altexp
    (110) altexp -> . SUBTRACT save_op termino altexp
    (111) altexp -> . empty
    (132) empty -> .

    SUM             shift and go to state 164
    SUBTRACT        shift and go to state 165
    SAMEAS          reduce using rule 132 (empty -> .)
    BIGGERTHAN      reduce using rule 132 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 132 (empty -> .)
    SMALLTHAN       reduce using rule 132 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 132 (empty -> .)
    DIFFERENTTHAN   reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    OPENPAREN       reduce using rule 132 (empty -> .)
    TRUE            reduce using rule 132 (empty -> .)
    FALSE           reduce using rule 132 (empty -> .)
    CTEFLOAT        reduce using rule 132 (empty -> .)
    CTESTRING       reduce using rule 132 (empty -> .)
    CTEINT          reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)

    altexp                         shift and go to state 239
    empty                          shift and go to state 166

state 224

    (110) altexp -> SUBTRACT save_op termino . altexp
    (109) altexp -> . SUM save_op termino altexp
    (110) altexp -> . SUBTRACT save_op termino altexp
    (111) altexp -> . empty
    (132) empty -> .

    SUM             shift and go to state 164
    SUBTRACT        shift and go to state 165
    SAMEAS          reduce using rule 132 (empty -> .)
    BIGGERTHAN      reduce using rule 132 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 132 (empty -> .)
    SMALLTHAN       reduce using rule 132 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 132 (empty -> .)
    DIFFERENTTHAN   reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    OPENPAREN       reduce using rule 132 (empty -> .)
    TRUE            reduce using rule 132 (empty -> .)
    FALSE           reduce using rule 132 (empty -> .)
    CTEFLOAT        reduce using rule 132 (empty -> .)
    CTESTRING       reduce using rule 132 (empty -> .)
    CTEINT          reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)

    altexp                         shift and go to state 240
    empty                          shift and go to state 166

state 225

    (114) alttermino -> TIMES save_op factor . alttermino
    (114) alttermino -> . TIMES save_op factor alttermino
    (115) alttermino -> . DIV save_op factor alttermino
    (116) alttermino -> . empty
    (132) empty -> .

    TIMES           shift and go to state 168
    DIV             shift and go to state 169
    SUM             reduce using rule 132 (empty -> .)
    SUBTRACT        reduce using rule 132 (empty -> .)
    SAMEAS          reduce using rule 132 (empty -> .)
    BIGGERTHAN      reduce using rule 132 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 132 (empty -> .)
    SMALLTHAN       reduce using rule 132 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 132 (empty -> .)
    DIFFERENTTHAN   reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    OPENPAREN       reduce using rule 132 (empty -> .)
    TRUE            reduce using rule 132 (empty -> .)
    FALSE           reduce using rule 132 (empty -> .)
    CTEFLOAT        reduce using rule 132 (empty -> .)
    CTESTRING       reduce using rule 132 (empty -> .)
    CTEINT          reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)

    alttermino                     shift and go to state 241
    empty                          shift and go to state 170

state 226

    (115) alttermino -> DIV save_op factor . alttermino
    (114) alttermino -> . TIMES save_op factor alttermino
    (115) alttermino -> . DIV save_op factor alttermino
    (116) alttermino -> . empty
    (132) empty -> .

    TIMES           shift and go to state 168
    DIV             shift and go to state 169
    SUM             reduce using rule 132 (empty -> .)
    SUBTRACT        reduce using rule 132 (empty -> .)
    SAMEAS          reduce using rule 132 (empty -> .)
    BIGGERTHAN      reduce using rule 132 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 132 (empty -> .)
    SMALLTHAN       reduce using rule 132 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 132 (empty -> .)
    DIFFERENTTHAN   reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    OPENPAREN       reduce using rule 132 (empty -> .)
    TRUE            reduce using rule 132 (empty -> .)
    FALSE           reduce using rule 132 (empty -> .)
    CTEFLOAT        reduce using rule 132 (empty -> .)
    CTESTRING       reduce using rule 132 (empty -> .)
    CTEINT          reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)

    alttermino                     shift and go to state 242
    empty                          shift and go to state 170

state 227

    (126) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .
    (127) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition . ELSE OPENCURLY altcondition

    CLOSECURLY      reduce using rule 126 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    VAR             reduce using rule 126 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    ID              reduce using rule 126 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    IF              reduce using rule 126 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    OUTPUT          reduce using rule 126 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    INPUT           reduce using rule 126 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    RETURN          reduce using rule 126 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    WHILE           reduce using rule 126 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    ELSE            shift and go to state 243


state 228

    (128) altcondition -> estatuto . altcondition
    (128) altcondition -> . estatuto altcondition
    (129) altcondition -> . CLOSECURLY
    (66) estatuto -> . assign
    (67) estatuto -> . condition
    (68) estatuto -> . write
    (69) estatuto -> . read
    (70) estatuto -> . return
    (71) estatuto -> . voidcall
    (72) estatuto -> . while
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (126) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (127) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (119) write -> . OUTPUT save_op OPENPAREN varcall altwrite
    (120) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (118) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (73) voidcall -> . ID OPENPAREN CLOSEPAREN
    (74) voidcall -> . ID OPENPAREN expresion altcall
    (77) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 229
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 228
    altcondition                   shift and go to state 244
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 229

    (129) altcondition -> CLOSECURLY .

    ELSE            reduce using rule 129 (altcondition -> CLOSECURLY .)
    CLOSECURLY      reduce using rule 129 (altcondition -> CLOSECURLY .)
    VAR             reduce using rule 129 (altcondition -> CLOSECURLY .)
    ID              reduce using rule 129 (altcondition -> CLOSECURLY .)
    IF              reduce using rule 129 (altcondition -> CLOSECURLY .)
    OUTPUT          reduce using rule 129 (altcondition -> CLOSECURLY .)
    INPUT           reduce using rule 129 (altcondition -> CLOSECURLY .)
    RETURN          reduce using rule 129 (altcondition -> CLOSECURLY .)
    WHILE           reduce using rule 129 (altcondition -> CLOSECURLY .)


state 230

    (121) altwrite -> COMMA save_op . varcall altwrite
    (122) altwrite -> COMMA save_op . expresion altwrite
    (80) varcall -> . varcte save_const
    (81) varcall -> . varcomplicated save_comp
    (96) expresion -> . exp altexpresion
    (82) varcte -> . TRUE
    (83) varcte -> . FALSE
    (84) varcte -> . CTEFLOAT
    (85) varcte -> . CTESTRING
    (86) varcte -> . CTEINT
    (87) varcomplicated -> . varcomp1
    (88) varcomplicated -> . callfunc
    (107) exp -> . termino
    (108) exp -> . termino altexp
    (89) varcomp1 -> . ID varcomp2
    (56) callfunc -> . ID OPENPAREN altcall CLOSEPAREN
    (112) termino -> . factor
    (113) termino -> . factor alttermino
    (124) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (125) factor -> . varcall

    TRUE            shift and go to state 122
    FALSE           shift and go to state 123
    CTEFLOAT        shift and go to state 124
    CTESTRING       shift and go to state 125
    CTEINT          shift and go to state 126
    ID              shift and go to state 112
    OPENPAREN       shift and go to state 113

    varcall                        shift and go to state 245
    expresion                      shift and go to state 246
    varcte                         shift and go to state 120
    varcomplicated                 shift and go to state 121
    exp                            shift and go to state 116
    varcomp1                       shift and go to state 127
    callfunc                       shift and go to state 128
    termino                        shift and go to state 117
    factor                         shift and go to state 118

state 231

    (123) altwrite -> CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 123 (altwrite -> CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 123 (altwrite -> CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 123 (altwrite -> CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 123 (altwrite -> CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 123 (altwrite -> CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 123 (altwrite -> CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 123 (altwrite -> CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 123 (altwrite -> CLOSEPAREN SEMICOLON .)


state 232

    (118) read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 247


state 233

    (77) while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .

    CLOSECURLY      reduce using rule 77 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    VAR             reduce using rule 77 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    ID              reduce using rule 77 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    IF              reduce using rule 77 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    OUTPUT          reduce using rule 77 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    INPUT           reduce using rule 77 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    RETURN          reduce using rule 77 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    WHILE           reduce using rule 77 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)


state 234

    (78) altwhile -> estatuto . altwhile
    (78) altwhile -> . estatuto altwhile
    (79) altwhile -> . CLOSECURLY
    (66) estatuto -> . assign
    (67) estatuto -> . condition
    (68) estatuto -> . write
    (69) estatuto -> . read
    (70) estatuto -> . return
    (71) estatuto -> . voidcall
    (72) estatuto -> . while
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (126) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (127) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (119) write -> . OUTPUT save_op OPENPAREN varcall altwrite
    (120) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (118) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (73) voidcall -> . ID OPENPAREN CLOSEPAREN
    (74) voidcall -> . ID OPENPAREN expresion altcall
    (77) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 235
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 234
    altwhile                       shift and go to state 248
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 235

    (79) altwhile -> CLOSECURLY .

    CLOSECURLY      reduce using rule 79 (altwhile -> CLOSECURLY .)
    VAR             reduce using rule 79 (altwhile -> CLOSECURLY .)
    ID              reduce using rule 79 (altwhile -> CLOSECURLY .)
    IF              reduce using rule 79 (altwhile -> CLOSECURLY .)
    OUTPUT          reduce using rule 79 (altwhile -> CLOSECURLY .)
    INPUT           reduce using rule 79 (altwhile -> CLOSECURLY .)
    RETURN          reduce using rule 79 (altwhile -> CLOSECURLY .)
    WHILE           reduce using rule 79 (altwhile -> CLOSECURLY .)


state 236

    (21) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY . alt2const
    (24) alt2const -> . var alt2const
    (25) alt2const -> . estatuto alt2const
    (26) alt2const -> . CLOSECURLY remove_constructor_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (66) estatuto -> . assign
    (67) estatuto -> . condition
    (68) estatuto -> . write
    (69) estatuto -> . read
    (70) estatuto -> . return
    (71) estatuto -> . voidcall
    (72) estatuto -> . while
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (126) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (127) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (119) write -> . OUTPUT save_op OPENPAREN varcall altwrite
    (120) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (118) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (73) voidcall -> . ID OPENPAREN CLOSEPAREN
    (74) voidcall -> . ID OPENPAREN expresion altcall
    (77) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 252
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    alt2const                      shift and go to state 249
    var                            shift and go to state 250
    estatuto                       shift and go to state 251
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 237

    (53) altparams -> COMMA ID TWODOTS type save_params . altparams
    (53) altparams -> . COMMA ID TWODOTS type save_params altparams
    (54) altparams -> . empty
    (132) empty -> .

    COMMA           shift and go to state 108
    CLOSEPAREN      reduce using rule 132 (empty -> .)

    altparams                      shift and go to state 253
    empty                          shift and go to state 109

state 238

    (124) factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .

    TIMES           reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    DIV             reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    SUM             reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    SUBTRACT        reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    SAMEAS          reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    BIGGERTHAN      reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    BIGGEREQUALSTHAN reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    SMALLTHAN       reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    SMALLEQUALSTHAN reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    DIFFERENTTHAN   reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    AND             reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    OR              reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    COMMA           reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    CLOSEPAREN      reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    OPENPAREN       reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    TRUE            reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    FALSE           reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    CTEFLOAT        reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    CTESTRING       reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    CTEINT          reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    ID              reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    CLOSECURLY      reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    VAR             reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    IF              reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    OUTPUT          reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    INPUT           reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    RETURN          reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    WHILE           reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    SEMICOLON       reduce using rule 124 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)


state 239

    (109) altexp -> SUM save_op termino altexp .

    SAMEAS          reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    BIGGERTHAN      reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    SMALLTHAN       reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    SMALLEQUALSTHAN reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    DIFFERENTTHAN   reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    AND             reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    OR              reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    COMMA           reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    CLOSEPAREN      reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    OPENPAREN       reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    TRUE            reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    FALSE           reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    CTEFLOAT        reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    CTESTRING       reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    CTEINT          reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    ID              reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    CLOSECURLY      reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    VAR             reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    IF              reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    OUTPUT          reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    INPUT           reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    RETURN          reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    WHILE           reduce using rule 109 (altexp -> SUM save_op termino altexp .)
    SEMICOLON       reduce using rule 109 (altexp -> SUM save_op termino altexp .)


state 240

    (110) altexp -> SUBTRACT save_op termino altexp .

    SAMEAS          reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    BIGGERTHAN      reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    SMALLTHAN       reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    SMALLEQUALSTHAN reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    DIFFERENTTHAN   reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    AND             reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    OR              reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    COMMA           reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    CLOSEPAREN      reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    OPENPAREN       reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    TRUE            reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    FALSE           reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    CTEFLOAT        reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    CTESTRING       reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    CTEINT          reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    ID              reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    CLOSECURLY      reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    VAR             reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    IF              reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    OUTPUT          reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    INPUT           reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    RETURN          reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    WHILE           reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)
    SEMICOLON       reduce using rule 110 (altexp -> SUBTRACT save_op termino altexp .)


state 241

    (114) alttermino -> TIMES save_op factor alttermino .

    SUM             reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    SUBTRACT        reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    SAMEAS          reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    BIGGERTHAN      reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    SMALLTHAN       reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    DIFFERENTTHAN   reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    AND             reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    OR              reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    COMMA           reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    CLOSEPAREN      reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    OPENPAREN       reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    TRUE            reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    FALSE           reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    CTEFLOAT        reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    CTESTRING       reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    CTEINT          reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    ID              reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    CLOSECURLY      reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    VAR             reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    IF              reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    OUTPUT          reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    INPUT           reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    RETURN          reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    WHILE           reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)
    SEMICOLON       reduce using rule 114 (alttermino -> TIMES save_op factor alttermino .)


state 242

    (115) alttermino -> DIV save_op factor alttermino .

    SUM             reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    SUBTRACT        reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    SAMEAS          reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    BIGGERTHAN      reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    SMALLTHAN       reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    DIFFERENTTHAN   reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    AND             reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    OR              reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    COMMA           reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    CLOSEPAREN      reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    OPENPAREN       reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    TRUE            reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    FALSE           reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    CTEFLOAT        reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    CTESTRING       reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    CTEINT          reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    ID              reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    CLOSECURLY      reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    VAR             reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    IF              reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    OUTPUT          reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    INPUT           reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    RETURN          reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    WHILE           reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)
    SEMICOLON       reduce using rule 115 (alttermino -> DIV save_op factor alttermino .)


state 243

    (127) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE . OPENCURLY altcondition

    OPENCURLY       shift and go to state 254


state 244

    (128) altcondition -> estatuto altcondition .

    ELSE            reduce using rule 128 (altcondition -> estatuto altcondition .)
    CLOSECURLY      reduce using rule 128 (altcondition -> estatuto altcondition .)
    VAR             reduce using rule 128 (altcondition -> estatuto altcondition .)
    ID              reduce using rule 128 (altcondition -> estatuto altcondition .)
    IF              reduce using rule 128 (altcondition -> estatuto altcondition .)
    OUTPUT          reduce using rule 128 (altcondition -> estatuto altcondition .)
    INPUT           reduce using rule 128 (altcondition -> estatuto altcondition .)
    RETURN          reduce using rule 128 (altcondition -> estatuto altcondition .)
    WHILE           reduce using rule 128 (altcondition -> estatuto altcondition .)


state 245

    (121) altwrite -> COMMA save_op varcall . altwrite
    (125) factor -> varcall .
    (121) altwrite -> . COMMA save_op varcall altwrite
    (122) altwrite -> . COMMA save_op expresion altwrite
    (123) altwrite -> . CLOSEPAREN SEMICOLON

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for CLOSEPAREN resolved as shift
    TIMES           reduce using rule 125 (factor -> varcall .)
    DIV             reduce using rule 125 (factor -> varcall .)
    SUM             reduce using rule 125 (factor -> varcall .)
    SUBTRACT        reduce using rule 125 (factor -> varcall .)
    SAMEAS          reduce using rule 125 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 125 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 125 (factor -> varcall .)
    SMALLTHAN       reduce using rule 125 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 125 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 125 (factor -> varcall .)
    AND             reduce using rule 125 (factor -> varcall .)
    OR              reduce using rule 125 (factor -> varcall .)
    COMMA           shift and go to state 206
    CLOSEPAREN      shift and go to state 207

  ! COMMA           [ reduce using rule 125 (factor -> varcall .) ]
  ! CLOSEPAREN      [ reduce using rule 125 (factor -> varcall .) ]

    altwrite                       shift and go to state 255

state 246

    (122) altwrite -> COMMA save_op expresion . altwrite
    (121) altwrite -> . COMMA save_op varcall altwrite
    (122) altwrite -> . COMMA save_op expresion altwrite
    (123) altwrite -> . CLOSEPAREN SEMICOLON

    COMMA           shift and go to state 206
    CLOSEPAREN      shift and go to state 207

    altwrite                       shift and go to state 256

state 247

    (118) read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 118 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 118 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 118 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 118 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 118 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 118 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 118 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 118 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)


state 248

    (78) altwhile -> estatuto altwhile .

    CLOSECURLY      reduce using rule 78 (altwhile -> estatuto altwhile .)
    VAR             reduce using rule 78 (altwhile -> estatuto altwhile .)
    ID              reduce using rule 78 (altwhile -> estatuto altwhile .)
    IF              reduce using rule 78 (altwhile -> estatuto altwhile .)
    OUTPUT          reduce using rule 78 (altwhile -> estatuto altwhile .)
    INPUT           reduce using rule 78 (altwhile -> estatuto altwhile .)
    RETURN          reduce using rule 78 (altwhile -> estatuto altwhile .)
    WHILE           reduce using rule 78 (altwhile -> estatuto altwhile .)


state 249

    (21) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const .

    CLOSECURLY      reduce using rule 21 (constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const .)


state 250

    (24) alt2const -> var . alt2const
    (24) alt2const -> . var alt2const
    (25) alt2const -> . estatuto alt2const
    (26) alt2const -> . CLOSECURLY remove_constructor_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (66) estatuto -> . assign
    (67) estatuto -> . condition
    (68) estatuto -> . write
    (69) estatuto -> . read
    (70) estatuto -> . return
    (71) estatuto -> . voidcall
    (72) estatuto -> . while
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (126) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (127) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (119) write -> . OUTPUT save_op OPENPAREN varcall altwrite
    (120) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (118) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (73) voidcall -> . ID OPENPAREN CLOSEPAREN
    (74) voidcall -> . ID OPENPAREN expresion altcall
    (77) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 252
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    var                            shift and go to state 250
    alt2const                      shift and go to state 257
    estatuto                       shift and go to state 251
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 251

    (25) alt2const -> estatuto . alt2const
    (24) alt2const -> . var alt2const
    (25) alt2const -> . estatuto alt2const
    (26) alt2const -> . CLOSECURLY remove_constructor_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (66) estatuto -> . assign
    (67) estatuto -> . condition
    (68) estatuto -> . write
    (69) estatuto -> . read
    (70) estatuto -> . return
    (71) estatuto -> . voidcall
    (72) estatuto -> . while
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (126) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (127) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (119) write -> . OUTPUT save_op OPENPAREN varcall altwrite
    (120) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (118) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (73) voidcall -> . ID OPENPAREN CLOSEPAREN
    (74) voidcall -> . ID OPENPAREN expresion altcall
    (77) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 252
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 251
    alt2const                      shift and go to state 258
    var                            shift and go to state 250
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 252

    (26) alt2const -> CLOSECURLY . remove_constructor_scope
    (28) remove_constructor_scope -> .

    CLOSECURLY      reduce using rule 28 (remove_constructor_scope -> .)

    remove_constructor_scope       shift and go to state 259

state 253

    (53) altparams -> COMMA ID TWODOTS type save_params altparams .

    CLOSEPAREN      reduce using rule 53 (altparams -> COMMA ID TWODOTS type save_params altparams .)


state 254

    (127) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY . altcondition
    (128) altcondition -> . estatuto altcondition
    (129) altcondition -> . CLOSECURLY
    (66) estatuto -> . assign
    (67) estatuto -> . condition
    (68) estatuto -> . write
    (69) estatuto -> . read
    (70) estatuto -> . return
    (71) estatuto -> . voidcall
    (72) estatuto -> . while
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (126) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (127) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (119) write -> . OUTPUT save_op OPENPAREN varcall altwrite
    (120) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (118) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (73) voidcall -> . ID OPENPAREN CLOSEPAREN
    (74) voidcall -> . ID OPENPAREN expresion altcall
    (77) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 229
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    altcondition                   shift and go to state 260
    estatuto                       shift and go to state 228
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 255

    (121) altwrite -> COMMA save_op varcall altwrite .

    CLOSECURLY      reduce using rule 121 (altwrite -> COMMA save_op varcall altwrite .)
    VAR             reduce using rule 121 (altwrite -> COMMA save_op varcall altwrite .)
    ID              reduce using rule 121 (altwrite -> COMMA save_op varcall altwrite .)
    IF              reduce using rule 121 (altwrite -> COMMA save_op varcall altwrite .)
    OUTPUT          reduce using rule 121 (altwrite -> COMMA save_op varcall altwrite .)
    INPUT           reduce using rule 121 (altwrite -> COMMA save_op varcall altwrite .)
    RETURN          reduce using rule 121 (altwrite -> COMMA save_op varcall altwrite .)
    WHILE           reduce using rule 121 (altwrite -> COMMA save_op varcall altwrite .)


state 256

    (122) altwrite -> COMMA save_op expresion altwrite .

    CLOSECURLY      reduce using rule 122 (altwrite -> COMMA save_op expresion altwrite .)
    VAR             reduce using rule 122 (altwrite -> COMMA save_op expresion altwrite .)
    ID              reduce using rule 122 (altwrite -> COMMA save_op expresion altwrite .)
    IF              reduce using rule 122 (altwrite -> COMMA save_op expresion altwrite .)
    OUTPUT          reduce using rule 122 (altwrite -> COMMA save_op expresion altwrite .)
    INPUT           reduce using rule 122 (altwrite -> COMMA save_op expresion altwrite .)
    RETURN          reduce using rule 122 (altwrite -> COMMA save_op expresion altwrite .)
    WHILE           reduce using rule 122 (altwrite -> COMMA save_op expresion altwrite .)


state 257

    (24) alt2const -> var alt2const .

    CLOSECURLY      reduce using rule 24 (alt2const -> var alt2const .)


state 258

    (25) alt2const -> estatuto alt2const .

    CLOSECURLY      reduce using rule 25 (alt2const -> estatuto alt2const .)


state 259

    (26) alt2const -> CLOSECURLY remove_constructor_scope .

    CLOSECURLY      reduce using rule 26 (alt2const -> CLOSECURLY remove_constructor_scope .)


state 260

    (127) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .

    CLOSECURLY      reduce using rule 127 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    VAR             reduce using rule 127 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    ID              reduce using rule 127 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    IF              reduce using rule 127 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    OUTPUT          reduce using rule 127 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    INPUT           reduce using rule 127 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    RETURN          reduce using rule 127 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    WHILE           reduce using rule 127 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OPENPAREN in state 112 resolved as shift
WARNING: shift/reduce conflict for ID in state 115 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 143 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 174 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 174 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 195 resolved as shift
WARNING: shift/reduce conflict for ID in state 195 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 197 resolved as shift
WARNING: shift/reduce conflict for ID in state 197 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 245 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 245 resolved as shift
WARNING: reduce/reduce conflict in state 117 resolved using rule (exp -> termino)
WARNING: rejected rule (empty -> <empty>) in state 117
WARNING: reduce/reduce conflict in state 118 resolved using rule (termino -> factor)
WARNING: rejected rule (empty -> <empty>) in state 118
