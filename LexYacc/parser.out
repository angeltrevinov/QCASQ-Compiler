Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID save_program SEMICOLON altprogram
Rule 2     altprogram -> class altprogram
Rule 3     altprogram -> var altprogram
Rule 4     altprogram -> function altprogram
Rule 5     altprogram -> main remove_class_scope
Rule 6     save_program -> <empty>
Rule 7     main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain
Rule 8     altmain -> var altmain
Rule 9     altmain -> estatuto altmain
Rule 10    altmain -> CLOSECURLY
Rule 11    save_main -> <empty>
Rule 12    class -> CLASS ID altclass save_class OPENCURLY alt2class
Rule 13    altclass -> TWODOTS ID
Rule 14    altclass -> empty
Rule 15    alt2class -> var alt2class
Rule 16    alt2class -> function alt2class
Rule 17    alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope
Rule 18    save_class -> <empty>
Rule 19    remove_class_scope -> <empty>
Rule 20    constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const
Rule 21    altconst -> params
Rule 22    altconst -> empty
Rule 23    alt2const -> var alt2const
Rule 24    alt2const -> estatuto alt2const
Rule 25    alt2const -> CLOSECURLY
Rule 26    save_constructor -> <empty>
Rule 27    var -> VAR listids TWODOTS type save_vars SEMICOLON
Rule 28    save_vars -> <empty>
Rule 29    listids -> ID save_var_name array listidsalty
Rule 30    listidsalty -> COMMA listids
Rule 31    listidsalty -> empty
Rule 32    array -> OPENBRACKET expresion CLOSEBRACKET empty_pv array2
Rule 33    array -> empty
Rule 34    array2 -> OPENBRACKET expresion CLOSEBRACKET empty_pv
Rule 35    array2 -> empty
Rule 36    save_var_name -> <empty>
Rule 37    function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
Rule 38    altfunc -> params
Rule 39    altfunc -> empty
Rule 40    alt2func -> TWODOTS type
Rule 41    alt2func -> empty
Rule 42    alt3func -> var alt3func
Rule 43    alt3func -> estatuto alt3func
Rule 44    alt3func -> CLOSECURLY remove_function_scope
Rule 45    save_function -> <empty>
Rule 46    store_params -> <empty>
Rule 47    remove_function_scope -> <empty>
Rule 48    params -> ID TWODOTS type save_params altparams
Rule 49    altparams -> COMMA ID TWODOTS type save_params altparams
Rule 50    altparams -> empty
Rule 51    save_params -> <empty>
Rule 52    callfunc -> ID check_exists_func OPENPAREN altcall CLOSEPAREN
Rule 53    altcall -> expresion generate_param_quad alt2call
Rule 54    altcall -> empty
Rule 55    alt2call -> COMMA altcall
Rule 56    alt2call -> empty
Rule 57    generate_param_quad -> <empty>
Rule 58    check_exists_func -> <empty>
Rule 59    type -> INT
Rule 60    type -> FLOAT
Rule 61    type -> STRING
Rule 62    type -> ID
Rule 63    type -> BOOL
Rule 64    estatuto -> assign empty_pv
Rule 65    estatuto -> condition empty_pv
Rule 66    estatuto -> write empty_pv
Rule 67    estatuto -> read empty_pv
Rule 68    estatuto -> return empty_pv
Rule 69    estatuto -> voidcall empty_pv
Rule 70    estatuto -> while empty_pv
Rule 71    voidcall -> callfunc SEMICOLON
Rule 72    voidcall -> ID DOT voidcall
Rule 73    empty_pv -> <empty>
Rule 74    while -> WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while
Rule 75    altwhile -> estatuto altwhile
Rule 76    altwhile -> CLOSECURLY
Rule 77    add_stack_jump -> <empty>
Rule 78    end_while -> <empty>
Rule 79    varcall -> varcte save_const
Rule 80    varcall -> varcomplicated save_comp
Rule 81    varcte -> TRUE
Rule 82    varcte -> FALSE
Rule 83    varcte -> CTEFLOAT
Rule 84    varcte -> CTESTRING
Rule 85    varcte -> CTEINT
Rule 86    varcomplicated -> varcomp1
Rule 87    varcomplicated -> callfunc
Rule 88    varcomp1 -> ID varcomp2
Rule 89    varcomp2 -> DOT varcomp3
Rule 90    varcomp2 -> empty
Rule 91    varcomp3 -> varcomp1
Rule 92    varcomp3 -> callfunc
Rule 93    save_const -> <empty>
Rule 94    save_comp -> <empty>
Rule 95    expresion -> exp altexpresion
Rule 96    altexpresion -> altexpresion2 save_op exp
Rule 97    altexpresion -> empty
Rule 98    altexpresion2 -> SAMEAS
Rule 99    altexpresion2 -> BIGGERTHAN
Rule 100   altexpresion2 -> BIGGEREQUALSTHAN
Rule 101   altexpresion2 -> SMALLTHAN
Rule 102   altexpresion2 -> SMALLEQUALSTHAN
Rule 103   altexpresion2 -> DIFFERENTTHAN
Rule 104   altexpresion2 -> AND
Rule 105   altexpresion2 -> OR
Rule 106   exp -> termino
Rule 107   exp -> termino altexp
Rule 108   altexp -> SUM save_op termino altexp
Rule 109   altexp -> SUBTRACT save_op termino altexp
Rule 110   altexp -> empty
Rule 111   termino -> factor
Rule 112   termino -> factor alttermino
Rule 113   alttermino -> TIMES save_op factor alttermino
Rule 114   alttermino -> DIV save_op factor alttermino
Rule 115   alttermino -> empty
Rule 116   save_op -> <empty>
Rule 117   read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
Rule 118   write -> OUTPUT save_op OPENPAREN expresion altwrite
Rule 119   altwrite -> COMMA save_op expresion altwrite
Rule 120   altwrite -> CLOSEPAREN SEMICOLON
Rule 121   factor -> OPENPAREN save_op expresion CLOSEPAREN save_op
Rule 122   factor -> varcall
Rule 123   condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if
Rule 124   condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if
Rule 125   altcondition -> estatuto altcondition
Rule 126   altcondition -> CLOSECURLY
Rule 127   add_gotof -> <empty>
Rule 128   add_end_if -> <empty>
Rule 129   generate_goto -> <empty>
Rule 130   assign -> ID save_comp EQUALS save_op expresion SEMICOLON
Rule 131   return -> RETURN save_op expresion SEMICOLON
Rule 132   empty -> <empty>

Terminals, with rules where they appear

AND                  : 104
BIGGEREQUALSTHAN     : 100
BIGGERTHAN           : 99
BOOL                 : 63
CLASS                : 12
CLOSEBRACKET         : 32 34
CLOSECURLY           : 10 17 25 44 76 126
CLOSEPAREN           : 7 20 37 52 74 117 120 121 123 124
COMMA                : 30 49 55 119
CONSTRUCTOR          : 20
CTEFLOAT             : 83
CTEINT               : 85
CTESTRING            : 84
DIFFERENTTHAN        : 103
DIV                  : 114
DOT                  : 72 89
ELSE                 : 124
EQUALS               : 130
FALSE                : 82
FLOAT                : 60
FUNC                 : 37
ID                   : 1 12 13 29 37 48 49 52 62 72 88 117 130
IF                   : 123 124
INPUT                : 117
INT                  : 59
MAIN                 : 7
OPENBRACKET          : 32 34
OPENCURLY            : 7 12 20 37 74 123 124 124
OPENPAREN            : 7 20 37 52 74 117 118 121 123 124
OR                   : 105
OUTPUT               : 118
PROGRAM              : 1
RETURN               : 131
SAMEAS               : 98
SEMICOLON            : 1 17 27 71 117 120 130 131
SMALLEQUALSTHAN      : 102
SMALLTHAN            : 101
STRING               : 61
SUBTRACT             : 109
SUM                  : 108
TIMES                : 113
TRUE                 : 81
TWODOTS              : 13 27 40 48 49
VAR                  : 27
WHILE                : 74
error                : 

Nonterminals, with rules where they appear

add_end_if           : 123 124
add_gotof            : 74 123 124
add_stack_jump       : 74
alt2call             : 53
alt2class            : 12 15 16
alt2const            : 20 23 24
alt2func             : 37
alt3func             : 37 42 43
altcall              : 52 55
altclass             : 12
altcondition         : 123 124 124 125
altconst             : 20
altexp               : 107 108 109
altexpresion         : 95
altexpresion2        : 96
altfunc              : 37
altmain              : 7 8 9
altparams            : 48 49
altprogram           : 1 2 3 4
alttermino           : 112 113 114
altwhile             : 74 75
altwrite             : 118 119
array                : 29
array2               : 32
assign               : 64
callfunc             : 71 87 92
check_exists_func    : 52
class                : 2
condition            : 65
constructor          : 17
empty                : 14 22 31 33 35 39 41 50 54 56 90 97 110 115
empty_pv             : 32 34 64 65 66 67 68 69 70
end_while            : 74
estatuto             : 9 24 43 75 125
exp                  : 95 96
expresion            : 32 34 53 74 118 119 121 123 124 130 131
factor               : 111 112 113 114
function             : 4 16
generate_goto        : 124
generate_param_quad  : 53
listids              : 27 30
listidsalty          : 29
main                 : 5
params               : 21 38
program              : 0
read                 : 67
remove_class_scope   : 5 17
remove_function_scope : 44
return               : 68
save_class           : 12
save_comp            : 80 117 130
save_const           : 79
save_constructor     : 20
save_function        : 37
save_main            : 7
save_op              : 96 108 109 113 114 117 118 119 121 121 130 131
save_params          : 48 49
save_program         : 1
save_var_name        : 29
save_vars            : 27
store_params         : 20 37
termino              : 106 107 108 109
type                 : 27 40 48 49
var                  : 3 8 15 23 42
varcall              : 122
varcomp1             : 86 91
varcomp2             : 88
varcomp3             : 89
varcomplicated       : 80
varcte               : 79
voidcall             : 69 72
while                : 70
write                : 66

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID save_program SEMICOLON altprogram

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID save_program SEMICOLON altprogram

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . save_program SEMICOLON altprogram
    (6) save_program -> .

    SEMICOLON       reduce using rule 6 (save_program -> .)

    save_program                   shift and go to state 4

state 4

    (1) program -> PROGRAM ID save_program . SEMICOLON altprogram

    SEMICOLON       shift and go to state 5


state 5

    (1) program -> PROGRAM ID save_program SEMICOLON . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main remove_class_scope
    (12) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (27) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (37) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    altprogram                     shift and go to state 6
    class                          shift and go to state 7
    var                            shift and go to state 8
    function                       shift and go to state 9
    main                           shift and go to state 10

state 6

    (1) program -> PROGRAM ID save_program SEMICOLON altprogram .

    $end            reduce using rule 1 (program -> PROGRAM ID save_program SEMICOLON altprogram .)


state 7

    (2) altprogram -> class . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main remove_class_scope
    (12) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (27) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (37) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    class                          shift and go to state 7
    altprogram                     shift and go to state 15
    var                            shift and go to state 8
    function                       shift and go to state 9
    main                           shift and go to state 10

state 8

    (3) altprogram -> var . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main remove_class_scope
    (12) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (27) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (37) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    var                            shift and go to state 8
    altprogram                     shift and go to state 16
    class                          shift and go to state 7
    function                       shift and go to state 9
    main                           shift and go to state 10

state 9

    (4) altprogram -> function . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main remove_class_scope
    (12) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (27) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (37) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    function                       shift and go to state 9
    altprogram                     shift and go to state 17
    class                          shift and go to state 7
    var                            shift and go to state 8
    main                           shift and go to state 10

state 10

    (5) altprogram -> main . remove_class_scope
    (19) remove_class_scope -> .

    $end            reduce using rule 19 (remove_class_scope -> .)

    remove_class_scope             shift and go to state 18

state 11

    (12) class -> CLASS . ID altclass save_class OPENCURLY alt2class

    ID              shift and go to state 19


state 12

    (27) var -> VAR . listids TWODOTS type save_vars SEMICOLON
    (29) listids -> . ID save_var_name array listidsalty

    ID              shift and go to state 21

    listids                        shift and go to state 20

state 13

    (37) function -> FUNC . ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func

    ID              shift and go to state 22


state 14

    (7) main -> MAIN . save_main OPENPAREN CLOSEPAREN OPENCURLY altmain
    (11) save_main -> .

    OPENPAREN       reduce using rule 11 (save_main -> .)

    save_main                      shift and go to state 23

state 15

    (2) altprogram -> class altprogram .

    $end            reduce using rule 2 (altprogram -> class altprogram .)


state 16

    (3) altprogram -> var altprogram .

    $end            reduce using rule 3 (altprogram -> var altprogram .)


state 17

    (4) altprogram -> function altprogram .

    $end            reduce using rule 4 (altprogram -> function altprogram .)


state 18

    (5) altprogram -> main remove_class_scope .

    $end            reduce using rule 5 (altprogram -> main remove_class_scope .)


state 19

    (12) class -> CLASS ID . altclass save_class OPENCURLY alt2class
    (13) altclass -> . TWODOTS ID
    (14) altclass -> . empty
    (132) empty -> .

    TWODOTS         shift and go to state 25
    OPENCURLY       reduce using rule 132 (empty -> .)

    altclass                       shift and go to state 24
    empty                          shift and go to state 26

state 20

    (27) var -> VAR listids . TWODOTS type save_vars SEMICOLON

    TWODOTS         shift and go to state 27


state 21

    (29) listids -> ID . save_var_name array listidsalty
    (36) save_var_name -> .

    OPENBRACKET     reduce using rule 36 (save_var_name -> .)
    COMMA           reduce using rule 36 (save_var_name -> .)
    TWODOTS         reduce using rule 36 (save_var_name -> .)

    save_var_name                  shift and go to state 28

state 22

    (37) function -> FUNC ID . OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func

    OPENPAREN       shift and go to state 29


state 23

    (7) main -> MAIN save_main . OPENPAREN CLOSEPAREN OPENCURLY altmain

    OPENPAREN       shift and go to state 30


state 24

    (12) class -> CLASS ID altclass . save_class OPENCURLY alt2class
    (18) save_class -> .

    OPENCURLY       reduce using rule 18 (save_class -> .)

    save_class                     shift and go to state 31

state 25

    (13) altclass -> TWODOTS . ID

    ID              shift and go to state 32


state 26

    (14) altclass -> empty .

    OPENCURLY       reduce using rule 14 (altclass -> empty .)


state 27

    (27) var -> VAR listids TWODOTS . type save_vars SEMICOLON
    (59) type -> . INT
    (60) type -> . FLOAT
    (61) type -> . STRING
    (62) type -> . ID
    (63) type -> . BOOL

    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    ID              shift and go to state 37
    BOOL            shift and go to state 38

    type                           shift and go to state 33

state 28

    (29) listids -> ID save_var_name . array listidsalty
    (32) array -> . OPENBRACKET expresion CLOSEBRACKET empty_pv array2
    (33) array -> . empty
    (132) empty -> .

    OPENBRACKET     shift and go to state 40
    COMMA           reduce using rule 132 (empty -> .)
    TWODOTS         reduce using rule 132 (empty -> .)

    array                          shift and go to state 39
    empty                          shift and go to state 41

state 29

    (37) function -> FUNC ID OPENPAREN . altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (38) altfunc -> . params
    (39) altfunc -> . empty
    (48) params -> . ID TWODOTS type save_params altparams
    (132) empty -> .

    ID              shift and go to state 42
    CLOSEPAREN      reduce using rule 132 (empty -> .)

    altfunc                        shift and go to state 43
    params                         shift and go to state 44
    empty                          shift and go to state 45

state 30

    (7) main -> MAIN save_main OPENPAREN . CLOSEPAREN OPENCURLY altmain

    CLOSEPAREN      shift and go to state 46


state 31

    (12) class -> CLASS ID altclass save_class . OPENCURLY alt2class

    OPENCURLY       shift and go to state 47


state 32

    (13) altclass -> TWODOTS ID .

    OPENCURLY       reduce using rule 13 (altclass -> TWODOTS ID .)


state 33

    (27) var -> VAR listids TWODOTS type . save_vars SEMICOLON
    (28) save_vars -> .

    SEMICOLON       reduce using rule 28 (save_vars -> .)

    save_vars                      shift and go to state 48

state 34

    (59) type -> INT .

    SEMICOLON       reduce using rule 59 (type -> INT .)
    COMMA           reduce using rule 59 (type -> INT .)
    CLOSEPAREN      reduce using rule 59 (type -> INT .)
    OPENCURLY       reduce using rule 59 (type -> INT .)


state 35

    (60) type -> FLOAT .

    SEMICOLON       reduce using rule 60 (type -> FLOAT .)
    COMMA           reduce using rule 60 (type -> FLOAT .)
    CLOSEPAREN      reduce using rule 60 (type -> FLOAT .)
    OPENCURLY       reduce using rule 60 (type -> FLOAT .)


state 36

    (61) type -> STRING .

    SEMICOLON       reduce using rule 61 (type -> STRING .)
    COMMA           reduce using rule 61 (type -> STRING .)
    CLOSEPAREN      reduce using rule 61 (type -> STRING .)
    OPENCURLY       reduce using rule 61 (type -> STRING .)


state 37

    (62) type -> ID .

    SEMICOLON       reduce using rule 62 (type -> ID .)
    COMMA           reduce using rule 62 (type -> ID .)
    CLOSEPAREN      reduce using rule 62 (type -> ID .)
    OPENCURLY       reduce using rule 62 (type -> ID .)


state 38

    (63) type -> BOOL .

    SEMICOLON       reduce using rule 63 (type -> BOOL .)
    COMMA           reduce using rule 63 (type -> BOOL .)
    CLOSEPAREN      reduce using rule 63 (type -> BOOL .)
    OPENCURLY       reduce using rule 63 (type -> BOOL .)


state 39

    (29) listids -> ID save_var_name array . listidsalty
    (30) listidsalty -> . COMMA listids
    (31) listidsalty -> . empty
    (132) empty -> .

    COMMA           shift and go to state 50
    TWODOTS         reduce using rule 132 (empty -> .)

    listidsalty                    shift and go to state 49
    empty                          shift and go to state 51

state 40

    (32) array -> OPENBRACKET . expresion CLOSEBRACKET empty_pv array2
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 56
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    CTEFLOAT        shift and go to state 62
    CTESTRING       shift and go to state 63
    CTEINT          shift and go to state 64
    ID              shift and go to state 67

    expresion                      shift and go to state 52
    exp                            shift and go to state 53
    termino                        shift and go to state 54
    factor                         shift and go to state 55
    varcall                        shift and go to state 57
    varcte                         shift and go to state 58
    varcomplicated                 shift and go to state 59
    varcomp1                       shift and go to state 65
    callfunc                       shift and go to state 66

state 41

    (33) array -> empty .

    COMMA           reduce using rule 33 (array -> empty .)
    TWODOTS         reduce using rule 33 (array -> empty .)


state 42

    (48) params -> ID . TWODOTS type save_params altparams

    TWODOTS         shift and go to state 68


state 43

    (37) function -> FUNC ID OPENPAREN altfunc . CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func

    CLOSEPAREN      shift and go to state 69


state 44

    (38) altfunc -> params .

    CLOSEPAREN      reduce using rule 38 (altfunc -> params .)


state 45

    (39) altfunc -> empty .

    CLOSEPAREN      reduce using rule 39 (altfunc -> empty .)


state 46

    (7) main -> MAIN save_main OPENPAREN CLOSEPAREN . OPENCURLY altmain

    OPENCURLY       shift and go to state 70


state 47

    (12) class -> CLASS ID altclass save_class OPENCURLY . alt2class
    (15) alt2class -> . var alt2class
    (16) alt2class -> . function alt2class
    (17) alt2class -> . constructor CLOSECURLY SEMICOLON remove_class_scope
    (27) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (37) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (20) constructor -> . CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    CONSTRUCTOR     shift and go to state 75

    alt2class                      shift and go to state 71
    var                            shift and go to state 72
    function                       shift and go to state 73
    constructor                    shift and go to state 74

state 48

    (27) var -> VAR listids TWODOTS type save_vars . SEMICOLON

    SEMICOLON       shift and go to state 76


state 49

    (29) listids -> ID save_var_name array listidsalty .

    TWODOTS         reduce using rule 29 (listids -> ID save_var_name array listidsalty .)


state 50

    (30) listidsalty -> COMMA . listids
    (29) listids -> . ID save_var_name array listidsalty

    ID              shift and go to state 21

    listids                        shift and go to state 77

state 51

    (31) listidsalty -> empty .

    TWODOTS         reduce using rule 31 (listidsalty -> empty .)


state 52

    (32) array -> OPENBRACKET expresion . CLOSEBRACKET empty_pv array2

    CLOSEBRACKET    shift and go to state 78


state 53

    (95) expresion -> exp . altexpresion
    (96) altexpresion -> . altexpresion2 save_op exp
    (97) altexpresion -> . empty
    (98) altexpresion2 -> . SAMEAS
    (99) altexpresion2 -> . BIGGERTHAN
    (100) altexpresion2 -> . BIGGEREQUALSTHAN
    (101) altexpresion2 -> . SMALLTHAN
    (102) altexpresion2 -> . SMALLEQUALSTHAN
    (103) altexpresion2 -> . DIFFERENTTHAN
    (104) altexpresion2 -> . AND
    (105) altexpresion2 -> . OR
    (132) empty -> .

    SAMEAS          shift and go to state 82
    BIGGERTHAN      shift and go to state 83
    BIGGEREQUALSTHAN shift and go to state 84
    SMALLTHAN       shift and go to state 85
    SMALLEQUALSTHAN shift and go to state 86
    DIFFERENTTHAN   shift and go to state 87
    AND             shift and go to state 88
    OR              shift and go to state 89
    CLOSEBRACKET    reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)

    altexpresion                   shift and go to state 79
    altexpresion2                  shift and go to state 80
    empty                          shift and go to state 81

state 54

    (106) exp -> termino .
    (107) exp -> termino . altexp
    (108) altexp -> . SUM save_op termino altexp
    (109) altexp -> . SUBTRACT save_op termino altexp
    (110) altexp -> . empty
    (132) empty -> .

  ! reduce/reduce conflict for SAMEAS resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for BIGGERTHAN resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for BIGGEREQUALSTHAN resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for SMALLTHAN resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for SMALLEQUALSTHAN resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for DIFFERENTTHAN resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for AND resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for OR resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for CLOSEBRACKET resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for CLOSEPAREN resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for COMMA resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 106 (exp -> termino .)
    SAMEAS          reduce using rule 106 (exp -> termino .)
    BIGGERTHAN      reduce using rule 106 (exp -> termino .)
    BIGGEREQUALSTHAN reduce using rule 106 (exp -> termino .)
    SMALLTHAN       reduce using rule 106 (exp -> termino .)
    SMALLEQUALSTHAN reduce using rule 106 (exp -> termino .)
    DIFFERENTTHAN   reduce using rule 106 (exp -> termino .)
    AND             reduce using rule 106 (exp -> termino .)
    OR              reduce using rule 106 (exp -> termino .)
    CLOSEBRACKET    reduce using rule 106 (exp -> termino .)
    CLOSEPAREN      reduce using rule 106 (exp -> termino .)
    COMMA           reduce using rule 106 (exp -> termino .)
    SEMICOLON       reduce using rule 106 (exp -> termino .)
    SUM             shift and go to state 91
    SUBTRACT        shift and go to state 92

  ! SAMEAS          [ reduce using rule 132 (empty -> .) ]
  ! BIGGERTHAN      [ reduce using rule 132 (empty -> .) ]
  ! BIGGEREQUALSTHAN [ reduce using rule 132 (empty -> .) ]
  ! SMALLTHAN       [ reduce using rule 132 (empty -> .) ]
  ! SMALLEQUALSTHAN [ reduce using rule 132 (empty -> .) ]
  ! DIFFERENTTHAN   [ reduce using rule 132 (empty -> .) ]
  ! AND             [ reduce using rule 132 (empty -> .) ]
  ! OR              [ reduce using rule 132 (empty -> .) ]
  ! CLOSEBRACKET    [ reduce using rule 132 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 132 (empty -> .) ]
  ! COMMA           [ reduce using rule 132 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 132 (empty -> .) ]

    altexp                         shift and go to state 90
    empty                          shift and go to state 93

state 55

    (111) termino -> factor .
    (112) termino -> factor . alttermino
    (113) alttermino -> . TIMES save_op factor alttermino
    (114) alttermino -> . DIV save_op factor alttermino
    (115) alttermino -> . empty
    (132) empty -> .

  ! reduce/reduce conflict for SUM resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for SUBTRACT resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for SAMEAS resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for BIGGERTHAN resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for BIGGEREQUALSTHAN resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for SMALLTHAN resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for SMALLEQUALSTHAN resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for DIFFERENTTHAN resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for AND resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for OR resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for CLOSEBRACKET resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for CLOSEPAREN resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for COMMA resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 111 (termino -> factor .)
    SUM             reduce using rule 111 (termino -> factor .)
    SUBTRACT        reduce using rule 111 (termino -> factor .)
    SAMEAS          reduce using rule 111 (termino -> factor .)
    BIGGERTHAN      reduce using rule 111 (termino -> factor .)
    BIGGEREQUALSTHAN reduce using rule 111 (termino -> factor .)
    SMALLTHAN       reduce using rule 111 (termino -> factor .)
    SMALLEQUALSTHAN reduce using rule 111 (termino -> factor .)
    DIFFERENTTHAN   reduce using rule 111 (termino -> factor .)
    AND             reduce using rule 111 (termino -> factor .)
    OR              reduce using rule 111 (termino -> factor .)
    CLOSEBRACKET    reduce using rule 111 (termino -> factor .)
    CLOSEPAREN      reduce using rule 111 (termino -> factor .)
    COMMA           reduce using rule 111 (termino -> factor .)
    SEMICOLON       reduce using rule 111 (termino -> factor .)
    TIMES           shift and go to state 95
    DIV             shift and go to state 96

  ! SUM             [ reduce using rule 132 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 132 (empty -> .) ]
  ! SAMEAS          [ reduce using rule 132 (empty -> .) ]
  ! BIGGERTHAN      [ reduce using rule 132 (empty -> .) ]
  ! BIGGEREQUALSTHAN [ reduce using rule 132 (empty -> .) ]
  ! SMALLTHAN       [ reduce using rule 132 (empty -> .) ]
  ! SMALLEQUALSTHAN [ reduce using rule 132 (empty -> .) ]
  ! DIFFERENTTHAN   [ reduce using rule 132 (empty -> .) ]
  ! AND             [ reduce using rule 132 (empty -> .) ]
  ! OR              [ reduce using rule 132 (empty -> .) ]
  ! CLOSEBRACKET    [ reduce using rule 132 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 132 (empty -> .) ]
  ! COMMA           [ reduce using rule 132 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 132 (empty -> .) ]

    alttermino                     shift and go to state 94
    empty                          shift and go to state 97

state 56

    (121) factor -> OPENPAREN . save_op expresion CLOSEPAREN save_op
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)
    TRUE            reduce using rule 116 (save_op -> .)
    FALSE           reduce using rule 116 (save_op -> .)
    CTEFLOAT        reduce using rule 116 (save_op -> .)
    CTESTRING       reduce using rule 116 (save_op -> .)
    CTEINT          reduce using rule 116 (save_op -> .)
    ID              reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 98

state 57

    (122) factor -> varcall .

    TIMES           reduce using rule 122 (factor -> varcall .)
    DIV             reduce using rule 122 (factor -> varcall .)
    SUM             reduce using rule 122 (factor -> varcall .)
    SUBTRACT        reduce using rule 122 (factor -> varcall .)
    SAMEAS          reduce using rule 122 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 122 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 122 (factor -> varcall .)
    SMALLTHAN       reduce using rule 122 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 122 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 122 (factor -> varcall .)
    AND             reduce using rule 122 (factor -> varcall .)
    OR              reduce using rule 122 (factor -> varcall .)
    CLOSEBRACKET    reduce using rule 122 (factor -> varcall .)
    CLOSEPAREN      reduce using rule 122 (factor -> varcall .)
    COMMA           reduce using rule 122 (factor -> varcall .)
    SEMICOLON       reduce using rule 122 (factor -> varcall .)


state 58

    (79) varcall -> varcte . save_const
    (93) save_const -> .

    TIMES           reduce using rule 93 (save_const -> .)
    DIV             reduce using rule 93 (save_const -> .)
    SUM             reduce using rule 93 (save_const -> .)
    SUBTRACT        reduce using rule 93 (save_const -> .)
    SAMEAS          reduce using rule 93 (save_const -> .)
    BIGGERTHAN      reduce using rule 93 (save_const -> .)
    BIGGEREQUALSTHAN reduce using rule 93 (save_const -> .)
    SMALLTHAN       reduce using rule 93 (save_const -> .)
    SMALLEQUALSTHAN reduce using rule 93 (save_const -> .)
    DIFFERENTTHAN   reduce using rule 93 (save_const -> .)
    AND             reduce using rule 93 (save_const -> .)
    OR              reduce using rule 93 (save_const -> .)
    CLOSEBRACKET    reduce using rule 93 (save_const -> .)
    CLOSEPAREN      reduce using rule 93 (save_const -> .)
    COMMA           reduce using rule 93 (save_const -> .)
    SEMICOLON       reduce using rule 93 (save_const -> .)

    save_const                     shift and go to state 99

state 59

    (80) varcall -> varcomplicated . save_comp
    (94) save_comp -> .

    TIMES           reduce using rule 94 (save_comp -> .)
    DIV             reduce using rule 94 (save_comp -> .)
    SUM             reduce using rule 94 (save_comp -> .)
    SUBTRACT        reduce using rule 94 (save_comp -> .)
    SAMEAS          reduce using rule 94 (save_comp -> .)
    BIGGERTHAN      reduce using rule 94 (save_comp -> .)
    BIGGEREQUALSTHAN reduce using rule 94 (save_comp -> .)
    SMALLTHAN       reduce using rule 94 (save_comp -> .)
    SMALLEQUALSTHAN reduce using rule 94 (save_comp -> .)
    DIFFERENTTHAN   reduce using rule 94 (save_comp -> .)
    AND             reduce using rule 94 (save_comp -> .)
    OR              reduce using rule 94 (save_comp -> .)
    CLOSEBRACKET    reduce using rule 94 (save_comp -> .)
    CLOSEPAREN      reduce using rule 94 (save_comp -> .)
    COMMA           reduce using rule 94 (save_comp -> .)
    SEMICOLON       reduce using rule 94 (save_comp -> .)

    save_comp                      shift and go to state 100

state 60

    (81) varcte -> TRUE .

    TIMES           reduce using rule 81 (varcte -> TRUE .)
    DIV             reduce using rule 81 (varcte -> TRUE .)
    SUM             reduce using rule 81 (varcte -> TRUE .)
    SUBTRACT        reduce using rule 81 (varcte -> TRUE .)
    SAMEAS          reduce using rule 81 (varcte -> TRUE .)
    BIGGERTHAN      reduce using rule 81 (varcte -> TRUE .)
    BIGGEREQUALSTHAN reduce using rule 81 (varcte -> TRUE .)
    SMALLTHAN       reduce using rule 81 (varcte -> TRUE .)
    SMALLEQUALSTHAN reduce using rule 81 (varcte -> TRUE .)
    DIFFERENTTHAN   reduce using rule 81 (varcte -> TRUE .)
    AND             reduce using rule 81 (varcte -> TRUE .)
    OR              reduce using rule 81 (varcte -> TRUE .)
    CLOSEBRACKET    reduce using rule 81 (varcte -> TRUE .)
    CLOSEPAREN      reduce using rule 81 (varcte -> TRUE .)
    COMMA           reduce using rule 81 (varcte -> TRUE .)
    SEMICOLON       reduce using rule 81 (varcte -> TRUE .)


state 61

    (82) varcte -> FALSE .

    TIMES           reduce using rule 82 (varcte -> FALSE .)
    DIV             reduce using rule 82 (varcte -> FALSE .)
    SUM             reduce using rule 82 (varcte -> FALSE .)
    SUBTRACT        reduce using rule 82 (varcte -> FALSE .)
    SAMEAS          reduce using rule 82 (varcte -> FALSE .)
    BIGGERTHAN      reduce using rule 82 (varcte -> FALSE .)
    BIGGEREQUALSTHAN reduce using rule 82 (varcte -> FALSE .)
    SMALLTHAN       reduce using rule 82 (varcte -> FALSE .)
    SMALLEQUALSTHAN reduce using rule 82 (varcte -> FALSE .)
    DIFFERENTTHAN   reduce using rule 82 (varcte -> FALSE .)
    AND             reduce using rule 82 (varcte -> FALSE .)
    OR              reduce using rule 82 (varcte -> FALSE .)
    CLOSEBRACKET    reduce using rule 82 (varcte -> FALSE .)
    CLOSEPAREN      reduce using rule 82 (varcte -> FALSE .)
    COMMA           reduce using rule 82 (varcte -> FALSE .)
    SEMICOLON       reduce using rule 82 (varcte -> FALSE .)


state 62

    (83) varcte -> CTEFLOAT .

    TIMES           reduce using rule 83 (varcte -> CTEFLOAT .)
    DIV             reduce using rule 83 (varcte -> CTEFLOAT .)
    SUM             reduce using rule 83 (varcte -> CTEFLOAT .)
    SUBTRACT        reduce using rule 83 (varcte -> CTEFLOAT .)
    SAMEAS          reduce using rule 83 (varcte -> CTEFLOAT .)
    BIGGERTHAN      reduce using rule 83 (varcte -> CTEFLOAT .)
    BIGGEREQUALSTHAN reduce using rule 83 (varcte -> CTEFLOAT .)
    SMALLTHAN       reduce using rule 83 (varcte -> CTEFLOAT .)
    SMALLEQUALSTHAN reduce using rule 83 (varcte -> CTEFLOAT .)
    DIFFERENTTHAN   reduce using rule 83 (varcte -> CTEFLOAT .)
    AND             reduce using rule 83 (varcte -> CTEFLOAT .)
    OR              reduce using rule 83 (varcte -> CTEFLOAT .)
    CLOSEBRACKET    reduce using rule 83 (varcte -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 83 (varcte -> CTEFLOAT .)
    COMMA           reduce using rule 83 (varcte -> CTEFLOAT .)
    SEMICOLON       reduce using rule 83 (varcte -> CTEFLOAT .)


state 63

    (84) varcte -> CTESTRING .

    TIMES           reduce using rule 84 (varcte -> CTESTRING .)
    DIV             reduce using rule 84 (varcte -> CTESTRING .)
    SUM             reduce using rule 84 (varcte -> CTESTRING .)
    SUBTRACT        reduce using rule 84 (varcte -> CTESTRING .)
    SAMEAS          reduce using rule 84 (varcte -> CTESTRING .)
    BIGGERTHAN      reduce using rule 84 (varcte -> CTESTRING .)
    BIGGEREQUALSTHAN reduce using rule 84 (varcte -> CTESTRING .)
    SMALLTHAN       reduce using rule 84 (varcte -> CTESTRING .)
    SMALLEQUALSTHAN reduce using rule 84 (varcte -> CTESTRING .)
    DIFFERENTTHAN   reduce using rule 84 (varcte -> CTESTRING .)
    AND             reduce using rule 84 (varcte -> CTESTRING .)
    OR              reduce using rule 84 (varcte -> CTESTRING .)
    CLOSEBRACKET    reduce using rule 84 (varcte -> CTESTRING .)
    CLOSEPAREN      reduce using rule 84 (varcte -> CTESTRING .)
    COMMA           reduce using rule 84 (varcte -> CTESTRING .)
    SEMICOLON       reduce using rule 84 (varcte -> CTESTRING .)


state 64

    (85) varcte -> CTEINT .

    TIMES           reduce using rule 85 (varcte -> CTEINT .)
    DIV             reduce using rule 85 (varcte -> CTEINT .)
    SUM             reduce using rule 85 (varcte -> CTEINT .)
    SUBTRACT        reduce using rule 85 (varcte -> CTEINT .)
    SAMEAS          reduce using rule 85 (varcte -> CTEINT .)
    BIGGERTHAN      reduce using rule 85 (varcte -> CTEINT .)
    BIGGEREQUALSTHAN reduce using rule 85 (varcte -> CTEINT .)
    SMALLTHAN       reduce using rule 85 (varcte -> CTEINT .)
    SMALLEQUALSTHAN reduce using rule 85 (varcte -> CTEINT .)
    DIFFERENTTHAN   reduce using rule 85 (varcte -> CTEINT .)
    AND             reduce using rule 85 (varcte -> CTEINT .)
    OR              reduce using rule 85 (varcte -> CTEINT .)
    CLOSEBRACKET    reduce using rule 85 (varcte -> CTEINT .)
    CLOSEPAREN      reduce using rule 85 (varcte -> CTEINT .)
    COMMA           reduce using rule 85 (varcte -> CTEINT .)
    SEMICOLON       reduce using rule 85 (varcte -> CTEINT .)


state 65

    (86) varcomplicated -> varcomp1 .

    TIMES           reduce using rule 86 (varcomplicated -> varcomp1 .)
    DIV             reduce using rule 86 (varcomplicated -> varcomp1 .)
    SUM             reduce using rule 86 (varcomplicated -> varcomp1 .)
    SUBTRACT        reduce using rule 86 (varcomplicated -> varcomp1 .)
    SAMEAS          reduce using rule 86 (varcomplicated -> varcomp1 .)
    BIGGERTHAN      reduce using rule 86 (varcomplicated -> varcomp1 .)
    BIGGEREQUALSTHAN reduce using rule 86 (varcomplicated -> varcomp1 .)
    SMALLTHAN       reduce using rule 86 (varcomplicated -> varcomp1 .)
    SMALLEQUALSTHAN reduce using rule 86 (varcomplicated -> varcomp1 .)
    DIFFERENTTHAN   reduce using rule 86 (varcomplicated -> varcomp1 .)
    AND             reduce using rule 86 (varcomplicated -> varcomp1 .)
    OR              reduce using rule 86 (varcomplicated -> varcomp1 .)
    CLOSEBRACKET    reduce using rule 86 (varcomplicated -> varcomp1 .)
    CLOSEPAREN      reduce using rule 86 (varcomplicated -> varcomp1 .)
    COMMA           reduce using rule 86 (varcomplicated -> varcomp1 .)
    SEMICOLON       reduce using rule 86 (varcomplicated -> varcomp1 .)


state 66

    (87) varcomplicated -> callfunc .

    TIMES           reduce using rule 87 (varcomplicated -> callfunc .)
    DIV             reduce using rule 87 (varcomplicated -> callfunc .)
    SUM             reduce using rule 87 (varcomplicated -> callfunc .)
    SUBTRACT        reduce using rule 87 (varcomplicated -> callfunc .)
    SAMEAS          reduce using rule 87 (varcomplicated -> callfunc .)
    BIGGERTHAN      reduce using rule 87 (varcomplicated -> callfunc .)
    BIGGEREQUALSTHAN reduce using rule 87 (varcomplicated -> callfunc .)
    SMALLTHAN       reduce using rule 87 (varcomplicated -> callfunc .)
    SMALLEQUALSTHAN reduce using rule 87 (varcomplicated -> callfunc .)
    DIFFERENTTHAN   reduce using rule 87 (varcomplicated -> callfunc .)
    AND             reduce using rule 87 (varcomplicated -> callfunc .)
    OR              reduce using rule 87 (varcomplicated -> callfunc .)
    CLOSEBRACKET    reduce using rule 87 (varcomplicated -> callfunc .)
    CLOSEPAREN      reduce using rule 87 (varcomplicated -> callfunc .)
    COMMA           reduce using rule 87 (varcomplicated -> callfunc .)
    SEMICOLON       reduce using rule 87 (varcomplicated -> callfunc .)


state 67

    (88) varcomp1 -> ID . varcomp2
    (52) callfunc -> ID . check_exists_func OPENPAREN altcall CLOSEPAREN
    (89) varcomp2 -> . DOT varcomp3
    (90) varcomp2 -> . empty
    (58) check_exists_func -> .
    (132) empty -> .

    DOT             shift and go to state 103
    OPENPAREN       reduce using rule 58 (check_exists_func -> .)
    TIMES           reduce using rule 132 (empty -> .)
    DIV             reduce using rule 132 (empty -> .)
    SUM             reduce using rule 132 (empty -> .)
    SUBTRACT        reduce using rule 132 (empty -> .)
    SAMEAS          reduce using rule 132 (empty -> .)
    BIGGERTHAN      reduce using rule 132 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 132 (empty -> .)
    SMALLTHAN       reduce using rule 132 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 132 (empty -> .)
    DIFFERENTTHAN   reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    CLOSEBRACKET    reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)

    varcomp2                       shift and go to state 101
    check_exists_func              shift and go to state 102
    empty                          shift and go to state 104

state 68

    (48) params -> ID TWODOTS . type save_params altparams
    (59) type -> . INT
    (60) type -> . FLOAT
    (61) type -> . STRING
    (62) type -> . ID
    (63) type -> . BOOL

    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    ID              shift and go to state 37
    BOOL            shift and go to state 38

    type                           shift and go to state 105

state 69

    (37) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN . alt2func save_function store_params OPENCURLY alt3func
    (40) alt2func -> . TWODOTS type
    (41) alt2func -> . empty
    (132) empty -> .

    TWODOTS         shift and go to state 107
    OPENCURLY       reduce using rule 132 (empty -> .)

    alt2func                       shift and go to state 106
    empty                          shift and go to state 108

state 70

    (7) main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY . altmain
    (8) altmain -> . var altmain
    (9) altmain -> . estatuto altmain
    (10) altmain -> . CLOSECURLY
    (27) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . callfunc SEMICOLON
    (72) voidcall -> . ID DOT voidcall
    (74) while -> . WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    CLOSECURLY      shift and go to state 112
    VAR             shift and go to state 12
    ID              shift and go to state 120
    IF              shift and go to state 121
    OUTPUT          shift and go to state 122
    INPUT           shift and go to state 123
    RETURN          shift and go to state 124
    WHILE           shift and go to state 126

    altmain                        shift and go to state 109
    var                            shift and go to state 110
    estatuto                       shift and go to state 111
    assign                         shift and go to state 113
    condition                      shift and go to state 114
    write                          shift and go to state 115
    read                           shift and go to state 116
    return                         shift and go to state 117
    voidcall                       shift and go to state 118
    while                          shift and go to state 119
    callfunc                       shift and go to state 125

state 71

    (12) class -> CLASS ID altclass save_class OPENCURLY alt2class .

    CLASS           reduce using rule 12 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)
    VAR             reduce using rule 12 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)
    FUNC            reduce using rule 12 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)
    MAIN            reduce using rule 12 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)


state 72

    (15) alt2class -> var . alt2class
    (15) alt2class -> . var alt2class
    (16) alt2class -> . function alt2class
    (17) alt2class -> . constructor CLOSECURLY SEMICOLON remove_class_scope
    (27) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (37) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (20) constructor -> . CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    CONSTRUCTOR     shift and go to state 75

    var                            shift and go to state 72
    alt2class                      shift and go to state 127
    function                       shift and go to state 73
    constructor                    shift and go to state 74

state 73

    (16) alt2class -> function . alt2class
    (15) alt2class -> . var alt2class
    (16) alt2class -> . function alt2class
    (17) alt2class -> . constructor CLOSECURLY SEMICOLON remove_class_scope
    (27) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (37) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (20) constructor -> . CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    CONSTRUCTOR     shift and go to state 75

    function                       shift and go to state 73
    alt2class                      shift and go to state 128
    var                            shift and go to state 72
    constructor                    shift and go to state 74

state 74

    (17) alt2class -> constructor . CLOSECURLY SEMICOLON remove_class_scope

    CLOSECURLY      shift and go to state 129


state 75

    (20) constructor -> CONSTRUCTOR . save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const
    (26) save_constructor -> .

    OPENPAREN       reduce using rule 26 (save_constructor -> .)

    save_constructor               shift and go to state 130

state 76

    (27) var -> VAR listids TWODOTS type save_vars SEMICOLON .

    CLASS           reduce using rule 27 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    VAR             reduce using rule 27 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    FUNC            reduce using rule 27 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    MAIN            reduce using rule 27 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    CONSTRUCTOR     reduce using rule 27 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    CLOSECURLY      reduce using rule 27 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    ID              reduce using rule 27 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    IF              reduce using rule 27 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    OUTPUT          reduce using rule 27 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    INPUT           reduce using rule 27 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    RETURN          reduce using rule 27 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    WHILE           reduce using rule 27 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)


state 77

    (30) listidsalty -> COMMA listids .

    TWODOTS         reduce using rule 30 (listidsalty -> COMMA listids .)


state 78

    (32) array -> OPENBRACKET expresion CLOSEBRACKET . empty_pv array2
    (73) empty_pv -> .

    OPENBRACKET     reduce using rule 73 (empty_pv -> .)
    COMMA           reduce using rule 73 (empty_pv -> .)
    TWODOTS         reduce using rule 73 (empty_pv -> .)

    empty_pv                       shift and go to state 131

state 79

    (95) expresion -> exp altexpresion .

    CLOSEBRACKET    reduce using rule 95 (expresion -> exp altexpresion .)
    CLOSEPAREN      reduce using rule 95 (expresion -> exp altexpresion .)
    COMMA           reduce using rule 95 (expresion -> exp altexpresion .)
    SEMICOLON       reduce using rule 95 (expresion -> exp altexpresion .)


state 80

    (96) altexpresion -> altexpresion2 . save_op exp
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)
    TRUE            reduce using rule 116 (save_op -> .)
    FALSE           reduce using rule 116 (save_op -> .)
    CTEFLOAT        reduce using rule 116 (save_op -> .)
    CTESTRING       reduce using rule 116 (save_op -> .)
    CTEINT          reduce using rule 116 (save_op -> .)
    ID              reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 132

state 81

    (97) altexpresion -> empty .

    CLOSEBRACKET    reduce using rule 97 (altexpresion -> empty .)
    CLOSEPAREN      reduce using rule 97 (altexpresion -> empty .)
    COMMA           reduce using rule 97 (altexpresion -> empty .)
    SEMICOLON       reduce using rule 97 (altexpresion -> empty .)


state 82

    (98) altexpresion2 -> SAMEAS .

    OPENPAREN       reduce using rule 98 (altexpresion2 -> SAMEAS .)
    TRUE            reduce using rule 98 (altexpresion2 -> SAMEAS .)
    FALSE           reduce using rule 98 (altexpresion2 -> SAMEAS .)
    CTEFLOAT        reduce using rule 98 (altexpresion2 -> SAMEAS .)
    CTESTRING       reduce using rule 98 (altexpresion2 -> SAMEAS .)
    CTEINT          reduce using rule 98 (altexpresion2 -> SAMEAS .)
    ID              reduce using rule 98 (altexpresion2 -> SAMEAS .)


state 83

    (99) altexpresion2 -> BIGGERTHAN .

    OPENPAREN       reduce using rule 99 (altexpresion2 -> BIGGERTHAN .)
    TRUE            reduce using rule 99 (altexpresion2 -> BIGGERTHAN .)
    FALSE           reduce using rule 99 (altexpresion2 -> BIGGERTHAN .)
    CTEFLOAT        reduce using rule 99 (altexpresion2 -> BIGGERTHAN .)
    CTESTRING       reduce using rule 99 (altexpresion2 -> BIGGERTHAN .)
    CTEINT          reduce using rule 99 (altexpresion2 -> BIGGERTHAN .)
    ID              reduce using rule 99 (altexpresion2 -> BIGGERTHAN .)


state 84

    (100) altexpresion2 -> BIGGEREQUALSTHAN .

    OPENPAREN       reduce using rule 100 (altexpresion2 -> BIGGEREQUALSTHAN .)
    TRUE            reduce using rule 100 (altexpresion2 -> BIGGEREQUALSTHAN .)
    FALSE           reduce using rule 100 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTEFLOAT        reduce using rule 100 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTESTRING       reduce using rule 100 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTEINT          reduce using rule 100 (altexpresion2 -> BIGGEREQUALSTHAN .)
    ID              reduce using rule 100 (altexpresion2 -> BIGGEREQUALSTHAN .)


state 85

    (101) altexpresion2 -> SMALLTHAN .

    OPENPAREN       reduce using rule 101 (altexpresion2 -> SMALLTHAN .)
    TRUE            reduce using rule 101 (altexpresion2 -> SMALLTHAN .)
    FALSE           reduce using rule 101 (altexpresion2 -> SMALLTHAN .)
    CTEFLOAT        reduce using rule 101 (altexpresion2 -> SMALLTHAN .)
    CTESTRING       reduce using rule 101 (altexpresion2 -> SMALLTHAN .)
    CTEINT          reduce using rule 101 (altexpresion2 -> SMALLTHAN .)
    ID              reduce using rule 101 (altexpresion2 -> SMALLTHAN .)


state 86

    (102) altexpresion2 -> SMALLEQUALSTHAN .

    OPENPAREN       reduce using rule 102 (altexpresion2 -> SMALLEQUALSTHAN .)
    TRUE            reduce using rule 102 (altexpresion2 -> SMALLEQUALSTHAN .)
    FALSE           reduce using rule 102 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTEFLOAT        reduce using rule 102 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTESTRING       reduce using rule 102 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTEINT          reduce using rule 102 (altexpresion2 -> SMALLEQUALSTHAN .)
    ID              reduce using rule 102 (altexpresion2 -> SMALLEQUALSTHAN .)


state 87

    (103) altexpresion2 -> DIFFERENTTHAN .

    OPENPAREN       reduce using rule 103 (altexpresion2 -> DIFFERENTTHAN .)
    TRUE            reduce using rule 103 (altexpresion2 -> DIFFERENTTHAN .)
    FALSE           reduce using rule 103 (altexpresion2 -> DIFFERENTTHAN .)
    CTEFLOAT        reduce using rule 103 (altexpresion2 -> DIFFERENTTHAN .)
    CTESTRING       reduce using rule 103 (altexpresion2 -> DIFFERENTTHAN .)
    CTEINT          reduce using rule 103 (altexpresion2 -> DIFFERENTTHAN .)
    ID              reduce using rule 103 (altexpresion2 -> DIFFERENTTHAN .)


state 88

    (104) altexpresion2 -> AND .

    OPENPAREN       reduce using rule 104 (altexpresion2 -> AND .)
    TRUE            reduce using rule 104 (altexpresion2 -> AND .)
    FALSE           reduce using rule 104 (altexpresion2 -> AND .)
    CTEFLOAT        reduce using rule 104 (altexpresion2 -> AND .)
    CTESTRING       reduce using rule 104 (altexpresion2 -> AND .)
    CTEINT          reduce using rule 104 (altexpresion2 -> AND .)
    ID              reduce using rule 104 (altexpresion2 -> AND .)


state 89

    (105) altexpresion2 -> OR .

    OPENPAREN       reduce using rule 105 (altexpresion2 -> OR .)
    TRUE            reduce using rule 105 (altexpresion2 -> OR .)
    FALSE           reduce using rule 105 (altexpresion2 -> OR .)
    CTEFLOAT        reduce using rule 105 (altexpresion2 -> OR .)
    CTESTRING       reduce using rule 105 (altexpresion2 -> OR .)
    CTEINT          reduce using rule 105 (altexpresion2 -> OR .)
    ID              reduce using rule 105 (altexpresion2 -> OR .)


state 90

    (107) exp -> termino altexp .

    SAMEAS          reduce using rule 107 (exp -> termino altexp .)
    BIGGERTHAN      reduce using rule 107 (exp -> termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 107 (exp -> termino altexp .)
    SMALLTHAN       reduce using rule 107 (exp -> termino altexp .)
    SMALLEQUALSTHAN reduce using rule 107 (exp -> termino altexp .)
    DIFFERENTTHAN   reduce using rule 107 (exp -> termino altexp .)
    AND             reduce using rule 107 (exp -> termino altexp .)
    OR              reduce using rule 107 (exp -> termino altexp .)
    CLOSEBRACKET    reduce using rule 107 (exp -> termino altexp .)
    CLOSEPAREN      reduce using rule 107 (exp -> termino altexp .)
    COMMA           reduce using rule 107 (exp -> termino altexp .)
    SEMICOLON       reduce using rule 107 (exp -> termino altexp .)


state 91

    (108) altexp -> SUM . save_op termino altexp
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)
    TRUE            reduce using rule 116 (save_op -> .)
    FALSE           reduce using rule 116 (save_op -> .)
    CTEFLOAT        reduce using rule 116 (save_op -> .)
    CTESTRING       reduce using rule 116 (save_op -> .)
    CTEINT          reduce using rule 116 (save_op -> .)
    ID              reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 133

state 92

    (109) altexp -> SUBTRACT . save_op termino altexp
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)
    TRUE            reduce using rule 116 (save_op -> .)
    FALSE           reduce using rule 116 (save_op -> .)
    CTEFLOAT        reduce using rule 116 (save_op -> .)
    CTESTRING       reduce using rule 116 (save_op -> .)
    CTEINT          reduce using rule 116 (save_op -> .)
    ID              reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 134

state 93

    (110) altexp -> empty .

    SAMEAS          reduce using rule 110 (altexp -> empty .)
    BIGGERTHAN      reduce using rule 110 (altexp -> empty .)
    BIGGEREQUALSTHAN reduce using rule 110 (altexp -> empty .)
    SMALLTHAN       reduce using rule 110 (altexp -> empty .)
    SMALLEQUALSTHAN reduce using rule 110 (altexp -> empty .)
    DIFFERENTTHAN   reduce using rule 110 (altexp -> empty .)
    AND             reduce using rule 110 (altexp -> empty .)
    OR              reduce using rule 110 (altexp -> empty .)
    CLOSEBRACKET    reduce using rule 110 (altexp -> empty .)
    CLOSEPAREN      reduce using rule 110 (altexp -> empty .)
    COMMA           reduce using rule 110 (altexp -> empty .)
    SEMICOLON       reduce using rule 110 (altexp -> empty .)


state 94

    (112) termino -> factor alttermino .

    SUM             reduce using rule 112 (termino -> factor alttermino .)
    SUBTRACT        reduce using rule 112 (termino -> factor alttermino .)
    SAMEAS          reduce using rule 112 (termino -> factor alttermino .)
    BIGGERTHAN      reduce using rule 112 (termino -> factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 112 (termino -> factor alttermino .)
    SMALLTHAN       reduce using rule 112 (termino -> factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 112 (termino -> factor alttermino .)
    DIFFERENTTHAN   reduce using rule 112 (termino -> factor alttermino .)
    AND             reduce using rule 112 (termino -> factor alttermino .)
    OR              reduce using rule 112 (termino -> factor alttermino .)
    CLOSEBRACKET    reduce using rule 112 (termino -> factor alttermino .)
    CLOSEPAREN      reduce using rule 112 (termino -> factor alttermino .)
    COMMA           reduce using rule 112 (termino -> factor alttermino .)
    SEMICOLON       reduce using rule 112 (termino -> factor alttermino .)


state 95

    (113) alttermino -> TIMES . save_op factor alttermino
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)
    TRUE            reduce using rule 116 (save_op -> .)
    FALSE           reduce using rule 116 (save_op -> .)
    CTEFLOAT        reduce using rule 116 (save_op -> .)
    CTESTRING       reduce using rule 116 (save_op -> .)
    CTEINT          reduce using rule 116 (save_op -> .)
    ID              reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 135

state 96

    (114) alttermino -> DIV . save_op factor alttermino
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)
    TRUE            reduce using rule 116 (save_op -> .)
    FALSE           reduce using rule 116 (save_op -> .)
    CTEFLOAT        reduce using rule 116 (save_op -> .)
    CTESTRING       reduce using rule 116 (save_op -> .)
    CTEINT          reduce using rule 116 (save_op -> .)
    ID              reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 136

state 97

    (115) alttermino -> empty .

    SUM             reduce using rule 115 (alttermino -> empty .)
    SUBTRACT        reduce using rule 115 (alttermino -> empty .)
    SAMEAS          reduce using rule 115 (alttermino -> empty .)
    BIGGERTHAN      reduce using rule 115 (alttermino -> empty .)
    BIGGEREQUALSTHAN reduce using rule 115 (alttermino -> empty .)
    SMALLTHAN       reduce using rule 115 (alttermino -> empty .)
    SMALLEQUALSTHAN reduce using rule 115 (alttermino -> empty .)
    DIFFERENTTHAN   reduce using rule 115 (alttermino -> empty .)
    AND             reduce using rule 115 (alttermino -> empty .)
    OR              reduce using rule 115 (alttermino -> empty .)
    CLOSEBRACKET    reduce using rule 115 (alttermino -> empty .)
    CLOSEPAREN      reduce using rule 115 (alttermino -> empty .)
    COMMA           reduce using rule 115 (alttermino -> empty .)
    SEMICOLON       reduce using rule 115 (alttermino -> empty .)


state 98

    (121) factor -> OPENPAREN save_op . expresion CLOSEPAREN save_op
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 56
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    CTEFLOAT        shift and go to state 62
    CTESTRING       shift and go to state 63
    CTEINT          shift and go to state 64
    ID              shift and go to state 67

    expresion                      shift and go to state 137
    exp                            shift and go to state 53
    termino                        shift and go to state 54
    factor                         shift and go to state 55
    varcall                        shift and go to state 57
    varcte                         shift and go to state 58
    varcomplicated                 shift and go to state 59
    varcomp1                       shift and go to state 65
    callfunc                       shift and go to state 66

state 99

    (79) varcall -> varcte save_const .

    TIMES           reduce using rule 79 (varcall -> varcte save_const .)
    DIV             reduce using rule 79 (varcall -> varcte save_const .)
    SUM             reduce using rule 79 (varcall -> varcte save_const .)
    SUBTRACT        reduce using rule 79 (varcall -> varcte save_const .)
    SAMEAS          reduce using rule 79 (varcall -> varcte save_const .)
    BIGGERTHAN      reduce using rule 79 (varcall -> varcte save_const .)
    BIGGEREQUALSTHAN reduce using rule 79 (varcall -> varcte save_const .)
    SMALLTHAN       reduce using rule 79 (varcall -> varcte save_const .)
    SMALLEQUALSTHAN reduce using rule 79 (varcall -> varcte save_const .)
    DIFFERENTTHAN   reduce using rule 79 (varcall -> varcte save_const .)
    AND             reduce using rule 79 (varcall -> varcte save_const .)
    OR              reduce using rule 79 (varcall -> varcte save_const .)
    CLOSEBRACKET    reduce using rule 79 (varcall -> varcte save_const .)
    CLOSEPAREN      reduce using rule 79 (varcall -> varcte save_const .)
    COMMA           reduce using rule 79 (varcall -> varcte save_const .)
    SEMICOLON       reduce using rule 79 (varcall -> varcte save_const .)


state 100

    (80) varcall -> varcomplicated save_comp .

    TIMES           reduce using rule 80 (varcall -> varcomplicated save_comp .)
    DIV             reduce using rule 80 (varcall -> varcomplicated save_comp .)
    SUM             reduce using rule 80 (varcall -> varcomplicated save_comp .)
    SUBTRACT        reduce using rule 80 (varcall -> varcomplicated save_comp .)
    SAMEAS          reduce using rule 80 (varcall -> varcomplicated save_comp .)
    BIGGERTHAN      reduce using rule 80 (varcall -> varcomplicated save_comp .)
    BIGGEREQUALSTHAN reduce using rule 80 (varcall -> varcomplicated save_comp .)
    SMALLTHAN       reduce using rule 80 (varcall -> varcomplicated save_comp .)
    SMALLEQUALSTHAN reduce using rule 80 (varcall -> varcomplicated save_comp .)
    DIFFERENTTHAN   reduce using rule 80 (varcall -> varcomplicated save_comp .)
    AND             reduce using rule 80 (varcall -> varcomplicated save_comp .)
    OR              reduce using rule 80 (varcall -> varcomplicated save_comp .)
    CLOSEBRACKET    reduce using rule 80 (varcall -> varcomplicated save_comp .)
    CLOSEPAREN      reduce using rule 80 (varcall -> varcomplicated save_comp .)
    COMMA           reduce using rule 80 (varcall -> varcomplicated save_comp .)
    SEMICOLON       reduce using rule 80 (varcall -> varcomplicated save_comp .)


state 101

    (88) varcomp1 -> ID varcomp2 .

    TIMES           reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    DIV             reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    SUM             reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    SUBTRACT        reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    SAMEAS          reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    BIGGERTHAN      reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    BIGGEREQUALSTHAN reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    SMALLTHAN       reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    SMALLEQUALSTHAN reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    DIFFERENTTHAN   reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    AND             reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    OR              reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    CLOSEBRACKET    reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    CLOSEPAREN      reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    COMMA           reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    SEMICOLON       reduce using rule 88 (varcomp1 -> ID varcomp2 .)


state 102

    (52) callfunc -> ID check_exists_func . OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 138


state 103

    (89) varcomp2 -> DOT . varcomp3
    (91) varcomp3 -> . varcomp1
    (92) varcomp3 -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    ID              shift and go to state 67

    varcomp3                       shift and go to state 139
    varcomp1                       shift and go to state 140
    callfunc                       shift and go to state 141

state 104

    (90) varcomp2 -> empty .

    TIMES           reduce using rule 90 (varcomp2 -> empty .)
    DIV             reduce using rule 90 (varcomp2 -> empty .)
    SUM             reduce using rule 90 (varcomp2 -> empty .)
    SUBTRACT        reduce using rule 90 (varcomp2 -> empty .)
    SAMEAS          reduce using rule 90 (varcomp2 -> empty .)
    BIGGERTHAN      reduce using rule 90 (varcomp2 -> empty .)
    BIGGEREQUALSTHAN reduce using rule 90 (varcomp2 -> empty .)
    SMALLTHAN       reduce using rule 90 (varcomp2 -> empty .)
    SMALLEQUALSTHAN reduce using rule 90 (varcomp2 -> empty .)
    DIFFERENTTHAN   reduce using rule 90 (varcomp2 -> empty .)
    AND             reduce using rule 90 (varcomp2 -> empty .)
    OR              reduce using rule 90 (varcomp2 -> empty .)
    CLOSEBRACKET    reduce using rule 90 (varcomp2 -> empty .)
    CLOSEPAREN      reduce using rule 90 (varcomp2 -> empty .)
    COMMA           reduce using rule 90 (varcomp2 -> empty .)
    SEMICOLON       reduce using rule 90 (varcomp2 -> empty .)


state 105

    (48) params -> ID TWODOTS type . save_params altparams
    (51) save_params -> .

    COMMA           reduce using rule 51 (save_params -> .)
    CLOSEPAREN      reduce using rule 51 (save_params -> .)

    save_params                    shift and go to state 142

state 106

    (37) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func . save_function store_params OPENCURLY alt3func
    (45) save_function -> .

    OPENCURLY       reduce using rule 45 (save_function -> .)

    save_function                  shift and go to state 143

state 107

    (40) alt2func -> TWODOTS . type
    (59) type -> . INT
    (60) type -> . FLOAT
    (61) type -> . STRING
    (62) type -> . ID
    (63) type -> . BOOL

    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    ID              shift and go to state 37
    BOOL            shift and go to state 38

    type                           shift and go to state 144

state 108

    (41) alt2func -> empty .

    OPENCURLY       reduce using rule 41 (alt2func -> empty .)


state 109

    (7) main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain .

    $end            reduce using rule 7 (main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain .)


state 110

    (8) altmain -> var . altmain
    (8) altmain -> . var altmain
    (9) altmain -> . estatuto altmain
    (10) altmain -> . CLOSECURLY
    (27) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . callfunc SEMICOLON
    (72) voidcall -> . ID DOT voidcall
    (74) while -> . WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    CLOSECURLY      shift and go to state 112
    VAR             shift and go to state 12
    ID              shift and go to state 120
    IF              shift and go to state 121
    OUTPUT          shift and go to state 122
    INPUT           shift and go to state 123
    RETURN          shift and go to state 124
    WHILE           shift and go to state 126

    var                            shift and go to state 110
    altmain                        shift and go to state 145
    estatuto                       shift and go to state 111
    assign                         shift and go to state 113
    condition                      shift and go to state 114
    write                          shift and go to state 115
    read                           shift and go to state 116
    return                         shift and go to state 117
    voidcall                       shift and go to state 118
    while                          shift and go to state 119
    callfunc                       shift and go to state 125

state 111

    (9) altmain -> estatuto . altmain
    (8) altmain -> . var altmain
    (9) altmain -> . estatuto altmain
    (10) altmain -> . CLOSECURLY
    (27) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . callfunc SEMICOLON
    (72) voidcall -> . ID DOT voidcall
    (74) while -> . WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    CLOSECURLY      shift and go to state 112
    VAR             shift and go to state 12
    ID              shift and go to state 120
    IF              shift and go to state 121
    OUTPUT          shift and go to state 122
    INPUT           shift and go to state 123
    RETURN          shift and go to state 124
    WHILE           shift and go to state 126

    estatuto                       shift and go to state 111
    altmain                        shift and go to state 146
    var                            shift and go to state 110
    assign                         shift and go to state 113
    condition                      shift and go to state 114
    write                          shift and go to state 115
    read                           shift and go to state 116
    return                         shift and go to state 117
    voidcall                       shift and go to state 118
    while                          shift and go to state 119
    callfunc                       shift and go to state 125

state 112

    (10) altmain -> CLOSECURLY .

    $end            reduce using rule 10 (altmain -> CLOSECURLY .)


state 113

    (64) estatuto -> assign . empty_pv
    (73) empty_pv -> .

    CLOSECURLY      reduce using rule 73 (empty_pv -> .)
    VAR             reduce using rule 73 (empty_pv -> .)
    ID              reduce using rule 73 (empty_pv -> .)
    IF              reduce using rule 73 (empty_pv -> .)
    OUTPUT          reduce using rule 73 (empty_pv -> .)
    INPUT           reduce using rule 73 (empty_pv -> .)
    RETURN          reduce using rule 73 (empty_pv -> .)
    WHILE           reduce using rule 73 (empty_pv -> .)

    empty_pv                       shift and go to state 147

state 114

    (65) estatuto -> condition . empty_pv
    (73) empty_pv -> .

    CLOSECURLY      reduce using rule 73 (empty_pv -> .)
    VAR             reduce using rule 73 (empty_pv -> .)
    ID              reduce using rule 73 (empty_pv -> .)
    IF              reduce using rule 73 (empty_pv -> .)
    OUTPUT          reduce using rule 73 (empty_pv -> .)
    INPUT           reduce using rule 73 (empty_pv -> .)
    RETURN          reduce using rule 73 (empty_pv -> .)
    WHILE           reduce using rule 73 (empty_pv -> .)

    empty_pv                       shift and go to state 148

state 115

    (66) estatuto -> write . empty_pv
    (73) empty_pv -> .

    CLOSECURLY      reduce using rule 73 (empty_pv -> .)
    VAR             reduce using rule 73 (empty_pv -> .)
    ID              reduce using rule 73 (empty_pv -> .)
    IF              reduce using rule 73 (empty_pv -> .)
    OUTPUT          reduce using rule 73 (empty_pv -> .)
    INPUT           reduce using rule 73 (empty_pv -> .)
    RETURN          reduce using rule 73 (empty_pv -> .)
    WHILE           reduce using rule 73 (empty_pv -> .)

    empty_pv                       shift and go to state 149

state 116

    (67) estatuto -> read . empty_pv
    (73) empty_pv -> .

    CLOSECURLY      reduce using rule 73 (empty_pv -> .)
    VAR             reduce using rule 73 (empty_pv -> .)
    ID              reduce using rule 73 (empty_pv -> .)
    IF              reduce using rule 73 (empty_pv -> .)
    OUTPUT          reduce using rule 73 (empty_pv -> .)
    INPUT           reduce using rule 73 (empty_pv -> .)
    RETURN          reduce using rule 73 (empty_pv -> .)
    WHILE           reduce using rule 73 (empty_pv -> .)

    empty_pv                       shift and go to state 150

state 117

    (68) estatuto -> return . empty_pv
    (73) empty_pv -> .

    CLOSECURLY      reduce using rule 73 (empty_pv -> .)
    VAR             reduce using rule 73 (empty_pv -> .)
    ID              reduce using rule 73 (empty_pv -> .)
    IF              reduce using rule 73 (empty_pv -> .)
    OUTPUT          reduce using rule 73 (empty_pv -> .)
    INPUT           reduce using rule 73 (empty_pv -> .)
    RETURN          reduce using rule 73 (empty_pv -> .)
    WHILE           reduce using rule 73 (empty_pv -> .)

    empty_pv                       shift and go to state 151

state 118

    (69) estatuto -> voidcall . empty_pv
    (73) empty_pv -> .

    CLOSECURLY      reduce using rule 73 (empty_pv -> .)
    VAR             reduce using rule 73 (empty_pv -> .)
    ID              reduce using rule 73 (empty_pv -> .)
    IF              reduce using rule 73 (empty_pv -> .)
    OUTPUT          reduce using rule 73 (empty_pv -> .)
    INPUT           reduce using rule 73 (empty_pv -> .)
    RETURN          reduce using rule 73 (empty_pv -> .)
    WHILE           reduce using rule 73 (empty_pv -> .)

    empty_pv                       shift and go to state 152

state 119

    (70) estatuto -> while . empty_pv
    (73) empty_pv -> .

    CLOSECURLY      reduce using rule 73 (empty_pv -> .)
    VAR             reduce using rule 73 (empty_pv -> .)
    ID              reduce using rule 73 (empty_pv -> .)
    IF              reduce using rule 73 (empty_pv -> .)
    OUTPUT          reduce using rule 73 (empty_pv -> .)
    INPUT           reduce using rule 73 (empty_pv -> .)
    RETURN          reduce using rule 73 (empty_pv -> .)
    WHILE           reduce using rule 73 (empty_pv -> .)

    empty_pv                       shift and go to state 153

state 120

    (130) assign -> ID . save_comp EQUALS save_op expresion SEMICOLON
    (72) voidcall -> ID . DOT voidcall
    (52) callfunc -> ID . check_exists_func OPENPAREN altcall CLOSEPAREN
    (94) save_comp -> .
    (58) check_exists_func -> .

    DOT             shift and go to state 155
    EQUALS          reduce using rule 94 (save_comp -> .)
    OPENPAREN       reduce using rule 58 (check_exists_func -> .)

    save_comp                      shift and go to state 154
    check_exists_func              shift and go to state 102

state 121

    (123) condition -> IF . OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if
    (124) condition -> IF . OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if

    OPENPAREN       shift and go to state 156


state 122

    (118) write -> OUTPUT . save_op OPENPAREN expresion altwrite
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 157

state 123

    (117) read -> INPUT . save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 158

state 124

    (131) return -> RETURN . save_op expresion SEMICOLON
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)
    TRUE            reduce using rule 116 (save_op -> .)
    FALSE           reduce using rule 116 (save_op -> .)
    CTEFLOAT        reduce using rule 116 (save_op -> .)
    CTESTRING       reduce using rule 116 (save_op -> .)
    CTEINT          reduce using rule 116 (save_op -> .)
    ID              reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 159

state 125

    (71) voidcall -> callfunc . SEMICOLON

    SEMICOLON       shift and go to state 160


state 126

    (74) while -> WHILE . add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while
    (77) add_stack_jump -> .

    OPENPAREN       reduce using rule 77 (add_stack_jump -> .)

    add_stack_jump                 shift and go to state 161

state 127

    (15) alt2class -> var alt2class .

    CLASS           reduce using rule 15 (alt2class -> var alt2class .)
    VAR             reduce using rule 15 (alt2class -> var alt2class .)
    FUNC            reduce using rule 15 (alt2class -> var alt2class .)
    MAIN            reduce using rule 15 (alt2class -> var alt2class .)


state 128

    (16) alt2class -> function alt2class .

    CLASS           reduce using rule 16 (alt2class -> function alt2class .)
    VAR             reduce using rule 16 (alt2class -> function alt2class .)
    FUNC            reduce using rule 16 (alt2class -> function alt2class .)
    MAIN            reduce using rule 16 (alt2class -> function alt2class .)


state 129

    (17) alt2class -> constructor CLOSECURLY . SEMICOLON remove_class_scope

    SEMICOLON       shift and go to state 162


state 130

    (20) constructor -> CONSTRUCTOR save_constructor . OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const

    OPENPAREN       shift and go to state 163


state 131

    (32) array -> OPENBRACKET expresion CLOSEBRACKET empty_pv . array2
    (34) array2 -> . OPENBRACKET expresion CLOSEBRACKET empty_pv
    (35) array2 -> . empty
    (132) empty -> .

    OPENBRACKET     shift and go to state 164
    COMMA           reduce using rule 132 (empty -> .)
    TWODOTS         reduce using rule 132 (empty -> .)

    array2                         shift and go to state 165
    empty                          shift and go to state 166

state 132

    (96) altexpresion -> altexpresion2 save_op . exp
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 56
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    CTEFLOAT        shift and go to state 62
    CTESTRING       shift and go to state 63
    CTEINT          shift and go to state 64
    ID              shift and go to state 67

    exp                            shift and go to state 167
    termino                        shift and go to state 54
    factor                         shift and go to state 55
    varcall                        shift and go to state 57
    varcte                         shift and go to state 58
    varcomplicated                 shift and go to state 59
    varcomp1                       shift and go to state 65
    callfunc                       shift and go to state 66

state 133

    (108) altexp -> SUM save_op . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 56
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    CTEFLOAT        shift and go to state 62
    CTESTRING       shift and go to state 63
    CTEINT          shift and go to state 64
    ID              shift and go to state 67

    termino                        shift and go to state 168
    factor                         shift and go to state 55
    varcall                        shift and go to state 57
    varcte                         shift and go to state 58
    varcomplicated                 shift and go to state 59
    varcomp1                       shift and go to state 65
    callfunc                       shift and go to state 66

state 134

    (109) altexp -> SUBTRACT save_op . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 56
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    CTEFLOAT        shift and go to state 62
    CTESTRING       shift and go to state 63
    CTEINT          shift and go to state 64
    ID              shift and go to state 67

    termino                        shift and go to state 169
    factor                         shift and go to state 55
    varcall                        shift and go to state 57
    varcte                         shift and go to state 58
    varcomplicated                 shift and go to state 59
    varcomp1                       shift and go to state 65
    callfunc                       shift and go to state 66

state 135

    (113) alttermino -> TIMES save_op . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 56
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    CTEFLOAT        shift and go to state 62
    CTESTRING       shift and go to state 63
    CTEINT          shift and go to state 64
    ID              shift and go to state 67

    factor                         shift and go to state 170
    varcall                        shift and go to state 57
    varcte                         shift and go to state 58
    varcomplicated                 shift and go to state 59
    varcomp1                       shift and go to state 65
    callfunc                       shift and go to state 66

state 136

    (114) alttermino -> DIV save_op . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 56
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    CTEFLOAT        shift and go to state 62
    CTESTRING       shift and go to state 63
    CTEINT          shift and go to state 64
    ID              shift and go to state 67

    factor                         shift and go to state 171
    varcall                        shift and go to state 57
    varcte                         shift and go to state 58
    varcomplicated                 shift and go to state 59
    varcomp1                       shift and go to state 65
    callfunc                       shift and go to state 66

state 137

    (121) factor -> OPENPAREN save_op expresion . CLOSEPAREN save_op

    CLOSEPAREN      shift and go to state 172


state 138

    (52) callfunc -> ID check_exists_func OPENPAREN . altcall CLOSEPAREN
    (53) altcall -> . expresion generate_param_quad alt2call
    (54) altcall -> . empty
    (95) expresion -> . exp altexpresion
    (132) empty -> .
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    CLOSEPAREN      reduce using rule 132 (empty -> .)
    OPENPAREN       shift and go to state 56
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    CTEFLOAT        shift and go to state 62
    CTESTRING       shift and go to state 63
    CTEINT          shift and go to state 64
    ID              shift and go to state 67

    altcall                        shift and go to state 173
    expresion                      shift and go to state 174
    empty                          shift and go to state 175
    exp                            shift and go to state 53
    termino                        shift and go to state 54
    factor                         shift and go to state 55
    varcall                        shift and go to state 57
    varcte                         shift and go to state 58
    varcomplicated                 shift and go to state 59
    varcomp1                       shift and go to state 65
    callfunc                       shift and go to state 66

state 139

    (89) varcomp2 -> DOT varcomp3 .

    TIMES           reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    DIV             reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    SUM             reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    SUBTRACT        reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    SAMEAS          reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    BIGGERTHAN      reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    BIGGEREQUALSTHAN reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    SMALLTHAN       reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    SMALLEQUALSTHAN reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    DIFFERENTTHAN   reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    AND             reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    OR              reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    CLOSEBRACKET    reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    CLOSEPAREN      reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    COMMA           reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    SEMICOLON       reduce using rule 89 (varcomp2 -> DOT varcomp3 .)


state 140

    (91) varcomp3 -> varcomp1 .

    TIMES           reduce using rule 91 (varcomp3 -> varcomp1 .)
    DIV             reduce using rule 91 (varcomp3 -> varcomp1 .)
    SUM             reduce using rule 91 (varcomp3 -> varcomp1 .)
    SUBTRACT        reduce using rule 91 (varcomp3 -> varcomp1 .)
    SAMEAS          reduce using rule 91 (varcomp3 -> varcomp1 .)
    BIGGERTHAN      reduce using rule 91 (varcomp3 -> varcomp1 .)
    BIGGEREQUALSTHAN reduce using rule 91 (varcomp3 -> varcomp1 .)
    SMALLTHAN       reduce using rule 91 (varcomp3 -> varcomp1 .)
    SMALLEQUALSTHAN reduce using rule 91 (varcomp3 -> varcomp1 .)
    DIFFERENTTHAN   reduce using rule 91 (varcomp3 -> varcomp1 .)
    AND             reduce using rule 91 (varcomp3 -> varcomp1 .)
    OR              reduce using rule 91 (varcomp3 -> varcomp1 .)
    CLOSEBRACKET    reduce using rule 91 (varcomp3 -> varcomp1 .)
    CLOSEPAREN      reduce using rule 91 (varcomp3 -> varcomp1 .)
    COMMA           reduce using rule 91 (varcomp3 -> varcomp1 .)
    SEMICOLON       reduce using rule 91 (varcomp3 -> varcomp1 .)


state 141

    (92) varcomp3 -> callfunc .

    TIMES           reduce using rule 92 (varcomp3 -> callfunc .)
    DIV             reduce using rule 92 (varcomp3 -> callfunc .)
    SUM             reduce using rule 92 (varcomp3 -> callfunc .)
    SUBTRACT        reduce using rule 92 (varcomp3 -> callfunc .)
    SAMEAS          reduce using rule 92 (varcomp3 -> callfunc .)
    BIGGERTHAN      reduce using rule 92 (varcomp3 -> callfunc .)
    BIGGEREQUALSTHAN reduce using rule 92 (varcomp3 -> callfunc .)
    SMALLTHAN       reduce using rule 92 (varcomp3 -> callfunc .)
    SMALLEQUALSTHAN reduce using rule 92 (varcomp3 -> callfunc .)
    DIFFERENTTHAN   reduce using rule 92 (varcomp3 -> callfunc .)
    AND             reduce using rule 92 (varcomp3 -> callfunc .)
    OR              reduce using rule 92 (varcomp3 -> callfunc .)
    CLOSEBRACKET    reduce using rule 92 (varcomp3 -> callfunc .)
    CLOSEPAREN      reduce using rule 92 (varcomp3 -> callfunc .)
    COMMA           reduce using rule 92 (varcomp3 -> callfunc .)
    SEMICOLON       reduce using rule 92 (varcomp3 -> callfunc .)


state 142

    (48) params -> ID TWODOTS type save_params . altparams
    (49) altparams -> . COMMA ID TWODOTS type save_params altparams
    (50) altparams -> . empty
    (132) empty -> .

    COMMA           shift and go to state 177
    CLOSEPAREN      reduce using rule 132 (empty -> .)

    altparams                      shift and go to state 176
    empty                          shift and go to state 178

state 143

    (37) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function . store_params OPENCURLY alt3func
    (46) store_params -> .

    OPENCURLY       reduce using rule 46 (store_params -> .)

    store_params                   shift and go to state 179

state 144

    (40) alt2func -> TWODOTS type .

    OPENCURLY       reduce using rule 40 (alt2func -> TWODOTS type .)


state 145

    (8) altmain -> var altmain .

    $end            reduce using rule 8 (altmain -> var altmain .)


state 146

    (9) altmain -> estatuto altmain .

    $end            reduce using rule 9 (altmain -> estatuto altmain .)


state 147

    (64) estatuto -> assign empty_pv .

    CLOSECURLY      reduce using rule 64 (estatuto -> assign empty_pv .)
    VAR             reduce using rule 64 (estatuto -> assign empty_pv .)
    ID              reduce using rule 64 (estatuto -> assign empty_pv .)
    IF              reduce using rule 64 (estatuto -> assign empty_pv .)
    OUTPUT          reduce using rule 64 (estatuto -> assign empty_pv .)
    INPUT           reduce using rule 64 (estatuto -> assign empty_pv .)
    RETURN          reduce using rule 64 (estatuto -> assign empty_pv .)
    WHILE           reduce using rule 64 (estatuto -> assign empty_pv .)


state 148

    (65) estatuto -> condition empty_pv .

    CLOSECURLY      reduce using rule 65 (estatuto -> condition empty_pv .)
    VAR             reduce using rule 65 (estatuto -> condition empty_pv .)
    ID              reduce using rule 65 (estatuto -> condition empty_pv .)
    IF              reduce using rule 65 (estatuto -> condition empty_pv .)
    OUTPUT          reduce using rule 65 (estatuto -> condition empty_pv .)
    INPUT           reduce using rule 65 (estatuto -> condition empty_pv .)
    RETURN          reduce using rule 65 (estatuto -> condition empty_pv .)
    WHILE           reduce using rule 65 (estatuto -> condition empty_pv .)


state 149

    (66) estatuto -> write empty_pv .

    CLOSECURLY      reduce using rule 66 (estatuto -> write empty_pv .)
    VAR             reduce using rule 66 (estatuto -> write empty_pv .)
    ID              reduce using rule 66 (estatuto -> write empty_pv .)
    IF              reduce using rule 66 (estatuto -> write empty_pv .)
    OUTPUT          reduce using rule 66 (estatuto -> write empty_pv .)
    INPUT           reduce using rule 66 (estatuto -> write empty_pv .)
    RETURN          reduce using rule 66 (estatuto -> write empty_pv .)
    WHILE           reduce using rule 66 (estatuto -> write empty_pv .)


state 150

    (67) estatuto -> read empty_pv .

    CLOSECURLY      reduce using rule 67 (estatuto -> read empty_pv .)
    VAR             reduce using rule 67 (estatuto -> read empty_pv .)
    ID              reduce using rule 67 (estatuto -> read empty_pv .)
    IF              reduce using rule 67 (estatuto -> read empty_pv .)
    OUTPUT          reduce using rule 67 (estatuto -> read empty_pv .)
    INPUT           reduce using rule 67 (estatuto -> read empty_pv .)
    RETURN          reduce using rule 67 (estatuto -> read empty_pv .)
    WHILE           reduce using rule 67 (estatuto -> read empty_pv .)


state 151

    (68) estatuto -> return empty_pv .

    CLOSECURLY      reduce using rule 68 (estatuto -> return empty_pv .)
    VAR             reduce using rule 68 (estatuto -> return empty_pv .)
    ID              reduce using rule 68 (estatuto -> return empty_pv .)
    IF              reduce using rule 68 (estatuto -> return empty_pv .)
    OUTPUT          reduce using rule 68 (estatuto -> return empty_pv .)
    INPUT           reduce using rule 68 (estatuto -> return empty_pv .)
    RETURN          reduce using rule 68 (estatuto -> return empty_pv .)
    WHILE           reduce using rule 68 (estatuto -> return empty_pv .)


state 152

    (69) estatuto -> voidcall empty_pv .

    CLOSECURLY      reduce using rule 69 (estatuto -> voidcall empty_pv .)
    VAR             reduce using rule 69 (estatuto -> voidcall empty_pv .)
    ID              reduce using rule 69 (estatuto -> voidcall empty_pv .)
    IF              reduce using rule 69 (estatuto -> voidcall empty_pv .)
    OUTPUT          reduce using rule 69 (estatuto -> voidcall empty_pv .)
    INPUT           reduce using rule 69 (estatuto -> voidcall empty_pv .)
    RETURN          reduce using rule 69 (estatuto -> voidcall empty_pv .)
    WHILE           reduce using rule 69 (estatuto -> voidcall empty_pv .)


state 153

    (70) estatuto -> while empty_pv .

    CLOSECURLY      reduce using rule 70 (estatuto -> while empty_pv .)
    VAR             reduce using rule 70 (estatuto -> while empty_pv .)
    ID              reduce using rule 70 (estatuto -> while empty_pv .)
    IF              reduce using rule 70 (estatuto -> while empty_pv .)
    OUTPUT          reduce using rule 70 (estatuto -> while empty_pv .)
    INPUT           reduce using rule 70 (estatuto -> while empty_pv .)
    RETURN          reduce using rule 70 (estatuto -> while empty_pv .)
    WHILE           reduce using rule 70 (estatuto -> while empty_pv .)


state 154

    (130) assign -> ID save_comp . EQUALS save_op expresion SEMICOLON

    EQUALS          shift and go to state 180


state 155

    (72) voidcall -> ID DOT . voidcall
    (71) voidcall -> . callfunc SEMICOLON
    (72) voidcall -> . ID DOT voidcall
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    ID              shift and go to state 181

    voidcall                       shift and go to state 182
    callfunc                       shift and go to state 125

state 156

    (123) condition -> IF OPENPAREN . expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if
    (124) condition -> IF OPENPAREN . expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 56
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    CTEFLOAT        shift and go to state 62
    CTESTRING       shift and go to state 63
    CTEINT          shift and go to state 64
    ID              shift and go to state 67

    expresion                      shift and go to state 183
    exp                            shift and go to state 53
    termino                        shift and go to state 54
    factor                         shift and go to state 55
    varcall                        shift and go to state 57
    varcte                         shift and go to state 58
    varcomplicated                 shift and go to state 59
    varcomp1                       shift and go to state 65
    callfunc                       shift and go to state 66

state 157

    (118) write -> OUTPUT save_op . OPENPAREN expresion altwrite

    OPENPAREN       shift and go to state 184


state 158

    (117) read -> INPUT save_op . OPENPAREN ID save_comp CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 185


state 159

    (131) return -> RETURN save_op . expresion SEMICOLON
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 56
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    CTEFLOAT        shift and go to state 62
    CTESTRING       shift and go to state 63
    CTEINT          shift and go to state 64
    ID              shift and go to state 67

    expresion                      shift and go to state 186
    exp                            shift and go to state 53
    termino                        shift and go to state 54
    factor                         shift and go to state 55
    varcall                        shift and go to state 57
    varcte                         shift and go to state 58
    varcomplicated                 shift and go to state 59
    varcomp1                       shift and go to state 65
    callfunc                       shift and go to state 66

state 160

    (71) voidcall -> callfunc SEMICOLON .

    CLOSECURLY      reduce using rule 71 (voidcall -> callfunc SEMICOLON .)
    VAR             reduce using rule 71 (voidcall -> callfunc SEMICOLON .)
    ID              reduce using rule 71 (voidcall -> callfunc SEMICOLON .)
    IF              reduce using rule 71 (voidcall -> callfunc SEMICOLON .)
    OUTPUT          reduce using rule 71 (voidcall -> callfunc SEMICOLON .)
    INPUT           reduce using rule 71 (voidcall -> callfunc SEMICOLON .)
    RETURN          reduce using rule 71 (voidcall -> callfunc SEMICOLON .)
    WHILE           reduce using rule 71 (voidcall -> callfunc SEMICOLON .)


state 161

    (74) while -> WHILE add_stack_jump . OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while

    OPENPAREN       shift and go to state 187


state 162

    (17) alt2class -> constructor CLOSECURLY SEMICOLON . remove_class_scope
    (19) remove_class_scope -> .

    CLASS           reduce using rule 19 (remove_class_scope -> .)
    VAR             reduce using rule 19 (remove_class_scope -> .)
    FUNC            reduce using rule 19 (remove_class_scope -> .)
    MAIN            reduce using rule 19 (remove_class_scope -> .)

    remove_class_scope             shift and go to state 188

state 163

    (20) constructor -> CONSTRUCTOR save_constructor OPENPAREN . altconst store_params CLOSEPAREN OPENCURLY alt2const
    (21) altconst -> . params
    (22) altconst -> . empty
    (48) params -> . ID TWODOTS type save_params altparams
    (132) empty -> .

    ID              shift and go to state 42
    CLOSEPAREN      reduce using rule 132 (empty -> .)

    altconst                       shift and go to state 189
    params                         shift and go to state 190
    empty                          shift and go to state 191

state 164

    (34) array2 -> OPENBRACKET . expresion CLOSEBRACKET empty_pv
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 56
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    CTEFLOAT        shift and go to state 62
    CTESTRING       shift and go to state 63
    CTEINT          shift and go to state 64
    ID              shift and go to state 67

    expresion                      shift and go to state 192
    exp                            shift and go to state 53
    termino                        shift and go to state 54
    factor                         shift and go to state 55
    varcall                        shift and go to state 57
    varcte                         shift and go to state 58
    varcomplicated                 shift and go to state 59
    varcomp1                       shift and go to state 65
    callfunc                       shift and go to state 66

state 165

    (32) array -> OPENBRACKET expresion CLOSEBRACKET empty_pv array2 .

    COMMA           reduce using rule 32 (array -> OPENBRACKET expresion CLOSEBRACKET empty_pv array2 .)
    TWODOTS         reduce using rule 32 (array -> OPENBRACKET expresion CLOSEBRACKET empty_pv array2 .)


state 166

    (35) array2 -> empty .

    COMMA           reduce using rule 35 (array2 -> empty .)
    TWODOTS         reduce using rule 35 (array2 -> empty .)


state 167

    (96) altexpresion -> altexpresion2 save_op exp .

    CLOSEBRACKET    reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    CLOSEPAREN      reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    COMMA           reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    SEMICOLON       reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)


state 168

    (108) altexp -> SUM save_op termino . altexp
    (108) altexp -> . SUM save_op termino altexp
    (109) altexp -> . SUBTRACT save_op termino altexp
    (110) altexp -> . empty
    (132) empty -> .

    SUM             shift and go to state 91
    SUBTRACT        shift and go to state 92
    SAMEAS          reduce using rule 132 (empty -> .)
    BIGGERTHAN      reduce using rule 132 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 132 (empty -> .)
    SMALLTHAN       reduce using rule 132 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 132 (empty -> .)
    DIFFERENTTHAN   reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    CLOSEBRACKET    reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)

    altexp                         shift and go to state 193
    empty                          shift and go to state 93

state 169

    (109) altexp -> SUBTRACT save_op termino . altexp
    (108) altexp -> . SUM save_op termino altexp
    (109) altexp -> . SUBTRACT save_op termino altexp
    (110) altexp -> . empty
    (132) empty -> .

    SUM             shift and go to state 91
    SUBTRACT        shift and go to state 92
    SAMEAS          reduce using rule 132 (empty -> .)
    BIGGERTHAN      reduce using rule 132 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 132 (empty -> .)
    SMALLTHAN       reduce using rule 132 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 132 (empty -> .)
    DIFFERENTTHAN   reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    CLOSEBRACKET    reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)

    altexp                         shift and go to state 194
    empty                          shift and go to state 93

state 170

    (113) alttermino -> TIMES save_op factor . alttermino
    (113) alttermino -> . TIMES save_op factor alttermino
    (114) alttermino -> . DIV save_op factor alttermino
    (115) alttermino -> . empty
    (132) empty -> .

    TIMES           shift and go to state 95
    DIV             shift and go to state 96
    SUM             reduce using rule 132 (empty -> .)
    SUBTRACT        reduce using rule 132 (empty -> .)
    SAMEAS          reduce using rule 132 (empty -> .)
    BIGGERTHAN      reduce using rule 132 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 132 (empty -> .)
    SMALLTHAN       reduce using rule 132 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 132 (empty -> .)
    DIFFERENTTHAN   reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    CLOSEBRACKET    reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)

    alttermino                     shift and go to state 195
    empty                          shift and go to state 97

state 171

    (114) alttermino -> DIV save_op factor . alttermino
    (113) alttermino -> . TIMES save_op factor alttermino
    (114) alttermino -> . DIV save_op factor alttermino
    (115) alttermino -> . empty
    (132) empty -> .

    TIMES           shift and go to state 95
    DIV             shift and go to state 96
    SUM             reduce using rule 132 (empty -> .)
    SUBTRACT        reduce using rule 132 (empty -> .)
    SAMEAS          reduce using rule 132 (empty -> .)
    BIGGERTHAN      reduce using rule 132 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 132 (empty -> .)
    SMALLTHAN       reduce using rule 132 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 132 (empty -> .)
    DIFFERENTTHAN   reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    CLOSEBRACKET    reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)

    alttermino                     shift and go to state 196
    empty                          shift and go to state 97

state 172

    (121) factor -> OPENPAREN save_op expresion CLOSEPAREN . save_op
    (116) save_op -> .

    TIMES           reduce using rule 116 (save_op -> .)
    DIV             reduce using rule 116 (save_op -> .)
    SUM             reduce using rule 116 (save_op -> .)
    SUBTRACT        reduce using rule 116 (save_op -> .)
    SAMEAS          reduce using rule 116 (save_op -> .)
    BIGGERTHAN      reduce using rule 116 (save_op -> .)
    BIGGEREQUALSTHAN reduce using rule 116 (save_op -> .)
    SMALLTHAN       reduce using rule 116 (save_op -> .)
    SMALLEQUALSTHAN reduce using rule 116 (save_op -> .)
    DIFFERENTTHAN   reduce using rule 116 (save_op -> .)
    AND             reduce using rule 116 (save_op -> .)
    OR              reduce using rule 116 (save_op -> .)
    CLOSEBRACKET    reduce using rule 116 (save_op -> .)
    CLOSEPAREN      reduce using rule 116 (save_op -> .)
    COMMA           reduce using rule 116 (save_op -> .)
    SEMICOLON       reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 197

state 173

    (52) callfunc -> ID check_exists_func OPENPAREN altcall . CLOSEPAREN

    CLOSEPAREN      shift and go to state 198


state 174

    (53) altcall -> expresion . generate_param_quad alt2call
    (57) generate_param_quad -> .

    COMMA           reduce using rule 57 (generate_param_quad -> .)
    CLOSEPAREN      reduce using rule 57 (generate_param_quad -> .)

    generate_param_quad            shift and go to state 199

state 175

    (54) altcall -> empty .

    CLOSEPAREN      reduce using rule 54 (altcall -> empty .)


state 176

    (48) params -> ID TWODOTS type save_params altparams .

    CLOSEPAREN      reduce using rule 48 (params -> ID TWODOTS type save_params altparams .)


state 177

    (49) altparams -> COMMA . ID TWODOTS type save_params altparams

    ID              shift and go to state 200


state 178

    (50) altparams -> empty .

    CLOSEPAREN      reduce using rule 50 (altparams -> empty .)


state 179

    (37) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params . OPENCURLY alt3func

    OPENCURLY       shift and go to state 201


state 180

    (130) assign -> ID save_comp EQUALS . save_op expresion SEMICOLON
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)
    TRUE            reduce using rule 116 (save_op -> .)
    FALSE           reduce using rule 116 (save_op -> .)
    CTEFLOAT        reduce using rule 116 (save_op -> .)
    CTESTRING       reduce using rule 116 (save_op -> .)
    CTEINT          reduce using rule 116 (save_op -> .)
    ID              reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 202

state 181

    (72) voidcall -> ID . DOT voidcall
    (52) callfunc -> ID . check_exists_func OPENPAREN altcall CLOSEPAREN
    (58) check_exists_func -> .

    DOT             shift and go to state 155
    OPENPAREN       reduce using rule 58 (check_exists_func -> .)

    check_exists_func              shift and go to state 102

state 182

    (72) voidcall -> ID DOT voidcall .

    CLOSECURLY      reduce using rule 72 (voidcall -> ID DOT voidcall .)
    VAR             reduce using rule 72 (voidcall -> ID DOT voidcall .)
    ID              reduce using rule 72 (voidcall -> ID DOT voidcall .)
    IF              reduce using rule 72 (voidcall -> ID DOT voidcall .)
    OUTPUT          reduce using rule 72 (voidcall -> ID DOT voidcall .)
    INPUT           reduce using rule 72 (voidcall -> ID DOT voidcall .)
    RETURN          reduce using rule 72 (voidcall -> ID DOT voidcall .)
    WHILE           reduce using rule 72 (voidcall -> ID DOT voidcall .)


state 183

    (123) condition -> IF OPENPAREN expresion . CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if
    (124) condition -> IF OPENPAREN expresion . CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if

    CLOSEPAREN      shift and go to state 203


state 184

    (118) write -> OUTPUT save_op OPENPAREN . expresion altwrite
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 56
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    CTEFLOAT        shift and go to state 62
    CTESTRING       shift and go to state 63
    CTEINT          shift and go to state 64
    ID              shift and go to state 67

    expresion                      shift and go to state 204
    exp                            shift and go to state 53
    termino                        shift and go to state 54
    factor                         shift and go to state 55
    varcall                        shift and go to state 57
    varcte                         shift and go to state 58
    varcomplicated                 shift and go to state 59
    varcomp1                       shift and go to state 65
    callfunc                       shift and go to state 66

state 185

    (117) read -> INPUT save_op OPENPAREN . ID save_comp CLOSEPAREN SEMICOLON

    ID              shift and go to state 205


state 186

    (131) return -> RETURN save_op expresion . SEMICOLON

    SEMICOLON       shift and go to state 206


state 187

    (74) while -> WHILE add_stack_jump OPENPAREN . expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 56
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    CTEFLOAT        shift and go to state 62
    CTESTRING       shift and go to state 63
    CTEINT          shift and go to state 64
    ID              shift and go to state 67

    expresion                      shift and go to state 207
    exp                            shift and go to state 53
    termino                        shift and go to state 54
    factor                         shift and go to state 55
    varcall                        shift and go to state 57
    varcte                         shift and go to state 58
    varcomplicated                 shift and go to state 59
    varcomp1                       shift and go to state 65
    callfunc                       shift and go to state 66

state 188

    (17) alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .

    CLASS           reduce using rule 17 (alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .)
    VAR             reduce using rule 17 (alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .)
    FUNC            reduce using rule 17 (alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .)
    MAIN            reduce using rule 17 (alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .)


state 189

    (20) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst . store_params CLOSEPAREN OPENCURLY alt2const
    (46) store_params -> .

    CLOSEPAREN      reduce using rule 46 (store_params -> .)

    store_params                   shift and go to state 208

state 190

    (21) altconst -> params .

    CLOSEPAREN      reduce using rule 21 (altconst -> params .)


state 191

    (22) altconst -> empty .

    CLOSEPAREN      reduce using rule 22 (altconst -> empty .)


state 192

    (34) array2 -> OPENBRACKET expresion . CLOSEBRACKET empty_pv

    CLOSEBRACKET    shift and go to state 209


state 193

    (108) altexp -> SUM save_op termino altexp .

    SAMEAS          reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    BIGGERTHAN      reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    SMALLTHAN       reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    SMALLEQUALSTHAN reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    DIFFERENTTHAN   reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    AND             reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    OR              reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    CLOSEBRACKET    reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    CLOSEPAREN      reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    COMMA           reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    SEMICOLON       reduce using rule 108 (altexp -> SUM save_op termino altexp .)


state 194

    (109) altexp -> SUBTRACT save_op termino altexp .

    SAMEAS          reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    BIGGERTHAN      reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    SMALLTHAN       reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    SMALLEQUALSTHAN reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    DIFFERENTTHAN   reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    AND             reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    OR              reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    CLOSEBRACKET    reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    CLOSEPAREN      reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    COMMA           reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    SEMICOLON       reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)


state 195

    (113) alttermino -> TIMES save_op factor alttermino .

    SUM             reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    SUBTRACT        reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    SAMEAS          reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    BIGGERTHAN      reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    SMALLTHAN       reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    DIFFERENTTHAN   reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    AND             reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    OR              reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    CLOSEBRACKET    reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    CLOSEPAREN      reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    COMMA           reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    SEMICOLON       reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)


state 196

    (114) alttermino -> DIV save_op factor alttermino .

    SUM             reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    SUBTRACT        reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    SAMEAS          reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    BIGGERTHAN      reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    SMALLTHAN       reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    DIFFERENTTHAN   reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    AND             reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    OR              reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    CLOSEBRACKET    reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    CLOSEPAREN      reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    COMMA           reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    SEMICOLON       reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)


state 197

    (121) factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .

    TIMES           reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    DIV             reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    SUM             reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    SUBTRACT        reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    SAMEAS          reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    BIGGERTHAN      reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    BIGGEREQUALSTHAN reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    SMALLTHAN       reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    SMALLEQUALSTHAN reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    DIFFERENTTHAN   reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    AND             reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    OR              reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    CLOSEBRACKET    reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    CLOSEPAREN      reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    COMMA           reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    SEMICOLON       reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)


state 198

    (52) callfunc -> ID check_exists_func OPENPAREN altcall CLOSEPAREN .

    TIMES           reduce using rule 52 (callfunc -> ID check_exists_func OPENPAREN altcall CLOSEPAREN .)
    DIV             reduce using rule 52 (callfunc -> ID check_exists_func OPENPAREN altcall CLOSEPAREN .)
    SUM             reduce using rule 52 (callfunc -> ID check_exists_func OPENPAREN altcall CLOSEPAREN .)
    SUBTRACT        reduce using rule 52 (callfunc -> ID check_exists_func OPENPAREN altcall CLOSEPAREN .)
    SAMEAS          reduce using rule 52 (callfunc -> ID check_exists_func OPENPAREN altcall CLOSEPAREN .)
    BIGGERTHAN      reduce using rule 52 (callfunc -> ID check_exists_func OPENPAREN altcall CLOSEPAREN .)
    BIGGEREQUALSTHAN reduce using rule 52 (callfunc -> ID check_exists_func OPENPAREN altcall CLOSEPAREN .)
    SMALLTHAN       reduce using rule 52 (callfunc -> ID check_exists_func OPENPAREN altcall CLOSEPAREN .)
    SMALLEQUALSTHAN reduce using rule 52 (callfunc -> ID check_exists_func OPENPAREN altcall CLOSEPAREN .)
    DIFFERENTTHAN   reduce using rule 52 (callfunc -> ID check_exists_func OPENPAREN altcall CLOSEPAREN .)
    AND             reduce using rule 52 (callfunc -> ID check_exists_func OPENPAREN altcall CLOSEPAREN .)
    OR              reduce using rule 52 (callfunc -> ID check_exists_func OPENPAREN altcall CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 52 (callfunc -> ID check_exists_func OPENPAREN altcall CLOSEPAREN .)
    SEMICOLON       reduce using rule 52 (callfunc -> ID check_exists_func OPENPAREN altcall CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 52 (callfunc -> ID check_exists_func OPENPAREN altcall CLOSEPAREN .)
    COMMA           reduce using rule 52 (callfunc -> ID check_exists_func OPENPAREN altcall CLOSEPAREN .)


state 199

    (53) altcall -> expresion generate_param_quad . alt2call
    (55) alt2call -> . COMMA altcall
    (56) alt2call -> . empty
    (132) empty -> .

    COMMA           shift and go to state 211
    CLOSEPAREN      reduce using rule 132 (empty -> .)

    alt2call                       shift and go to state 210
    empty                          shift and go to state 212

state 200

    (49) altparams -> COMMA ID . TWODOTS type save_params altparams

    TWODOTS         shift and go to state 213


state 201

    (37) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY . alt3func
    (42) alt3func -> . var alt3func
    (43) alt3func -> . estatuto alt3func
    (44) alt3func -> . CLOSECURLY remove_function_scope
    (27) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . callfunc SEMICOLON
    (72) voidcall -> . ID DOT voidcall
    (74) while -> . WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    CLOSECURLY      shift and go to state 217
    VAR             shift and go to state 12
    ID              shift and go to state 120
    IF              shift and go to state 121
    OUTPUT          shift and go to state 122
    INPUT           shift and go to state 123
    RETURN          shift and go to state 124
    WHILE           shift and go to state 126

    alt3func                       shift and go to state 214
    var                            shift and go to state 215
    estatuto                       shift and go to state 216
    assign                         shift and go to state 113
    condition                      shift and go to state 114
    write                          shift and go to state 115
    read                           shift and go to state 116
    return                         shift and go to state 117
    voidcall                       shift and go to state 118
    while                          shift and go to state 119
    callfunc                       shift and go to state 125

state 202

    (130) assign -> ID save_comp EQUALS save_op . expresion SEMICOLON
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 56
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    CTEFLOAT        shift and go to state 62
    CTESTRING       shift and go to state 63
    CTEINT          shift and go to state 64
    ID              shift and go to state 67

    expresion                      shift and go to state 218
    exp                            shift and go to state 53
    termino                        shift and go to state 54
    factor                         shift and go to state 55
    varcall                        shift and go to state 57
    varcte                         shift and go to state 58
    varcomplicated                 shift and go to state 59
    varcomp1                       shift and go to state 65
    callfunc                       shift and go to state 66

state 203

    (123) condition -> IF OPENPAREN expresion CLOSEPAREN . add_gotof OPENCURLY altcondition add_end_if
    (124) condition -> IF OPENPAREN expresion CLOSEPAREN . add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if
    (127) add_gotof -> .

    OPENCURLY       reduce using rule 127 (add_gotof -> .)

    add_gotof                      shift and go to state 219

state 204

    (118) write -> OUTPUT save_op OPENPAREN expresion . altwrite
    (119) altwrite -> . COMMA save_op expresion altwrite
    (120) altwrite -> . CLOSEPAREN SEMICOLON

    COMMA           shift and go to state 221
    CLOSEPAREN      shift and go to state 222

    altwrite                       shift and go to state 220

state 205

    (117) read -> INPUT save_op OPENPAREN ID . save_comp CLOSEPAREN SEMICOLON
    (94) save_comp -> .

    CLOSEPAREN      reduce using rule 94 (save_comp -> .)

    save_comp                      shift and go to state 223

state 206

    (131) return -> RETURN save_op expresion SEMICOLON .

    CLOSECURLY      reduce using rule 131 (return -> RETURN save_op expresion SEMICOLON .)
    VAR             reduce using rule 131 (return -> RETURN save_op expresion SEMICOLON .)
    ID              reduce using rule 131 (return -> RETURN save_op expresion SEMICOLON .)
    IF              reduce using rule 131 (return -> RETURN save_op expresion SEMICOLON .)
    OUTPUT          reduce using rule 131 (return -> RETURN save_op expresion SEMICOLON .)
    INPUT           reduce using rule 131 (return -> RETURN save_op expresion SEMICOLON .)
    RETURN          reduce using rule 131 (return -> RETURN save_op expresion SEMICOLON .)
    WHILE           reduce using rule 131 (return -> RETURN save_op expresion SEMICOLON .)


state 207

    (74) while -> WHILE add_stack_jump OPENPAREN expresion . CLOSEPAREN add_gotof OPENCURLY altwhile end_while

    CLOSEPAREN      shift and go to state 224


state 208

    (20) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params . CLOSEPAREN OPENCURLY alt2const

    CLOSEPAREN      shift and go to state 225


state 209

    (34) array2 -> OPENBRACKET expresion CLOSEBRACKET . empty_pv
    (73) empty_pv -> .

    COMMA           reduce using rule 73 (empty_pv -> .)
    TWODOTS         reduce using rule 73 (empty_pv -> .)

    empty_pv                       shift and go to state 226

state 210

    (53) altcall -> expresion generate_param_quad alt2call .

    CLOSEPAREN      reduce using rule 53 (altcall -> expresion generate_param_quad alt2call .)


state 211

    (55) alt2call -> COMMA . altcall
    (53) altcall -> . expresion generate_param_quad alt2call
    (54) altcall -> . empty
    (95) expresion -> . exp altexpresion
    (132) empty -> .
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    CLOSEPAREN      reduce using rule 132 (empty -> .)
    OPENPAREN       shift and go to state 56
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    CTEFLOAT        shift and go to state 62
    CTESTRING       shift and go to state 63
    CTEINT          shift and go to state 64
    ID              shift and go to state 67

    altcall                        shift and go to state 227
    expresion                      shift and go to state 174
    empty                          shift and go to state 175
    exp                            shift and go to state 53
    termino                        shift and go to state 54
    factor                         shift and go to state 55
    varcall                        shift and go to state 57
    varcte                         shift and go to state 58
    varcomplicated                 shift and go to state 59
    varcomp1                       shift and go to state 65
    callfunc                       shift and go to state 66

state 212

    (56) alt2call -> empty .

    CLOSEPAREN      reduce using rule 56 (alt2call -> empty .)


state 213

    (49) altparams -> COMMA ID TWODOTS . type save_params altparams
    (59) type -> . INT
    (60) type -> . FLOAT
    (61) type -> . STRING
    (62) type -> . ID
    (63) type -> . BOOL

    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    ID              shift and go to state 37
    BOOL            shift and go to state 38

    type                           shift and go to state 228

state 214

    (37) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func .

    CLASS           reduce using rule 37 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func .)
    VAR             reduce using rule 37 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func .)
    FUNC            reduce using rule 37 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func .)
    MAIN            reduce using rule 37 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func .)
    CONSTRUCTOR     reduce using rule 37 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func .)


state 215

    (42) alt3func -> var . alt3func
    (42) alt3func -> . var alt3func
    (43) alt3func -> . estatuto alt3func
    (44) alt3func -> . CLOSECURLY remove_function_scope
    (27) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . callfunc SEMICOLON
    (72) voidcall -> . ID DOT voidcall
    (74) while -> . WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    CLOSECURLY      shift and go to state 217
    VAR             shift and go to state 12
    ID              shift and go to state 120
    IF              shift and go to state 121
    OUTPUT          shift and go to state 122
    INPUT           shift and go to state 123
    RETURN          shift and go to state 124
    WHILE           shift and go to state 126

    var                            shift and go to state 215
    alt3func                       shift and go to state 229
    estatuto                       shift and go to state 216
    assign                         shift and go to state 113
    condition                      shift and go to state 114
    write                          shift and go to state 115
    read                           shift and go to state 116
    return                         shift and go to state 117
    voidcall                       shift and go to state 118
    while                          shift and go to state 119
    callfunc                       shift and go to state 125

state 216

    (43) alt3func -> estatuto . alt3func
    (42) alt3func -> . var alt3func
    (43) alt3func -> . estatuto alt3func
    (44) alt3func -> . CLOSECURLY remove_function_scope
    (27) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . callfunc SEMICOLON
    (72) voidcall -> . ID DOT voidcall
    (74) while -> . WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    CLOSECURLY      shift and go to state 217
    VAR             shift and go to state 12
    ID              shift and go to state 120
    IF              shift and go to state 121
    OUTPUT          shift and go to state 122
    INPUT           shift and go to state 123
    RETURN          shift and go to state 124
    WHILE           shift and go to state 126

    estatuto                       shift and go to state 216
    alt3func                       shift and go to state 230
    var                            shift and go to state 215
    assign                         shift and go to state 113
    condition                      shift and go to state 114
    write                          shift and go to state 115
    read                           shift and go to state 116
    return                         shift and go to state 117
    voidcall                       shift and go to state 118
    while                          shift and go to state 119
    callfunc                       shift and go to state 125

state 217

    (44) alt3func -> CLOSECURLY . remove_function_scope
    (47) remove_function_scope -> .

    CLASS           reduce using rule 47 (remove_function_scope -> .)
    VAR             reduce using rule 47 (remove_function_scope -> .)
    FUNC            reduce using rule 47 (remove_function_scope -> .)
    MAIN            reduce using rule 47 (remove_function_scope -> .)
    CONSTRUCTOR     reduce using rule 47 (remove_function_scope -> .)

    remove_function_scope          shift and go to state 231

state 218

    (130) assign -> ID save_comp EQUALS save_op expresion . SEMICOLON

    SEMICOLON       shift and go to state 232


state 219

    (123) condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof . OPENCURLY altcondition add_end_if
    (124) condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof . OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if

    OPENCURLY       shift and go to state 233


state 220

    (118) write -> OUTPUT save_op OPENPAREN expresion altwrite .

    CLOSECURLY      reduce using rule 118 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    VAR             reduce using rule 118 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    ID              reduce using rule 118 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    IF              reduce using rule 118 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    OUTPUT          reduce using rule 118 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    INPUT           reduce using rule 118 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    RETURN          reduce using rule 118 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    WHILE           reduce using rule 118 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)


state 221

    (119) altwrite -> COMMA . save_op expresion altwrite
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)
    TRUE            reduce using rule 116 (save_op -> .)
    FALSE           reduce using rule 116 (save_op -> .)
    CTEFLOAT        reduce using rule 116 (save_op -> .)
    CTESTRING       reduce using rule 116 (save_op -> .)
    CTEINT          reduce using rule 116 (save_op -> .)
    ID              reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 234

state 222

    (120) altwrite -> CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 235


state 223

    (117) read -> INPUT save_op OPENPAREN ID save_comp . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 236


state 224

    (74) while -> WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN . add_gotof OPENCURLY altwhile end_while
    (127) add_gotof -> .

    OPENCURLY       reduce using rule 127 (add_gotof -> .)

    add_gotof                      shift and go to state 237

state 225

    (20) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN . OPENCURLY alt2const

    OPENCURLY       shift and go to state 238


state 226

    (34) array2 -> OPENBRACKET expresion CLOSEBRACKET empty_pv .

    COMMA           reduce using rule 34 (array2 -> OPENBRACKET expresion CLOSEBRACKET empty_pv .)
    TWODOTS         reduce using rule 34 (array2 -> OPENBRACKET expresion CLOSEBRACKET empty_pv .)


state 227

    (55) alt2call -> COMMA altcall .

    CLOSEPAREN      reduce using rule 55 (alt2call -> COMMA altcall .)


state 228

    (49) altparams -> COMMA ID TWODOTS type . save_params altparams
    (51) save_params -> .

    COMMA           reduce using rule 51 (save_params -> .)
    CLOSEPAREN      reduce using rule 51 (save_params -> .)

    save_params                    shift and go to state 239

state 229

    (42) alt3func -> var alt3func .

    CLASS           reduce using rule 42 (alt3func -> var alt3func .)
    VAR             reduce using rule 42 (alt3func -> var alt3func .)
    FUNC            reduce using rule 42 (alt3func -> var alt3func .)
    MAIN            reduce using rule 42 (alt3func -> var alt3func .)
    CONSTRUCTOR     reduce using rule 42 (alt3func -> var alt3func .)


state 230

    (43) alt3func -> estatuto alt3func .

    CLASS           reduce using rule 43 (alt3func -> estatuto alt3func .)
    VAR             reduce using rule 43 (alt3func -> estatuto alt3func .)
    FUNC            reduce using rule 43 (alt3func -> estatuto alt3func .)
    MAIN            reduce using rule 43 (alt3func -> estatuto alt3func .)
    CONSTRUCTOR     reduce using rule 43 (alt3func -> estatuto alt3func .)


state 231

    (44) alt3func -> CLOSECURLY remove_function_scope .

    CLASS           reduce using rule 44 (alt3func -> CLOSECURLY remove_function_scope .)
    VAR             reduce using rule 44 (alt3func -> CLOSECURLY remove_function_scope .)
    FUNC            reduce using rule 44 (alt3func -> CLOSECURLY remove_function_scope .)
    MAIN            reduce using rule 44 (alt3func -> CLOSECURLY remove_function_scope .)
    CONSTRUCTOR     reduce using rule 44 (alt3func -> CLOSECURLY remove_function_scope .)


state 232

    (130) assign -> ID save_comp EQUALS save_op expresion SEMICOLON .

    CLOSECURLY      reduce using rule 130 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    VAR             reduce using rule 130 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    ID              reduce using rule 130 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    IF              reduce using rule 130 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    OUTPUT          reduce using rule 130 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    INPUT           reduce using rule 130 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    RETURN          reduce using rule 130 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    WHILE           reduce using rule 130 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)


state 233

    (123) condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY . altcondition add_end_if
    (124) condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY . altcondition ELSE generate_goto OPENCURLY altcondition add_end_if
    (125) altcondition -> . estatuto altcondition
    (126) altcondition -> . CLOSECURLY
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . callfunc SEMICOLON
    (72) voidcall -> . ID DOT voidcall
    (74) while -> . WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    CLOSECURLY      shift and go to state 242
    ID              shift and go to state 120
    IF              shift and go to state 121
    OUTPUT          shift and go to state 122
    INPUT           shift and go to state 123
    RETURN          shift and go to state 124
    WHILE           shift and go to state 126

    altcondition                   shift and go to state 240
    estatuto                       shift and go to state 241
    assign                         shift and go to state 113
    condition                      shift and go to state 114
    write                          shift and go to state 115
    read                           shift and go to state 116
    return                         shift and go to state 117
    voidcall                       shift and go to state 118
    while                          shift and go to state 119
    callfunc                       shift and go to state 125

state 234

    (119) altwrite -> COMMA save_op . expresion altwrite
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 56
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    CTEFLOAT        shift and go to state 62
    CTESTRING       shift and go to state 63
    CTEINT          shift and go to state 64
    ID              shift and go to state 67

    expresion                      shift and go to state 243
    exp                            shift and go to state 53
    termino                        shift and go to state 54
    factor                         shift and go to state 55
    varcall                        shift and go to state 57
    varcte                         shift and go to state 58
    varcomplicated                 shift and go to state 59
    varcomp1                       shift and go to state 65
    callfunc                       shift and go to state 66

state 235

    (120) altwrite -> CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 120 (altwrite -> CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 120 (altwrite -> CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 120 (altwrite -> CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 120 (altwrite -> CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 120 (altwrite -> CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 120 (altwrite -> CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 120 (altwrite -> CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 120 (altwrite -> CLOSEPAREN SEMICOLON .)


state 236

    (117) read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 244


state 237

    (74) while -> WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof . OPENCURLY altwhile end_while

    OPENCURLY       shift and go to state 245


state 238

    (20) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY . alt2const
    (23) alt2const -> . var alt2const
    (24) alt2const -> . estatuto alt2const
    (25) alt2const -> . CLOSECURLY
    (27) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . callfunc SEMICOLON
    (72) voidcall -> . ID DOT voidcall
    (74) while -> . WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    CLOSECURLY      shift and go to state 249
    VAR             shift and go to state 12
    ID              shift and go to state 120
    IF              shift and go to state 121
    OUTPUT          shift and go to state 122
    INPUT           shift and go to state 123
    RETURN          shift and go to state 124
    WHILE           shift and go to state 126

    alt2const                      shift and go to state 246
    var                            shift and go to state 247
    estatuto                       shift and go to state 248
    assign                         shift and go to state 113
    condition                      shift and go to state 114
    write                          shift and go to state 115
    read                           shift and go to state 116
    return                         shift and go to state 117
    voidcall                       shift and go to state 118
    while                          shift and go to state 119
    callfunc                       shift and go to state 125

state 239

    (49) altparams -> COMMA ID TWODOTS type save_params . altparams
    (49) altparams -> . COMMA ID TWODOTS type save_params altparams
    (50) altparams -> . empty
    (132) empty -> .

    COMMA           shift and go to state 177
    CLOSEPAREN      reduce using rule 132 (empty -> .)

    altparams                      shift and go to state 250
    empty                          shift and go to state 178

state 240

    (123) condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition . add_end_if
    (124) condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition . ELSE generate_goto OPENCURLY altcondition add_end_if
    (128) add_end_if -> .

    ELSE            shift and go to state 252
    CLOSECURLY      reduce using rule 128 (add_end_if -> .)
    VAR             reduce using rule 128 (add_end_if -> .)
    ID              reduce using rule 128 (add_end_if -> .)
    IF              reduce using rule 128 (add_end_if -> .)
    OUTPUT          reduce using rule 128 (add_end_if -> .)
    INPUT           reduce using rule 128 (add_end_if -> .)
    RETURN          reduce using rule 128 (add_end_if -> .)
    WHILE           reduce using rule 128 (add_end_if -> .)

    add_end_if                     shift and go to state 251

state 241

    (125) altcondition -> estatuto . altcondition
    (125) altcondition -> . estatuto altcondition
    (126) altcondition -> . CLOSECURLY
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . callfunc SEMICOLON
    (72) voidcall -> . ID DOT voidcall
    (74) while -> . WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    CLOSECURLY      shift and go to state 242
    ID              shift and go to state 120
    IF              shift and go to state 121
    OUTPUT          shift and go to state 122
    INPUT           shift and go to state 123
    RETURN          shift and go to state 124
    WHILE           shift and go to state 126

    estatuto                       shift and go to state 241
    altcondition                   shift and go to state 253
    assign                         shift and go to state 113
    condition                      shift and go to state 114
    write                          shift and go to state 115
    read                           shift and go to state 116
    return                         shift and go to state 117
    voidcall                       shift and go to state 118
    while                          shift and go to state 119
    callfunc                       shift and go to state 125

state 242

    (126) altcondition -> CLOSECURLY .

    ELSE            reduce using rule 126 (altcondition -> CLOSECURLY .)
    CLOSECURLY      reduce using rule 126 (altcondition -> CLOSECURLY .)
    VAR             reduce using rule 126 (altcondition -> CLOSECURLY .)
    ID              reduce using rule 126 (altcondition -> CLOSECURLY .)
    IF              reduce using rule 126 (altcondition -> CLOSECURLY .)
    OUTPUT          reduce using rule 126 (altcondition -> CLOSECURLY .)
    INPUT           reduce using rule 126 (altcondition -> CLOSECURLY .)
    RETURN          reduce using rule 126 (altcondition -> CLOSECURLY .)
    WHILE           reduce using rule 126 (altcondition -> CLOSECURLY .)


state 243

    (119) altwrite -> COMMA save_op expresion . altwrite
    (119) altwrite -> . COMMA save_op expresion altwrite
    (120) altwrite -> . CLOSEPAREN SEMICOLON

    COMMA           shift and go to state 221
    CLOSEPAREN      shift and go to state 222

    altwrite                       shift and go to state 254

state 244

    (117) read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 117 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 117 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 117 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 117 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 117 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 117 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 117 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 117 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)


state 245

    (74) while -> WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY . altwhile end_while
    (75) altwhile -> . estatuto altwhile
    (76) altwhile -> . CLOSECURLY
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . callfunc SEMICOLON
    (72) voidcall -> . ID DOT voidcall
    (74) while -> . WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    CLOSECURLY      shift and go to state 257
    ID              shift and go to state 120
    IF              shift and go to state 121
    OUTPUT          shift and go to state 122
    INPUT           shift and go to state 123
    RETURN          shift and go to state 124
    WHILE           shift and go to state 126

    altwhile                       shift and go to state 255
    estatuto                       shift and go to state 256
    assign                         shift and go to state 113
    condition                      shift and go to state 114
    write                          shift and go to state 115
    read                           shift and go to state 116
    return                         shift and go to state 117
    voidcall                       shift and go to state 118
    while                          shift and go to state 119
    callfunc                       shift and go to state 125

state 246

    (20) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const .

    CLOSECURLY      reduce using rule 20 (constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const .)


state 247

    (23) alt2const -> var . alt2const
    (23) alt2const -> . var alt2const
    (24) alt2const -> . estatuto alt2const
    (25) alt2const -> . CLOSECURLY
    (27) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . callfunc SEMICOLON
    (72) voidcall -> . ID DOT voidcall
    (74) while -> . WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    CLOSECURLY      shift and go to state 249
    VAR             shift and go to state 12
    ID              shift and go to state 120
    IF              shift and go to state 121
    OUTPUT          shift and go to state 122
    INPUT           shift and go to state 123
    RETURN          shift and go to state 124
    WHILE           shift and go to state 126

    var                            shift and go to state 247
    alt2const                      shift and go to state 258
    estatuto                       shift and go to state 248
    assign                         shift and go to state 113
    condition                      shift and go to state 114
    write                          shift and go to state 115
    read                           shift and go to state 116
    return                         shift and go to state 117
    voidcall                       shift and go to state 118
    while                          shift and go to state 119
    callfunc                       shift and go to state 125

state 248

    (24) alt2const -> estatuto . alt2const
    (23) alt2const -> . var alt2const
    (24) alt2const -> . estatuto alt2const
    (25) alt2const -> . CLOSECURLY
    (27) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . callfunc SEMICOLON
    (72) voidcall -> . ID DOT voidcall
    (74) while -> . WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    CLOSECURLY      shift and go to state 249
    VAR             shift and go to state 12
    ID              shift and go to state 120
    IF              shift and go to state 121
    OUTPUT          shift and go to state 122
    INPUT           shift and go to state 123
    RETURN          shift and go to state 124
    WHILE           shift and go to state 126

    estatuto                       shift and go to state 248
    alt2const                      shift and go to state 259
    var                            shift and go to state 247
    assign                         shift and go to state 113
    condition                      shift and go to state 114
    write                          shift and go to state 115
    read                           shift and go to state 116
    return                         shift and go to state 117
    voidcall                       shift and go to state 118
    while                          shift and go to state 119
    callfunc                       shift and go to state 125

state 249

    (25) alt2const -> CLOSECURLY .

    CLOSECURLY      reduce using rule 25 (alt2const -> CLOSECURLY .)


state 250

    (49) altparams -> COMMA ID TWODOTS type save_params altparams .

    CLOSEPAREN      reduce using rule 49 (altparams -> COMMA ID TWODOTS type save_params altparams .)


state 251

    (123) condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if .

    CLOSECURLY      reduce using rule 123 (condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if .)
    VAR             reduce using rule 123 (condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if .)
    ID              reduce using rule 123 (condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if .)
    IF              reduce using rule 123 (condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if .)
    OUTPUT          reduce using rule 123 (condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if .)
    INPUT           reduce using rule 123 (condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if .)
    RETURN          reduce using rule 123 (condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if .)
    WHILE           reduce using rule 123 (condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if .)


state 252

    (124) condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE . generate_goto OPENCURLY altcondition add_end_if
    (129) generate_goto -> .

    OPENCURLY       reduce using rule 129 (generate_goto -> .)

    generate_goto                  shift and go to state 260

state 253

    (125) altcondition -> estatuto altcondition .

    ELSE            reduce using rule 125 (altcondition -> estatuto altcondition .)
    CLOSECURLY      reduce using rule 125 (altcondition -> estatuto altcondition .)
    VAR             reduce using rule 125 (altcondition -> estatuto altcondition .)
    ID              reduce using rule 125 (altcondition -> estatuto altcondition .)
    IF              reduce using rule 125 (altcondition -> estatuto altcondition .)
    OUTPUT          reduce using rule 125 (altcondition -> estatuto altcondition .)
    INPUT           reduce using rule 125 (altcondition -> estatuto altcondition .)
    RETURN          reduce using rule 125 (altcondition -> estatuto altcondition .)
    WHILE           reduce using rule 125 (altcondition -> estatuto altcondition .)


state 254

    (119) altwrite -> COMMA save_op expresion altwrite .

    CLOSECURLY      reduce using rule 119 (altwrite -> COMMA save_op expresion altwrite .)
    VAR             reduce using rule 119 (altwrite -> COMMA save_op expresion altwrite .)
    ID              reduce using rule 119 (altwrite -> COMMA save_op expresion altwrite .)
    IF              reduce using rule 119 (altwrite -> COMMA save_op expresion altwrite .)
    OUTPUT          reduce using rule 119 (altwrite -> COMMA save_op expresion altwrite .)
    INPUT           reduce using rule 119 (altwrite -> COMMA save_op expresion altwrite .)
    RETURN          reduce using rule 119 (altwrite -> COMMA save_op expresion altwrite .)
    WHILE           reduce using rule 119 (altwrite -> COMMA save_op expresion altwrite .)


state 255

    (74) while -> WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile . end_while
    (78) end_while -> .

    CLOSECURLY      reduce using rule 78 (end_while -> .)
    VAR             reduce using rule 78 (end_while -> .)
    ID              reduce using rule 78 (end_while -> .)
    IF              reduce using rule 78 (end_while -> .)
    OUTPUT          reduce using rule 78 (end_while -> .)
    INPUT           reduce using rule 78 (end_while -> .)
    RETURN          reduce using rule 78 (end_while -> .)
    WHILE           reduce using rule 78 (end_while -> .)

    end_while                      shift and go to state 261

state 256

    (75) altwhile -> estatuto . altwhile
    (75) altwhile -> . estatuto altwhile
    (76) altwhile -> . CLOSECURLY
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . callfunc SEMICOLON
    (72) voidcall -> . ID DOT voidcall
    (74) while -> . WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    CLOSECURLY      shift and go to state 257
    ID              shift and go to state 120
    IF              shift and go to state 121
    OUTPUT          shift and go to state 122
    INPUT           shift and go to state 123
    RETURN          shift and go to state 124
    WHILE           shift and go to state 126

    estatuto                       shift and go to state 256
    altwhile                       shift and go to state 262
    assign                         shift and go to state 113
    condition                      shift and go to state 114
    write                          shift and go to state 115
    read                           shift and go to state 116
    return                         shift and go to state 117
    voidcall                       shift and go to state 118
    while                          shift and go to state 119
    callfunc                       shift and go to state 125

state 257

    (76) altwhile -> CLOSECURLY .

    CLOSECURLY      reduce using rule 76 (altwhile -> CLOSECURLY .)
    VAR             reduce using rule 76 (altwhile -> CLOSECURLY .)
    ID              reduce using rule 76 (altwhile -> CLOSECURLY .)
    IF              reduce using rule 76 (altwhile -> CLOSECURLY .)
    OUTPUT          reduce using rule 76 (altwhile -> CLOSECURLY .)
    INPUT           reduce using rule 76 (altwhile -> CLOSECURLY .)
    RETURN          reduce using rule 76 (altwhile -> CLOSECURLY .)
    WHILE           reduce using rule 76 (altwhile -> CLOSECURLY .)


state 258

    (23) alt2const -> var alt2const .

    CLOSECURLY      reduce using rule 23 (alt2const -> var alt2const .)


state 259

    (24) alt2const -> estatuto alt2const .

    CLOSECURLY      reduce using rule 24 (alt2const -> estatuto alt2const .)


state 260

    (124) condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto . OPENCURLY altcondition add_end_if

    OPENCURLY       shift and go to state 263


state 261

    (74) while -> WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while .

    CLOSECURLY      reduce using rule 74 (while -> WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while .)
    VAR             reduce using rule 74 (while -> WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while .)
    ID              reduce using rule 74 (while -> WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while .)
    IF              reduce using rule 74 (while -> WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while .)
    OUTPUT          reduce using rule 74 (while -> WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while .)
    INPUT           reduce using rule 74 (while -> WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while .)
    RETURN          reduce using rule 74 (while -> WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while .)
    WHILE           reduce using rule 74 (while -> WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while .)


state 262

    (75) altwhile -> estatuto altwhile .

    CLOSECURLY      reduce using rule 75 (altwhile -> estatuto altwhile .)
    VAR             reduce using rule 75 (altwhile -> estatuto altwhile .)
    ID              reduce using rule 75 (altwhile -> estatuto altwhile .)
    IF              reduce using rule 75 (altwhile -> estatuto altwhile .)
    OUTPUT          reduce using rule 75 (altwhile -> estatuto altwhile .)
    INPUT           reduce using rule 75 (altwhile -> estatuto altwhile .)
    RETURN          reduce using rule 75 (altwhile -> estatuto altwhile .)
    WHILE           reduce using rule 75 (altwhile -> estatuto altwhile .)


state 263

    (124) condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY . altcondition add_end_if
    (125) altcondition -> . estatuto altcondition
    (126) altcondition -> . CLOSECURLY
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (130) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (131) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . callfunc SEMICOLON
    (72) voidcall -> . ID DOT voidcall
    (74) while -> . WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while
    (52) callfunc -> . ID check_exists_func OPENPAREN altcall CLOSEPAREN

    CLOSECURLY      shift and go to state 242
    ID              shift and go to state 120
    IF              shift and go to state 121
    OUTPUT          shift and go to state 122
    INPUT           shift and go to state 123
    RETURN          shift and go to state 124
    WHILE           shift and go to state 126

    altcondition                   shift and go to state 264
    estatuto                       shift and go to state 241
    assign                         shift and go to state 113
    condition                      shift and go to state 114
    write                          shift and go to state 115
    read                           shift and go to state 116
    return                         shift and go to state 117
    voidcall                       shift and go to state 118
    while                          shift and go to state 119
    callfunc                       shift and go to state 125

state 264

    (124) condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition . add_end_if
    (128) add_end_if -> .

    CLOSECURLY      reduce using rule 128 (add_end_if -> .)
    VAR             reduce using rule 128 (add_end_if -> .)
    ID              reduce using rule 128 (add_end_if -> .)
    IF              reduce using rule 128 (add_end_if -> .)
    OUTPUT          reduce using rule 128 (add_end_if -> .)
    INPUT           reduce using rule 128 (add_end_if -> .)
    RETURN          reduce using rule 128 (add_end_if -> .)
    WHILE           reduce using rule 128 (add_end_if -> .)

    add_end_if                     shift and go to state 265

state 265

    (124) condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if .

    CLOSECURLY      reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if .)
    VAR             reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if .)
    ID              reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if .)
    IF              reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if .)
    OUTPUT          reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if .)
    INPUT           reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if .)
    RETURN          reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if .)
    WHILE           reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 54 resolved using rule (exp -> termino)
WARNING: rejected rule (empty -> <empty>) in state 54
WARNING: reduce/reduce conflict in state 55 resolved using rule (termino -> factor)
WARNING: rejected rule (empty -> <empty>) in state 55
