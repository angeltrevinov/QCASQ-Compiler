Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID save_program SEMICOLON altprogram
Rule 2     altprogram -> class altprogram
Rule 3     altprogram -> var altprogram
Rule 4     altprogram -> function altprogram
Rule 5     altprogram -> main
Rule 6     save_program -> <empty>
Rule 7     main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain
Rule 8     altmain -> var altmain
Rule 9     altmain -> estatuto altmain
Rule 10    altmain -> CLOSECURLY clear_scope
Rule 11    save_main -> <empty>
Rule 12    clear_scope -> <empty>
Rule 13    class -> CLASS ID altclass save_class OPENCURLY alt2class
Rule 14    altclass -> TWODOTS ID
Rule 15    altclass -> empty
Rule 16    alt2class -> var alt2class
Rule 17    alt2class -> function alt2class
Rule 18    alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope
Rule 19    save_class -> <empty>
Rule 20    remove_class_scope -> <empty>
Rule 21    constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const
Rule 22    altconst -> params altconst
Rule 23    altconst -> empty
Rule 24    alt2const -> var alt2const
Rule 25    alt2const -> estatuto alt2const
Rule 26    alt2const -> CLOSECURLY remove_constructor_scope
Rule 27    save_constructor -> <empty>
Rule 28    remove_constructor_scope -> <empty>
Rule 29    var -> VAR listids TWODOTS type save_vars SEMICOLON
Rule 30    save_vars -> <empty>
Rule 31    listids -> ID save_var_name listidsalty
Rule 32    listidsalty -> COMMA listids
Rule 33    listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltz
Rule 34    listidsalty -> empty
Rule 35    listidsaltz -> COMMA listids
Rule 36    listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltp
Rule 37    listidsaltz -> empty
Rule 38    listidsaltp -> COMMA listids
Rule 39    listidsaltp -> empty
Rule 40    save_var_name -> <empty>
Rule 41    function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
Rule 42    altfunc -> params
Rule 43    altfunc -> empty
Rule 44    alt2func -> TWODOTS type
Rule 45    alt2func -> empty
Rule 46    alt3func -> var alt3func
Rule 47    alt3func -> estatuto alt3func
Rule 48    alt3func -> CLOSECURLY remove_function_scope
Rule 49    save_function -> <empty>
Rule 50    remove_function_scope -> <empty>
Rule 51    params -> ID TWODOTS type save_params altparams
Rule 52    altparams -> COMMA ID TWODOTS type save_params altparams
Rule 53    altparams -> empty
Rule 54    save_params -> <empty>
Rule 55    callfunc -> ID OPENPAREN altcall CLOSEPAREN
Rule 56    altcall -> expresion alt2call
Rule 57    altcall -> empty
Rule 58    alt2call -> COMMA altcall
Rule 59    alt2call -> empty
Rule 60    type -> INT
Rule 61    type -> FLOAT
Rule 62    type -> STRING
Rule 63    type -> ID
Rule 64    type -> BOOL
Rule 65    estatuto -> assign
Rule 66    estatuto -> condition
Rule 67    estatuto -> write
Rule 68    estatuto -> read
Rule 69    estatuto -> return
Rule 70    estatuto -> voidcall
Rule 71    estatuto -> while
Rule 72    voidcall -> ID OPENPAREN CLOSEPAREN
Rule 73    voidcall -> ID OPENPAREN expresion altcall
Rule 74    altcall -> COMMA expresion altcall
Rule 75    altcall -> CLOSEPAREN SEMICOLON
Rule 76    while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile
Rule 77    altwhile -> estatuto altwhile
Rule 78    altwhile -> CLOSECURLY
Rule 79    varcall -> varcte
Rule 80    varcall -> varcomplicated
Rule 81    varcte -> TRUE
Rule 82    varcte -> FALSE
Rule 83    varcte -> CTEFLOAT
Rule 84    varcte -> CTESTRING
Rule 85    varcte -> CTEINT
Rule 86    varcomplicated -> varcomp1
Rule 87    varcomplicated -> callfunc
Rule 88    varcomp1 -> ID varcomp2
Rule 89    varcomp2 -> DOT varcomp3
Rule 90    varcomp2 -> empty
Rule 91    varcomp3 -> varcomp1
Rule 92    varcomp3 -> callfunc
Rule 93    expresion -> exp altexpresion
Rule 94    altexpresion -> altexpresion2 exp
Rule 95    altexpresion -> empty
Rule 96    altexpresion2 -> SAMEAS
Rule 97    altexpresion2 -> BIGGERTHAN
Rule 98    altexpresion2 -> BIGGEREQUALSTHAN
Rule 99    altexpresion2 -> SMALLTHAN
Rule 100   altexpresion2 -> SMALLEQUALSTHAN
Rule 101   altexpresion2 -> DIFFERENTTHAN
Rule 102   altexpresion2 -> AND
Rule 103   altexpresion2 -> OR
Rule 104   exp -> termino
Rule 105   exp -> termino altexp
Rule 106   altexp -> SUM termino altexp
Rule 107   altexp -> SUBTRACT termino altexp
Rule 108   altexp -> empty
Rule 109   termino -> factor
Rule 110   termino -> factor alttermino
Rule 111   alttermino -> TIMES factor alttermino
Rule 112   alttermino -> DIV factor alttermino
Rule 113   alttermino -> empty
Rule 114   read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
Rule 115   write -> OUTPUT OPENPAREN varcall altwrite
Rule 116   write -> OUTPUT OPENPAREN expresion altwrite
Rule 117   altwrite -> COMMA varcall altwrite
Rule 118   altwrite -> COMMA expresion altwrite
Rule 119   altwrite -> CLOSEPAREN SEMICOLON
Rule 120   factor -> OPENPAREN expresion CLOSEPAREN
Rule 121   factor -> SUM varcall
Rule 122   factor -> SUBTRACT varcall
Rule 123   factor -> varcall
Rule 124   condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
Rule 125   condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
Rule 126   altcondition -> estatuto altcondition
Rule 127   altcondition -> CLOSECURLY
Rule 128   assign -> ID assign1 EQUALS expresion SEMICOLON
Rule 129   assign1 -> DOT ID assign1
Rule 130   assign1 -> empty
Rule 131   return -> RETURN expresion SEMICOLON
Rule 132   empty -> <empty>

Terminals, with rules where they appear

AND                  : 102
BIGGEREQUALSTHAN     : 98
BIGGERTHAN           : 97
BOOL                 : 64
CLASS                : 13
CLOSEBRACKET         : 33 36
CLOSECURLY           : 10 18 26 48 78 127
CLOSEPAREN           : 7 21 41 55 72 75 76 114 119 120 124 125
COMMA                : 32 35 38 52 58 74 117 118
CONSTRUCTOR          : 21
CTEFLOAT             : 83
CTEINT               : 33 36 85
CTESTRING            : 84
DIFFERENTTHAN        : 101
DIV                  : 112
DOT                  : 89 129
ELSE                 : 125
EQUALS               : 128
FALSE                : 82
FLOAT                : 61
FUNC                 : 41
ID                   : 1 13 14 31 41 51 52 55 63 72 73 88 114 128 129
IF                   : 124 125
INPUT                : 114
INT                  : 60
MAIN                 : 7
OPENBRACKET          : 33 36
OPENCURLY            : 7 13 21 41 76 124 125 125
OPENPAREN            : 7 21 41 55 72 73 76 114 115 116 120 124 125
OR                   : 103
OUTPUT               : 115 116
PROGRAM              : 1
RETURN               : 131
SAMEAS               : 96
SEMICOLON            : 1 18 29 75 114 119 128 131
SMALLEQUALSTHAN      : 100
SMALLTHAN            : 99
STRING               : 62
SUBTRACT             : 107 122
SUM                  : 106 121
TIMES                : 111
TRUE                 : 81
TWODOTS              : 14 29 44 51 52
VAR                  : 29
WHILE                : 76
error                : 

Nonterminals, with rules where they appear

alt2call             : 56
alt2class            : 13 16 17
alt2const            : 21 24 25
alt2func             : 41
alt3func             : 41 46 47
altcall              : 55 58 73 74
altclass             : 13
altcondition         : 124 125 125 126
altconst             : 21 22
altexp               : 105 106 107
altexpresion         : 93
altexpresion2        : 94
altfunc              : 41
altmain              : 7 8 9
altparams            : 51 52
altprogram           : 1 2 3 4
alttermino           : 110 111 112
altwhile             : 76 77
altwrite             : 115 116 117 118
assign               : 65
assign1              : 128 129
callfunc             : 87 92
class                : 2
clear_scope          : 10
condition            : 66
constructor          : 18
empty                : 15 23 34 37 39 43 45 53 57 59 90 95 108 113 130
estatuto             : 9 25 47 77 126
exp                  : 93 94
expresion            : 56 73 74 76 116 118 120 124 125 128 131
factor               : 109 110 111 112
function             : 4 17
listids              : 29 32 35 38
listidsaltp          : 36
listidsalty          : 31
listidsaltz          : 33
main                 : 5
params               : 22 42
program              : 0
read                 : 68
remove_class_scope   : 18
remove_constructor_scope : 26
remove_function_scope : 48
return               : 69
save_class           : 13
save_constructor     : 21
save_function        : 41
save_main            : 7
save_params          : 51 52
save_program         : 1
save_var_name        : 31
save_vars            : 29
termino              : 104 105 106 107
type                 : 29 44 51 52
var                  : 3 8 16 24 46
varcall              : 115 117 121 122 123
varcomp1             : 86 91
varcomp2             : 88
varcomp3             : 89
varcomplicated       : 80
varcte               : 79
voidcall             : 70
while                : 71
write                : 67

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID save_program SEMICOLON altprogram

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID save_program SEMICOLON altprogram

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . save_program SEMICOLON altprogram
    (6) save_program -> .

    SEMICOLON       reduce using rule 6 (save_program -> .)

    save_program                   shift and go to state 4

state 4

    (1) program -> PROGRAM ID save_program . SEMICOLON altprogram

    SEMICOLON       shift and go to state 5


state 5

    (1) program -> PROGRAM ID save_program SEMICOLON . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (13) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (41) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    altprogram                     shift and go to state 6
    class                          shift and go to state 7
    var                            shift and go to state 8
    function                       shift and go to state 9
    main                           shift and go to state 10

state 6

    (1) program -> PROGRAM ID save_program SEMICOLON altprogram .

    $end            reduce using rule 1 (program -> PROGRAM ID save_program SEMICOLON altprogram .)


state 7

    (2) altprogram -> class . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (13) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (41) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    class                          shift and go to state 7
    altprogram                     shift and go to state 15
    var                            shift and go to state 8
    function                       shift and go to state 9
    main                           shift and go to state 10

state 8

    (3) altprogram -> var . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (13) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (41) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    var                            shift and go to state 8
    altprogram                     shift and go to state 16
    class                          shift and go to state 7
    function                       shift and go to state 9
    main                           shift and go to state 10

state 9

    (4) altprogram -> function . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (13) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (41) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    function                       shift and go to state 9
    altprogram                     shift and go to state 17
    class                          shift and go to state 7
    var                            shift and go to state 8
    main                           shift and go to state 10

state 10

    (5) altprogram -> main .

    $end            reduce using rule 5 (altprogram -> main .)


state 11

    (13) class -> CLASS . ID altclass save_class OPENCURLY alt2class

    ID              shift and go to state 18


state 12

    (29) var -> VAR . listids TWODOTS type save_vars SEMICOLON
    (31) listids -> . ID save_var_name listidsalty

    ID              shift and go to state 20

    listids                        shift and go to state 19

state 13

    (41) function -> FUNC . ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func

    ID              shift and go to state 21


state 14

    (7) main -> MAIN . save_main OPENPAREN CLOSEPAREN OPENCURLY altmain
    (11) save_main -> .

    OPENPAREN       reduce using rule 11 (save_main -> .)

    save_main                      shift and go to state 22

state 15

    (2) altprogram -> class altprogram .

    $end            reduce using rule 2 (altprogram -> class altprogram .)


state 16

    (3) altprogram -> var altprogram .

    $end            reduce using rule 3 (altprogram -> var altprogram .)


state 17

    (4) altprogram -> function altprogram .

    $end            reduce using rule 4 (altprogram -> function altprogram .)


state 18

    (13) class -> CLASS ID . altclass save_class OPENCURLY alt2class
    (14) altclass -> . TWODOTS ID
    (15) altclass -> . empty
    (132) empty -> .

    TWODOTS         shift and go to state 24
    OPENCURLY       reduce using rule 132 (empty -> .)

    altclass                       shift and go to state 23
    empty                          shift and go to state 25

state 19

    (29) var -> VAR listids . TWODOTS type save_vars SEMICOLON

    TWODOTS         shift and go to state 26


state 20

    (31) listids -> ID . save_var_name listidsalty
    (40) save_var_name -> .

    COMMA           reduce using rule 40 (save_var_name -> .)
    OPENBRACKET     reduce using rule 40 (save_var_name -> .)
    TWODOTS         reduce using rule 40 (save_var_name -> .)

    save_var_name                  shift and go to state 27

state 21

    (41) function -> FUNC ID . OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func

    OPENPAREN       shift and go to state 28


state 22

    (7) main -> MAIN save_main . OPENPAREN CLOSEPAREN OPENCURLY altmain

    OPENPAREN       shift and go to state 29


state 23

    (13) class -> CLASS ID altclass . save_class OPENCURLY alt2class
    (19) save_class -> .

    OPENCURLY       reduce using rule 19 (save_class -> .)

    save_class                     shift and go to state 30

state 24

    (14) altclass -> TWODOTS . ID

    ID              shift and go to state 31


state 25

    (15) altclass -> empty .

    OPENCURLY       reduce using rule 15 (altclass -> empty .)


state 26

    (29) var -> VAR listids TWODOTS . type save_vars SEMICOLON
    (60) type -> . INT
    (61) type -> . FLOAT
    (62) type -> . STRING
    (63) type -> . ID
    (64) type -> . BOOL

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 36
    BOOL            shift and go to state 37

    type                           shift and go to state 32

state 27

    (31) listids -> ID save_var_name . listidsalty
    (32) listidsalty -> . COMMA listids
    (33) listidsalty -> . OPENBRACKET CTEINT CLOSEBRACKET listidsaltz
    (34) listidsalty -> . empty
    (132) empty -> .

    COMMA           shift and go to state 39
    OPENBRACKET     shift and go to state 40
    TWODOTS         reduce using rule 132 (empty -> .)

    listidsalty                    shift and go to state 38
    empty                          shift and go to state 41

state 28

    (41) function -> FUNC ID OPENPAREN . altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (42) altfunc -> . params
    (43) altfunc -> . empty
    (51) params -> . ID TWODOTS type save_params altparams
    (132) empty -> .

    ID              shift and go to state 42
    CLOSEPAREN      reduce using rule 132 (empty -> .)

    altfunc                        shift and go to state 43
    params                         shift and go to state 44
    empty                          shift and go to state 45

state 29

    (7) main -> MAIN save_main OPENPAREN . CLOSEPAREN OPENCURLY altmain

    CLOSEPAREN      shift and go to state 46


state 30

    (13) class -> CLASS ID altclass save_class . OPENCURLY alt2class

    OPENCURLY       shift and go to state 47


state 31

    (14) altclass -> TWODOTS ID .

    OPENCURLY       reduce using rule 14 (altclass -> TWODOTS ID .)


state 32

    (29) var -> VAR listids TWODOTS type . save_vars SEMICOLON
    (30) save_vars -> .

    SEMICOLON       reduce using rule 30 (save_vars -> .)

    save_vars                      shift and go to state 48

state 33

    (60) type -> INT .

    SEMICOLON       reduce using rule 60 (type -> INT .)
    COMMA           reduce using rule 60 (type -> INT .)
    CLOSEPAREN      reduce using rule 60 (type -> INT .)
    ID              reduce using rule 60 (type -> INT .)
    OPENCURLY       reduce using rule 60 (type -> INT .)


state 34

    (61) type -> FLOAT .

    SEMICOLON       reduce using rule 61 (type -> FLOAT .)
    COMMA           reduce using rule 61 (type -> FLOAT .)
    CLOSEPAREN      reduce using rule 61 (type -> FLOAT .)
    ID              reduce using rule 61 (type -> FLOAT .)
    OPENCURLY       reduce using rule 61 (type -> FLOAT .)


state 35

    (62) type -> STRING .

    SEMICOLON       reduce using rule 62 (type -> STRING .)
    COMMA           reduce using rule 62 (type -> STRING .)
    CLOSEPAREN      reduce using rule 62 (type -> STRING .)
    ID              reduce using rule 62 (type -> STRING .)
    OPENCURLY       reduce using rule 62 (type -> STRING .)


state 36

    (63) type -> ID .

    SEMICOLON       reduce using rule 63 (type -> ID .)
    COMMA           reduce using rule 63 (type -> ID .)
    CLOSEPAREN      reduce using rule 63 (type -> ID .)
    ID              reduce using rule 63 (type -> ID .)
    OPENCURLY       reduce using rule 63 (type -> ID .)


state 37

    (64) type -> BOOL .

    SEMICOLON       reduce using rule 64 (type -> BOOL .)
    COMMA           reduce using rule 64 (type -> BOOL .)
    CLOSEPAREN      reduce using rule 64 (type -> BOOL .)
    ID              reduce using rule 64 (type -> BOOL .)
    OPENCURLY       reduce using rule 64 (type -> BOOL .)


state 38

    (31) listids -> ID save_var_name listidsalty .

    TWODOTS         reduce using rule 31 (listids -> ID save_var_name listidsalty .)


state 39

    (32) listidsalty -> COMMA . listids
    (31) listids -> . ID save_var_name listidsalty

    ID              shift and go to state 20

    listids                        shift and go to state 49

state 40

    (33) listidsalty -> OPENBRACKET . CTEINT CLOSEBRACKET listidsaltz

    CTEINT          shift and go to state 50


state 41

    (34) listidsalty -> empty .

    TWODOTS         reduce using rule 34 (listidsalty -> empty .)


state 42

    (51) params -> ID . TWODOTS type save_params altparams

    TWODOTS         shift and go to state 51


state 43

    (41) function -> FUNC ID OPENPAREN altfunc . CLOSEPAREN alt2func save_function OPENCURLY alt3func

    CLOSEPAREN      shift and go to state 52


state 44

    (42) altfunc -> params .

    CLOSEPAREN      reduce using rule 42 (altfunc -> params .)


state 45

    (43) altfunc -> empty .

    CLOSEPAREN      reduce using rule 43 (altfunc -> empty .)


state 46

    (7) main -> MAIN save_main OPENPAREN CLOSEPAREN . OPENCURLY altmain

    OPENCURLY       shift and go to state 53


state 47

    (13) class -> CLASS ID altclass save_class OPENCURLY . alt2class
    (16) alt2class -> . var alt2class
    (17) alt2class -> . function alt2class
    (18) alt2class -> . constructor CLOSECURLY SEMICOLON remove_class_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (41) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (21) constructor -> . CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    CONSTRUCTOR     shift and go to state 58

    alt2class                      shift and go to state 54
    var                            shift and go to state 55
    function                       shift and go to state 56
    constructor                    shift and go to state 57

state 48

    (29) var -> VAR listids TWODOTS type save_vars . SEMICOLON

    SEMICOLON       shift and go to state 59


state 49

    (32) listidsalty -> COMMA listids .

    TWODOTS         reduce using rule 32 (listidsalty -> COMMA listids .)


state 50

    (33) listidsalty -> OPENBRACKET CTEINT . CLOSEBRACKET listidsaltz

    CLOSEBRACKET    shift and go to state 60


state 51

    (51) params -> ID TWODOTS . type save_params altparams
    (60) type -> . INT
    (61) type -> . FLOAT
    (62) type -> . STRING
    (63) type -> . ID
    (64) type -> . BOOL

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 36
    BOOL            shift and go to state 37

    type                           shift and go to state 61

state 52

    (41) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN . alt2func save_function OPENCURLY alt3func
    (44) alt2func -> . TWODOTS type
    (45) alt2func -> . empty
    (132) empty -> .

    TWODOTS         shift and go to state 63
    OPENCURLY       reduce using rule 132 (empty -> .)

    alt2func                       shift and go to state 62
    empty                          shift and go to state 64

state 53

    (7) main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY . altmain
    (8) altmain -> . var altmain
    (9) altmain -> . estatuto altmain
    (10) altmain -> . CLOSECURLY clear_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (65) estatuto -> . assign
    (66) estatuto -> . condition
    (67) estatuto -> . write
    (68) estatuto -> . read
    (69) estatuto -> . return
    (70) estatuto -> . voidcall
    (71) estatuto -> . while
    (128) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (125) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (115) write -> . OUTPUT OPENPAREN varcall altwrite
    (116) write -> . OUTPUT OPENPAREN expresion altwrite
    (114) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (131) return -> . RETURN expresion SEMICOLON
    (72) voidcall -> . ID OPENPAREN CLOSEPAREN
    (73) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 68
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    altmain                        shift and go to state 65
    var                            shift and go to state 66
    estatuto                       shift and go to state 67
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 54

    (13) class -> CLASS ID altclass save_class OPENCURLY alt2class .

    CLASS           reduce using rule 13 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)
    VAR             reduce using rule 13 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)
    FUNC            reduce using rule 13 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)
    MAIN            reduce using rule 13 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)


state 55

    (16) alt2class -> var . alt2class
    (16) alt2class -> . var alt2class
    (17) alt2class -> . function alt2class
    (18) alt2class -> . constructor CLOSECURLY SEMICOLON remove_class_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (41) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (21) constructor -> . CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    CONSTRUCTOR     shift and go to state 58

    var                            shift and go to state 55
    alt2class                      shift and go to state 82
    function                       shift and go to state 56
    constructor                    shift and go to state 57

state 56

    (17) alt2class -> function . alt2class
    (16) alt2class -> . var alt2class
    (17) alt2class -> . function alt2class
    (18) alt2class -> . constructor CLOSECURLY SEMICOLON remove_class_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (41) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func
    (21) constructor -> . CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    CONSTRUCTOR     shift and go to state 58

    function                       shift and go to state 56
    alt2class                      shift and go to state 83
    var                            shift and go to state 55
    constructor                    shift and go to state 57

state 57

    (18) alt2class -> constructor . CLOSECURLY SEMICOLON remove_class_scope

    CLOSECURLY      shift and go to state 84


state 58

    (21) constructor -> CONSTRUCTOR . save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const
    (27) save_constructor -> .

    OPENPAREN       reduce using rule 27 (save_constructor -> .)

    save_constructor               shift and go to state 85

state 59

    (29) var -> VAR listids TWODOTS type save_vars SEMICOLON .

    CLASS           reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    VAR             reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    FUNC            reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    MAIN            reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    CONSTRUCTOR     reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    CLOSECURLY      reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    ID              reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    IF              reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    OUTPUT          reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    INPUT           reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    RETURN          reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    WHILE           reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)


state 60

    (33) listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET . listidsaltz
    (35) listidsaltz -> . COMMA listids
    (36) listidsaltz -> . OPENBRACKET CTEINT CLOSEBRACKET listidsaltp
    (37) listidsaltz -> . empty
    (132) empty -> .

    COMMA           shift and go to state 88
    OPENBRACKET     shift and go to state 86
    TWODOTS         reduce using rule 132 (empty -> .)

    listidsaltz                    shift and go to state 87
    empty                          shift and go to state 89

state 61

    (51) params -> ID TWODOTS type . save_params altparams
    (54) save_params -> .

    COMMA           reduce using rule 54 (save_params -> .)
    CLOSEPAREN      reduce using rule 54 (save_params -> .)
    ID              reduce using rule 54 (save_params -> .)

    save_params                    shift and go to state 90

state 62

    (41) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func . save_function OPENCURLY alt3func
    (49) save_function -> .

    OPENCURLY       reduce using rule 49 (save_function -> .)

    save_function                  shift and go to state 91

state 63

    (44) alt2func -> TWODOTS . type
    (60) type -> . INT
    (61) type -> . FLOAT
    (62) type -> . STRING
    (63) type -> . ID
    (64) type -> . BOOL

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 36
    BOOL            shift and go to state 37

    type                           shift and go to state 92

state 64

    (45) alt2func -> empty .

    OPENCURLY       reduce using rule 45 (alt2func -> empty .)


state 65

    (7) main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain .

    $end            reduce using rule 7 (main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain .)


state 66

    (8) altmain -> var . altmain
    (8) altmain -> . var altmain
    (9) altmain -> . estatuto altmain
    (10) altmain -> . CLOSECURLY clear_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (65) estatuto -> . assign
    (66) estatuto -> . condition
    (67) estatuto -> . write
    (68) estatuto -> . read
    (69) estatuto -> . return
    (70) estatuto -> . voidcall
    (71) estatuto -> . while
    (128) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (125) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (115) write -> . OUTPUT OPENPAREN varcall altwrite
    (116) write -> . OUTPUT OPENPAREN expresion altwrite
    (114) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (131) return -> . RETURN expresion SEMICOLON
    (72) voidcall -> . ID OPENPAREN CLOSEPAREN
    (73) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 68
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    var                            shift and go to state 66
    altmain                        shift and go to state 93
    estatuto                       shift and go to state 67
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 67

    (9) altmain -> estatuto . altmain
    (8) altmain -> . var altmain
    (9) altmain -> . estatuto altmain
    (10) altmain -> . CLOSECURLY clear_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (65) estatuto -> . assign
    (66) estatuto -> . condition
    (67) estatuto -> . write
    (68) estatuto -> . read
    (69) estatuto -> . return
    (70) estatuto -> . voidcall
    (71) estatuto -> . while
    (128) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (125) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (115) write -> . OUTPUT OPENPAREN varcall altwrite
    (116) write -> . OUTPUT OPENPAREN expresion altwrite
    (114) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (131) return -> . RETURN expresion SEMICOLON
    (72) voidcall -> . ID OPENPAREN CLOSEPAREN
    (73) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 68
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 67
    altmain                        shift and go to state 94
    var                            shift and go to state 66
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 68

    (10) altmain -> CLOSECURLY . clear_scope
    (12) clear_scope -> .

    $end            reduce using rule 12 (clear_scope -> .)

    clear_scope                    shift and go to state 95

state 69

    (65) estatuto -> assign .

    CLOSECURLY      reduce using rule 65 (estatuto -> assign .)
    VAR             reduce using rule 65 (estatuto -> assign .)
    ID              reduce using rule 65 (estatuto -> assign .)
    IF              reduce using rule 65 (estatuto -> assign .)
    OUTPUT          reduce using rule 65 (estatuto -> assign .)
    INPUT           reduce using rule 65 (estatuto -> assign .)
    RETURN          reduce using rule 65 (estatuto -> assign .)
    WHILE           reduce using rule 65 (estatuto -> assign .)


state 70

    (66) estatuto -> condition .

    CLOSECURLY      reduce using rule 66 (estatuto -> condition .)
    VAR             reduce using rule 66 (estatuto -> condition .)
    ID              reduce using rule 66 (estatuto -> condition .)
    IF              reduce using rule 66 (estatuto -> condition .)
    OUTPUT          reduce using rule 66 (estatuto -> condition .)
    INPUT           reduce using rule 66 (estatuto -> condition .)
    RETURN          reduce using rule 66 (estatuto -> condition .)
    WHILE           reduce using rule 66 (estatuto -> condition .)


state 71

    (67) estatuto -> write .

    CLOSECURLY      reduce using rule 67 (estatuto -> write .)
    VAR             reduce using rule 67 (estatuto -> write .)
    ID              reduce using rule 67 (estatuto -> write .)
    IF              reduce using rule 67 (estatuto -> write .)
    OUTPUT          reduce using rule 67 (estatuto -> write .)
    INPUT           reduce using rule 67 (estatuto -> write .)
    RETURN          reduce using rule 67 (estatuto -> write .)
    WHILE           reduce using rule 67 (estatuto -> write .)


state 72

    (68) estatuto -> read .

    CLOSECURLY      reduce using rule 68 (estatuto -> read .)
    VAR             reduce using rule 68 (estatuto -> read .)
    ID              reduce using rule 68 (estatuto -> read .)
    IF              reduce using rule 68 (estatuto -> read .)
    OUTPUT          reduce using rule 68 (estatuto -> read .)
    INPUT           reduce using rule 68 (estatuto -> read .)
    RETURN          reduce using rule 68 (estatuto -> read .)
    WHILE           reduce using rule 68 (estatuto -> read .)


state 73

    (69) estatuto -> return .

    CLOSECURLY      reduce using rule 69 (estatuto -> return .)
    VAR             reduce using rule 69 (estatuto -> return .)
    ID              reduce using rule 69 (estatuto -> return .)
    IF              reduce using rule 69 (estatuto -> return .)
    OUTPUT          reduce using rule 69 (estatuto -> return .)
    INPUT           reduce using rule 69 (estatuto -> return .)
    RETURN          reduce using rule 69 (estatuto -> return .)
    WHILE           reduce using rule 69 (estatuto -> return .)


state 74

    (70) estatuto -> voidcall .

    CLOSECURLY      reduce using rule 70 (estatuto -> voidcall .)
    VAR             reduce using rule 70 (estatuto -> voidcall .)
    ID              reduce using rule 70 (estatuto -> voidcall .)
    IF              reduce using rule 70 (estatuto -> voidcall .)
    OUTPUT          reduce using rule 70 (estatuto -> voidcall .)
    INPUT           reduce using rule 70 (estatuto -> voidcall .)
    RETURN          reduce using rule 70 (estatuto -> voidcall .)
    WHILE           reduce using rule 70 (estatuto -> voidcall .)


state 75

    (71) estatuto -> while .

    CLOSECURLY      reduce using rule 71 (estatuto -> while .)
    VAR             reduce using rule 71 (estatuto -> while .)
    ID              reduce using rule 71 (estatuto -> while .)
    IF              reduce using rule 71 (estatuto -> while .)
    OUTPUT          reduce using rule 71 (estatuto -> while .)
    INPUT           reduce using rule 71 (estatuto -> while .)
    RETURN          reduce using rule 71 (estatuto -> while .)
    WHILE           reduce using rule 71 (estatuto -> while .)


state 76

    (128) assign -> ID . assign1 EQUALS expresion SEMICOLON
    (72) voidcall -> ID . OPENPAREN CLOSEPAREN
    (73) voidcall -> ID . OPENPAREN expresion altcall
    (129) assign1 -> . DOT ID assign1
    (130) assign1 -> . empty
    (132) empty -> .

    OPENPAREN       shift and go to state 97
    DOT             shift and go to state 98
    EQUALS          reduce using rule 132 (empty -> .)

    assign1                        shift and go to state 96
    empty                          shift and go to state 99

state 77

    (124) condition -> IF . OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (125) condition -> IF . OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition

    OPENPAREN       shift and go to state 100


state 78

    (115) write -> OUTPUT . OPENPAREN varcall altwrite
    (116) write -> OUTPUT . OPENPAREN expresion altwrite

    OPENPAREN       shift and go to state 101


state 79

    (114) read -> INPUT . OPENPAREN ID CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 102


state 80

    (131) return -> RETURN . expresion SEMICOLON
    (93) expresion -> . exp altexpresion
    (104) exp -> . termino
    (105) exp -> . termino altexp
    (109) termino -> . factor
    (110) termino -> . factor alttermino
    (120) factor -> . OPENPAREN expresion CLOSEPAREN
    (121) factor -> . SUM varcall
    (122) factor -> . SUBTRACT varcall
    (123) factor -> . varcall
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 107
    SUM             shift and go to state 108
    SUBTRACT        shift and go to state 110
    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120

    expresion                      shift and go to state 103
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    varcall                        shift and go to state 109
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119

state 81

    (76) while -> WHILE . OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    OPENPAREN       shift and go to state 121


state 82

    (16) alt2class -> var alt2class .

    CLASS           reduce using rule 16 (alt2class -> var alt2class .)
    VAR             reduce using rule 16 (alt2class -> var alt2class .)
    FUNC            reduce using rule 16 (alt2class -> var alt2class .)
    MAIN            reduce using rule 16 (alt2class -> var alt2class .)


state 83

    (17) alt2class -> function alt2class .

    CLASS           reduce using rule 17 (alt2class -> function alt2class .)
    VAR             reduce using rule 17 (alt2class -> function alt2class .)
    FUNC            reduce using rule 17 (alt2class -> function alt2class .)
    MAIN            reduce using rule 17 (alt2class -> function alt2class .)


state 84

    (18) alt2class -> constructor CLOSECURLY . SEMICOLON remove_class_scope

    SEMICOLON       shift and go to state 122


state 85

    (21) constructor -> CONSTRUCTOR save_constructor . OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const

    OPENPAREN       shift and go to state 123


state 86

    (36) listidsaltz -> OPENBRACKET . CTEINT CLOSEBRACKET listidsaltp

    CTEINT          shift and go to state 124


state 87

    (33) listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltz .

    TWODOTS         reduce using rule 33 (listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltz .)


state 88

    (35) listidsaltz -> COMMA . listids
    (31) listids -> . ID save_var_name listidsalty

    ID              shift and go to state 20

    listids                        shift and go to state 125

state 89

    (37) listidsaltz -> empty .

    TWODOTS         reduce using rule 37 (listidsaltz -> empty .)


state 90

    (51) params -> ID TWODOTS type save_params . altparams
    (52) altparams -> . COMMA ID TWODOTS type save_params altparams
    (53) altparams -> . empty
    (132) empty -> .

    COMMA           shift and go to state 127
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)

    altparams                      shift and go to state 126
    empty                          shift and go to state 128

state 91

    (41) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function . OPENCURLY alt3func

    OPENCURLY       shift and go to state 129


state 92

    (44) alt2func -> TWODOTS type .

    OPENCURLY       reduce using rule 44 (alt2func -> TWODOTS type .)


state 93

    (8) altmain -> var altmain .

    $end            reduce using rule 8 (altmain -> var altmain .)


state 94

    (9) altmain -> estatuto altmain .

    $end            reduce using rule 9 (altmain -> estatuto altmain .)


state 95

    (10) altmain -> CLOSECURLY clear_scope .

    $end            reduce using rule 10 (altmain -> CLOSECURLY clear_scope .)


state 96

    (128) assign -> ID assign1 . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 130


state 97

    (72) voidcall -> ID OPENPAREN . CLOSEPAREN
    (73) voidcall -> ID OPENPAREN . expresion altcall
    (93) expresion -> . exp altexpresion
    (104) exp -> . termino
    (105) exp -> . termino altexp
    (109) termino -> . factor
    (110) termino -> . factor alttermino
    (120) factor -> . OPENPAREN expresion CLOSEPAREN
    (121) factor -> . SUM varcall
    (122) factor -> . SUBTRACT varcall
    (123) factor -> . varcall
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    CLOSEPAREN      shift and go to state 131
    OPENPAREN       shift and go to state 107
    SUM             shift and go to state 108
    SUBTRACT        shift and go to state 110
    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120

    expresion                      shift and go to state 132
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    varcall                        shift and go to state 109
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119

state 98

    (129) assign1 -> DOT . ID assign1

    ID              shift and go to state 133


state 99

    (130) assign1 -> empty .

    EQUALS          reduce using rule 130 (assign1 -> empty .)


state 100

    (124) condition -> IF OPENPAREN . expresion CLOSEPAREN OPENCURLY altcondition
    (125) condition -> IF OPENPAREN . expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (93) expresion -> . exp altexpresion
    (104) exp -> . termino
    (105) exp -> . termino altexp
    (109) termino -> . factor
    (110) termino -> . factor alttermino
    (120) factor -> . OPENPAREN expresion CLOSEPAREN
    (121) factor -> . SUM varcall
    (122) factor -> . SUBTRACT varcall
    (123) factor -> . varcall
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 107
    SUM             shift and go to state 108
    SUBTRACT        shift and go to state 110
    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120

    expresion                      shift and go to state 134
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    varcall                        shift and go to state 109
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119

state 101

    (115) write -> OUTPUT OPENPAREN . varcall altwrite
    (116) write -> OUTPUT OPENPAREN . expresion altwrite
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (93) expresion -> . exp altexpresion
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (104) exp -> . termino
    (105) exp -> . termino altexp
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN
    (109) termino -> . factor
    (110) termino -> . factor alttermino
    (120) factor -> . OPENPAREN expresion CLOSEPAREN
    (121) factor -> . SUM varcall
    (122) factor -> . SUBTRACT varcall
    (123) factor -> . varcall

    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120
    OPENPAREN       shift and go to state 107
    SUM             shift and go to state 108
    SUBTRACT        shift and go to state 110

    varcall                        shift and go to state 135
    expresion                      shift and go to state 136
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    exp                            shift and go to state 104
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119
    termino                        shift and go to state 105
    factor                         shift and go to state 106

state 102

    (114) read -> INPUT OPENPAREN . ID CLOSEPAREN SEMICOLON

    ID              shift and go to state 137


state 103

    (131) return -> RETURN expresion . SEMICOLON

    SEMICOLON       shift and go to state 138


state 104

    (93) expresion -> exp . altexpresion
    (94) altexpresion -> . altexpresion2 exp
    (95) altexpresion -> . empty
    (96) altexpresion2 -> . SAMEAS
    (97) altexpresion2 -> . BIGGERTHAN
    (98) altexpresion2 -> . BIGGEREQUALSTHAN
    (99) altexpresion2 -> . SMALLTHAN
    (100) altexpresion2 -> . SMALLEQUALSTHAN
    (101) altexpresion2 -> . DIFFERENTTHAN
    (102) altexpresion2 -> . AND
    (103) altexpresion2 -> . OR
    (132) empty -> .

    SAMEAS          shift and go to state 142
    BIGGERTHAN      shift and go to state 143
    BIGGEREQUALSTHAN shift and go to state 144
    SMALLTHAN       shift and go to state 145
    SMALLEQUALSTHAN shift and go to state 146
    DIFFERENTTHAN   shift and go to state 147
    AND             shift and go to state 148
    OR              shift and go to state 149
    SEMICOLON       reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    OPENPAREN       reduce using rule 132 (empty -> .)
    SUM             reduce using rule 132 (empty -> .)
    SUBTRACT        reduce using rule 132 (empty -> .)
    TRUE            reduce using rule 132 (empty -> .)
    FALSE           reduce using rule 132 (empty -> .)
    CTEFLOAT        reduce using rule 132 (empty -> .)
    CTESTRING       reduce using rule 132 (empty -> .)
    CTEINT          reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)

    altexpresion                   shift and go to state 139
    altexpresion2                  shift and go to state 140
    empty                          shift and go to state 141

state 105

    (104) exp -> termino .
    (105) exp -> termino . altexp
    (106) altexp -> . SUM termino altexp
    (107) altexp -> . SUBTRACT termino altexp
    (108) altexp -> . empty
    (132) empty -> .

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! reduce/reduce conflict for SAMEAS resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for BIGGERTHAN resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for BIGGEREQUALSTHAN resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for SMALLTHAN resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for SMALLEQUALSTHAN resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for DIFFERENTTHAN resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for AND resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for OR resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for COMMA resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for CLOSEPAREN resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for OPENPAREN resolved using rule 104 (exp -> termino .)
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! reduce/reduce conflict for TRUE resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for FALSE resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for CTESTRING resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for CTEINT resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for ID resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for CLOSECURLY resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for VAR resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for IF resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for INPUT resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for RETURN resolved using rule 104 (exp -> termino .)
  ! reduce/reduce conflict for WHILE resolved using rule 104 (exp -> termino .)
    SAMEAS          reduce using rule 104 (exp -> termino .)
    BIGGERTHAN      reduce using rule 104 (exp -> termino .)
    BIGGEREQUALSTHAN reduce using rule 104 (exp -> termino .)
    SMALLTHAN       reduce using rule 104 (exp -> termino .)
    SMALLEQUALSTHAN reduce using rule 104 (exp -> termino .)
    DIFFERENTTHAN   reduce using rule 104 (exp -> termino .)
    AND             reduce using rule 104 (exp -> termino .)
    OR              reduce using rule 104 (exp -> termino .)
    SEMICOLON       reduce using rule 104 (exp -> termino .)
    COMMA           reduce using rule 104 (exp -> termino .)
    CLOSEPAREN      reduce using rule 104 (exp -> termino .)
    OPENPAREN       reduce using rule 104 (exp -> termino .)
    TRUE            reduce using rule 104 (exp -> termino .)
    FALSE           reduce using rule 104 (exp -> termino .)
    CTEFLOAT        reduce using rule 104 (exp -> termino .)
    CTESTRING       reduce using rule 104 (exp -> termino .)
    CTEINT          reduce using rule 104 (exp -> termino .)
    ID              reduce using rule 104 (exp -> termino .)
    CLOSECURLY      reduce using rule 104 (exp -> termino .)
    VAR             reduce using rule 104 (exp -> termino .)
    IF              reduce using rule 104 (exp -> termino .)
    OUTPUT          reduce using rule 104 (exp -> termino .)
    INPUT           reduce using rule 104 (exp -> termino .)
    RETURN          reduce using rule 104 (exp -> termino .)
    WHILE           reduce using rule 104 (exp -> termino .)
    SUM             shift and go to state 151
    SUBTRACT        shift and go to state 152

  ! SUM             [ reduce using rule 104 (exp -> termino .) ]
  ! SUBTRACT        [ reduce using rule 104 (exp -> termino .) ]
  ! SAMEAS          [ reduce using rule 132 (empty -> .) ]
  ! BIGGERTHAN      [ reduce using rule 132 (empty -> .) ]
  ! BIGGEREQUALSTHAN [ reduce using rule 132 (empty -> .) ]
  ! SMALLTHAN       [ reduce using rule 132 (empty -> .) ]
  ! SMALLEQUALSTHAN [ reduce using rule 132 (empty -> .) ]
  ! DIFFERENTTHAN   [ reduce using rule 132 (empty -> .) ]
  ! AND             [ reduce using rule 132 (empty -> .) ]
  ! OR              [ reduce using rule 132 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 132 (empty -> .) ]
  ! COMMA           [ reduce using rule 132 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 132 (empty -> .) ]
  ! OPENPAREN       [ reduce using rule 132 (empty -> .) ]
  ! SUM             [ reduce using rule 132 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 132 (empty -> .) ]
  ! TRUE            [ reduce using rule 132 (empty -> .) ]
  ! FALSE           [ reduce using rule 132 (empty -> .) ]
  ! CTEFLOAT        [ reduce using rule 132 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 132 (empty -> .) ]
  ! CTEINT          [ reduce using rule 132 (empty -> .) ]
  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! CLOSECURLY      [ reduce using rule 132 (empty -> .) ]
  ! VAR             [ reduce using rule 132 (empty -> .) ]
  ! IF              [ reduce using rule 132 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 132 (empty -> .) ]
  ! INPUT           [ reduce using rule 132 (empty -> .) ]
  ! RETURN          [ reduce using rule 132 (empty -> .) ]
  ! WHILE           [ reduce using rule 132 (empty -> .) ]

    altexp                         shift and go to state 150
    empty                          shift and go to state 153

state 106

    (109) termino -> factor .
    (110) termino -> factor . alttermino
    (111) alttermino -> . TIMES factor alttermino
    (112) alttermino -> . DIV factor alttermino
    (113) alttermino -> . empty
    (132) empty -> .

  ! reduce/reduce conflict for SUM resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for SUBTRACT resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for SAMEAS resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for BIGGERTHAN resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for BIGGEREQUALSTHAN resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for SMALLTHAN resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for SMALLEQUALSTHAN resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for DIFFERENTTHAN resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for AND resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for OR resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for COMMA resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for CLOSEPAREN resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for OPENPAREN resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for TRUE resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for FALSE resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for CTESTRING resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for CTEINT resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for ID resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for CLOSECURLY resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for VAR resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for IF resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for INPUT resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for RETURN resolved using rule 109 (termino -> factor .)
  ! reduce/reduce conflict for WHILE resolved using rule 109 (termino -> factor .)
    SUM             reduce using rule 109 (termino -> factor .)
    SUBTRACT        reduce using rule 109 (termino -> factor .)
    SAMEAS          reduce using rule 109 (termino -> factor .)
    BIGGERTHAN      reduce using rule 109 (termino -> factor .)
    BIGGEREQUALSTHAN reduce using rule 109 (termino -> factor .)
    SMALLTHAN       reduce using rule 109 (termino -> factor .)
    SMALLEQUALSTHAN reduce using rule 109 (termino -> factor .)
    DIFFERENTTHAN   reduce using rule 109 (termino -> factor .)
    AND             reduce using rule 109 (termino -> factor .)
    OR              reduce using rule 109 (termino -> factor .)
    SEMICOLON       reduce using rule 109 (termino -> factor .)
    COMMA           reduce using rule 109 (termino -> factor .)
    CLOSEPAREN      reduce using rule 109 (termino -> factor .)
    OPENPAREN       reduce using rule 109 (termino -> factor .)
    TRUE            reduce using rule 109 (termino -> factor .)
    FALSE           reduce using rule 109 (termino -> factor .)
    CTEFLOAT        reduce using rule 109 (termino -> factor .)
    CTESTRING       reduce using rule 109 (termino -> factor .)
    CTEINT          reduce using rule 109 (termino -> factor .)
    ID              reduce using rule 109 (termino -> factor .)
    CLOSECURLY      reduce using rule 109 (termino -> factor .)
    VAR             reduce using rule 109 (termino -> factor .)
    IF              reduce using rule 109 (termino -> factor .)
    OUTPUT          reduce using rule 109 (termino -> factor .)
    INPUT           reduce using rule 109 (termino -> factor .)
    RETURN          reduce using rule 109 (termino -> factor .)
    WHILE           reduce using rule 109 (termino -> factor .)
    TIMES           shift and go to state 155
    DIV             shift and go to state 156

  ! SUM             [ reduce using rule 132 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 132 (empty -> .) ]
  ! SAMEAS          [ reduce using rule 132 (empty -> .) ]
  ! BIGGERTHAN      [ reduce using rule 132 (empty -> .) ]
  ! BIGGEREQUALSTHAN [ reduce using rule 132 (empty -> .) ]
  ! SMALLTHAN       [ reduce using rule 132 (empty -> .) ]
  ! SMALLEQUALSTHAN [ reduce using rule 132 (empty -> .) ]
  ! DIFFERENTTHAN   [ reduce using rule 132 (empty -> .) ]
  ! AND             [ reduce using rule 132 (empty -> .) ]
  ! OR              [ reduce using rule 132 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 132 (empty -> .) ]
  ! COMMA           [ reduce using rule 132 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 132 (empty -> .) ]
  ! OPENPAREN       [ reduce using rule 132 (empty -> .) ]
  ! TRUE            [ reduce using rule 132 (empty -> .) ]
  ! FALSE           [ reduce using rule 132 (empty -> .) ]
  ! CTEFLOAT        [ reduce using rule 132 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 132 (empty -> .) ]
  ! CTEINT          [ reduce using rule 132 (empty -> .) ]
  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! CLOSECURLY      [ reduce using rule 132 (empty -> .) ]
  ! VAR             [ reduce using rule 132 (empty -> .) ]
  ! IF              [ reduce using rule 132 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 132 (empty -> .) ]
  ! INPUT           [ reduce using rule 132 (empty -> .) ]
  ! RETURN          [ reduce using rule 132 (empty -> .) ]
  ! WHILE           [ reduce using rule 132 (empty -> .) ]

    alttermino                     shift and go to state 154
    empty                          shift and go to state 157

state 107

    (120) factor -> OPENPAREN . expresion CLOSEPAREN
    (93) expresion -> . exp altexpresion
    (104) exp -> . termino
    (105) exp -> . termino altexp
    (109) termino -> . factor
    (110) termino -> . factor alttermino
    (120) factor -> . OPENPAREN expresion CLOSEPAREN
    (121) factor -> . SUM varcall
    (122) factor -> . SUBTRACT varcall
    (123) factor -> . varcall
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 107
    SUM             shift and go to state 108
    SUBTRACT        shift and go to state 110
    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120

    expresion                      shift and go to state 158
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    varcall                        shift and go to state 109
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119

state 108

    (121) factor -> SUM . varcall
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120

    varcall                        shift and go to state 159
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119

state 109

    (123) factor -> varcall .

    TIMES           reduce using rule 123 (factor -> varcall .)
    DIV             reduce using rule 123 (factor -> varcall .)
    SUM             reduce using rule 123 (factor -> varcall .)
    SUBTRACT        reduce using rule 123 (factor -> varcall .)
    SAMEAS          reduce using rule 123 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 123 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 123 (factor -> varcall .)
    SMALLTHAN       reduce using rule 123 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 123 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 123 (factor -> varcall .)
    AND             reduce using rule 123 (factor -> varcall .)
    OR              reduce using rule 123 (factor -> varcall .)
    SEMICOLON       reduce using rule 123 (factor -> varcall .)
    COMMA           reduce using rule 123 (factor -> varcall .)
    CLOSEPAREN      reduce using rule 123 (factor -> varcall .)
    OPENPAREN       reduce using rule 123 (factor -> varcall .)
    TRUE            reduce using rule 123 (factor -> varcall .)
    FALSE           reduce using rule 123 (factor -> varcall .)
    CTEFLOAT        reduce using rule 123 (factor -> varcall .)
    CTESTRING       reduce using rule 123 (factor -> varcall .)
    CTEINT          reduce using rule 123 (factor -> varcall .)
    ID              reduce using rule 123 (factor -> varcall .)
    CLOSECURLY      reduce using rule 123 (factor -> varcall .)
    VAR             reduce using rule 123 (factor -> varcall .)
    IF              reduce using rule 123 (factor -> varcall .)
    OUTPUT          reduce using rule 123 (factor -> varcall .)
    INPUT           reduce using rule 123 (factor -> varcall .)
    RETURN          reduce using rule 123 (factor -> varcall .)
    WHILE           reduce using rule 123 (factor -> varcall .)


state 110

    (122) factor -> SUBTRACT . varcall
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120

    varcall                        shift and go to state 160
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119

state 111

    (79) varcall -> varcte .

    TIMES           reduce using rule 79 (varcall -> varcte .)
    DIV             reduce using rule 79 (varcall -> varcte .)
    SUM             reduce using rule 79 (varcall -> varcte .)
    SUBTRACT        reduce using rule 79 (varcall -> varcte .)
    SAMEAS          reduce using rule 79 (varcall -> varcte .)
    BIGGERTHAN      reduce using rule 79 (varcall -> varcte .)
    BIGGEREQUALSTHAN reduce using rule 79 (varcall -> varcte .)
    SMALLTHAN       reduce using rule 79 (varcall -> varcte .)
    SMALLEQUALSTHAN reduce using rule 79 (varcall -> varcte .)
    DIFFERENTTHAN   reduce using rule 79 (varcall -> varcte .)
    AND             reduce using rule 79 (varcall -> varcte .)
    OR              reduce using rule 79 (varcall -> varcte .)
    SEMICOLON       reduce using rule 79 (varcall -> varcte .)
    COMMA           reduce using rule 79 (varcall -> varcte .)
    CLOSEPAREN      reduce using rule 79 (varcall -> varcte .)
    OPENPAREN       reduce using rule 79 (varcall -> varcte .)
    TRUE            reduce using rule 79 (varcall -> varcte .)
    FALSE           reduce using rule 79 (varcall -> varcte .)
    CTEFLOAT        reduce using rule 79 (varcall -> varcte .)
    CTESTRING       reduce using rule 79 (varcall -> varcte .)
    CTEINT          reduce using rule 79 (varcall -> varcte .)
    ID              reduce using rule 79 (varcall -> varcte .)
    CLOSECURLY      reduce using rule 79 (varcall -> varcte .)
    VAR             reduce using rule 79 (varcall -> varcte .)
    IF              reduce using rule 79 (varcall -> varcte .)
    OUTPUT          reduce using rule 79 (varcall -> varcte .)
    INPUT           reduce using rule 79 (varcall -> varcte .)
    RETURN          reduce using rule 79 (varcall -> varcte .)
    WHILE           reduce using rule 79 (varcall -> varcte .)


state 112

    (80) varcall -> varcomplicated .

    TIMES           reduce using rule 80 (varcall -> varcomplicated .)
    DIV             reduce using rule 80 (varcall -> varcomplicated .)
    SUM             reduce using rule 80 (varcall -> varcomplicated .)
    SUBTRACT        reduce using rule 80 (varcall -> varcomplicated .)
    SAMEAS          reduce using rule 80 (varcall -> varcomplicated .)
    BIGGERTHAN      reduce using rule 80 (varcall -> varcomplicated .)
    BIGGEREQUALSTHAN reduce using rule 80 (varcall -> varcomplicated .)
    SMALLTHAN       reduce using rule 80 (varcall -> varcomplicated .)
    SMALLEQUALSTHAN reduce using rule 80 (varcall -> varcomplicated .)
    DIFFERENTTHAN   reduce using rule 80 (varcall -> varcomplicated .)
    AND             reduce using rule 80 (varcall -> varcomplicated .)
    OR              reduce using rule 80 (varcall -> varcomplicated .)
    SEMICOLON       reduce using rule 80 (varcall -> varcomplicated .)
    COMMA           reduce using rule 80 (varcall -> varcomplicated .)
    CLOSEPAREN      reduce using rule 80 (varcall -> varcomplicated .)
    OPENPAREN       reduce using rule 80 (varcall -> varcomplicated .)
    TRUE            reduce using rule 80 (varcall -> varcomplicated .)
    FALSE           reduce using rule 80 (varcall -> varcomplicated .)
    CTEFLOAT        reduce using rule 80 (varcall -> varcomplicated .)
    CTESTRING       reduce using rule 80 (varcall -> varcomplicated .)
    CTEINT          reduce using rule 80 (varcall -> varcomplicated .)
    ID              reduce using rule 80 (varcall -> varcomplicated .)
    CLOSECURLY      reduce using rule 80 (varcall -> varcomplicated .)
    VAR             reduce using rule 80 (varcall -> varcomplicated .)
    IF              reduce using rule 80 (varcall -> varcomplicated .)
    OUTPUT          reduce using rule 80 (varcall -> varcomplicated .)
    INPUT           reduce using rule 80 (varcall -> varcomplicated .)
    RETURN          reduce using rule 80 (varcall -> varcomplicated .)
    WHILE           reduce using rule 80 (varcall -> varcomplicated .)


state 113

    (81) varcte -> TRUE .

    TIMES           reduce using rule 81 (varcte -> TRUE .)
    DIV             reduce using rule 81 (varcte -> TRUE .)
    SUM             reduce using rule 81 (varcte -> TRUE .)
    SUBTRACT        reduce using rule 81 (varcte -> TRUE .)
    SAMEAS          reduce using rule 81 (varcte -> TRUE .)
    BIGGERTHAN      reduce using rule 81 (varcte -> TRUE .)
    BIGGEREQUALSTHAN reduce using rule 81 (varcte -> TRUE .)
    SMALLTHAN       reduce using rule 81 (varcte -> TRUE .)
    SMALLEQUALSTHAN reduce using rule 81 (varcte -> TRUE .)
    DIFFERENTTHAN   reduce using rule 81 (varcte -> TRUE .)
    AND             reduce using rule 81 (varcte -> TRUE .)
    OR              reduce using rule 81 (varcte -> TRUE .)
    SEMICOLON       reduce using rule 81 (varcte -> TRUE .)
    COMMA           reduce using rule 81 (varcte -> TRUE .)
    CLOSEPAREN      reduce using rule 81 (varcte -> TRUE .)
    OPENPAREN       reduce using rule 81 (varcte -> TRUE .)
    TRUE            reduce using rule 81 (varcte -> TRUE .)
    FALSE           reduce using rule 81 (varcte -> TRUE .)
    CTEFLOAT        reduce using rule 81 (varcte -> TRUE .)
    CTESTRING       reduce using rule 81 (varcte -> TRUE .)
    CTEINT          reduce using rule 81 (varcte -> TRUE .)
    ID              reduce using rule 81 (varcte -> TRUE .)
    CLOSECURLY      reduce using rule 81 (varcte -> TRUE .)
    VAR             reduce using rule 81 (varcte -> TRUE .)
    IF              reduce using rule 81 (varcte -> TRUE .)
    OUTPUT          reduce using rule 81 (varcte -> TRUE .)
    INPUT           reduce using rule 81 (varcte -> TRUE .)
    RETURN          reduce using rule 81 (varcte -> TRUE .)
    WHILE           reduce using rule 81 (varcte -> TRUE .)


state 114

    (82) varcte -> FALSE .

    TIMES           reduce using rule 82 (varcte -> FALSE .)
    DIV             reduce using rule 82 (varcte -> FALSE .)
    SUM             reduce using rule 82 (varcte -> FALSE .)
    SUBTRACT        reduce using rule 82 (varcte -> FALSE .)
    SAMEAS          reduce using rule 82 (varcte -> FALSE .)
    BIGGERTHAN      reduce using rule 82 (varcte -> FALSE .)
    BIGGEREQUALSTHAN reduce using rule 82 (varcte -> FALSE .)
    SMALLTHAN       reduce using rule 82 (varcte -> FALSE .)
    SMALLEQUALSTHAN reduce using rule 82 (varcte -> FALSE .)
    DIFFERENTTHAN   reduce using rule 82 (varcte -> FALSE .)
    AND             reduce using rule 82 (varcte -> FALSE .)
    OR              reduce using rule 82 (varcte -> FALSE .)
    SEMICOLON       reduce using rule 82 (varcte -> FALSE .)
    COMMA           reduce using rule 82 (varcte -> FALSE .)
    CLOSEPAREN      reduce using rule 82 (varcte -> FALSE .)
    OPENPAREN       reduce using rule 82 (varcte -> FALSE .)
    TRUE            reduce using rule 82 (varcte -> FALSE .)
    FALSE           reduce using rule 82 (varcte -> FALSE .)
    CTEFLOAT        reduce using rule 82 (varcte -> FALSE .)
    CTESTRING       reduce using rule 82 (varcte -> FALSE .)
    CTEINT          reduce using rule 82 (varcte -> FALSE .)
    ID              reduce using rule 82 (varcte -> FALSE .)
    CLOSECURLY      reduce using rule 82 (varcte -> FALSE .)
    VAR             reduce using rule 82 (varcte -> FALSE .)
    IF              reduce using rule 82 (varcte -> FALSE .)
    OUTPUT          reduce using rule 82 (varcte -> FALSE .)
    INPUT           reduce using rule 82 (varcte -> FALSE .)
    RETURN          reduce using rule 82 (varcte -> FALSE .)
    WHILE           reduce using rule 82 (varcte -> FALSE .)


state 115

    (83) varcte -> CTEFLOAT .

    TIMES           reduce using rule 83 (varcte -> CTEFLOAT .)
    DIV             reduce using rule 83 (varcte -> CTEFLOAT .)
    SUM             reduce using rule 83 (varcte -> CTEFLOAT .)
    SUBTRACT        reduce using rule 83 (varcte -> CTEFLOAT .)
    SAMEAS          reduce using rule 83 (varcte -> CTEFLOAT .)
    BIGGERTHAN      reduce using rule 83 (varcte -> CTEFLOAT .)
    BIGGEREQUALSTHAN reduce using rule 83 (varcte -> CTEFLOAT .)
    SMALLTHAN       reduce using rule 83 (varcte -> CTEFLOAT .)
    SMALLEQUALSTHAN reduce using rule 83 (varcte -> CTEFLOAT .)
    DIFFERENTTHAN   reduce using rule 83 (varcte -> CTEFLOAT .)
    AND             reduce using rule 83 (varcte -> CTEFLOAT .)
    OR              reduce using rule 83 (varcte -> CTEFLOAT .)
    SEMICOLON       reduce using rule 83 (varcte -> CTEFLOAT .)
    COMMA           reduce using rule 83 (varcte -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 83 (varcte -> CTEFLOAT .)
    OPENPAREN       reduce using rule 83 (varcte -> CTEFLOAT .)
    TRUE            reduce using rule 83 (varcte -> CTEFLOAT .)
    FALSE           reduce using rule 83 (varcte -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 83 (varcte -> CTEFLOAT .)
    CTESTRING       reduce using rule 83 (varcte -> CTEFLOAT .)
    CTEINT          reduce using rule 83 (varcte -> CTEFLOAT .)
    ID              reduce using rule 83 (varcte -> CTEFLOAT .)
    CLOSECURLY      reduce using rule 83 (varcte -> CTEFLOAT .)
    VAR             reduce using rule 83 (varcte -> CTEFLOAT .)
    IF              reduce using rule 83 (varcte -> CTEFLOAT .)
    OUTPUT          reduce using rule 83 (varcte -> CTEFLOAT .)
    INPUT           reduce using rule 83 (varcte -> CTEFLOAT .)
    RETURN          reduce using rule 83 (varcte -> CTEFLOAT .)
    WHILE           reduce using rule 83 (varcte -> CTEFLOAT .)


state 116

    (84) varcte -> CTESTRING .

    TIMES           reduce using rule 84 (varcte -> CTESTRING .)
    DIV             reduce using rule 84 (varcte -> CTESTRING .)
    SUM             reduce using rule 84 (varcte -> CTESTRING .)
    SUBTRACT        reduce using rule 84 (varcte -> CTESTRING .)
    SAMEAS          reduce using rule 84 (varcte -> CTESTRING .)
    BIGGERTHAN      reduce using rule 84 (varcte -> CTESTRING .)
    BIGGEREQUALSTHAN reduce using rule 84 (varcte -> CTESTRING .)
    SMALLTHAN       reduce using rule 84 (varcte -> CTESTRING .)
    SMALLEQUALSTHAN reduce using rule 84 (varcte -> CTESTRING .)
    DIFFERENTTHAN   reduce using rule 84 (varcte -> CTESTRING .)
    AND             reduce using rule 84 (varcte -> CTESTRING .)
    OR              reduce using rule 84 (varcte -> CTESTRING .)
    SEMICOLON       reduce using rule 84 (varcte -> CTESTRING .)
    COMMA           reduce using rule 84 (varcte -> CTESTRING .)
    CLOSEPAREN      reduce using rule 84 (varcte -> CTESTRING .)
    OPENPAREN       reduce using rule 84 (varcte -> CTESTRING .)
    TRUE            reduce using rule 84 (varcte -> CTESTRING .)
    FALSE           reduce using rule 84 (varcte -> CTESTRING .)
    CTEFLOAT        reduce using rule 84 (varcte -> CTESTRING .)
    CTESTRING       reduce using rule 84 (varcte -> CTESTRING .)
    CTEINT          reduce using rule 84 (varcte -> CTESTRING .)
    ID              reduce using rule 84 (varcte -> CTESTRING .)
    CLOSECURLY      reduce using rule 84 (varcte -> CTESTRING .)
    VAR             reduce using rule 84 (varcte -> CTESTRING .)
    IF              reduce using rule 84 (varcte -> CTESTRING .)
    OUTPUT          reduce using rule 84 (varcte -> CTESTRING .)
    INPUT           reduce using rule 84 (varcte -> CTESTRING .)
    RETURN          reduce using rule 84 (varcte -> CTESTRING .)
    WHILE           reduce using rule 84 (varcte -> CTESTRING .)


state 117

    (85) varcte -> CTEINT .

    TIMES           reduce using rule 85 (varcte -> CTEINT .)
    DIV             reduce using rule 85 (varcte -> CTEINT .)
    SUM             reduce using rule 85 (varcte -> CTEINT .)
    SUBTRACT        reduce using rule 85 (varcte -> CTEINT .)
    SAMEAS          reduce using rule 85 (varcte -> CTEINT .)
    BIGGERTHAN      reduce using rule 85 (varcte -> CTEINT .)
    BIGGEREQUALSTHAN reduce using rule 85 (varcte -> CTEINT .)
    SMALLTHAN       reduce using rule 85 (varcte -> CTEINT .)
    SMALLEQUALSTHAN reduce using rule 85 (varcte -> CTEINT .)
    DIFFERENTTHAN   reduce using rule 85 (varcte -> CTEINT .)
    AND             reduce using rule 85 (varcte -> CTEINT .)
    OR              reduce using rule 85 (varcte -> CTEINT .)
    SEMICOLON       reduce using rule 85 (varcte -> CTEINT .)
    COMMA           reduce using rule 85 (varcte -> CTEINT .)
    CLOSEPAREN      reduce using rule 85 (varcte -> CTEINT .)
    OPENPAREN       reduce using rule 85 (varcte -> CTEINT .)
    TRUE            reduce using rule 85 (varcte -> CTEINT .)
    FALSE           reduce using rule 85 (varcte -> CTEINT .)
    CTEFLOAT        reduce using rule 85 (varcte -> CTEINT .)
    CTESTRING       reduce using rule 85 (varcte -> CTEINT .)
    CTEINT          reduce using rule 85 (varcte -> CTEINT .)
    ID              reduce using rule 85 (varcte -> CTEINT .)
    CLOSECURLY      reduce using rule 85 (varcte -> CTEINT .)
    VAR             reduce using rule 85 (varcte -> CTEINT .)
    IF              reduce using rule 85 (varcte -> CTEINT .)
    OUTPUT          reduce using rule 85 (varcte -> CTEINT .)
    INPUT           reduce using rule 85 (varcte -> CTEINT .)
    RETURN          reduce using rule 85 (varcte -> CTEINT .)
    WHILE           reduce using rule 85 (varcte -> CTEINT .)


state 118

    (86) varcomplicated -> varcomp1 .

    TIMES           reduce using rule 86 (varcomplicated -> varcomp1 .)
    DIV             reduce using rule 86 (varcomplicated -> varcomp1 .)
    SUM             reduce using rule 86 (varcomplicated -> varcomp1 .)
    SUBTRACT        reduce using rule 86 (varcomplicated -> varcomp1 .)
    SAMEAS          reduce using rule 86 (varcomplicated -> varcomp1 .)
    BIGGERTHAN      reduce using rule 86 (varcomplicated -> varcomp1 .)
    BIGGEREQUALSTHAN reduce using rule 86 (varcomplicated -> varcomp1 .)
    SMALLTHAN       reduce using rule 86 (varcomplicated -> varcomp1 .)
    SMALLEQUALSTHAN reduce using rule 86 (varcomplicated -> varcomp1 .)
    DIFFERENTTHAN   reduce using rule 86 (varcomplicated -> varcomp1 .)
    AND             reduce using rule 86 (varcomplicated -> varcomp1 .)
    OR              reduce using rule 86 (varcomplicated -> varcomp1 .)
    SEMICOLON       reduce using rule 86 (varcomplicated -> varcomp1 .)
    COMMA           reduce using rule 86 (varcomplicated -> varcomp1 .)
    CLOSEPAREN      reduce using rule 86 (varcomplicated -> varcomp1 .)
    OPENPAREN       reduce using rule 86 (varcomplicated -> varcomp1 .)
    TRUE            reduce using rule 86 (varcomplicated -> varcomp1 .)
    FALSE           reduce using rule 86 (varcomplicated -> varcomp1 .)
    CTEFLOAT        reduce using rule 86 (varcomplicated -> varcomp1 .)
    CTESTRING       reduce using rule 86 (varcomplicated -> varcomp1 .)
    CTEINT          reduce using rule 86 (varcomplicated -> varcomp1 .)
    ID              reduce using rule 86 (varcomplicated -> varcomp1 .)
    CLOSECURLY      reduce using rule 86 (varcomplicated -> varcomp1 .)
    VAR             reduce using rule 86 (varcomplicated -> varcomp1 .)
    IF              reduce using rule 86 (varcomplicated -> varcomp1 .)
    OUTPUT          reduce using rule 86 (varcomplicated -> varcomp1 .)
    INPUT           reduce using rule 86 (varcomplicated -> varcomp1 .)
    RETURN          reduce using rule 86 (varcomplicated -> varcomp1 .)
    WHILE           reduce using rule 86 (varcomplicated -> varcomp1 .)


state 119

    (87) varcomplicated -> callfunc .

    TIMES           reduce using rule 87 (varcomplicated -> callfunc .)
    DIV             reduce using rule 87 (varcomplicated -> callfunc .)
    SUM             reduce using rule 87 (varcomplicated -> callfunc .)
    SUBTRACT        reduce using rule 87 (varcomplicated -> callfunc .)
    SAMEAS          reduce using rule 87 (varcomplicated -> callfunc .)
    BIGGERTHAN      reduce using rule 87 (varcomplicated -> callfunc .)
    BIGGEREQUALSTHAN reduce using rule 87 (varcomplicated -> callfunc .)
    SMALLTHAN       reduce using rule 87 (varcomplicated -> callfunc .)
    SMALLEQUALSTHAN reduce using rule 87 (varcomplicated -> callfunc .)
    DIFFERENTTHAN   reduce using rule 87 (varcomplicated -> callfunc .)
    AND             reduce using rule 87 (varcomplicated -> callfunc .)
    OR              reduce using rule 87 (varcomplicated -> callfunc .)
    SEMICOLON       reduce using rule 87 (varcomplicated -> callfunc .)
    COMMA           reduce using rule 87 (varcomplicated -> callfunc .)
    CLOSEPAREN      reduce using rule 87 (varcomplicated -> callfunc .)
    OPENPAREN       reduce using rule 87 (varcomplicated -> callfunc .)
    TRUE            reduce using rule 87 (varcomplicated -> callfunc .)
    FALSE           reduce using rule 87 (varcomplicated -> callfunc .)
    CTEFLOAT        reduce using rule 87 (varcomplicated -> callfunc .)
    CTESTRING       reduce using rule 87 (varcomplicated -> callfunc .)
    CTEINT          reduce using rule 87 (varcomplicated -> callfunc .)
    ID              reduce using rule 87 (varcomplicated -> callfunc .)
    CLOSECURLY      reduce using rule 87 (varcomplicated -> callfunc .)
    VAR             reduce using rule 87 (varcomplicated -> callfunc .)
    IF              reduce using rule 87 (varcomplicated -> callfunc .)
    OUTPUT          reduce using rule 87 (varcomplicated -> callfunc .)
    INPUT           reduce using rule 87 (varcomplicated -> callfunc .)
    RETURN          reduce using rule 87 (varcomplicated -> callfunc .)
    WHILE           reduce using rule 87 (varcomplicated -> callfunc .)


state 120

    (88) varcomp1 -> ID . varcomp2
    (55) callfunc -> ID . OPENPAREN altcall CLOSEPAREN
    (89) varcomp2 -> . DOT varcomp3
    (90) varcomp2 -> . empty
    (132) empty -> .

  ! shift/reduce conflict for OPENPAREN resolved as shift
    OPENPAREN       shift and go to state 162
    DOT             shift and go to state 163
    TIMES           reduce using rule 132 (empty -> .)
    DIV             reduce using rule 132 (empty -> .)
    SUM             reduce using rule 132 (empty -> .)
    SUBTRACT        reduce using rule 132 (empty -> .)
    SAMEAS          reduce using rule 132 (empty -> .)
    BIGGERTHAN      reduce using rule 132 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 132 (empty -> .)
    SMALLTHAN       reduce using rule 132 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 132 (empty -> .)
    DIFFERENTTHAN   reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    TRUE            reduce using rule 132 (empty -> .)
    FALSE           reduce using rule 132 (empty -> .)
    CTEFLOAT        reduce using rule 132 (empty -> .)
    CTESTRING       reduce using rule 132 (empty -> .)
    CTEINT          reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)

  ! OPENPAREN       [ reduce using rule 132 (empty -> .) ]

    varcomp2                       shift and go to state 161
    empty                          shift and go to state 164

state 121

    (76) while -> WHILE OPENPAREN . expresion CLOSEPAREN OPENCURLY altwhile
    (93) expresion -> . exp altexpresion
    (104) exp -> . termino
    (105) exp -> . termino altexp
    (109) termino -> . factor
    (110) termino -> . factor alttermino
    (120) factor -> . OPENPAREN expresion CLOSEPAREN
    (121) factor -> . SUM varcall
    (122) factor -> . SUBTRACT varcall
    (123) factor -> . varcall
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 107
    SUM             shift and go to state 108
    SUBTRACT        shift and go to state 110
    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120

    expresion                      shift and go to state 165
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    varcall                        shift and go to state 109
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119

state 122

    (18) alt2class -> constructor CLOSECURLY SEMICOLON . remove_class_scope
    (20) remove_class_scope -> .

    CLASS           reduce using rule 20 (remove_class_scope -> .)
    VAR             reduce using rule 20 (remove_class_scope -> .)
    FUNC            reduce using rule 20 (remove_class_scope -> .)
    MAIN            reduce using rule 20 (remove_class_scope -> .)

    remove_class_scope             shift and go to state 166

state 123

    (21) constructor -> CONSTRUCTOR save_constructor OPENPAREN . altconst CLOSEPAREN OPENCURLY alt2const
    (22) altconst -> . params altconst
    (23) altconst -> . empty
    (51) params -> . ID TWODOTS type save_params altparams
    (132) empty -> .

    ID              shift and go to state 42
    CLOSEPAREN      reduce using rule 132 (empty -> .)

    altconst                       shift and go to state 167
    params                         shift and go to state 168
    empty                          shift and go to state 169

state 124

    (36) listidsaltz -> OPENBRACKET CTEINT . CLOSEBRACKET listidsaltp

    CLOSEBRACKET    shift and go to state 170


state 125

    (35) listidsaltz -> COMMA listids .

    TWODOTS         reduce using rule 35 (listidsaltz -> COMMA listids .)


state 126

    (51) params -> ID TWODOTS type save_params altparams .

    CLOSEPAREN      reduce using rule 51 (params -> ID TWODOTS type save_params altparams .)
    ID              reduce using rule 51 (params -> ID TWODOTS type save_params altparams .)


state 127

    (52) altparams -> COMMA . ID TWODOTS type save_params altparams

    ID              shift and go to state 171


state 128

    (53) altparams -> empty .

    CLOSEPAREN      reduce using rule 53 (altparams -> empty .)
    ID              reduce using rule 53 (altparams -> empty .)


state 129

    (41) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY . alt3func
    (46) alt3func -> . var alt3func
    (47) alt3func -> . estatuto alt3func
    (48) alt3func -> . CLOSECURLY remove_function_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (65) estatuto -> . assign
    (66) estatuto -> . condition
    (67) estatuto -> . write
    (68) estatuto -> . read
    (69) estatuto -> . return
    (70) estatuto -> . voidcall
    (71) estatuto -> . while
    (128) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (125) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (115) write -> . OUTPUT OPENPAREN varcall altwrite
    (116) write -> . OUTPUT OPENPAREN expresion altwrite
    (114) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (131) return -> . RETURN expresion SEMICOLON
    (72) voidcall -> . ID OPENPAREN CLOSEPAREN
    (73) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 175
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    alt3func                       shift and go to state 172
    var                            shift and go to state 173
    estatuto                       shift and go to state 174
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 130

    (128) assign -> ID assign1 EQUALS . expresion SEMICOLON
    (93) expresion -> . exp altexpresion
    (104) exp -> . termino
    (105) exp -> . termino altexp
    (109) termino -> . factor
    (110) termino -> . factor alttermino
    (120) factor -> . OPENPAREN expresion CLOSEPAREN
    (121) factor -> . SUM varcall
    (122) factor -> . SUBTRACT varcall
    (123) factor -> . varcall
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 107
    SUM             shift and go to state 108
    SUBTRACT        shift and go to state 110
    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120

    expresion                      shift and go to state 176
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    varcall                        shift and go to state 109
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119

state 131

    (72) voidcall -> ID OPENPAREN CLOSEPAREN .

    CLOSECURLY      reduce using rule 72 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    VAR             reduce using rule 72 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    ID              reduce using rule 72 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    IF              reduce using rule 72 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    OUTPUT          reduce using rule 72 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    INPUT           reduce using rule 72 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    RETURN          reduce using rule 72 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    WHILE           reduce using rule 72 (voidcall -> ID OPENPAREN CLOSEPAREN .)


state 132

    (73) voidcall -> ID OPENPAREN expresion . altcall
    (56) altcall -> . expresion alt2call
    (57) altcall -> . empty
    (74) altcall -> . COMMA expresion altcall
    (75) altcall -> . CLOSEPAREN SEMICOLON
    (93) expresion -> . exp altexpresion
    (132) empty -> .
    (104) exp -> . termino
    (105) exp -> . termino altexp
    (109) termino -> . factor
    (110) termino -> . factor alttermino
    (120) factor -> . OPENPAREN expresion CLOSEPAREN
    (121) factor -> . SUM varcall
    (122) factor -> . SUBTRACT varcall
    (123) factor -> . varcall
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 180
    CLOSEPAREN      shift and go to state 181
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)
    OPENPAREN       shift and go to state 107
    SUM             shift and go to state 108
    SUBTRACT        shift and go to state 110
    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120

  ! ID              [ reduce using rule 132 (empty -> .) ]

    expresion                      shift and go to state 177
    altcall                        shift and go to state 178
    empty                          shift and go to state 179
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    varcall                        shift and go to state 109
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119

state 133

    (129) assign1 -> DOT ID . assign1
    (129) assign1 -> . DOT ID assign1
    (130) assign1 -> . empty
    (132) empty -> .

    DOT             shift and go to state 98
    EQUALS          reduce using rule 132 (empty -> .)

    assign1                        shift and go to state 182
    empty                          shift and go to state 99

state 134

    (124) condition -> IF OPENPAREN expresion . CLOSEPAREN OPENCURLY altcondition
    (125) condition -> IF OPENPAREN expresion . CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition

    CLOSEPAREN      shift and go to state 183


state 135

    (115) write -> OUTPUT OPENPAREN varcall . altwrite
    (123) factor -> varcall .
    (117) altwrite -> . COMMA varcall altwrite
    (118) altwrite -> . COMMA expresion altwrite
    (119) altwrite -> . CLOSEPAREN SEMICOLON

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for CLOSEPAREN resolved as shift
    TIMES           reduce using rule 123 (factor -> varcall .)
    DIV             reduce using rule 123 (factor -> varcall .)
    SUM             reduce using rule 123 (factor -> varcall .)
    SUBTRACT        reduce using rule 123 (factor -> varcall .)
    SAMEAS          reduce using rule 123 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 123 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 123 (factor -> varcall .)
    SMALLTHAN       reduce using rule 123 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 123 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 123 (factor -> varcall .)
    AND             reduce using rule 123 (factor -> varcall .)
    OR              reduce using rule 123 (factor -> varcall .)
    COMMA           shift and go to state 185
    CLOSEPAREN      shift and go to state 186

  ! COMMA           [ reduce using rule 123 (factor -> varcall .) ]
  ! CLOSEPAREN      [ reduce using rule 123 (factor -> varcall .) ]

    altwrite                       shift and go to state 184

state 136

    (116) write -> OUTPUT OPENPAREN expresion . altwrite
    (117) altwrite -> . COMMA varcall altwrite
    (118) altwrite -> . COMMA expresion altwrite
    (119) altwrite -> . CLOSEPAREN SEMICOLON

    COMMA           shift and go to state 185
    CLOSEPAREN      shift and go to state 186

    altwrite                       shift and go to state 187

state 137

    (114) read -> INPUT OPENPAREN ID . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 188


state 138

    (131) return -> RETURN expresion SEMICOLON .

    CLOSECURLY      reduce using rule 131 (return -> RETURN expresion SEMICOLON .)
    VAR             reduce using rule 131 (return -> RETURN expresion SEMICOLON .)
    ID              reduce using rule 131 (return -> RETURN expresion SEMICOLON .)
    IF              reduce using rule 131 (return -> RETURN expresion SEMICOLON .)
    OUTPUT          reduce using rule 131 (return -> RETURN expresion SEMICOLON .)
    INPUT           reduce using rule 131 (return -> RETURN expresion SEMICOLON .)
    RETURN          reduce using rule 131 (return -> RETURN expresion SEMICOLON .)
    WHILE           reduce using rule 131 (return -> RETURN expresion SEMICOLON .)


state 139

    (93) expresion -> exp altexpresion .

    SEMICOLON       reduce using rule 93 (expresion -> exp altexpresion .)
    COMMA           reduce using rule 93 (expresion -> exp altexpresion .)
    CLOSEPAREN      reduce using rule 93 (expresion -> exp altexpresion .)
    OPENPAREN       reduce using rule 93 (expresion -> exp altexpresion .)
    SUM             reduce using rule 93 (expresion -> exp altexpresion .)
    SUBTRACT        reduce using rule 93 (expresion -> exp altexpresion .)
    TRUE            reduce using rule 93 (expresion -> exp altexpresion .)
    FALSE           reduce using rule 93 (expresion -> exp altexpresion .)
    CTEFLOAT        reduce using rule 93 (expresion -> exp altexpresion .)
    CTESTRING       reduce using rule 93 (expresion -> exp altexpresion .)
    CTEINT          reduce using rule 93 (expresion -> exp altexpresion .)
    ID              reduce using rule 93 (expresion -> exp altexpresion .)
    CLOSECURLY      reduce using rule 93 (expresion -> exp altexpresion .)
    VAR             reduce using rule 93 (expresion -> exp altexpresion .)
    IF              reduce using rule 93 (expresion -> exp altexpresion .)
    OUTPUT          reduce using rule 93 (expresion -> exp altexpresion .)
    INPUT           reduce using rule 93 (expresion -> exp altexpresion .)
    RETURN          reduce using rule 93 (expresion -> exp altexpresion .)
    WHILE           reduce using rule 93 (expresion -> exp altexpresion .)


state 140

    (94) altexpresion -> altexpresion2 . exp
    (104) exp -> . termino
    (105) exp -> . termino altexp
    (109) termino -> . factor
    (110) termino -> . factor alttermino
    (120) factor -> . OPENPAREN expresion CLOSEPAREN
    (121) factor -> . SUM varcall
    (122) factor -> . SUBTRACT varcall
    (123) factor -> . varcall
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 107
    SUM             shift and go to state 108
    SUBTRACT        shift and go to state 110
    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120

    exp                            shift and go to state 189
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    varcall                        shift and go to state 109
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119

state 141

    (95) altexpresion -> empty .

    SEMICOLON       reduce using rule 95 (altexpresion -> empty .)
    COMMA           reduce using rule 95 (altexpresion -> empty .)
    CLOSEPAREN      reduce using rule 95 (altexpresion -> empty .)
    OPENPAREN       reduce using rule 95 (altexpresion -> empty .)
    SUM             reduce using rule 95 (altexpresion -> empty .)
    SUBTRACT        reduce using rule 95 (altexpresion -> empty .)
    TRUE            reduce using rule 95 (altexpresion -> empty .)
    FALSE           reduce using rule 95 (altexpresion -> empty .)
    CTEFLOAT        reduce using rule 95 (altexpresion -> empty .)
    CTESTRING       reduce using rule 95 (altexpresion -> empty .)
    CTEINT          reduce using rule 95 (altexpresion -> empty .)
    ID              reduce using rule 95 (altexpresion -> empty .)
    CLOSECURLY      reduce using rule 95 (altexpresion -> empty .)
    VAR             reduce using rule 95 (altexpresion -> empty .)
    IF              reduce using rule 95 (altexpresion -> empty .)
    OUTPUT          reduce using rule 95 (altexpresion -> empty .)
    INPUT           reduce using rule 95 (altexpresion -> empty .)
    RETURN          reduce using rule 95 (altexpresion -> empty .)
    WHILE           reduce using rule 95 (altexpresion -> empty .)


state 142

    (96) altexpresion2 -> SAMEAS .

    OPENPAREN       reduce using rule 96 (altexpresion2 -> SAMEAS .)
    SUM             reduce using rule 96 (altexpresion2 -> SAMEAS .)
    SUBTRACT        reduce using rule 96 (altexpresion2 -> SAMEAS .)
    TRUE            reduce using rule 96 (altexpresion2 -> SAMEAS .)
    FALSE           reduce using rule 96 (altexpresion2 -> SAMEAS .)
    CTEFLOAT        reduce using rule 96 (altexpresion2 -> SAMEAS .)
    CTESTRING       reduce using rule 96 (altexpresion2 -> SAMEAS .)
    CTEINT          reduce using rule 96 (altexpresion2 -> SAMEAS .)
    ID              reduce using rule 96 (altexpresion2 -> SAMEAS .)


state 143

    (97) altexpresion2 -> BIGGERTHAN .

    OPENPAREN       reduce using rule 97 (altexpresion2 -> BIGGERTHAN .)
    SUM             reduce using rule 97 (altexpresion2 -> BIGGERTHAN .)
    SUBTRACT        reduce using rule 97 (altexpresion2 -> BIGGERTHAN .)
    TRUE            reduce using rule 97 (altexpresion2 -> BIGGERTHAN .)
    FALSE           reduce using rule 97 (altexpresion2 -> BIGGERTHAN .)
    CTEFLOAT        reduce using rule 97 (altexpresion2 -> BIGGERTHAN .)
    CTESTRING       reduce using rule 97 (altexpresion2 -> BIGGERTHAN .)
    CTEINT          reduce using rule 97 (altexpresion2 -> BIGGERTHAN .)
    ID              reduce using rule 97 (altexpresion2 -> BIGGERTHAN .)


state 144

    (98) altexpresion2 -> BIGGEREQUALSTHAN .

    OPENPAREN       reduce using rule 98 (altexpresion2 -> BIGGEREQUALSTHAN .)
    SUM             reduce using rule 98 (altexpresion2 -> BIGGEREQUALSTHAN .)
    SUBTRACT        reduce using rule 98 (altexpresion2 -> BIGGEREQUALSTHAN .)
    TRUE            reduce using rule 98 (altexpresion2 -> BIGGEREQUALSTHAN .)
    FALSE           reduce using rule 98 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTEFLOAT        reduce using rule 98 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTESTRING       reduce using rule 98 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTEINT          reduce using rule 98 (altexpresion2 -> BIGGEREQUALSTHAN .)
    ID              reduce using rule 98 (altexpresion2 -> BIGGEREQUALSTHAN .)


state 145

    (99) altexpresion2 -> SMALLTHAN .

    OPENPAREN       reduce using rule 99 (altexpresion2 -> SMALLTHAN .)
    SUM             reduce using rule 99 (altexpresion2 -> SMALLTHAN .)
    SUBTRACT        reduce using rule 99 (altexpresion2 -> SMALLTHAN .)
    TRUE            reduce using rule 99 (altexpresion2 -> SMALLTHAN .)
    FALSE           reduce using rule 99 (altexpresion2 -> SMALLTHAN .)
    CTEFLOAT        reduce using rule 99 (altexpresion2 -> SMALLTHAN .)
    CTESTRING       reduce using rule 99 (altexpresion2 -> SMALLTHAN .)
    CTEINT          reduce using rule 99 (altexpresion2 -> SMALLTHAN .)
    ID              reduce using rule 99 (altexpresion2 -> SMALLTHAN .)


state 146

    (100) altexpresion2 -> SMALLEQUALSTHAN .

    OPENPAREN       reduce using rule 100 (altexpresion2 -> SMALLEQUALSTHAN .)
    SUM             reduce using rule 100 (altexpresion2 -> SMALLEQUALSTHAN .)
    SUBTRACT        reduce using rule 100 (altexpresion2 -> SMALLEQUALSTHAN .)
    TRUE            reduce using rule 100 (altexpresion2 -> SMALLEQUALSTHAN .)
    FALSE           reduce using rule 100 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTEFLOAT        reduce using rule 100 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTESTRING       reduce using rule 100 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTEINT          reduce using rule 100 (altexpresion2 -> SMALLEQUALSTHAN .)
    ID              reduce using rule 100 (altexpresion2 -> SMALLEQUALSTHAN .)


state 147

    (101) altexpresion2 -> DIFFERENTTHAN .

    OPENPAREN       reduce using rule 101 (altexpresion2 -> DIFFERENTTHAN .)
    SUM             reduce using rule 101 (altexpresion2 -> DIFFERENTTHAN .)
    SUBTRACT        reduce using rule 101 (altexpresion2 -> DIFFERENTTHAN .)
    TRUE            reduce using rule 101 (altexpresion2 -> DIFFERENTTHAN .)
    FALSE           reduce using rule 101 (altexpresion2 -> DIFFERENTTHAN .)
    CTEFLOAT        reduce using rule 101 (altexpresion2 -> DIFFERENTTHAN .)
    CTESTRING       reduce using rule 101 (altexpresion2 -> DIFFERENTTHAN .)
    CTEINT          reduce using rule 101 (altexpresion2 -> DIFFERENTTHAN .)
    ID              reduce using rule 101 (altexpresion2 -> DIFFERENTTHAN .)


state 148

    (102) altexpresion2 -> AND .

    OPENPAREN       reduce using rule 102 (altexpresion2 -> AND .)
    SUM             reduce using rule 102 (altexpresion2 -> AND .)
    SUBTRACT        reduce using rule 102 (altexpresion2 -> AND .)
    TRUE            reduce using rule 102 (altexpresion2 -> AND .)
    FALSE           reduce using rule 102 (altexpresion2 -> AND .)
    CTEFLOAT        reduce using rule 102 (altexpresion2 -> AND .)
    CTESTRING       reduce using rule 102 (altexpresion2 -> AND .)
    CTEINT          reduce using rule 102 (altexpresion2 -> AND .)
    ID              reduce using rule 102 (altexpresion2 -> AND .)


state 149

    (103) altexpresion2 -> OR .

    OPENPAREN       reduce using rule 103 (altexpresion2 -> OR .)
    SUM             reduce using rule 103 (altexpresion2 -> OR .)
    SUBTRACT        reduce using rule 103 (altexpresion2 -> OR .)
    TRUE            reduce using rule 103 (altexpresion2 -> OR .)
    FALSE           reduce using rule 103 (altexpresion2 -> OR .)
    CTEFLOAT        reduce using rule 103 (altexpresion2 -> OR .)
    CTESTRING       reduce using rule 103 (altexpresion2 -> OR .)
    CTEINT          reduce using rule 103 (altexpresion2 -> OR .)
    ID              reduce using rule 103 (altexpresion2 -> OR .)


state 150

    (105) exp -> termino altexp .

    SAMEAS          reduce using rule 105 (exp -> termino altexp .)
    BIGGERTHAN      reduce using rule 105 (exp -> termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 105 (exp -> termino altexp .)
    SMALLTHAN       reduce using rule 105 (exp -> termino altexp .)
    SMALLEQUALSTHAN reduce using rule 105 (exp -> termino altexp .)
    DIFFERENTTHAN   reduce using rule 105 (exp -> termino altexp .)
    AND             reduce using rule 105 (exp -> termino altexp .)
    OR              reduce using rule 105 (exp -> termino altexp .)
    SEMICOLON       reduce using rule 105 (exp -> termino altexp .)
    COMMA           reduce using rule 105 (exp -> termino altexp .)
    CLOSEPAREN      reduce using rule 105 (exp -> termino altexp .)
    OPENPAREN       reduce using rule 105 (exp -> termino altexp .)
    SUM             reduce using rule 105 (exp -> termino altexp .)
    SUBTRACT        reduce using rule 105 (exp -> termino altexp .)
    TRUE            reduce using rule 105 (exp -> termino altexp .)
    FALSE           reduce using rule 105 (exp -> termino altexp .)
    CTEFLOAT        reduce using rule 105 (exp -> termino altexp .)
    CTESTRING       reduce using rule 105 (exp -> termino altexp .)
    CTEINT          reduce using rule 105 (exp -> termino altexp .)
    ID              reduce using rule 105 (exp -> termino altexp .)
    CLOSECURLY      reduce using rule 105 (exp -> termino altexp .)
    VAR             reduce using rule 105 (exp -> termino altexp .)
    IF              reduce using rule 105 (exp -> termino altexp .)
    OUTPUT          reduce using rule 105 (exp -> termino altexp .)
    INPUT           reduce using rule 105 (exp -> termino altexp .)
    RETURN          reduce using rule 105 (exp -> termino altexp .)
    WHILE           reduce using rule 105 (exp -> termino altexp .)


state 151

    (106) altexp -> SUM . termino altexp
    (109) termino -> . factor
    (110) termino -> . factor alttermino
    (120) factor -> . OPENPAREN expresion CLOSEPAREN
    (121) factor -> . SUM varcall
    (122) factor -> . SUBTRACT varcall
    (123) factor -> . varcall
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 107
    SUM             shift and go to state 108
    SUBTRACT        shift and go to state 110
    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120

    termino                        shift and go to state 190
    factor                         shift and go to state 106
    varcall                        shift and go to state 109
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119

state 152

    (107) altexp -> SUBTRACT . termino altexp
    (109) termino -> . factor
    (110) termino -> . factor alttermino
    (120) factor -> . OPENPAREN expresion CLOSEPAREN
    (121) factor -> . SUM varcall
    (122) factor -> . SUBTRACT varcall
    (123) factor -> . varcall
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 107
    SUM             shift and go to state 108
    SUBTRACT        shift and go to state 110
    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120

    termino                        shift and go to state 191
    factor                         shift and go to state 106
    varcall                        shift and go to state 109
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119

state 153

    (108) altexp -> empty .

    SAMEAS          reduce using rule 108 (altexp -> empty .)
    BIGGERTHAN      reduce using rule 108 (altexp -> empty .)
    BIGGEREQUALSTHAN reduce using rule 108 (altexp -> empty .)
    SMALLTHAN       reduce using rule 108 (altexp -> empty .)
    SMALLEQUALSTHAN reduce using rule 108 (altexp -> empty .)
    DIFFERENTTHAN   reduce using rule 108 (altexp -> empty .)
    AND             reduce using rule 108 (altexp -> empty .)
    OR              reduce using rule 108 (altexp -> empty .)
    SEMICOLON       reduce using rule 108 (altexp -> empty .)
    COMMA           reduce using rule 108 (altexp -> empty .)
    CLOSEPAREN      reduce using rule 108 (altexp -> empty .)
    OPENPAREN       reduce using rule 108 (altexp -> empty .)
    SUM             reduce using rule 108 (altexp -> empty .)
    SUBTRACT        reduce using rule 108 (altexp -> empty .)
    TRUE            reduce using rule 108 (altexp -> empty .)
    FALSE           reduce using rule 108 (altexp -> empty .)
    CTEFLOAT        reduce using rule 108 (altexp -> empty .)
    CTESTRING       reduce using rule 108 (altexp -> empty .)
    CTEINT          reduce using rule 108 (altexp -> empty .)
    ID              reduce using rule 108 (altexp -> empty .)
    CLOSECURLY      reduce using rule 108 (altexp -> empty .)
    VAR             reduce using rule 108 (altexp -> empty .)
    IF              reduce using rule 108 (altexp -> empty .)
    OUTPUT          reduce using rule 108 (altexp -> empty .)
    INPUT           reduce using rule 108 (altexp -> empty .)
    RETURN          reduce using rule 108 (altexp -> empty .)
    WHILE           reduce using rule 108 (altexp -> empty .)


state 154

    (110) termino -> factor alttermino .

    SUM             reduce using rule 110 (termino -> factor alttermino .)
    SUBTRACT        reduce using rule 110 (termino -> factor alttermino .)
    SAMEAS          reduce using rule 110 (termino -> factor alttermino .)
    BIGGERTHAN      reduce using rule 110 (termino -> factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 110 (termino -> factor alttermino .)
    SMALLTHAN       reduce using rule 110 (termino -> factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 110 (termino -> factor alttermino .)
    DIFFERENTTHAN   reduce using rule 110 (termino -> factor alttermino .)
    AND             reduce using rule 110 (termino -> factor alttermino .)
    OR              reduce using rule 110 (termino -> factor alttermino .)
    SEMICOLON       reduce using rule 110 (termino -> factor alttermino .)
    COMMA           reduce using rule 110 (termino -> factor alttermino .)
    CLOSEPAREN      reduce using rule 110 (termino -> factor alttermino .)
    OPENPAREN       reduce using rule 110 (termino -> factor alttermino .)
    TRUE            reduce using rule 110 (termino -> factor alttermino .)
    FALSE           reduce using rule 110 (termino -> factor alttermino .)
    CTEFLOAT        reduce using rule 110 (termino -> factor alttermino .)
    CTESTRING       reduce using rule 110 (termino -> factor alttermino .)
    CTEINT          reduce using rule 110 (termino -> factor alttermino .)
    ID              reduce using rule 110 (termino -> factor alttermino .)
    CLOSECURLY      reduce using rule 110 (termino -> factor alttermino .)
    VAR             reduce using rule 110 (termino -> factor alttermino .)
    IF              reduce using rule 110 (termino -> factor alttermino .)
    OUTPUT          reduce using rule 110 (termino -> factor alttermino .)
    INPUT           reduce using rule 110 (termino -> factor alttermino .)
    RETURN          reduce using rule 110 (termino -> factor alttermino .)
    WHILE           reduce using rule 110 (termino -> factor alttermino .)


state 155

    (111) alttermino -> TIMES . factor alttermino
    (120) factor -> . OPENPAREN expresion CLOSEPAREN
    (121) factor -> . SUM varcall
    (122) factor -> . SUBTRACT varcall
    (123) factor -> . varcall
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 107
    SUM             shift and go to state 108
    SUBTRACT        shift and go to state 110
    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120

    factor                         shift and go to state 192
    varcall                        shift and go to state 109
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119

state 156

    (112) alttermino -> DIV . factor alttermino
    (120) factor -> . OPENPAREN expresion CLOSEPAREN
    (121) factor -> . SUM varcall
    (122) factor -> . SUBTRACT varcall
    (123) factor -> . varcall
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 107
    SUM             shift and go to state 108
    SUBTRACT        shift and go to state 110
    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120

    factor                         shift and go to state 193
    varcall                        shift and go to state 109
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119

state 157

    (113) alttermino -> empty .

    SUM             reduce using rule 113 (alttermino -> empty .)
    SUBTRACT        reduce using rule 113 (alttermino -> empty .)
    SAMEAS          reduce using rule 113 (alttermino -> empty .)
    BIGGERTHAN      reduce using rule 113 (alttermino -> empty .)
    BIGGEREQUALSTHAN reduce using rule 113 (alttermino -> empty .)
    SMALLTHAN       reduce using rule 113 (alttermino -> empty .)
    SMALLEQUALSTHAN reduce using rule 113 (alttermino -> empty .)
    DIFFERENTTHAN   reduce using rule 113 (alttermino -> empty .)
    AND             reduce using rule 113 (alttermino -> empty .)
    OR              reduce using rule 113 (alttermino -> empty .)
    SEMICOLON       reduce using rule 113 (alttermino -> empty .)
    COMMA           reduce using rule 113 (alttermino -> empty .)
    CLOSEPAREN      reduce using rule 113 (alttermino -> empty .)
    OPENPAREN       reduce using rule 113 (alttermino -> empty .)
    TRUE            reduce using rule 113 (alttermino -> empty .)
    FALSE           reduce using rule 113 (alttermino -> empty .)
    CTEFLOAT        reduce using rule 113 (alttermino -> empty .)
    CTESTRING       reduce using rule 113 (alttermino -> empty .)
    CTEINT          reduce using rule 113 (alttermino -> empty .)
    ID              reduce using rule 113 (alttermino -> empty .)
    CLOSECURLY      reduce using rule 113 (alttermino -> empty .)
    VAR             reduce using rule 113 (alttermino -> empty .)
    IF              reduce using rule 113 (alttermino -> empty .)
    OUTPUT          reduce using rule 113 (alttermino -> empty .)
    INPUT           reduce using rule 113 (alttermino -> empty .)
    RETURN          reduce using rule 113 (alttermino -> empty .)
    WHILE           reduce using rule 113 (alttermino -> empty .)


state 158

    (120) factor -> OPENPAREN expresion . CLOSEPAREN

    CLOSEPAREN      shift and go to state 194


state 159

    (121) factor -> SUM varcall .

    TIMES           reduce using rule 121 (factor -> SUM varcall .)
    DIV             reduce using rule 121 (factor -> SUM varcall .)
    SUM             reduce using rule 121 (factor -> SUM varcall .)
    SUBTRACT        reduce using rule 121 (factor -> SUM varcall .)
    SAMEAS          reduce using rule 121 (factor -> SUM varcall .)
    BIGGERTHAN      reduce using rule 121 (factor -> SUM varcall .)
    BIGGEREQUALSTHAN reduce using rule 121 (factor -> SUM varcall .)
    SMALLTHAN       reduce using rule 121 (factor -> SUM varcall .)
    SMALLEQUALSTHAN reduce using rule 121 (factor -> SUM varcall .)
    DIFFERENTTHAN   reduce using rule 121 (factor -> SUM varcall .)
    AND             reduce using rule 121 (factor -> SUM varcall .)
    OR              reduce using rule 121 (factor -> SUM varcall .)
    SEMICOLON       reduce using rule 121 (factor -> SUM varcall .)
    COMMA           reduce using rule 121 (factor -> SUM varcall .)
    CLOSEPAREN      reduce using rule 121 (factor -> SUM varcall .)
    OPENPAREN       reduce using rule 121 (factor -> SUM varcall .)
    TRUE            reduce using rule 121 (factor -> SUM varcall .)
    FALSE           reduce using rule 121 (factor -> SUM varcall .)
    CTEFLOAT        reduce using rule 121 (factor -> SUM varcall .)
    CTESTRING       reduce using rule 121 (factor -> SUM varcall .)
    CTEINT          reduce using rule 121 (factor -> SUM varcall .)
    ID              reduce using rule 121 (factor -> SUM varcall .)
    CLOSECURLY      reduce using rule 121 (factor -> SUM varcall .)
    VAR             reduce using rule 121 (factor -> SUM varcall .)
    IF              reduce using rule 121 (factor -> SUM varcall .)
    OUTPUT          reduce using rule 121 (factor -> SUM varcall .)
    INPUT           reduce using rule 121 (factor -> SUM varcall .)
    RETURN          reduce using rule 121 (factor -> SUM varcall .)
    WHILE           reduce using rule 121 (factor -> SUM varcall .)


state 160

    (122) factor -> SUBTRACT varcall .

    TIMES           reduce using rule 122 (factor -> SUBTRACT varcall .)
    DIV             reduce using rule 122 (factor -> SUBTRACT varcall .)
    SUM             reduce using rule 122 (factor -> SUBTRACT varcall .)
    SUBTRACT        reduce using rule 122 (factor -> SUBTRACT varcall .)
    SAMEAS          reduce using rule 122 (factor -> SUBTRACT varcall .)
    BIGGERTHAN      reduce using rule 122 (factor -> SUBTRACT varcall .)
    BIGGEREQUALSTHAN reduce using rule 122 (factor -> SUBTRACT varcall .)
    SMALLTHAN       reduce using rule 122 (factor -> SUBTRACT varcall .)
    SMALLEQUALSTHAN reduce using rule 122 (factor -> SUBTRACT varcall .)
    DIFFERENTTHAN   reduce using rule 122 (factor -> SUBTRACT varcall .)
    AND             reduce using rule 122 (factor -> SUBTRACT varcall .)
    OR              reduce using rule 122 (factor -> SUBTRACT varcall .)
    SEMICOLON       reduce using rule 122 (factor -> SUBTRACT varcall .)
    COMMA           reduce using rule 122 (factor -> SUBTRACT varcall .)
    CLOSEPAREN      reduce using rule 122 (factor -> SUBTRACT varcall .)
    OPENPAREN       reduce using rule 122 (factor -> SUBTRACT varcall .)
    TRUE            reduce using rule 122 (factor -> SUBTRACT varcall .)
    FALSE           reduce using rule 122 (factor -> SUBTRACT varcall .)
    CTEFLOAT        reduce using rule 122 (factor -> SUBTRACT varcall .)
    CTESTRING       reduce using rule 122 (factor -> SUBTRACT varcall .)
    CTEINT          reduce using rule 122 (factor -> SUBTRACT varcall .)
    ID              reduce using rule 122 (factor -> SUBTRACT varcall .)
    CLOSECURLY      reduce using rule 122 (factor -> SUBTRACT varcall .)
    VAR             reduce using rule 122 (factor -> SUBTRACT varcall .)
    IF              reduce using rule 122 (factor -> SUBTRACT varcall .)
    OUTPUT          reduce using rule 122 (factor -> SUBTRACT varcall .)
    INPUT           reduce using rule 122 (factor -> SUBTRACT varcall .)
    RETURN          reduce using rule 122 (factor -> SUBTRACT varcall .)
    WHILE           reduce using rule 122 (factor -> SUBTRACT varcall .)


state 161

    (88) varcomp1 -> ID varcomp2 .

    TIMES           reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    DIV             reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    SUM             reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    SUBTRACT        reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    SAMEAS          reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    BIGGERTHAN      reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    BIGGEREQUALSTHAN reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    SMALLTHAN       reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    SMALLEQUALSTHAN reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    DIFFERENTTHAN   reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    AND             reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    OR              reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    SEMICOLON       reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    COMMA           reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    CLOSEPAREN      reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    OPENPAREN       reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    TRUE            reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    FALSE           reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    CTEFLOAT        reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    CTESTRING       reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    CTEINT          reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    ID              reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    CLOSECURLY      reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    VAR             reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    IF              reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    OUTPUT          reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    INPUT           reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    RETURN          reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    WHILE           reduce using rule 88 (varcomp1 -> ID varcomp2 .)


state 162

    (55) callfunc -> ID OPENPAREN . altcall CLOSEPAREN
    (56) altcall -> . expresion alt2call
    (57) altcall -> . empty
    (74) altcall -> . COMMA expresion altcall
    (75) altcall -> . CLOSEPAREN SEMICOLON
    (93) expresion -> . exp altexpresion
    (132) empty -> .
    (104) exp -> . termino
    (105) exp -> . termino altexp
    (109) termino -> . factor
    (110) termino -> . factor alttermino
    (120) factor -> . OPENPAREN expresion CLOSEPAREN
    (121) factor -> . SUM varcall
    (122) factor -> . SUBTRACT varcall
    (123) factor -> . varcall
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
    COMMA           shift and go to state 180
    CLOSEPAREN      shift and go to state 181
    OPENPAREN       shift and go to state 107
    SUM             shift and go to state 108
    SUBTRACT        shift and go to state 110
    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120

  ! CLOSEPAREN      [ reduce using rule 132 (empty -> .) ]

    altcall                        shift and go to state 195
    expresion                      shift and go to state 177
    empty                          shift and go to state 179
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    varcall                        shift and go to state 109
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119

state 163

    (89) varcomp2 -> DOT . varcomp3
    (91) varcomp3 -> . varcomp1
    (92) varcomp3 -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    ID              shift and go to state 120

    varcomp3                       shift and go to state 196
    varcomp1                       shift and go to state 197
    callfunc                       shift and go to state 198

state 164

    (90) varcomp2 -> empty .

    TIMES           reduce using rule 90 (varcomp2 -> empty .)
    DIV             reduce using rule 90 (varcomp2 -> empty .)
    SUM             reduce using rule 90 (varcomp2 -> empty .)
    SUBTRACT        reduce using rule 90 (varcomp2 -> empty .)
    SAMEAS          reduce using rule 90 (varcomp2 -> empty .)
    BIGGERTHAN      reduce using rule 90 (varcomp2 -> empty .)
    BIGGEREQUALSTHAN reduce using rule 90 (varcomp2 -> empty .)
    SMALLTHAN       reduce using rule 90 (varcomp2 -> empty .)
    SMALLEQUALSTHAN reduce using rule 90 (varcomp2 -> empty .)
    DIFFERENTTHAN   reduce using rule 90 (varcomp2 -> empty .)
    AND             reduce using rule 90 (varcomp2 -> empty .)
    OR              reduce using rule 90 (varcomp2 -> empty .)
    SEMICOLON       reduce using rule 90 (varcomp2 -> empty .)
    COMMA           reduce using rule 90 (varcomp2 -> empty .)
    CLOSEPAREN      reduce using rule 90 (varcomp2 -> empty .)
    OPENPAREN       reduce using rule 90 (varcomp2 -> empty .)
    TRUE            reduce using rule 90 (varcomp2 -> empty .)
    FALSE           reduce using rule 90 (varcomp2 -> empty .)
    CTEFLOAT        reduce using rule 90 (varcomp2 -> empty .)
    CTESTRING       reduce using rule 90 (varcomp2 -> empty .)
    CTEINT          reduce using rule 90 (varcomp2 -> empty .)
    ID              reduce using rule 90 (varcomp2 -> empty .)
    CLOSECURLY      reduce using rule 90 (varcomp2 -> empty .)
    VAR             reduce using rule 90 (varcomp2 -> empty .)
    IF              reduce using rule 90 (varcomp2 -> empty .)
    OUTPUT          reduce using rule 90 (varcomp2 -> empty .)
    INPUT           reduce using rule 90 (varcomp2 -> empty .)
    RETURN          reduce using rule 90 (varcomp2 -> empty .)
    WHILE           reduce using rule 90 (varcomp2 -> empty .)


state 165

    (76) while -> WHILE OPENPAREN expresion . CLOSEPAREN OPENCURLY altwhile

    CLOSEPAREN      shift and go to state 199


state 166

    (18) alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .

    CLASS           reduce using rule 18 (alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .)
    VAR             reduce using rule 18 (alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .)
    FUNC            reduce using rule 18 (alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .)
    MAIN            reduce using rule 18 (alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .)


state 167

    (21) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst . CLOSEPAREN OPENCURLY alt2const

    CLOSEPAREN      shift and go to state 200


state 168

    (22) altconst -> params . altconst
    (22) altconst -> . params altconst
    (23) altconst -> . empty
    (51) params -> . ID TWODOTS type save_params altparams
    (132) empty -> .

    ID              shift and go to state 42
    CLOSEPAREN      reduce using rule 132 (empty -> .)

    params                         shift and go to state 168
    altconst                       shift and go to state 201
    empty                          shift and go to state 169

state 169

    (23) altconst -> empty .

    CLOSEPAREN      reduce using rule 23 (altconst -> empty .)


state 170

    (36) listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET . listidsaltp
    (38) listidsaltp -> . COMMA listids
    (39) listidsaltp -> . empty
    (132) empty -> .

    COMMA           shift and go to state 203
    TWODOTS         reduce using rule 132 (empty -> .)

    listidsaltp                    shift and go to state 202
    empty                          shift and go to state 204

state 171

    (52) altparams -> COMMA ID . TWODOTS type save_params altparams

    TWODOTS         shift and go to state 205


state 172

    (41) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func .

    CLASS           reduce using rule 41 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func .)
    VAR             reduce using rule 41 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func .)
    FUNC            reduce using rule 41 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func .)
    MAIN            reduce using rule 41 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func .)
    CONSTRUCTOR     reduce using rule 41 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function OPENCURLY alt3func .)


state 173

    (46) alt3func -> var . alt3func
    (46) alt3func -> . var alt3func
    (47) alt3func -> . estatuto alt3func
    (48) alt3func -> . CLOSECURLY remove_function_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (65) estatuto -> . assign
    (66) estatuto -> . condition
    (67) estatuto -> . write
    (68) estatuto -> . read
    (69) estatuto -> . return
    (70) estatuto -> . voidcall
    (71) estatuto -> . while
    (128) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (125) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (115) write -> . OUTPUT OPENPAREN varcall altwrite
    (116) write -> . OUTPUT OPENPAREN expresion altwrite
    (114) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (131) return -> . RETURN expresion SEMICOLON
    (72) voidcall -> . ID OPENPAREN CLOSEPAREN
    (73) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 175
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    var                            shift and go to state 173
    alt3func                       shift and go to state 206
    estatuto                       shift and go to state 174
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 174

    (47) alt3func -> estatuto . alt3func
    (46) alt3func -> . var alt3func
    (47) alt3func -> . estatuto alt3func
    (48) alt3func -> . CLOSECURLY remove_function_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (65) estatuto -> . assign
    (66) estatuto -> . condition
    (67) estatuto -> . write
    (68) estatuto -> . read
    (69) estatuto -> . return
    (70) estatuto -> . voidcall
    (71) estatuto -> . while
    (128) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (125) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (115) write -> . OUTPUT OPENPAREN varcall altwrite
    (116) write -> . OUTPUT OPENPAREN expresion altwrite
    (114) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (131) return -> . RETURN expresion SEMICOLON
    (72) voidcall -> . ID OPENPAREN CLOSEPAREN
    (73) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 175
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 174
    alt3func                       shift and go to state 207
    var                            shift and go to state 173
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 175

    (48) alt3func -> CLOSECURLY . remove_function_scope
    (50) remove_function_scope -> .

    CLASS           reduce using rule 50 (remove_function_scope -> .)
    VAR             reduce using rule 50 (remove_function_scope -> .)
    FUNC            reduce using rule 50 (remove_function_scope -> .)
    MAIN            reduce using rule 50 (remove_function_scope -> .)
    CONSTRUCTOR     reduce using rule 50 (remove_function_scope -> .)

    remove_function_scope          shift and go to state 208

state 176

    (128) assign -> ID assign1 EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 209


state 177

    (56) altcall -> expresion . alt2call
    (58) alt2call -> . COMMA altcall
    (59) alt2call -> . empty
    (132) empty -> .

    COMMA           shift and go to state 211
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)

    alt2call                       shift and go to state 210
    empty                          shift and go to state 212

state 178

    (73) voidcall -> ID OPENPAREN expresion altcall .

    CLOSECURLY      reduce using rule 73 (voidcall -> ID OPENPAREN expresion altcall .)
    VAR             reduce using rule 73 (voidcall -> ID OPENPAREN expresion altcall .)
    ID              reduce using rule 73 (voidcall -> ID OPENPAREN expresion altcall .)
    IF              reduce using rule 73 (voidcall -> ID OPENPAREN expresion altcall .)
    OUTPUT          reduce using rule 73 (voidcall -> ID OPENPAREN expresion altcall .)
    INPUT           reduce using rule 73 (voidcall -> ID OPENPAREN expresion altcall .)
    RETURN          reduce using rule 73 (voidcall -> ID OPENPAREN expresion altcall .)
    WHILE           reduce using rule 73 (voidcall -> ID OPENPAREN expresion altcall .)


state 179

    (57) altcall -> empty .

    CLOSECURLY      reduce using rule 57 (altcall -> empty .)
    VAR             reduce using rule 57 (altcall -> empty .)
    ID              reduce using rule 57 (altcall -> empty .)
    IF              reduce using rule 57 (altcall -> empty .)
    OUTPUT          reduce using rule 57 (altcall -> empty .)
    INPUT           reduce using rule 57 (altcall -> empty .)
    RETURN          reduce using rule 57 (altcall -> empty .)
    WHILE           reduce using rule 57 (altcall -> empty .)
    CLOSEPAREN      reduce using rule 57 (altcall -> empty .)


state 180

    (74) altcall -> COMMA . expresion altcall
    (93) expresion -> . exp altexpresion
    (104) exp -> . termino
    (105) exp -> . termino altexp
    (109) termino -> . factor
    (110) termino -> . factor alttermino
    (120) factor -> . OPENPAREN expresion CLOSEPAREN
    (121) factor -> . SUM varcall
    (122) factor -> . SUBTRACT varcall
    (123) factor -> . varcall
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 107
    SUM             shift and go to state 108
    SUBTRACT        shift and go to state 110
    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120

    expresion                      shift and go to state 213
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    varcall                        shift and go to state 109
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119

state 181

    (75) altcall -> CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 214


state 182

    (129) assign1 -> DOT ID assign1 .

    EQUALS          reduce using rule 129 (assign1 -> DOT ID assign1 .)


state 183

    (124) condition -> IF OPENPAREN expresion CLOSEPAREN . OPENCURLY altcondition
    (125) condition -> IF OPENPAREN expresion CLOSEPAREN . OPENCURLY altcondition ELSE OPENCURLY altcondition

    OPENCURLY       shift and go to state 215


state 184

    (115) write -> OUTPUT OPENPAREN varcall altwrite .

    CLOSECURLY      reduce using rule 115 (write -> OUTPUT OPENPAREN varcall altwrite .)
    VAR             reduce using rule 115 (write -> OUTPUT OPENPAREN varcall altwrite .)
    ID              reduce using rule 115 (write -> OUTPUT OPENPAREN varcall altwrite .)
    IF              reduce using rule 115 (write -> OUTPUT OPENPAREN varcall altwrite .)
    OUTPUT          reduce using rule 115 (write -> OUTPUT OPENPAREN varcall altwrite .)
    INPUT           reduce using rule 115 (write -> OUTPUT OPENPAREN varcall altwrite .)
    RETURN          reduce using rule 115 (write -> OUTPUT OPENPAREN varcall altwrite .)
    WHILE           reduce using rule 115 (write -> OUTPUT OPENPAREN varcall altwrite .)


state 185

    (117) altwrite -> COMMA . varcall altwrite
    (118) altwrite -> COMMA . expresion altwrite
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (93) expresion -> . exp altexpresion
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (104) exp -> . termino
    (105) exp -> . termino altexp
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN
    (109) termino -> . factor
    (110) termino -> . factor alttermino
    (120) factor -> . OPENPAREN expresion CLOSEPAREN
    (121) factor -> . SUM varcall
    (122) factor -> . SUBTRACT varcall
    (123) factor -> . varcall

    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120
    OPENPAREN       shift and go to state 107
    SUM             shift and go to state 108
    SUBTRACT        shift and go to state 110

    varcall                        shift and go to state 216
    expresion                      shift and go to state 217
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    exp                            shift and go to state 104
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119
    termino                        shift and go to state 105
    factor                         shift and go to state 106

state 186

    (119) altwrite -> CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 218


state 187

    (116) write -> OUTPUT OPENPAREN expresion altwrite .

    CLOSECURLY      reduce using rule 116 (write -> OUTPUT OPENPAREN expresion altwrite .)
    VAR             reduce using rule 116 (write -> OUTPUT OPENPAREN expresion altwrite .)
    ID              reduce using rule 116 (write -> OUTPUT OPENPAREN expresion altwrite .)
    IF              reduce using rule 116 (write -> OUTPUT OPENPAREN expresion altwrite .)
    OUTPUT          reduce using rule 116 (write -> OUTPUT OPENPAREN expresion altwrite .)
    INPUT           reduce using rule 116 (write -> OUTPUT OPENPAREN expresion altwrite .)
    RETURN          reduce using rule 116 (write -> OUTPUT OPENPAREN expresion altwrite .)
    WHILE           reduce using rule 116 (write -> OUTPUT OPENPAREN expresion altwrite .)


state 188

    (114) read -> INPUT OPENPAREN ID CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 219


state 189

    (94) altexpresion -> altexpresion2 exp .

    SEMICOLON       reduce using rule 94 (altexpresion -> altexpresion2 exp .)
    COMMA           reduce using rule 94 (altexpresion -> altexpresion2 exp .)
    CLOSEPAREN      reduce using rule 94 (altexpresion -> altexpresion2 exp .)
    OPENPAREN       reduce using rule 94 (altexpresion -> altexpresion2 exp .)
    SUM             reduce using rule 94 (altexpresion -> altexpresion2 exp .)
    SUBTRACT        reduce using rule 94 (altexpresion -> altexpresion2 exp .)
    TRUE            reduce using rule 94 (altexpresion -> altexpresion2 exp .)
    FALSE           reduce using rule 94 (altexpresion -> altexpresion2 exp .)
    CTEFLOAT        reduce using rule 94 (altexpresion -> altexpresion2 exp .)
    CTESTRING       reduce using rule 94 (altexpresion -> altexpresion2 exp .)
    CTEINT          reduce using rule 94 (altexpresion -> altexpresion2 exp .)
    ID              reduce using rule 94 (altexpresion -> altexpresion2 exp .)
    CLOSECURLY      reduce using rule 94 (altexpresion -> altexpresion2 exp .)
    VAR             reduce using rule 94 (altexpresion -> altexpresion2 exp .)
    IF              reduce using rule 94 (altexpresion -> altexpresion2 exp .)
    OUTPUT          reduce using rule 94 (altexpresion -> altexpresion2 exp .)
    INPUT           reduce using rule 94 (altexpresion -> altexpresion2 exp .)
    RETURN          reduce using rule 94 (altexpresion -> altexpresion2 exp .)
    WHILE           reduce using rule 94 (altexpresion -> altexpresion2 exp .)


state 190

    (106) altexp -> SUM termino . altexp
    (106) altexp -> . SUM termino altexp
    (107) altexp -> . SUBTRACT termino altexp
    (108) altexp -> . empty
    (132) empty -> .

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
    SUM             shift and go to state 151
    SUBTRACT        shift and go to state 152
    SAMEAS          reduce using rule 132 (empty -> .)
    BIGGERTHAN      reduce using rule 132 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 132 (empty -> .)
    SMALLTHAN       reduce using rule 132 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 132 (empty -> .)
    DIFFERENTTHAN   reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    OPENPAREN       reduce using rule 132 (empty -> .)
    TRUE            reduce using rule 132 (empty -> .)
    FALSE           reduce using rule 132 (empty -> .)
    CTEFLOAT        reduce using rule 132 (empty -> .)
    CTESTRING       reduce using rule 132 (empty -> .)
    CTEINT          reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)

  ! SUM             [ reduce using rule 132 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 132 (empty -> .) ]

    altexp                         shift and go to state 220
    empty                          shift and go to state 153

state 191

    (107) altexp -> SUBTRACT termino . altexp
    (106) altexp -> . SUM termino altexp
    (107) altexp -> . SUBTRACT termino altexp
    (108) altexp -> . empty
    (132) empty -> .

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
    SUM             shift and go to state 151
    SUBTRACT        shift and go to state 152
    SAMEAS          reduce using rule 132 (empty -> .)
    BIGGERTHAN      reduce using rule 132 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 132 (empty -> .)
    SMALLTHAN       reduce using rule 132 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 132 (empty -> .)
    DIFFERENTTHAN   reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    OPENPAREN       reduce using rule 132 (empty -> .)
    TRUE            reduce using rule 132 (empty -> .)
    FALSE           reduce using rule 132 (empty -> .)
    CTEFLOAT        reduce using rule 132 (empty -> .)
    CTESTRING       reduce using rule 132 (empty -> .)
    CTEINT          reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)

  ! SUM             [ reduce using rule 132 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 132 (empty -> .) ]

    altexp                         shift and go to state 221
    empty                          shift and go to state 153

state 192

    (111) alttermino -> TIMES factor . alttermino
    (111) alttermino -> . TIMES factor alttermino
    (112) alttermino -> . DIV factor alttermino
    (113) alttermino -> . empty
    (132) empty -> .

    TIMES           shift and go to state 155
    DIV             shift and go to state 156
    SUM             reduce using rule 132 (empty -> .)
    SUBTRACT        reduce using rule 132 (empty -> .)
    SAMEAS          reduce using rule 132 (empty -> .)
    BIGGERTHAN      reduce using rule 132 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 132 (empty -> .)
    SMALLTHAN       reduce using rule 132 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 132 (empty -> .)
    DIFFERENTTHAN   reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    OPENPAREN       reduce using rule 132 (empty -> .)
    TRUE            reduce using rule 132 (empty -> .)
    FALSE           reduce using rule 132 (empty -> .)
    CTEFLOAT        reduce using rule 132 (empty -> .)
    CTESTRING       reduce using rule 132 (empty -> .)
    CTEINT          reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)

    alttermino                     shift and go to state 222
    empty                          shift and go to state 157

state 193

    (112) alttermino -> DIV factor . alttermino
    (111) alttermino -> . TIMES factor alttermino
    (112) alttermino -> . DIV factor alttermino
    (113) alttermino -> . empty
    (132) empty -> .

    TIMES           shift and go to state 155
    DIV             shift and go to state 156
    SUM             reduce using rule 132 (empty -> .)
    SUBTRACT        reduce using rule 132 (empty -> .)
    SAMEAS          reduce using rule 132 (empty -> .)
    BIGGERTHAN      reduce using rule 132 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 132 (empty -> .)
    SMALLTHAN       reduce using rule 132 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 132 (empty -> .)
    DIFFERENTTHAN   reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    OPENPAREN       reduce using rule 132 (empty -> .)
    TRUE            reduce using rule 132 (empty -> .)
    FALSE           reduce using rule 132 (empty -> .)
    CTEFLOAT        reduce using rule 132 (empty -> .)
    CTESTRING       reduce using rule 132 (empty -> .)
    CTEINT          reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)

    alttermino                     shift and go to state 223
    empty                          shift and go to state 157

state 194

    (120) factor -> OPENPAREN expresion CLOSEPAREN .

    TIMES           reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    DIV             reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SUM             reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SUBTRACT        reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SAMEAS          reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    BIGGERTHAN      reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    BIGGEREQUALSTHAN reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SMALLTHAN       reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SMALLEQUALSTHAN reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    DIFFERENTTHAN   reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    AND             reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    OR              reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    SEMICOLON       reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    COMMA           reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    OPENPAREN       reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    TRUE            reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    FALSE           reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CTEFLOAT        reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CTESTRING       reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CTEINT          reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    ID              reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    CLOSECURLY      reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    VAR             reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    IF              reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    OUTPUT          reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    INPUT           reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    RETURN          reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)
    WHILE           reduce using rule 120 (factor -> OPENPAREN expresion CLOSEPAREN .)


state 195

    (55) callfunc -> ID OPENPAREN altcall . CLOSEPAREN

    CLOSEPAREN      shift and go to state 224


state 196

    (89) varcomp2 -> DOT varcomp3 .

    TIMES           reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    DIV             reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    SUM             reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    SUBTRACT        reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    SAMEAS          reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    BIGGERTHAN      reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    BIGGEREQUALSTHAN reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    SMALLTHAN       reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    SMALLEQUALSTHAN reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    DIFFERENTTHAN   reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    AND             reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    OR              reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    SEMICOLON       reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    COMMA           reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    CLOSEPAREN      reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    OPENPAREN       reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    TRUE            reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    FALSE           reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    CTEFLOAT        reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    CTESTRING       reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    CTEINT          reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    ID              reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    CLOSECURLY      reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    VAR             reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    IF              reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    OUTPUT          reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    INPUT           reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    RETURN          reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    WHILE           reduce using rule 89 (varcomp2 -> DOT varcomp3 .)


state 197

    (91) varcomp3 -> varcomp1 .

    TIMES           reduce using rule 91 (varcomp3 -> varcomp1 .)
    DIV             reduce using rule 91 (varcomp3 -> varcomp1 .)
    SUM             reduce using rule 91 (varcomp3 -> varcomp1 .)
    SUBTRACT        reduce using rule 91 (varcomp3 -> varcomp1 .)
    SAMEAS          reduce using rule 91 (varcomp3 -> varcomp1 .)
    BIGGERTHAN      reduce using rule 91 (varcomp3 -> varcomp1 .)
    BIGGEREQUALSTHAN reduce using rule 91 (varcomp3 -> varcomp1 .)
    SMALLTHAN       reduce using rule 91 (varcomp3 -> varcomp1 .)
    SMALLEQUALSTHAN reduce using rule 91 (varcomp3 -> varcomp1 .)
    DIFFERENTTHAN   reduce using rule 91 (varcomp3 -> varcomp1 .)
    AND             reduce using rule 91 (varcomp3 -> varcomp1 .)
    OR              reduce using rule 91 (varcomp3 -> varcomp1 .)
    SEMICOLON       reduce using rule 91 (varcomp3 -> varcomp1 .)
    COMMA           reduce using rule 91 (varcomp3 -> varcomp1 .)
    CLOSEPAREN      reduce using rule 91 (varcomp3 -> varcomp1 .)
    OPENPAREN       reduce using rule 91 (varcomp3 -> varcomp1 .)
    TRUE            reduce using rule 91 (varcomp3 -> varcomp1 .)
    FALSE           reduce using rule 91 (varcomp3 -> varcomp1 .)
    CTEFLOAT        reduce using rule 91 (varcomp3 -> varcomp1 .)
    CTESTRING       reduce using rule 91 (varcomp3 -> varcomp1 .)
    CTEINT          reduce using rule 91 (varcomp3 -> varcomp1 .)
    ID              reduce using rule 91 (varcomp3 -> varcomp1 .)
    CLOSECURLY      reduce using rule 91 (varcomp3 -> varcomp1 .)
    VAR             reduce using rule 91 (varcomp3 -> varcomp1 .)
    IF              reduce using rule 91 (varcomp3 -> varcomp1 .)
    OUTPUT          reduce using rule 91 (varcomp3 -> varcomp1 .)
    INPUT           reduce using rule 91 (varcomp3 -> varcomp1 .)
    RETURN          reduce using rule 91 (varcomp3 -> varcomp1 .)
    WHILE           reduce using rule 91 (varcomp3 -> varcomp1 .)


state 198

    (92) varcomp3 -> callfunc .

    TIMES           reduce using rule 92 (varcomp3 -> callfunc .)
    DIV             reduce using rule 92 (varcomp3 -> callfunc .)
    SUM             reduce using rule 92 (varcomp3 -> callfunc .)
    SUBTRACT        reduce using rule 92 (varcomp3 -> callfunc .)
    SAMEAS          reduce using rule 92 (varcomp3 -> callfunc .)
    BIGGERTHAN      reduce using rule 92 (varcomp3 -> callfunc .)
    BIGGEREQUALSTHAN reduce using rule 92 (varcomp3 -> callfunc .)
    SMALLTHAN       reduce using rule 92 (varcomp3 -> callfunc .)
    SMALLEQUALSTHAN reduce using rule 92 (varcomp3 -> callfunc .)
    DIFFERENTTHAN   reduce using rule 92 (varcomp3 -> callfunc .)
    AND             reduce using rule 92 (varcomp3 -> callfunc .)
    OR              reduce using rule 92 (varcomp3 -> callfunc .)
    SEMICOLON       reduce using rule 92 (varcomp3 -> callfunc .)
    COMMA           reduce using rule 92 (varcomp3 -> callfunc .)
    CLOSEPAREN      reduce using rule 92 (varcomp3 -> callfunc .)
    OPENPAREN       reduce using rule 92 (varcomp3 -> callfunc .)
    TRUE            reduce using rule 92 (varcomp3 -> callfunc .)
    FALSE           reduce using rule 92 (varcomp3 -> callfunc .)
    CTEFLOAT        reduce using rule 92 (varcomp3 -> callfunc .)
    CTESTRING       reduce using rule 92 (varcomp3 -> callfunc .)
    CTEINT          reduce using rule 92 (varcomp3 -> callfunc .)
    ID              reduce using rule 92 (varcomp3 -> callfunc .)
    CLOSECURLY      reduce using rule 92 (varcomp3 -> callfunc .)
    VAR             reduce using rule 92 (varcomp3 -> callfunc .)
    IF              reduce using rule 92 (varcomp3 -> callfunc .)
    OUTPUT          reduce using rule 92 (varcomp3 -> callfunc .)
    INPUT           reduce using rule 92 (varcomp3 -> callfunc .)
    RETURN          reduce using rule 92 (varcomp3 -> callfunc .)
    WHILE           reduce using rule 92 (varcomp3 -> callfunc .)


state 199

    (76) while -> WHILE OPENPAREN expresion CLOSEPAREN . OPENCURLY altwhile

    OPENCURLY       shift and go to state 225


state 200

    (21) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN . OPENCURLY alt2const

    OPENCURLY       shift and go to state 226


state 201

    (22) altconst -> params altconst .

    CLOSEPAREN      reduce using rule 22 (altconst -> params altconst .)


state 202

    (36) listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltp .

    TWODOTS         reduce using rule 36 (listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltp .)


state 203

    (38) listidsaltp -> COMMA . listids
    (31) listids -> . ID save_var_name listidsalty

    ID              shift and go to state 20

    listids                        shift and go to state 227

state 204

    (39) listidsaltp -> empty .

    TWODOTS         reduce using rule 39 (listidsaltp -> empty .)


state 205

    (52) altparams -> COMMA ID TWODOTS . type save_params altparams
    (60) type -> . INT
    (61) type -> . FLOAT
    (62) type -> . STRING
    (63) type -> . ID
    (64) type -> . BOOL

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 36
    BOOL            shift and go to state 37

    type                           shift and go to state 228

state 206

    (46) alt3func -> var alt3func .

    CLASS           reduce using rule 46 (alt3func -> var alt3func .)
    VAR             reduce using rule 46 (alt3func -> var alt3func .)
    FUNC            reduce using rule 46 (alt3func -> var alt3func .)
    MAIN            reduce using rule 46 (alt3func -> var alt3func .)
    CONSTRUCTOR     reduce using rule 46 (alt3func -> var alt3func .)


state 207

    (47) alt3func -> estatuto alt3func .

    CLASS           reduce using rule 47 (alt3func -> estatuto alt3func .)
    VAR             reduce using rule 47 (alt3func -> estatuto alt3func .)
    FUNC            reduce using rule 47 (alt3func -> estatuto alt3func .)
    MAIN            reduce using rule 47 (alt3func -> estatuto alt3func .)
    CONSTRUCTOR     reduce using rule 47 (alt3func -> estatuto alt3func .)


state 208

    (48) alt3func -> CLOSECURLY remove_function_scope .

    CLASS           reduce using rule 48 (alt3func -> CLOSECURLY remove_function_scope .)
    VAR             reduce using rule 48 (alt3func -> CLOSECURLY remove_function_scope .)
    FUNC            reduce using rule 48 (alt3func -> CLOSECURLY remove_function_scope .)
    MAIN            reduce using rule 48 (alt3func -> CLOSECURLY remove_function_scope .)
    CONSTRUCTOR     reduce using rule 48 (alt3func -> CLOSECURLY remove_function_scope .)


state 209

    (128) assign -> ID assign1 EQUALS expresion SEMICOLON .

    CLOSECURLY      reduce using rule 128 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    VAR             reduce using rule 128 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    ID              reduce using rule 128 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    IF              reduce using rule 128 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    OUTPUT          reduce using rule 128 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    INPUT           reduce using rule 128 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 128 (assign -> ID assign1 EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 128 (assign -> ID assign1 EQUALS expresion SEMICOLON .)


state 210

    (56) altcall -> expresion alt2call .

    CLOSECURLY      reduce using rule 56 (altcall -> expresion alt2call .)
    VAR             reduce using rule 56 (altcall -> expresion alt2call .)
    ID              reduce using rule 56 (altcall -> expresion alt2call .)
    IF              reduce using rule 56 (altcall -> expresion alt2call .)
    OUTPUT          reduce using rule 56 (altcall -> expresion alt2call .)
    INPUT           reduce using rule 56 (altcall -> expresion alt2call .)
    RETURN          reduce using rule 56 (altcall -> expresion alt2call .)
    WHILE           reduce using rule 56 (altcall -> expresion alt2call .)
    CLOSEPAREN      reduce using rule 56 (altcall -> expresion alt2call .)


state 211

    (58) alt2call -> COMMA . altcall
    (56) altcall -> . expresion alt2call
    (57) altcall -> . empty
    (74) altcall -> . COMMA expresion altcall
    (75) altcall -> . CLOSEPAREN SEMICOLON
    (93) expresion -> . exp altexpresion
    (132) empty -> .
    (104) exp -> . termino
    (105) exp -> . termino altexp
    (109) termino -> . factor
    (110) termino -> . factor alttermino
    (120) factor -> . OPENPAREN expresion CLOSEPAREN
    (121) factor -> . SUM varcall
    (122) factor -> . SUBTRACT varcall
    (123) factor -> . varcall
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 180
    CLOSEPAREN      shift and go to state 181
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)
    OPENPAREN       shift and go to state 107
    SUM             shift and go to state 108
    SUBTRACT        shift and go to state 110
    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120

  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 132 (empty -> .) ]

    altcall                        shift and go to state 229
    expresion                      shift and go to state 177
    empty                          shift and go to state 179
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    varcall                        shift and go to state 109
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119

state 212

    (59) alt2call -> empty .

    CLOSECURLY      reduce using rule 59 (alt2call -> empty .)
    VAR             reduce using rule 59 (alt2call -> empty .)
    ID              reduce using rule 59 (alt2call -> empty .)
    IF              reduce using rule 59 (alt2call -> empty .)
    OUTPUT          reduce using rule 59 (alt2call -> empty .)
    INPUT           reduce using rule 59 (alt2call -> empty .)
    RETURN          reduce using rule 59 (alt2call -> empty .)
    WHILE           reduce using rule 59 (alt2call -> empty .)
    CLOSEPAREN      reduce using rule 59 (alt2call -> empty .)


state 213

    (74) altcall -> COMMA expresion . altcall
    (56) altcall -> . expresion alt2call
    (57) altcall -> . empty
    (74) altcall -> . COMMA expresion altcall
    (75) altcall -> . CLOSEPAREN SEMICOLON
    (93) expresion -> . exp altexpresion
    (132) empty -> .
    (104) exp -> . termino
    (105) exp -> . termino altexp
    (109) termino -> . factor
    (110) termino -> . factor alttermino
    (120) factor -> . OPENPAREN expresion CLOSEPAREN
    (121) factor -> . SUM varcall
    (122) factor -> . SUBTRACT varcall
    (123) factor -> . varcall
    (79) varcall -> . varcte
    (80) varcall -> . varcomplicated
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (55) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 180
    CLOSEPAREN      shift and go to state 181
    CLOSECURLY      reduce using rule 132 (empty -> .)
    VAR             reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    OUTPUT          reduce using rule 132 (empty -> .)
    INPUT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)
    OPENPAREN       shift and go to state 107
    SUM             shift and go to state 108
    SUBTRACT        shift and go to state 110
    TRUE            shift and go to state 113
    FALSE           shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    CTEINT          shift and go to state 117
    ID              shift and go to state 120

  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 132 (empty -> .) ]

    expresion                      shift and go to state 177
    altcall                        shift and go to state 230
    empty                          shift and go to state 179
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    varcall                        shift and go to state 109
    varcte                         shift and go to state 111
    varcomplicated                 shift and go to state 112
    varcomp1                       shift and go to state 118
    callfunc                       shift and go to state 119

state 214

    (75) altcall -> CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 75 (altcall -> CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 75 (altcall -> CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 75 (altcall -> CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 75 (altcall -> CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 75 (altcall -> CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 75 (altcall -> CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 75 (altcall -> CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 75 (altcall -> CLOSEPAREN SEMICOLON .)
    CLOSEPAREN      reduce using rule 75 (altcall -> CLOSEPAREN SEMICOLON .)


state 215

    (124) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY . altcondition
    (125) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY . altcondition ELSE OPENCURLY altcondition
    (126) altcondition -> . estatuto altcondition
    (127) altcondition -> . CLOSECURLY
    (65) estatuto -> . assign
    (66) estatuto -> . condition
    (67) estatuto -> . write
    (68) estatuto -> . read
    (69) estatuto -> . return
    (70) estatuto -> . voidcall
    (71) estatuto -> . while
    (128) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (125) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (115) write -> . OUTPUT OPENPAREN varcall altwrite
    (116) write -> . OUTPUT OPENPAREN expresion altwrite
    (114) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (131) return -> . RETURN expresion SEMICOLON
    (72) voidcall -> . ID OPENPAREN CLOSEPAREN
    (73) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 233
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    altcondition                   shift and go to state 231
    estatuto                       shift and go to state 232
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 216

    (117) altwrite -> COMMA varcall . altwrite
    (123) factor -> varcall .
    (117) altwrite -> . COMMA varcall altwrite
    (118) altwrite -> . COMMA expresion altwrite
    (119) altwrite -> . CLOSEPAREN SEMICOLON

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for CLOSEPAREN resolved as shift
    TIMES           reduce using rule 123 (factor -> varcall .)
    DIV             reduce using rule 123 (factor -> varcall .)
    SUM             reduce using rule 123 (factor -> varcall .)
    SUBTRACT        reduce using rule 123 (factor -> varcall .)
    SAMEAS          reduce using rule 123 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 123 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 123 (factor -> varcall .)
    SMALLTHAN       reduce using rule 123 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 123 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 123 (factor -> varcall .)
    AND             reduce using rule 123 (factor -> varcall .)
    OR              reduce using rule 123 (factor -> varcall .)
    COMMA           shift and go to state 185
    CLOSEPAREN      shift and go to state 186

  ! COMMA           [ reduce using rule 123 (factor -> varcall .) ]
  ! CLOSEPAREN      [ reduce using rule 123 (factor -> varcall .) ]

    altwrite                       shift and go to state 234

state 217

    (118) altwrite -> COMMA expresion . altwrite
    (117) altwrite -> . COMMA varcall altwrite
    (118) altwrite -> . COMMA expresion altwrite
    (119) altwrite -> . CLOSEPAREN SEMICOLON

    COMMA           shift and go to state 185
    CLOSEPAREN      shift and go to state 186

    altwrite                       shift and go to state 235

state 218

    (119) altwrite -> CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 119 (altwrite -> CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 119 (altwrite -> CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 119 (altwrite -> CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 119 (altwrite -> CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 119 (altwrite -> CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 119 (altwrite -> CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 119 (altwrite -> CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 119 (altwrite -> CLOSEPAREN SEMICOLON .)


state 219

    (114) read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 114 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 114 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 114 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 114 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 114 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 114 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 114 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 114 (read -> INPUT OPENPAREN ID CLOSEPAREN SEMICOLON .)


state 220

    (106) altexp -> SUM termino altexp .

    SAMEAS          reduce using rule 106 (altexp -> SUM termino altexp .)
    BIGGERTHAN      reduce using rule 106 (altexp -> SUM termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 106 (altexp -> SUM termino altexp .)
    SMALLTHAN       reduce using rule 106 (altexp -> SUM termino altexp .)
    SMALLEQUALSTHAN reduce using rule 106 (altexp -> SUM termino altexp .)
    DIFFERENTTHAN   reduce using rule 106 (altexp -> SUM termino altexp .)
    AND             reduce using rule 106 (altexp -> SUM termino altexp .)
    OR              reduce using rule 106 (altexp -> SUM termino altexp .)
    SEMICOLON       reduce using rule 106 (altexp -> SUM termino altexp .)
    COMMA           reduce using rule 106 (altexp -> SUM termino altexp .)
    CLOSEPAREN      reduce using rule 106 (altexp -> SUM termino altexp .)
    OPENPAREN       reduce using rule 106 (altexp -> SUM termino altexp .)
    SUM             reduce using rule 106 (altexp -> SUM termino altexp .)
    SUBTRACT        reduce using rule 106 (altexp -> SUM termino altexp .)
    TRUE            reduce using rule 106 (altexp -> SUM termino altexp .)
    FALSE           reduce using rule 106 (altexp -> SUM termino altexp .)
    CTEFLOAT        reduce using rule 106 (altexp -> SUM termino altexp .)
    CTESTRING       reduce using rule 106 (altexp -> SUM termino altexp .)
    CTEINT          reduce using rule 106 (altexp -> SUM termino altexp .)
    ID              reduce using rule 106 (altexp -> SUM termino altexp .)
    CLOSECURLY      reduce using rule 106 (altexp -> SUM termino altexp .)
    VAR             reduce using rule 106 (altexp -> SUM termino altexp .)
    IF              reduce using rule 106 (altexp -> SUM termino altexp .)
    OUTPUT          reduce using rule 106 (altexp -> SUM termino altexp .)
    INPUT           reduce using rule 106 (altexp -> SUM termino altexp .)
    RETURN          reduce using rule 106 (altexp -> SUM termino altexp .)
    WHILE           reduce using rule 106 (altexp -> SUM termino altexp .)


state 221

    (107) altexp -> SUBTRACT termino altexp .

    SAMEAS          reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    BIGGERTHAN      reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    SMALLTHAN       reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    SMALLEQUALSTHAN reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    DIFFERENTTHAN   reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    AND             reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    OR              reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    SEMICOLON       reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    COMMA           reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    CLOSEPAREN      reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    OPENPAREN       reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    SUM             reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    SUBTRACT        reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    TRUE            reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    FALSE           reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    CTEFLOAT        reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    CTESTRING       reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    CTEINT          reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    ID              reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    CLOSECURLY      reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    VAR             reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    IF              reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    OUTPUT          reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    INPUT           reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    RETURN          reduce using rule 107 (altexp -> SUBTRACT termino altexp .)
    WHILE           reduce using rule 107 (altexp -> SUBTRACT termino altexp .)


state 222

    (111) alttermino -> TIMES factor alttermino .

    SUM             reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    SUBTRACT        reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    SAMEAS          reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    BIGGERTHAN      reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    SMALLTHAN       reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    DIFFERENTTHAN   reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    AND             reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    OR              reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    SEMICOLON       reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    COMMA           reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    CLOSEPAREN      reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    OPENPAREN       reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    TRUE            reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    FALSE           reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    CTEFLOAT        reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    CTESTRING       reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    CTEINT          reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    ID              reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    CLOSECURLY      reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    VAR             reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    IF              reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    OUTPUT          reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    INPUT           reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    RETURN          reduce using rule 111 (alttermino -> TIMES factor alttermino .)
    WHILE           reduce using rule 111 (alttermino -> TIMES factor alttermino .)


state 223

    (112) alttermino -> DIV factor alttermino .

    SUM             reduce using rule 112 (alttermino -> DIV factor alttermino .)
    SUBTRACT        reduce using rule 112 (alttermino -> DIV factor alttermino .)
    SAMEAS          reduce using rule 112 (alttermino -> DIV factor alttermino .)
    BIGGERTHAN      reduce using rule 112 (alttermino -> DIV factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 112 (alttermino -> DIV factor alttermino .)
    SMALLTHAN       reduce using rule 112 (alttermino -> DIV factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 112 (alttermino -> DIV factor alttermino .)
    DIFFERENTTHAN   reduce using rule 112 (alttermino -> DIV factor alttermino .)
    AND             reduce using rule 112 (alttermino -> DIV factor alttermino .)
    OR              reduce using rule 112 (alttermino -> DIV factor alttermino .)
    SEMICOLON       reduce using rule 112 (alttermino -> DIV factor alttermino .)
    COMMA           reduce using rule 112 (alttermino -> DIV factor alttermino .)
    CLOSEPAREN      reduce using rule 112 (alttermino -> DIV factor alttermino .)
    OPENPAREN       reduce using rule 112 (alttermino -> DIV factor alttermino .)
    TRUE            reduce using rule 112 (alttermino -> DIV factor alttermino .)
    FALSE           reduce using rule 112 (alttermino -> DIV factor alttermino .)
    CTEFLOAT        reduce using rule 112 (alttermino -> DIV factor alttermino .)
    CTESTRING       reduce using rule 112 (alttermino -> DIV factor alttermino .)
    CTEINT          reduce using rule 112 (alttermino -> DIV factor alttermino .)
    ID              reduce using rule 112 (alttermino -> DIV factor alttermino .)
    CLOSECURLY      reduce using rule 112 (alttermino -> DIV factor alttermino .)
    VAR             reduce using rule 112 (alttermino -> DIV factor alttermino .)
    IF              reduce using rule 112 (alttermino -> DIV factor alttermino .)
    OUTPUT          reduce using rule 112 (alttermino -> DIV factor alttermino .)
    INPUT           reduce using rule 112 (alttermino -> DIV factor alttermino .)
    RETURN          reduce using rule 112 (alttermino -> DIV factor alttermino .)
    WHILE           reduce using rule 112 (alttermino -> DIV factor alttermino .)


state 224

    (55) callfunc -> ID OPENPAREN altcall CLOSEPAREN .

    TIMES           reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    DIV             reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SUM             reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SUBTRACT        reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SAMEAS          reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    BIGGERTHAN      reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    BIGGEREQUALSTHAN reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SMALLTHAN       reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SMALLEQUALSTHAN reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    DIFFERENTTHAN   reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    AND             reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OR              reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SEMICOLON       reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    COMMA           reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OPENPAREN       reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    TRUE            reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    FALSE           reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTEFLOAT        reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTESTRING       reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTEINT          reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    ID              reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CLOSECURLY      reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    VAR             reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    IF              reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OUTPUT          reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    INPUT           reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    RETURN          reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    WHILE           reduce using rule 55 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)


state 225

    (76) while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY . altwhile
    (77) altwhile -> . estatuto altwhile
    (78) altwhile -> . CLOSECURLY
    (65) estatuto -> . assign
    (66) estatuto -> . condition
    (67) estatuto -> . write
    (68) estatuto -> . read
    (69) estatuto -> . return
    (70) estatuto -> . voidcall
    (71) estatuto -> . while
    (128) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (125) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (115) write -> . OUTPUT OPENPAREN varcall altwrite
    (116) write -> . OUTPUT OPENPAREN expresion altwrite
    (114) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (131) return -> . RETURN expresion SEMICOLON
    (72) voidcall -> . ID OPENPAREN CLOSEPAREN
    (73) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 238
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    altwhile                       shift and go to state 236
    estatuto                       shift and go to state 237
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 226

    (21) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY . alt2const
    (24) alt2const -> . var alt2const
    (25) alt2const -> . estatuto alt2const
    (26) alt2const -> . CLOSECURLY remove_constructor_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (65) estatuto -> . assign
    (66) estatuto -> . condition
    (67) estatuto -> . write
    (68) estatuto -> . read
    (69) estatuto -> . return
    (70) estatuto -> . voidcall
    (71) estatuto -> . while
    (128) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (125) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (115) write -> . OUTPUT OPENPAREN varcall altwrite
    (116) write -> . OUTPUT OPENPAREN expresion altwrite
    (114) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (131) return -> . RETURN expresion SEMICOLON
    (72) voidcall -> . ID OPENPAREN CLOSEPAREN
    (73) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 242
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    alt2const                      shift and go to state 239
    var                            shift and go to state 240
    estatuto                       shift and go to state 241
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 227

    (38) listidsaltp -> COMMA listids .

    TWODOTS         reduce using rule 38 (listidsaltp -> COMMA listids .)


state 228

    (52) altparams -> COMMA ID TWODOTS type . save_params altparams
    (54) save_params -> .

    COMMA           reduce using rule 54 (save_params -> .)
    CLOSEPAREN      reduce using rule 54 (save_params -> .)
    ID              reduce using rule 54 (save_params -> .)

    save_params                    shift and go to state 243

state 229

    (58) alt2call -> COMMA altcall .

    CLOSECURLY      reduce using rule 58 (alt2call -> COMMA altcall .)
    VAR             reduce using rule 58 (alt2call -> COMMA altcall .)
    ID              reduce using rule 58 (alt2call -> COMMA altcall .)
    IF              reduce using rule 58 (alt2call -> COMMA altcall .)
    OUTPUT          reduce using rule 58 (alt2call -> COMMA altcall .)
    INPUT           reduce using rule 58 (alt2call -> COMMA altcall .)
    RETURN          reduce using rule 58 (alt2call -> COMMA altcall .)
    WHILE           reduce using rule 58 (alt2call -> COMMA altcall .)
    CLOSEPAREN      reduce using rule 58 (alt2call -> COMMA altcall .)


state 230

    (74) altcall -> COMMA expresion altcall .

    CLOSECURLY      reduce using rule 74 (altcall -> COMMA expresion altcall .)
    VAR             reduce using rule 74 (altcall -> COMMA expresion altcall .)
    ID              reduce using rule 74 (altcall -> COMMA expresion altcall .)
    IF              reduce using rule 74 (altcall -> COMMA expresion altcall .)
    OUTPUT          reduce using rule 74 (altcall -> COMMA expresion altcall .)
    INPUT           reduce using rule 74 (altcall -> COMMA expresion altcall .)
    RETURN          reduce using rule 74 (altcall -> COMMA expresion altcall .)
    WHILE           reduce using rule 74 (altcall -> COMMA expresion altcall .)
    CLOSEPAREN      reduce using rule 74 (altcall -> COMMA expresion altcall .)


state 231

    (124) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .
    (125) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition . ELSE OPENCURLY altcondition

    CLOSECURLY      reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    VAR             reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    ID              reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    IF              reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    OUTPUT          reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    INPUT           reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    RETURN          reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    WHILE           reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    ELSE            shift and go to state 244


state 232

    (126) altcondition -> estatuto . altcondition
    (126) altcondition -> . estatuto altcondition
    (127) altcondition -> . CLOSECURLY
    (65) estatuto -> . assign
    (66) estatuto -> . condition
    (67) estatuto -> . write
    (68) estatuto -> . read
    (69) estatuto -> . return
    (70) estatuto -> . voidcall
    (71) estatuto -> . while
    (128) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (125) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (115) write -> . OUTPUT OPENPAREN varcall altwrite
    (116) write -> . OUTPUT OPENPAREN expresion altwrite
    (114) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (131) return -> . RETURN expresion SEMICOLON
    (72) voidcall -> . ID OPENPAREN CLOSEPAREN
    (73) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 233
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 232
    altcondition                   shift and go to state 245
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 233

    (127) altcondition -> CLOSECURLY .

    ELSE            reduce using rule 127 (altcondition -> CLOSECURLY .)
    CLOSECURLY      reduce using rule 127 (altcondition -> CLOSECURLY .)
    VAR             reduce using rule 127 (altcondition -> CLOSECURLY .)
    ID              reduce using rule 127 (altcondition -> CLOSECURLY .)
    IF              reduce using rule 127 (altcondition -> CLOSECURLY .)
    OUTPUT          reduce using rule 127 (altcondition -> CLOSECURLY .)
    INPUT           reduce using rule 127 (altcondition -> CLOSECURLY .)
    RETURN          reduce using rule 127 (altcondition -> CLOSECURLY .)
    WHILE           reduce using rule 127 (altcondition -> CLOSECURLY .)


state 234

    (117) altwrite -> COMMA varcall altwrite .

    CLOSECURLY      reduce using rule 117 (altwrite -> COMMA varcall altwrite .)
    VAR             reduce using rule 117 (altwrite -> COMMA varcall altwrite .)
    ID              reduce using rule 117 (altwrite -> COMMA varcall altwrite .)
    IF              reduce using rule 117 (altwrite -> COMMA varcall altwrite .)
    OUTPUT          reduce using rule 117 (altwrite -> COMMA varcall altwrite .)
    INPUT           reduce using rule 117 (altwrite -> COMMA varcall altwrite .)
    RETURN          reduce using rule 117 (altwrite -> COMMA varcall altwrite .)
    WHILE           reduce using rule 117 (altwrite -> COMMA varcall altwrite .)


state 235

    (118) altwrite -> COMMA expresion altwrite .

    CLOSECURLY      reduce using rule 118 (altwrite -> COMMA expresion altwrite .)
    VAR             reduce using rule 118 (altwrite -> COMMA expresion altwrite .)
    ID              reduce using rule 118 (altwrite -> COMMA expresion altwrite .)
    IF              reduce using rule 118 (altwrite -> COMMA expresion altwrite .)
    OUTPUT          reduce using rule 118 (altwrite -> COMMA expresion altwrite .)
    INPUT           reduce using rule 118 (altwrite -> COMMA expresion altwrite .)
    RETURN          reduce using rule 118 (altwrite -> COMMA expresion altwrite .)
    WHILE           reduce using rule 118 (altwrite -> COMMA expresion altwrite .)


state 236

    (76) while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .

    CLOSECURLY      reduce using rule 76 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    VAR             reduce using rule 76 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    ID              reduce using rule 76 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    IF              reduce using rule 76 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    OUTPUT          reduce using rule 76 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    INPUT           reduce using rule 76 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    RETURN          reduce using rule 76 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    WHILE           reduce using rule 76 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)


state 237

    (77) altwhile -> estatuto . altwhile
    (77) altwhile -> . estatuto altwhile
    (78) altwhile -> . CLOSECURLY
    (65) estatuto -> . assign
    (66) estatuto -> . condition
    (67) estatuto -> . write
    (68) estatuto -> . read
    (69) estatuto -> . return
    (70) estatuto -> . voidcall
    (71) estatuto -> . while
    (128) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (125) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (115) write -> . OUTPUT OPENPAREN varcall altwrite
    (116) write -> . OUTPUT OPENPAREN expresion altwrite
    (114) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (131) return -> . RETURN expresion SEMICOLON
    (72) voidcall -> . ID OPENPAREN CLOSEPAREN
    (73) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 238
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 237
    altwhile                       shift and go to state 246
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 238

    (78) altwhile -> CLOSECURLY .

    CLOSECURLY      reduce using rule 78 (altwhile -> CLOSECURLY .)
    VAR             reduce using rule 78 (altwhile -> CLOSECURLY .)
    ID              reduce using rule 78 (altwhile -> CLOSECURLY .)
    IF              reduce using rule 78 (altwhile -> CLOSECURLY .)
    OUTPUT          reduce using rule 78 (altwhile -> CLOSECURLY .)
    INPUT           reduce using rule 78 (altwhile -> CLOSECURLY .)
    RETURN          reduce using rule 78 (altwhile -> CLOSECURLY .)
    WHILE           reduce using rule 78 (altwhile -> CLOSECURLY .)


state 239

    (21) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const .

    CLOSECURLY      reduce using rule 21 (constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst CLOSEPAREN OPENCURLY alt2const .)


state 240

    (24) alt2const -> var . alt2const
    (24) alt2const -> . var alt2const
    (25) alt2const -> . estatuto alt2const
    (26) alt2const -> . CLOSECURLY remove_constructor_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (65) estatuto -> . assign
    (66) estatuto -> . condition
    (67) estatuto -> . write
    (68) estatuto -> . read
    (69) estatuto -> . return
    (70) estatuto -> . voidcall
    (71) estatuto -> . while
    (128) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (125) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (115) write -> . OUTPUT OPENPAREN varcall altwrite
    (116) write -> . OUTPUT OPENPAREN expresion altwrite
    (114) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (131) return -> . RETURN expresion SEMICOLON
    (72) voidcall -> . ID OPENPAREN CLOSEPAREN
    (73) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 242
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    var                            shift and go to state 240
    alt2const                      shift and go to state 247
    estatuto                       shift and go to state 241
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 241

    (25) alt2const -> estatuto . alt2const
    (24) alt2const -> . var alt2const
    (25) alt2const -> . estatuto alt2const
    (26) alt2const -> . CLOSECURLY remove_constructor_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (65) estatuto -> . assign
    (66) estatuto -> . condition
    (67) estatuto -> . write
    (68) estatuto -> . read
    (69) estatuto -> . return
    (70) estatuto -> . voidcall
    (71) estatuto -> . while
    (128) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (125) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (115) write -> . OUTPUT OPENPAREN varcall altwrite
    (116) write -> . OUTPUT OPENPAREN expresion altwrite
    (114) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (131) return -> . RETURN expresion SEMICOLON
    (72) voidcall -> . ID OPENPAREN CLOSEPAREN
    (73) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 242
    VAR             shift and go to state 12
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 241
    alt2const                      shift and go to state 248
    var                            shift and go to state 240
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 242

    (26) alt2const -> CLOSECURLY . remove_constructor_scope
    (28) remove_constructor_scope -> .

    CLOSECURLY      reduce using rule 28 (remove_constructor_scope -> .)

    remove_constructor_scope       shift and go to state 249

state 243

    (52) altparams -> COMMA ID TWODOTS type save_params . altparams
    (52) altparams -> . COMMA ID TWODOTS type save_params altparams
    (53) altparams -> . empty
    (132) empty -> .

    COMMA           shift and go to state 127
    CLOSEPAREN      reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)

    altparams                      shift and go to state 250
    empty                          shift and go to state 128

state 244

    (125) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE . OPENCURLY altcondition

    OPENCURLY       shift and go to state 251


state 245

    (126) altcondition -> estatuto altcondition .

    ELSE            reduce using rule 126 (altcondition -> estatuto altcondition .)
    CLOSECURLY      reduce using rule 126 (altcondition -> estatuto altcondition .)
    VAR             reduce using rule 126 (altcondition -> estatuto altcondition .)
    ID              reduce using rule 126 (altcondition -> estatuto altcondition .)
    IF              reduce using rule 126 (altcondition -> estatuto altcondition .)
    OUTPUT          reduce using rule 126 (altcondition -> estatuto altcondition .)
    INPUT           reduce using rule 126 (altcondition -> estatuto altcondition .)
    RETURN          reduce using rule 126 (altcondition -> estatuto altcondition .)
    WHILE           reduce using rule 126 (altcondition -> estatuto altcondition .)


state 246

    (77) altwhile -> estatuto altwhile .

    CLOSECURLY      reduce using rule 77 (altwhile -> estatuto altwhile .)
    VAR             reduce using rule 77 (altwhile -> estatuto altwhile .)
    ID              reduce using rule 77 (altwhile -> estatuto altwhile .)
    IF              reduce using rule 77 (altwhile -> estatuto altwhile .)
    OUTPUT          reduce using rule 77 (altwhile -> estatuto altwhile .)
    INPUT           reduce using rule 77 (altwhile -> estatuto altwhile .)
    RETURN          reduce using rule 77 (altwhile -> estatuto altwhile .)
    WHILE           reduce using rule 77 (altwhile -> estatuto altwhile .)


state 247

    (24) alt2const -> var alt2const .

    CLOSECURLY      reduce using rule 24 (alt2const -> var alt2const .)


state 248

    (25) alt2const -> estatuto alt2const .

    CLOSECURLY      reduce using rule 25 (alt2const -> estatuto alt2const .)


state 249

    (26) alt2const -> CLOSECURLY remove_constructor_scope .

    CLOSECURLY      reduce using rule 26 (alt2const -> CLOSECURLY remove_constructor_scope .)


state 250

    (52) altparams -> COMMA ID TWODOTS type save_params altparams .

    CLOSEPAREN      reduce using rule 52 (altparams -> COMMA ID TWODOTS type save_params altparams .)
    ID              reduce using rule 52 (altparams -> COMMA ID TWODOTS type save_params altparams .)


state 251

    (125) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY . altcondition
    (126) altcondition -> . estatuto altcondition
    (127) altcondition -> . CLOSECURLY
    (65) estatuto -> . assign
    (66) estatuto -> . condition
    (67) estatuto -> . write
    (68) estatuto -> . read
    (69) estatuto -> . return
    (70) estatuto -> . voidcall
    (71) estatuto -> . while
    (128) assign -> . ID assign1 EQUALS expresion SEMICOLON
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (125) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (115) write -> . OUTPUT OPENPAREN varcall altwrite
    (116) write -> . OUTPUT OPENPAREN expresion altwrite
    (114) read -> . INPUT OPENPAREN ID CLOSEPAREN SEMICOLON
    (131) return -> . RETURN expresion SEMICOLON
    (72) voidcall -> . ID OPENPAREN CLOSEPAREN
    (73) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 233
    ID              shift and go to state 76
    IF              shift and go to state 77
    OUTPUT          shift and go to state 78
    INPUT           shift and go to state 79
    RETURN          shift and go to state 80
    WHILE           shift and go to state 81

    altcondition                   shift and go to state 252
    estatuto                       shift and go to state 232
    assign                         shift and go to state 69
    condition                      shift and go to state 70
    write                          shift and go to state 71
    read                           shift and go to state 72
    return                         shift and go to state 73
    voidcall                       shift and go to state 74
    while                          shift and go to state 75

state 252

    (125) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .

    CLOSECURLY      reduce using rule 125 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    VAR             reduce using rule 125 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    ID              reduce using rule 125 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    IF              reduce using rule 125 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    OUTPUT          reduce using rule 125 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    INPUT           reduce using rule 125 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    RETURN          reduce using rule 125 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    WHILE           reduce using rule 125 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUM in state 105 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 105 resolved as shift
WARNING: shift/reduce conflict for SUM in state 105 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 105 resolved as shift
WARNING: shift/reduce conflict for OPENPAREN in state 120 resolved as shift
WARNING: shift/reduce conflict for ID in state 132 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 135 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 135 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 162 resolved as shift
WARNING: shift/reduce conflict for SUM in state 190 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 190 resolved as shift
WARNING: shift/reduce conflict for SUM in state 191 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 191 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 211 resolved as shift
WARNING: shift/reduce conflict for ID in state 211 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 213 resolved as shift
WARNING: shift/reduce conflict for ID in state 213 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 216 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 216 resolved as shift
WARNING: reduce/reduce conflict in state 105 resolved using rule (exp -> termino)
WARNING: rejected rule (empty -> <empty>) in state 105
WARNING: reduce/reduce conflict in state 106 resolved using rule (termino -> factor)
WARNING: rejected rule (empty -> <empty>) in state 106
