Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID save_program SEMICOLON altprogram
Rule 2     altprogram -> class altprogram
Rule 3     altprogram -> var altprogram
Rule 4     altprogram -> function altprogram
Rule 5     altprogram -> main
Rule 6     save_program -> <empty>
Rule 7     main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain
Rule 8     altmain -> var altmain
Rule 9     altmain -> estatuto altmain
Rule 10    altmain -> CLOSECURLY clear_scope
Rule 11    save_main -> <empty>
Rule 12    clear_scope -> <empty>
Rule 13    class -> CLASS ID altclass save_class OPENCURLY alt2class
Rule 14    altclass -> TWODOTS ID
Rule 15    altclass -> empty
Rule 16    alt2class -> var alt2class
Rule 17    alt2class -> function alt2class
Rule 18    alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope
Rule 19    save_class -> <empty>
Rule 20    remove_class_scope -> <empty>
Rule 21    constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const
Rule 22    altconst -> params
Rule 23    altconst -> empty
Rule 24    alt2const -> var alt2const
Rule 25    alt2const -> estatuto alt2const
Rule 26    alt2const -> CLOSECURLY remove_constructor_scope
Rule 27    save_constructor -> <empty>
Rule 28    remove_constructor_scope -> <empty>
Rule 29    var -> VAR listids TWODOTS type save_vars SEMICOLON
Rule 30    save_vars -> <empty>
Rule 31    listids -> ID save_var_name array listidsalty
Rule 32    listidsalty -> COMMA listids
Rule 33    listidsalty -> empty
Rule 34    array -> OPENBRACKET expresion CLOSEBRACKET empty_pv array2
Rule 35    array -> empty
Rule 36    array2 -> OPENBRACKET expresion CLOSEBRACKET empty_pv
Rule 37    array2 -> empty
Rule 38    save_var_name -> <empty>
Rule 39    function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
Rule 40    altfunc -> params
Rule 41    altfunc -> empty
Rule 42    alt2func -> TWODOTS type
Rule 43    alt2func -> empty
Rule 44    alt3func -> var alt3func
Rule 45    alt3func -> estatuto alt3func
Rule 46    alt3func -> CLOSECURLY remove_function_scope
Rule 47    save_function -> <empty>
Rule 48    store_params -> <empty>
Rule 49    remove_function_scope -> <empty>
Rule 50    params -> ID TWODOTS type save_params altparams
Rule 51    altparams -> COMMA ID TWODOTS type save_params altparams
Rule 52    altparams -> empty
Rule 53    save_params -> <empty>
Rule 54    callfunc -> ID OPENPAREN altcall CLOSEPAREN
Rule 55    altcall -> expresion alt2call
Rule 56    altcall -> empty
Rule 57    alt2call -> COMMA altcall
Rule 58    alt2call -> empty
Rule 59    type -> INT
Rule 60    type -> FLOAT
Rule 61    type -> STRING
Rule 62    type -> ID
Rule 63    type -> BOOL
Rule 64    estatuto -> assign empty_pv
Rule 65    estatuto -> condition empty_pv
Rule 66    estatuto -> write empty_pv
Rule 67    estatuto -> read empty_pv
Rule 68    estatuto -> return empty_pv
Rule 69    estatuto -> voidcall empty_pv
Rule 70    estatuto -> while empty_pv
Rule 71    voidcall -> ID OPENPAREN CLOSEPAREN
Rule 72    voidcall -> ID OPENPAREN expresion altcall
Rule 73    altcall -> COMMA expresion altcall
Rule 74    altcall -> CLOSEPAREN SEMICOLON
Rule 75    empty_pv -> <empty>
Rule 76    while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile
Rule 77    altwhile -> estatuto altwhile
Rule 78    altwhile -> CLOSECURLY
Rule 79    varcall -> varcte save_const
Rule 80    varcall -> varcomplicated save_comp
Rule 81    varcte -> TRUE
Rule 82    varcte -> FALSE
Rule 83    varcte -> CTEFLOAT
Rule 84    varcte -> CTESTRING
Rule 85    varcte -> CTEINT
Rule 86    varcomplicated -> varcomp1
Rule 87    varcomplicated -> callfunc
Rule 88    varcomp1 -> ID varcomp2
Rule 89    varcomp2 -> DOT varcomp3
Rule 90    varcomp2 -> empty
Rule 91    varcomp3 -> varcomp1
Rule 92    varcomp3 -> callfunc
Rule 93    save_const -> <empty>
Rule 94    save_comp -> <empty>
Rule 95    expresion -> exp altexpresion
Rule 96    altexpresion -> altexpresion2 save_op exp
Rule 97    altexpresion -> empty
Rule 98    altexpresion2 -> SAMEAS
Rule 99    altexpresion2 -> BIGGERTHAN
Rule 100   altexpresion2 -> BIGGEREQUALSTHAN
Rule 101   altexpresion2 -> SMALLTHAN
Rule 102   altexpresion2 -> SMALLEQUALSTHAN
Rule 103   altexpresion2 -> DIFFERENTTHAN
Rule 104   altexpresion2 -> AND
Rule 105   altexpresion2 -> OR
Rule 106   exp -> termino
Rule 107   exp -> termino altexp
Rule 108   altexp -> SUM save_op termino altexp
Rule 109   altexp -> SUBTRACT save_op termino altexp
Rule 110   altexp -> empty
Rule 111   termino -> factor
Rule 112   termino -> factor alttermino
Rule 113   alttermino -> TIMES save_op factor alttermino
Rule 114   alttermino -> DIV save_op factor alttermino
Rule 115   alttermino -> empty
Rule 116   save_op -> <empty>
Rule 117   read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
Rule 118   write -> OUTPUT save_op OPENPAREN expresion altwrite
Rule 119   altwrite -> COMMA save_op expresion altwrite
Rule 120   altwrite -> CLOSEPAREN SEMICOLON
Rule 121   factor -> OPENPAREN save_op expresion CLOSEPAREN save_op
Rule 122   factor -> varcall
Rule 123   condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
Rule 124   condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
Rule 125   altcondition -> estatuto altcondition
Rule 126   altcondition -> CLOSECURLY
Rule 127   assign -> ID save_comp EQUALS save_op expresion SEMICOLON
Rule 128   return -> RETURN save_op expresion SEMICOLON
Rule 129   empty -> <empty>

Terminals, with rules where they appear

AND                  : 104
BIGGEREQUALSTHAN     : 100
BIGGERTHAN           : 99
BOOL                 : 63
CLASS                : 13
CLOSEBRACKET         : 34 36
CLOSECURLY           : 10 18 26 46 78 126
CLOSEPAREN           : 7 21 39 54 71 74 76 117 120 121 123 124
COMMA                : 32 51 57 73 119
CONSTRUCTOR          : 21
CTEFLOAT             : 83
CTEINT               : 85
CTESTRING            : 84
DIFFERENTTHAN        : 103
DIV                  : 114
DOT                  : 89
ELSE                 : 124
EQUALS               : 127
FALSE                : 82
FLOAT                : 60
FUNC                 : 39
ID                   : 1 13 14 31 39 50 51 54 62 71 72 88 117 127
IF                   : 123 124
INPUT                : 117
INT                  : 59
MAIN                 : 7
OPENBRACKET          : 34 36
OPENCURLY            : 7 13 21 39 76 123 124 124
OPENPAREN            : 7 21 39 54 71 72 76 117 118 121 123 124
OR                   : 105
OUTPUT               : 118
PROGRAM              : 1
RETURN               : 128
SAMEAS               : 98
SEMICOLON            : 1 18 29 74 117 120 127 128
SMALLEQUALSTHAN      : 102
SMALLTHAN            : 101
STRING               : 61
SUBTRACT             : 109
SUM                  : 108
TIMES                : 113
TRUE                 : 81
TWODOTS              : 14 29 42 50 51
VAR                  : 29
WHILE                : 76
error                : 

Nonterminals, with rules where they appear

alt2call             : 55
alt2class            : 13 16 17
alt2const            : 21 24 25
alt2func             : 39
alt3func             : 39 44 45
altcall              : 54 57 72 73
altclass             : 13
altcondition         : 123 124 124 125
altconst             : 21
altexp               : 107 108 109
altexpresion         : 95
altexpresion2        : 96
altfunc              : 39
altmain              : 7 8 9
altparams            : 50 51
altprogram           : 1 2 3 4
alttermino           : 112 113 114
altwhile             : 76 77
altwrite             : 118 119
array                : 31
array2               : 34
assign               : 64
callfunc             : 87 92
class                : 2
clear_scope          : 10
condition            : 65
constructor          : 18
empty                : 15 23 33 35 37 41 43 52 56 58 90 97 110 115
empty_pv             : 34 36 64 65 66 67 68 69 70
estatuto             : 9 25 45 77 125
exp                  : 95 96
expresion            : 34 36 55 72 73 76 118 119 121 123 124 127 128
factor               : 111 112 113 114
function             : 4 17
listids              : 29 32
listidsalty          : 31
main                 : 5
params               : 22 40
program              : 0
read                 : 67
remove_class_scope   : 18
remove_constructor_scope : 26
remove_function_scope : 46
return               : 68
save_class           : 13
save_comp            : 80 117 127
save_const           : 79
save_constructor     : 21
save_function        : 39
save_main            : 7
save_op              : 96 108 109 113 114 117 118 119 121 121 127 128
save_params          : 50 51
save_program         : 1
save_var_name        : 31
save_vars            : 29
store_params         : 21 39
termino              : 106 107 108 109
type                 : 29 42 50 51
var                  : 3 8 16 24 44
varcall              : 122
varcomp1             : 86 91
varcomp2             : 88
varcomp3             : 89
varcomplicated       : 80
varcte               : 79
voidcall             : 69
while                : 70
write                : 66

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID save_program SEMICOLON altprogram

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID save_program SEMICOLON altprogram

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . save_program SEMICOLON altprogram
    (6) save_program -> .

    SEMICOLON       reduce using rule 6 (save_program -> .)

    save_program                   shift and go to state 4

state 4

    (1) program -> PROGRAM ID save_program . SEMICOLON altprogram

    SEMICOLON       shift and go to state 5


state 5

    (1) program -> PROGRAM ID save_program SEMICOLON . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (13) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (39) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    altprogram                     shift and go to state 6
    class                          shift and go to state 7
    var                            shift and go to state 8
    function                       shift and go to state 9
    main                           shift and go to state 10

state 6

    (1) program -> PROGRAM ID save_program SEMICOLON altprogram .

    $end            reduce using rule 1 (program -> PROGRAM ID save_program SEMICOLON altprogram .)


state 7

    (2) altprogram -> class . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (13) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (39) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    class                          shift and go to state 7
    altprogram                     shift and go to state 15
    var                            shift and go to state 8
    function                       shift and go to state 9
    main                           shift and go to state 10

state 8

    (3) altprogram -> var . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (13) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (39) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    var                            shift and go to state 8
    altprogram                     shift and go to state 16
    class                          shift and go to state 7
    function                       shift and go to state 9
    main                           shift and go to state 10

state 9

    (4) altprogram -> function . altprogram
    (2) altprogram -> . class altprogram
    (3) altprogram -> . var altprogram
    (4) altprogram -> . function altprogram
    (5) altprogram -> . main
    (13) class -> . CLASS ID altclass save_class OPENCURLY alt2class
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (39) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (7) main -> . MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain

    CLASS           shift and go to state 11
    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    MAIN            shift and go to state 14

    function                       shift and go to state 9
    altprogram                     shift and go to state 17
    class                          shift and go to state 7
    var                            shift and go to state 8
    main                           shift and go to state 10

state 10

    (5) altprogram -> main .

    $end            reduce using rule 5 (altprogram -> main .)


state 11

    (13) class -> CLASS . ID altclass save_class OPENCURLY alt2class

    ID              shift and go to state 18


state 12

    (29) var -> VAR . listids TWODOTS type save_vars SEMICOLON
    (31) listids -> . ID save_var_name array listidsalty

    ID              shift and go to state 20

    listids                        shift and go to state 19

state 13

    (39) function -> FUNC . ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func

    ID              shift and go to state 21


state 14

    (7) main -> MAIN . save_main OPENPAREN CLOSEPAREN OPENCURLY altmain
    (11) save_main -> .

    OPENPAREN       reduce using rule 11 (save_main -> .)

    save_main                      shift and go to state 22

state 15

    (2) altprogram -> class altprogram .

    $end            reduce using rule 2 (altprogram -> class altprogram .)


state 16

    (3) altprogram -> var altprogram .

    $end            reduce using rule 3 (altprogram -> var altprogram .)


state 17

    (4) altprogram -> function altprogram .

    $end            reduce using rule 4 (altprogram -> function altprogram .)


state 18

    (13) class -> CLASS ID . altclass save_class OPENCURLY alt2class
    (14) altclass -> . TWODOTS ID
    (15) altclass -> . empty
    (129) empty -> .

    TWODOTS         shift and go to state 24
    OPENCURLY       reduce using rule 129 (empty -> .)

    altclass                       shift and go to state 23
    empty                          shift and go to state 25

state 19

    (29) var -> VAR listids . TWODOTS type save_vars SEMICOLON

    TWODOTS         shift and go to state 26


state 20

    (31) listids -> ID . save_var_name array listidsalty
    (38) save_var_name -> .

    OPENBRACKET     reduce using rule 38 (save_var_name -> .)
    COMMA           reduce using rule 38 (save_var_name -> .)
    TWODOTS         reduce using rule 38 (save_var_name -> .)

    save_var_name                  shift and go to state 27

state 21

    (39) function -> FUNC ID . OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func

    OPENPAREN       shift and go to state 28


state 22

    (7) main -> MAIN save_main . OPENPAREN CLOSEPAREN OPENCURLY altmain

    OPENPAREN       shift and go to state 29


state 23

    (13) class -> CLASS ID altclass . save_class OPENCURLY alt2class
    (19) save_class -> .

    OPENCURLY       reduce using rule 19 (save_class -> .)

    save_class                     shift and go to state 30

state 24

    (14) altclass -> TWODOTS . ID

    ID              shift and go to state 31


state 25

    (15) altclass -> empty .

    OPENCURLY       reduce using rule 15 (altclass -> empty .)


state 26

    (29) var -> VAR listids TWODOTS . type save_vars SEMICOLON
    (59) type -> . INT
    (60) type -> . FLOAT
    (61) type -> . STRING
    (62) type -> . ID
    (63) type -> . BOOL

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 36
    BOOL            shift and go to state 37

    type                           shift and go to state 32

state 27

    (31) listids -> ID save_var_name . array listidsalty
    (34) array -> . OPENBRACKET expresion CLOSEBRACKET empty_pv array2
    (35) array -> . empty
    (129) empty -> .

    OPENBRACKET     shift and go to state 39
    COMMA           reduce using rule 129 (empty -> .)
    TWODOTS         reduce using rule 129 (empty -> .)

    array                          shift and go to state 38
    empty                          shift and go to state 40

state 28

    (39) function -> FUNC ID OPENPAREN . altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (40) altfunc -> . params
    (41) altfunc -> . empty
    (50) params -> . ID TWODOTS type save_params altparams
    (129) empty -> .

    ID              shift and go to state 41
    CLOSEPAREN      reduce using rule 129 (empty -> .)

    altfunc                        shift and go to state 42
    params                         shift and go to state 43
    empty                          shift and go to state 44

state 29

    (7) main -> MAIN save_main OPENPAREN . CLOSEPAREN OPENCURLY altmain

    CLOSEPAREN      shift and go to state 45


state 30

    (13) class -> CLASS ID altclass save_class . OPENCURLY alt2class

    OPENCURLY       shift and go to state 46


state 31

    (14) altclass -> TWODOTS ID .

    OPENCURLY       reduce using rule 14 (altclass -> TWODOTS ID .)


state 32

    (29) var -> VAR listids TWODOTS type . save_vars SEMICOLON
    (30) save_vars -> .

    SEMICOLON       reduce using rule 30 (save_vars -> .)

    save_vars                      shift and go to state 47

state 33

    (59) type -> INT .

    SEMICOLON       reduce using rule 59 (type -> INT .)
    COMMA           reduce using rule 59 (type -> INT .)
    CLOSEPAREN      reduce using rule 59 (type -> INT .)
    OPENCURLY       reduce using rule 59 (type -> INT .)


state 34

    (60) type -> FLOAT .

    SEMICOLON       reduce using rule 60 (type -> FLOAT .)
    COMMA           reduce using rule 60 (type -> FLOAT .)
    CLOSEPAREN      reduce using rule 60 (type -> FLOAT .)
    OPENCURLY       reduce using rule 60 (type -> FLOAT .)


state 35

    (61) type -> STRING .

    SEMICOLON       reduce using rule 61 (type -> STRING .)
    COMMA           reduce using rule 61 (type -> STRING .)
    CLOSEPAREN      reduce using rule 61 (type -> STRING .)
    OPENCURLY       reduce using rule 61 (type -> STRING .)


state 36

    (62) type -> ID .

    SEMICOLON       reduce using rule 62 (type -> ID .)
    COMMA           reduce using rule 62 (type -> ID .)
    CLOSEPAREN      reduce using rule 62 (type -> ID .)
    OPENCURLY       reduce using rule 62 (type -> ID .)


state 37

    (63) type -> BOOL .

    SEMICOLON       reduce using rule 63 (type -> BOOL .)
    COMMA           reduce using rule 63 (type -> BOOL .)
    CLOSEPAREN      reduce using rule 63 (type -> BOOL .)
    OPENCURLY       reduce using rule 63 (type -> BOOL .)


state 38

    (31) listids -> ID save_var_name array . listidsalty
    (32) listidsalty -> . COMMA listids
    (33) listidsalty -> . empty
    (129) empty -> .

    COMMA           shift and go to state 49
    TWODOTS         reduce using rule 129 (empty -> .)

    listidsalty                    shift and go to state 48
    empty                          shift and go to state 50

state 39

    (34) array -> OPENBRACKET . expresion CLOSEBRACKET empty_pv array2
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

    expresion                      shift and go to state 51
    exp                            shift and go to state 52
    termino                        shift and go to state 53
    factor                         shift and go to state 54
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 40

    (35) array -> empty .

    COMMA           reduce using rule 35 (array -> empty .)
    TWODOTS         reduce using rule 35 (array -> empty .)


state 41

    (50) params -> ID . TWODOTS type save_params altparams

    TWODOTS         shift and go to state 67


state 42

    (39) function -> FUNC ID OPENPAREN altfunc . CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func

    CLOSEPAREN      shift and go to state 68


state 43

    (40) altfunc -> params .

    CLOSEPAREN      reduce using rule 40 (altfunc -> params .)


state 44

    (41) altfunc -> empty .

    CLOSEPAREN      reduce using rule 41 (altfunc -> empty .)


state 45

    (7) main -> MAIN save_main OPENPAREN CLOSEPAREN . OPENCURLY altmain

    OPENCURLY       shift and go to state 69


state 46

    (13) class -> CLASS ID altclass save_class OPENCURLY . alt2class
    (16) alt2class -> . var alt2class
    (17) alt2class -> . function alt2class
    (18) alt2class -> . constructor CLOSECURLY SEMICOLON remove_class_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (39) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (21) constructor -> . CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    CONSTRUCTOR     shift and go to state 74

    alt2class                      shift and go to state 70
    var                            shift and go to state 71
    function                       shift and go to state 72
    constructor                    shift and go to state 73

state 47

    (29) var -> VAR listids TWODOTS type save_vars . SEMICOLON

    SEMICOLON       shift and go to state 75


state 48

    (31) listids -> ID save_var_name array listidsalty .

    TWODOTS         reduce using rule 31 (listids -> ID save_var_name array listidsalty .)


state 49

    (32) listidsalty -> COMMA . listids
    (31) listids -> . ID save_var_name array listidsalty

    ID              shift and go to state 20

    listids                        shift and go to state 76

state 50

    (33) listidsalty -> empty .

    TWODOTS         reduce using rule 33 (listidsalty -> empty .)


state 51

    (34) array -> OPENBRACKET expresion . CLOSEBRACKET empty_pv array2

    CLOSEBRACKET    shift and go to state 77


state 52

    (95) expresion -> exp . altexpresion
    (96) altexpresion -> . altexpresion2 save_op exp
    (97) altexpresion -> . empty
    (98) altexpresion2 -> . SAMEAS
    (99) altexpresion2 -> . BIGGERTHAN
    (100) altexpresion2 -> . BIGGEREQUALSTHAN
    (101) altexpresion2 -> . SMALLTHAN
    (102) altexpresion2 -> . SMALLEQUALSTHAN
    (103) altexpresion2 -> . DIFFERENTTHAN
    (104) altexpresion2 -> . AND
    (105) altexpresion2 -> . OR
    (129) empty -> .

    SAMEAS          shift and go to state 81
    BIGGERTHAN      shift and go to state 82
    BIGGEREQUALSTHAN shift and go to state 83
    SMALLTHAN       shift and go to state 84
    SMALLEQUALSTHAN shift and go to state 85
    DIFFERENTTHAN   shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    CLOSEBRACKET    reduce using rule 129 (empty -> .)
    CLOSEPAREN      reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)
    OPENPAREN       reduce using rule 129 (empty -> .)
    TRUE            reduce using rule 129 (empty -> .)
    FALSE           reduce using rule 129 (empty -> .)
    CTEFLOAT        reduce using rule 129 (empty -> .)
    CTESTRING       reduce using rule 129 (empty -> .)
    CTEINT          reduce using rule 129 (empty -> .)
    ID              reduce using rule 129 (empty -> .)
    CLOSECURLY      reduce using rule 129 (empty -> .)
    VAR             reduce using rule 129 (empty -> .)
    IF              reduce using rule 129 (empty -> .)
    OUTPUT          reduce using rule 129 (empty -> .)
    INPUT           reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    WHILE           reduce using rule 129 (empty -> .)
    SEMICOLON       reduce using rule 129 (empty -> .)

    altexpresion                   shift and go to state 78
    altexpresion2                  shift and go to state 79
    empty                          shift and go to state 80

state 53

    (106) exp -> termino .
    (107) exp -> termino . altexp
    (108) altexp -> . SUM save_op termino altexp
    (109) altexp -> . SUBTRACT save_op termino altexp
    (110) altexp -> . empty
    (129) empty -> .

  ! reduce/reduce conflict for SAMEAS resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for BIGGERTHAN resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for BIGGEREQUALSTHAN resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for SMALLTHAN resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for SMALLEQUALSTHAN resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for DIFFERENTTHAN resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for AND resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for OR resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for CLOSEBRACKET resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for CLOSEPAREN resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for COMMA resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for OPENPAREN resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for TRUE resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for FALSE resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for CTESTRING resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for CTEINT resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for ID resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for CLOSECURLY resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for VAR resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for IF resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for INPUT resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for RETURN resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for WHILE resolved using rule 106 (exp -> termino .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 106 (exp -> termino .)
    SAMEAS          reduce using rule 106 (exp -> termino .)
    BIGGERTHAN      reduce using rule 106 (exp -> termino .)
    BIGGEREQUALSTHAN reduce using rule 106 (exp -> termino .)
    SMALLTHAN       reduce using rule 106 (exp -> termino .)
    SMALLEQUALSTHAN reduce using rule 106 (exp -> termino .)
    DIFFERENTTHAN   reduce using rule 106 (exp -> termino .)
    AND             reduce using rule 106 (exp -> termino .)
    OR              reduce using rule 106 (exp -> termino .)
    CLOSEBRACKET    reduce using rule 106 (exp -> termino .)
    CLOSEPAREN      reduce using rule 106 (exp -> termino .)
    COMMA           reduce using rule 106 (exp -> termino .)
    OPENPAREN       reduce using rule 106 (exp -> termino .)
    TRUE            reduce using rule 106 (exp -> termino .)
    FALSE           reduce using rule 106 (exp -> termino .)
    CTEFLOAT        reduce using rule 106 (exp -> termino .)
    CTESTRING       reduce using rule 106 (exp -> termino .)
    CTEINT          reduce using rule 106 (exp -> termino .)
    ID              reduce using rule 106 (exp -> termino .)
    CLOSECURLY      reduce using rule 106 (exp -> termino .)
    VAR             reduce using rule 106 (exp -> termino .)
    IF              reduce using rule 106 (exp -> termino .)
    OUTPUT          reduce using rule 106 (exp -> termino .)
    INPUT           reduce using rule 106 (exp -> termino .)
    RETURN          reduce using rule 106 (exp -> termino .)
    WHILE           reduce using rule 106 (exp -> termino .)
    SEMICOLON       reduce using rule 106 (exp -> termino .)
    SUM             shift and go to state 90
    SUBTRACT        shift and go to state 91

  ! SAMEAS          [ reduce using rule 129 (empty -> .) ]
  ! BIGGERTHAN      [ reduce using rule 129 (empty -> .) ]
  ! BIGGEREQUALSTHAN [ reduce using rule 129 (empty -> .) ]
  ! SMALLTHAN       [ reduce using rule 129 (empty -> .) ]
  ! SMALLEQUALSTHAN [ reduce using rule 129 (empty -> .) ]
  ! DIFFERENTTHAN   [ reduce using rule 129 (empty -> .) ]
  ! AND             [ reduce using rule 129 (empty -> .) ]
  ! OR              [ reduce using rule 129 (empty -> .) ]
  ! CLOSEBRACKET    [ reduce using rule 129 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 129 (empty -> .) ]
  ! COMMA           [ reduce using rule 129 (empty -> .) ]
  ! OPENPAREN       [ reduce using rule 129 (empty -> .) ]
  ! TRUE            [ reduce using rule 129 (empty -> .) ]
  ! FALSE           [ reduce using rule 129 (empty -> .) ]
  ! CTEFLOAT        [ reduce using rule 129 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 129 (empty -> .) ]
  ! CTEINT          [ reduce using rule 129 (empty -> .) ]
  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! CLOSECURLY      [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 129 (empty -> .) ]
  ! INPUT           [ reduce using rule 129 (empty -> .) ]
  ! RETURN          [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 129 (empty -> .) ]

    altexp                         shift and go to state 89
    empty                          shift and go to state 92

state 54

    (111) termino -> factor .
    (112) termino -> factor . alttermino
    (113) alttermino -> . TIMES save_op factor alttermino
    (114) alttermino -> . DIV save_op factor alttermino
    (115) alttermino -> . empty
    (129) empty -> .

  ! reduce/reduce conflict for SUM resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for SUBTRACT resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for SAMEAS resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for BIGGERTHAN resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for BIGGEREQUALSTHAN resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for SMALLTHAN resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for SMALLEQUALSTHAN resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for DIFFERENTTHAN resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for AND resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for OR resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for CLOSEBRACKET resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for CLOSEPAREN resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for COMMA resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for OPENPAREN resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for TRUE resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for FALSE resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for CTESTRING resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for CTEINT resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for ID resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for CLOSECURLY resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for VAR resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for IF resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for INPUT resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for RETURN resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for WHILE resolved using rule 111 (termino -> factor .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 111 (termino -> factor .)
    SUM             reduce using rule 111 (termino -> factor .)
    SUBTRACT        reduce using rule 111 (termino -> factor .)
    SAMEAS          reduce using rule 111 (termino -> factor .)
    BIGGERTHAN      reduce using rule 111 (termino -> factor .)
    BIGGEREQUALSTHAN reduce using rule 111 (termino -> factor .)
    SMALLTHAN       reduce using rule 111 (termino -> factor .)
    SMALLEQUALSTHAN reduce using rule 111 (termino -> factor .)
    DIFFERENTTHAN   reduce using rule 111 (termino -> factor .)
    AND             reduce using rule 111 (termino -> factor .)
    OR              reduce using rule 111 (termino -> factor .)
    CLOSEBRACKET    reduce using rule 111 (termino -> factor .)
    CLOSEPAREN      reduce using rule 111 (termino -> factor .)
    COMMA           reduce using rule 111 (termino -> factor .)
    OPENPAREN       reduce using rule 111 (termino -> factor .)
    TRUE            reduce using rule 111 (termino -> factor .)
    FALSE           reduce using rule 111 (termino -> factor .)
    CTEFLOAT        reduce using rule 111 (termino -> factor .)
    CTESTRING       reduce using rule 111 (termino -> factor .)
    CTEINT          reduce using rule 111 (termino -> factor .)
    ID              reduce using rule 111 (termino -> factor .)
    CLOSECURLY      reduce using rule 111 (termino -> factor .)
    VAR             reduce using rule 111 (termino -> factor .)
    IF              reduce using rule 111 (termino -> factor .)
    OUTPUT          reduce using rule 111 (termino -> factor .)
    INPUT           reduce using rule 111 (termino -> factor .)
    RETURN          reduce using rule 111 (termino -> factor .)
    WHILE           reduce using rule 111 (termino -> factor .)
    SEMICOLON       reduce using rule 111 (termino -> factor .)
    TIMES           shift and go to state 94
    DIV             shift and go to state 95

  ! SUM             [ reduce using rule 129 (empty -> .) ]
  ! SUBTRACT        [ reduce using rule 129 (empty -> .) ]
  ! SAMEAS          [ reduce using rule 129 (empty -> .) ]
  ! BIGGERTHAN      [ reduce using rule 129 (empty -> .) ]
  ! BIGGEREQUALSTHAN [ reduce using rule 129 (empty -> .) ]
  ! SMALLTHAN       [ reduce using rule 129 (empty -> .) ]
  ! SMALLEQUALSTHAN [ reduce using rule 129 (empty -> .) ]
  ! DIFFERENTTHAN   [ reduce using rule 129 (empty -> .) ]
  ! AND             [ reduce using rule 129 (empty -> .) ]
  ! OR              [ reduce using rule 129 (empty -> .) ]
  ! CLOSEBRACKET    [ reduce using rule 129 (empty -> .) ]
  ! CLOSEPAREN      [ reduce using rule 129 (empty -> .) ]
  ! COMMA           [ reduce using rule 129 (empty -> .) ]
  ! OPENPAREN       [ reduce using rule 129 (empty -> .) ]
  ! TRUE            [ reduce using rule 129 (empty -> .) ]
  ! FALSE           [ reduce using rule 129 (empty -> .) ]
  ! CTEFLOAT        [ reduce using rule 129 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 129 (empty -> .) ]
  ! CTEINT          [ reduce using rule 129 (empty -> .) ]
  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! CLOSECURLY      [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 129 (empty -> .) ]
  ! INPUT           [ reduce using rule 129 (empty -> .) ]
  ! RETURN          [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 129 (empty -> .) ]

    alttermino                     shift and go to state 93
    empty                          shift and go to state 96

state 55

    (121) factor -> OPENPAREN . save_op expresion CLOSEPAREN save_op
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)
    TRUE            reduce using rule 116 (save_op -> .)
    FALSE           reduce using rule 116 (save_op -> .)
    CTEFLOAT        reduce using rule 116 (save_op -> .)
    CTESTRING       reduce using rule 116 (save_op -> .)
    CTEINT          reduce using rule 116 (save_op -> .)
    ID              reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 97

state 56

    (122) factor -> varcall .

    TIMES           reduce using rule 122 (factor -> varcall .)
    DIV             reduce using rule 122 (factor -> varcall .)
    SUM             reduce using rule 122 (factor -> varcall .)
    SUBTRACT        reduce using rule 122 (factor -> varcall .)
    SAMEAS          reduce using rule 122 (factor -> varcall .)
    BIGGERTHAN      reduce using rule 122 (factor -> varcall .)
    BIGGEREQUALSTHAN reduce using rule 122 (factor -> varcall .)
    SMALLTHAN       reduce using rule 122 (factor -> varcall .)
    SMALLEQUALSTHAN reduce using rule 122 (factor -> varcall .)
    DIFFERENTTHAN   reduce using rule 122 (factor -> varcall .)
    AND             reduce using rule 122 (factor -> varcall .)
    OR              reduce using rule 122 (factor -> varcall .)
    CLOSEBRACKET    reduce using rule 122 (factor -> varcall .)
    CLOSEPAREN      reduce using rule 122 (factor -> varcall .)
    COMMA           reduce using rule 122 (factor -> varcall .)
    OPENPAREN       reduce using rule 122 (factor -> varcall .)
    TRUE            reduce using rule 122 (factor -> varcall .)
    FALSE           reduce using rule 122 (factor -> varcall .)
    CTEFLOAT        reduce using rule 122 (factor -> varcall .)
    CTESTRING       reduce using rule 122 (factor -> varcall .)
    CTEINT          reduce using rule 122 (factor -> varcall .)
    ID              reduce using rule 122 (factor -> varcall .)
    CLOSECURLY      reduce using rule 122 (factor -> varcall .)
    VAR             reduce using rule 122 (factor -> varcall .)
    IF              reduce using rule 122 (factor -> varcall .)
    OUTPUT          reduce using rule 122 (factor -> varcall .)
    INPUT           reduce using rule 122 (factor -> varcall .)
    RETURN          reduce using rule 122 (factor -> varcall .)
    WHILE           reduce using rule 122 (factor -> varcall .)
    SEMICOLON       reduce using rule 122 (factor -> varcall .)


state 57

    (79) varcall -> varcte . save_const
    (93) save_const -> .

    TIMES           reduce using rule 93 (save_const -> .)
    DIV             reduce using rule 93 (save_const -> .)
    SUM             reduce using rule 93 (save_const -> .)
    SUBTRACT        reduce using rule 93 (save_const -> .)
    SAMEAS          reduce using rule 93 (save_const -> .)
    BIGGERTHAN      reduce using rule 93 (save_const -> .)
    BIGGEREQUALSTHAN reduce using rule 93 (save_const -> .)
    SMALLTHAN       reduce using rule 93 (save_const -> .)
    SMALLEQUALSTHAN reduce using rule 93 (save_const -> .)
    DIFFERENTTHAN   reduce using rule 93 (save_const -> .)
    AND             reduce using rule 93 (save_const -> .)
    OR              reduce using rule 93 (save_const -> .)
    CLOSEBRACKET    reduce using rule 93 (save_const -> .)
    CLOSEPAREN      reduce using rule 93 (save_const -> .)
    COMMA           reduce using rule 93 (save_const -> .)
    OPENPAREN       reduce using rule 93 (save_const -> .)
    TRUE            reduce using rule 93 (save_const -> .)
    FALSE           reduce using rule 93 (save_const -> .)
    CTEFLOAT        reduce using rule 93 (save_const -> .)
    CTESTRING       reduce using rule 93 (save_const -> .)
    CTEINT          reduce using rule 93 (save_const -> .)
    ID              reduce using rule 93 (save_const -> .)
    CLOSECURLY      reduce using rule 93 (save_const -> .)
    VAR             reduce using rule 93 (save_const -> .)
    IF              reduce using rule 93 (save_const -> .)
    OUTPUT          reduce using rule 93 (save_const -> .)
    INPUT           reduce using rule 93 (save_const -> .)
    RETURN          reduce using rule 93 (save_const -> .)
    WHILE           reduce using rule 93 (save_const -> .)
    SEMICOLON       reduce using rule 93 (save_const -> .)

    save_const                     shift and go to state 98

state 58

    (80) varcall -> varcomplicated . save_comp
    (94) save_comp -> .

    TIMES           reduce using rule 94 (save_comp -> .)
    DIV             reduce using rule 94 (save_comp -> .)
    SUM             reduce using rule 94 (save_comp -> .)
    SUBTRACT        reduce using rule 94 (save_comp -> .)
    SAMEAS          reduce using rule 94 (save_comp -> .)
    BIGGERTHAN      reduce using rule 94 (save_comp -> .)
    BIGGEREQUALSTHAN reduce using rule 94 (save_comp -> .)
    SMALLTHAN       reduce using rule 94 (save_comp -> .)
    SMALLEQUALSTHAN reduce using rule 94 (save_comp -> .)
    DIFFERENTTHAN   reduce using rule 94 (save_comp -> .)
    AND             reduce using rule 94 (save_comp -> .)
    OR              reduce using rule 94 (save_comp -> .)
    CLOSEBRACKET    reduce using rule 94 (save_comp -> .)
    CLOSEPAREN      reduce using rule 94 (save_comp -> .)
    COMMA           reduce using rule 94 (save_comp -> .)
    OPENPAREN       reduce using rule 94 (save_comp -> .)
    TRUE            reduce using rule 94 (save_comp -> .)
    FALSE           reduce using rule 94 (save_comp -> .)
    CTEFLOAT        reduce using rule 94 (save_comp -> .)
    CTESTRING       reduce using rule 94 (save_comp -> .)
    CTEINT          reduce using rule 94 (save_comp -> .)
    ID              reduce using rule 94 (save_comp -> .)
    CLOSECURLY      reduce using rule 94 (save_comp -> .)
    VAR             reduce using rule 94 (save_comp -> .)
    IF              reduce using rule 94 (save_comp -> .)
    OUTPUT          reduce using rule 94 (save_comp -> .)
    INPUT           reduce using rule 94 (save_comp -> .)
    RETURN          reduce using rule 94 (save_comp -> .)
    WHILE           reduce using rule 94 (save_comp -> .)
    SEMICOLON       reduce using rule 94 (save_comp -> .)

    save_comp                      shift and go to state 99

state 59

    (81) varcte -> TRUE .

    TIMES           reduce using rule 81 (varcte -> TRUE .)
    DIV             reduce using rule 81 (varcte -> TRUE .)
    SUM             reduce using rule 81 (varcte -> TRUE .)
    SUBTRACT        reduce using rule 81 (varcte -> TRUE .)
    SAMEAS          reduce using rule 81 (varcte -> TRUE .)
    BIGGERTHAN      reduce using rule 81 (varcte -> TRUE .)
    BIGGEREQUALSTHAN reduce using rule 81 (varcte -> TRUE .)
    SMALLTHAN       reduce using rule 81 (varcte -> TRUE .)
    SMALLEQUALSTHAN reduce using rule 81 (varcte -> TRUE .)
    DIFFERENTTHAN   reduce using rule 81 (varcte -> TRUE .)
    AND             reduce using rule 81 (varcte -> TRUE .)
    OR              reduce using rule 81 (varcte -> TRUE .)
    CLOSEBRACKET    reduce using rule 81 (varcte -> TRUE .)
    CLOSEPAREN      reduce using rule 81 (varcte -> TRUE .)
    COMMA           reduce using rule 81 (varcte -> TRUE .)
    OPENPAREN       reduce using rule 81 (varcte -> TRUE .)
    TRUE            reduce using rule 81 (varcte -> TRUE .)
    FALSE           reduce using rule 81 (varcte -> TRUE .)
    CTEFLOAT        reduce using rule 81 (varcte -> TRUE .)
    CTESTRING       reduce using rule 81 (varcte -> TRUE .)
    CTEINT          reduce using rule 81 (varcte -> TRUE .)
    ID              reduce using rule 81 (varcte -> TRUE .)
    CLOSECURLY      reduce using rule 81 (varcte -> TRUE .)
    VAR             reduce using rule 81 (varcte -> TRUE .)
    IF              reduce using rule 81 (varcte -> TRUE .)
    OUTPUT          reduce using rule 81 (varcte -> TRUE .)
    INPUT           reduce using rule 81 (varcte -> TRUE .)
    RETURN          reduce using rule 81 (varcte -> TRUE .)
    WHILE           reduce using rule 81 (varcte -> TRUE .)
    SEMICOLON       reduce using rule 81 (varcte -> TRUE .)


state 60

    (82) varcte -> FALSE .

    TIMES           reduce using rule 82 (varcte -> FALSE .)
    DIV             reduce using rule 82 (varcte -> FALSE .)
    SUM             reduce using rule 82 (varcte -> FALSE .)
    SUBTRACT        reduce using rule 82 (varcte -> FALSE .)
    SAMEAS          reduce using rule 82 (varcte -> FALSE .)
    BIGGERTHAN      reduce using rule 82 (varcte -> FALSE .)
    BIGGEREQUALSTHAN reduce using rule 82 (varcte -> FALSE .)
    SMALLTHAN       reduce using rule 82 (varcte -> FALSE .)
    SMALLEQUALSTHAN reduce using rule 82 (varcte -> FALSE .)
    DIFFERENTTHAN   reduce using rule 82 (varcte -> FALSE .)
    AND             reduce using rule 82 (varcte -> FALSE .)
    OR              reduce using rule 82 (varcte -> FALSE .)
    CLOSEBRACKET    reduce using rule 82 (varcte -> FALSE .)
    CLOSEPAREN      reduce using rule 82 (varcte -> FALSE .)
    COMMA           reduce using rule 82 (varcte -> FALSE .)
    OPENPAREN       reduce using rule 82 (varcte -> FALSE .)
    TRUE            reduce using rule 82 (varcte -> FALSE .)
    FALSE           reduce using rule 82 (varcte -> FALSE .)
    CTEFLOAT        reduce using rule 82 (varcte -> FALSE .)
    CTESTRING       reduce using rule 82 (varcte -> FALSE .)
    CTEINT          reduce using rule 82 (varcte -> FALSE .)
    ID              reduce using rule 82 (varcte -> FALSE .)
    CLOSECURLY      reduce using rule 82 (varcte -> FALSE .)
    VAR             reduce using rule 82 (varcte -> FALSE .)
    IF              reduce using rule 82 (varcte -> FALSE .)
    OUTPUT          reduce using rule 82 (varcte -> FALSE .)
    INPUT           reduce using rule 82 (varcte -> FALSE .)
    RETURN          reduce using rule 82 (varcte -> FALSE .)
    WHILE           reduce using rule 82 (varcte -> FALSE .)
    SEMICOLON       reduce using rule 82 (varcte -> FALSE .)


state 61

    (83) varcte -> CTEFLOAT .

    TIMES           reduce using rule 83 (varcte -> CTEFLOAT .)
    DIV             reduce using rule 83 (varcte -> CTEFLOAT .)
    SUM             reduce using rule 83 (varcte -> CTEFLOAT .)
    SUBTRACT        reduce using rule 83 (varcte -> CTEFLOAT .)
    SAMEAS          reduce using rule 83 (varcte -> CTEFLOAT .)
    BIGGERTHAN      reduce using rule 83 (varcte -> CTEFLOAT .)
    BIGGEREQUALSTHAN reduce using rule 83 (varcte -> CTEFLOAT .)
    SMALLTHAN       reduce using rule 83 (varcte -> CTEFLOAT .)
    SMALLEQUALSTHAN reduce using rule 83 (varcte -> CTEFLOAT .)
    DIFFERENTTHAN   reduce using rule 83 (varcte -> CTEFLOAT .)
    AND             reduce using rule 83 (varcte -> CTEFLOAT .)
    OR              reduce using rule 83 (varcte -> CTEFLOAT .)
    CLOSEBRACKET    reduce using rule 83 (varcte -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 83 (varcte -> CTEFLOAT .)
    COMMA           reduce using rule 83 (varcte -> CTEFLOAT .)
    OPENPAREN       reduce using rule 83 (varcte -> CTEFLOAT .)
    TRUE            reduce using rule 83 (varcte -> CTEFLOAT .)
    FALSE           reduce using rule 83 (varcte -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 83 (varcte -> CTEFLOAT .)
    CTESTRING       reduce using rule 83 (varcte -> CTEFLOAT .)
    CTEINT          reduce using rule 83 (varcte -> CTEFLOAT .)
    ID              reduce using rule 83 (varcte -> CTEFLOAT .)
    CLOSECURLY      reduce using rule 83 (varcte -> CTEFLOAT .)
    VAR             reduce using rule 83 (varcte -> CTEFLOAT .)
    IF              reduce using rule 83 (varcte -> CTEFLOAT .)
    OUTPUT          reduce using rule 83 (varcte -> CTEFLOAT .)
    INPUT           reduce using rule 83 (varcte -> CTEFLOAT .)
    RETURN          reduce using rule 83 (varcte -> CTEFLOAT .)
    WHILE           reduce using rule 83 (varcte -> CTEFLOAT .)
    SEMICOLON       reduce using rule 83 (varcte -> CTEFLOAT .)


state 62

    (84) varcte -> CTESTRING .

    TIMES           reduce using rule 84 (varcte -> CTESTRING .)
    DIV             reduce using rule 84 (varcte -> CTESTRING .)
    SUM             reduce using rule 84 (varcte -> CTESTRING .)
    SUBTRACT        reduce using rule 84 (varcte -> CTESTRING .)
    SAMEAS          reduce using rule 84 (varcte -> CTESTRING .)
    BIGGERTHAN      reduce using rule 84 (varcte -> CTESTRING .)
    BIGGEREQUALSTHAN reduce using rule 84 (varcte -> CTESTRING .)
    SMALLTHAN       reduce using rule 84 (varcte -> CTESTRING .)
    SMALLEQUALSTHAN reduce using rule 84 (varcte -> CTESTRING .)
    DIFFERENTTHAN   reduce using rule 84 (varcte -> CTESTRING .)
    AND             reduce using rule 84 (varcte -> CTESTRING .)
    OR              reduce using rule 84 (varcte -> CTESTRING .)
    CLOSEBRACKET    reduce using rule 84 (varcte -> CTESTRING .)
    CLOSEPAREN      reduce using rule 84 (varcte -> CTESTRING .)
    COMMA           reduce using rule 84 (varcte -> CTESTRING .)
    OPENPAREN       reduce using rule 84 (varcte -> CTESTRING .)
    TRUE            reduce using rule 84 (varcte -> CTESTRING .)
    FALSE           reduce using rule 84 (varcte -> CTESTRING .)
    CTEFLOAT        reduce using rule 84 (varcte -> CTESTRING .)
    CTESTRING       reduce using rule 84 (varcte -> CTESTRING .)
    CTEINT          reduce using rule 84 (varcte -> CTESTRING .)
    ID              reduce using rule 84 (varcte -> CTESTRING .)
    CLOSECURLY      reduce using rule 84 (varcte -> CTESTRING .)
    VAR             reduce using rule 84 (varcte -> CTESTRING .)
    IF              reduce using rule 84 (varcte -> CTESTRING .)
    OUTPUT          reduce using rule 84 (varcte -> CTESTRING .)
    INPUT           reduce using rule 84 (varcte -> CTESTRING .)
    RETURN          reduce using rule 84 (varcte -> CTESTRING .)
    WHILE           reduce using rule 84 (varcte -> CTESTRING .)
    SEMICOLON       reduce using rule 84 (varcte -> CTESTRING .)


state 63

    (85) varcte -> CTEINT .

    TIMES           reduce using rule 85 (varcte -> CTEINT .)
    DIV             reduce using rule 85 (varcte -> CTEINT .)
    SUM             reduce using rule 85 (varcte -> CTEINT .)
    SUBTRACT        reduce using rule 85 (varcte -> CTEINT .)
    SAMEAS          reduce using rule 85 (varcte -> CTEINT .)
    BIGGERTHAN      reduce using rule 85 (varcte -> CTEINT .)
    BIGGEREQUALSTHAN reduce using rule 85 (varcte -> CTEINT .)
    SMALLTHAN       reduce using rule 85 (varcte -> CTEINT .)
    SMALLEQUALSTHAN reduce using rule 85 (varcte -> CTEINT .)
    DIFFERENTTHAN   reduce using rule 85 (varcte -> CTEINT .)
    AND             reduce using rule 85 (varcte -> CTEINT .)
    OR              reduce using rule 85 (varcte -> CTEINT .)
    CLOSEBRACKET    reduce using rule 85 (varcte -> CTEINT .)
    CLOSEPAREN      reduce using rule 85 (varcte -> CTEINT .)
    COMMA           reduce using rule 85 (varcte -> CTEINT .)
    OPENPAREN       reduce using rule 85 (varcte -> CTEINT .)
    TRUE            reduce using rule 85 (varcte -> CTEINT .)
    FALSE           reduce using rule 85 (varcte -> CTEINT .)
    CTEFLOAT        reduce using rule 85 (varcte -> CTEINT .)
    CTESTRING       reduce using rule 85 (varcte -> CTEINT .)
    CTEINT          reduce using rule 85 (varcte -> CTEINT .)
    ID              reduce using rule 85 (varcte -> CTEINT .)
    CLOSECURLY      reduce using rule 85 (varcte -> CTEINT .)
    VAR             reduce using rule 85 (varcte -> CTEINT .)
    IF              reduce using rule 85 (varcte -> CTEINT .)
    OUTPUT          reduce using rule 85 (varcte -> CTEINT .)
    INPUT           reduce using rule 85 (varcte -> CTEINT .)
    RETURN          reduce using rule 85 (varcte -> CTEINT .)
    WHILE           reduce using rule 85 (varcte -> CTEINT .)
    SEMICOLON       reduce using rule 85 (varcte -> CTEINT .)


state 64

    (86) varcomplicated -> varcomp1 .

    TIMES           reduce using rule 86 (varcomplicated -> varcomp1 .)
    DIV             reduce using rule 86 (varcomplicated -> varcomp1 .)
    SUM             reduce using rule 86 (varcomplicated -> varcomp1 .)
    SUBTRACT        reduce using rule 86 (varcomplicated -> varcomp1 .)
    SAMEAS          reduce using rule 86 (varcomplicated -> varcomp1 .)
    BIGGERTHAN      reduce using rule 86 (varcomplicated -> varcomp1 .)
    BIGGEREQUALSTHAN reduce using rule 86 (varcomplicated -> varcomp1 .)
    SMALLTHAN       reduce using rule 86 (varcomplicated -> varcomp1 .)
    SMALLEQUALSTHAN reduce using rule 86 (varcomplicated -> varcomp1 .)
    DIFFERENTTHAN   reduce using rule 86 (varcomplicated -> varcomp1 .)
    AND             reduce using rule 86 (varcomplicated -> varcomp1 .)
    OR              reduce using rule 86 (varcomplicated -> varcomp1 .)
    CLOSEBRACKET    reduce using rule 86 (varcomplicated -> varcomp1 .)
    CLOSEPAREN      reduce using rule 86 (varcomplicated -> varcomp1 .)
    COMMA           reduce using rule 86 (varcomplicated -> varcomp1 .)
    OPENPAREN       reduce using rule 86 (varcomplicated -> varcomp1 .)
    TRUE            reduce using rule 86 (varcomplicated -> varcomp1 .)
    FALSE           reduce using rule 86 (varcomplicated -> varcomp1 .)
    CTEFLOAT        reduce using rule 86 (varcomplicated -> varcomp1 .)
    CTESTRING       reduce using rule 86 (varcomplicated -> varcomp1 .)
    CTEINT          reduce using rule 86 (varcomplicated -> varcomp1 .)
    ID              reduce using rule 86 (varcomplicated -> varcomp1 .)
    CLOSECURLY      reduce using rule 86 (varcomplicated -> varcomp1 .)
    VAR             reduce using rule 86 (varcomplicated -> varcomp1 .)
    IF              reduce using rule 86 (varcomplicated -> varcomp1 .)
    OUTPUT          reduce using rule 86 (varcomplicated -> varcomp1 .)
    INPUT           reduce using rule 86 (varcomplicated -> varcomp1 .)
    RETURN          reduce using rule 86 (varcomplicated -> varcomp1 .)
    WHILE           reduce using rule 86 (varcomplicated -> varcomp1 .)
    SEMICOLON       reduce using rule 86 (varcomplicated -> varcomp1 .)


state 65

    (87) varcomplicated -> callfunc .

    TIMES           reduce using rule 87 (varcomplicated -> callfunc .)
    DIV             reduce using rule 87 (varcomplicated -> callfunc .)
    SUM             reduce using rule 87 (varcomplicated -> callfunc .)
    SUBTRACT        reduce using rule 87 (varcomplicated -> callfunc .)
    SAMEAS          reduce using rule 87 (varcomplicated -> callfunc .)
    BIGGERTHAN      reduce using rule 87 (varcomplicated -> callfunc .)
    BIGGEREQUALSTHAN reduce using rule 87 (varcomplicated -> callfunc .)
    SMALLTHAN       reduce using rule 87 (varcomplicated -> callfunc .)
    SMALLEQUALSTHAN reduce using rule 87 (varcomplicated -> callfunc .)
    DIFFERENTTHAN   reduce using rule 87 (varcomplicated -> callfunc .)
    AND             reduce using rule 87 (varcomplicated -> callfunc .)
    OR              reduce using rule 87 (varcomplicated -> callfunc .)
    CLOSEBRACKET    reduce using rule 87 (varcomplicated -> callfunc .)
    CLOSEPAREN      reduce using rule 87 (varcomplicated -> callfunc .)
    COMMA           reduce using rule 87 (varcomplicated -> callfunc .)
    OPENPAREN       reduce using rule 87 (varcomplicated -> callfunc .)
    TRUE            reduce using rule 87 (varcomplicated -> callfunc .)
    FALSE           reduce using rule 87 (varcomplicated -> callfunc .)
    CTEFLOAT        reduce using rule 87 (varcomplicated -> callfunc .)
    CTESTRING       reduce using rule 87 (varcomplicated -> callfunc .)
    CTEINT          reduce using rule 87 (varcomplicated -> callfunc .)
    ID              reduce using rule 87 (varcomplicated -> callfunc .)
    CLOSECURLY      reduce using rule 87 (varcomplicated -> callfunc .)
    VAR             reduce using rule 87 (varcomplicated -> callfunc .)
    IF              reduce using rule 87 (varcomplicated -> callfunc .)
    OUTPUT          reduce using rule 87 (varcomplicated -> callfunc .)
    INPUT           reduce using rule 87 (varcomplicated -> callfunc .)
    RETURN          reduce using rule 87 (varcomplicated -> callfunc .)
    WHILE           reduce using rule 87 (varcomplicated -> callfunc .)
    SEMICOLON       reduce using rule 87 (varcomplicated -> callfunc .)


state 66

    (88) varcomp1 -> ID . varcomp2
    (54) callfunc -> ID . OPENPAREN altcall CLOSEPAREN
    (89) varcomp2 -> . DOT varcomp3
    (90) varcomp2 -> . empty
    (129) empty -> .

  ! shift/reduce conflict for OPENPAREN resolved as shift
    OPENPAREN       shift and go to state 101
    DOT             shift and go to state 102
    TIMES           reduce using rule 129 (empty -> .)
    DIV             reduce using rule 129 (empty -> .)
    SUM             reduce using rule 129 (empty -> .)
    SUBTRACT        reduce using rule 129 (empty -> .)
    SAMEAS          reduce using rule 129 (empty -> .)
    BIGGERTHAN      reduce using rule 129 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 129 (empty -> .)
    SMALLTHAN       reduce using rule 129 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 129 (empty -> .)
    DIFFERENTTHAN   reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    CLOSEBRACKET    reduce using rule 129 (empty -> .)
    CLOSEPAREN      reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)
    TRUE            reduce using rule 129 (empty -> .)
    FALSE           reduce using rule 129 (empty -> .)
    CTEFLOAT        reduce using rule 129 (empty -> .)
    CTESTRING       reduce using rule 129 (empty -> .)
    CTEINT          reduce using rule 129 (empty -> .)
    ID              reduce using rule 129 (empty -> .)
    CLOSECURLY      reduce using rule 129 (empty -> .)
    VAR             reduce using rule 129 (empty -> .)
    IF              reduce using rule 129 (empty -> .)
    OUTPUT          reduce using rule 129 (empty -> .)
    INPUT           reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    WHILE           reduce using rule 129 (empty -> .)
    SEMICOLON       reduce using rule 129 (empty -> .)

  ! OPENPAREN       [ reduce using rule 129 (empty -> .) ]

    varcomp2                       shift and go to state 100
    empty                          shift and go to state 103

state 67

    (50) params -> ID TWODOTS . type save_params altparams
    (59) type -> . INT
    (60) type -> . FLOAT
    (61) type -> . STRING
    (62) type -> . ID
    (63) type -> . BOOL

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 36
    BOOL            shift and go to state 37

    type                           shift and go to state 104

state 68

    (39) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN . alt2func save_function store_params OPENCURLY alt3func
    (42) alt2func -> . TWODOTS type
    (43) alt2func -> . empty
    (129) empty -> .

    TWODOTS         shift and go to state 106
    OPENCURLY       reduce using rule 129 (empty -> .)

    alt2func                       shift and go to state 105
    empty                          shift and go to state 107

state 69

    (7) main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY . altmain
    (8) altmain -> . var altmain
    (9) altmain -> . estatuto altmain
    (10) altmain -> . CLOSECURLY clear_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (127) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (128) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . ID OPENPAREN CLOSEPAREN
    (72) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 111
    VAR             shift and go to state 12
    ID              shift and go to state 119
    IF              shift and go to state 120
    OUTPUT          shift and go to state 121
    INPUT           shift and go to state 122
    RETURN          shift and go to state 123
    WHILE           shift and go to state 124

    altmain                        shift and go to state 108
    var                            shift and go to state 109
    estatuto                       shift and go to state 110
    assign                         shift and go to state 112
    condition                      shift and go to state 113
    write                          shift and go to state 114
    read                           shift and go to state 115
    return                         shift and go to state 116
    voidcall                       shift and go to state 117
    while                          shift and go to state 118

state 70

    (13) class -> CLASS ID altclass save_class OPENCURLY alt2class .

    CLASS           reduce using rule 13 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)
    VAR             reduce using rule 13 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)
    FUNC            reduce using rule 13 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)
    MAIN            reduce using rule 13 (class -> CLASS ID altclass save_class OPENCURLY alt2class .)


state 71

    (16) alt2class -> var . alt2class
    (16) alt2class -> . var alt2class
    (17) alt2class -> . function alt2class
    (18) alt2class -> . constructor CLOSECURLY SEMICOLON remove_class_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (39) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (21) constructor -> . CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    CONSTRUCTOR     shift and go to state 74

    var                            shift and go to state 71
    alt2class                      shift and go to state 125
    function                       shift and go to state 72
    constructor                    shift and go to state 73

state 72

    (17) alt2class -> function . alt2class
    (16) alt2class -> . var alt2class
    (17) alt2class -> . function alt2class
    (18) alt2class -> . constructor CLOSECURLY SEMICOLON remove_class_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (39) function -> . FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func
    (21) constructor -> . CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const

    VAR             shift and go to state 12
    FUNC            shift and go to state 13
    CONSTRUCTOR     shift and go to state 74

    function                       shift and go to state 72
    alt2class                      shift and go to state 126
    var                            shift and go to state 71
    constructor                    shift and go to state 73

state 73

    (18) alt2class -> constructor . CLOSECURLY SEMICOLON remove_class_scope

    CLOSECURLY      shift and go to state 127


state 74

    (21) constructor -> CONSTRUCTOR . save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const
    (27) save_constructor -> .

    OPENPAREN       reduce using rule 27 (save_constructor -> .)

    save_constructor               shift and go to state 128

state 75

    (29) var -> VAR listids TWODOTS type save_vars SEMICOLON .

    CLASS           reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    VAR             reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    FUNC            reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    MAIN            reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    CONSTRUCTOR     reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    CLOSECURLY      reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    ID              reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    IF              reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    OUTPUT          reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    INPUT           reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    RETURN          reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)
    WHILE           reduce using rule 29 (var -> VAR listids TWODOTS type save_vars SEMICOLON .)


state 76

    (32) listidsalty -> COMMA listids .

    TWODOTS         reduce using rule 32 (listidsalty -> COMMA listids .)


state 77

    (34) array -> OPENBRACKET expresion CLOSEBRACKET . empty_pv array2
    (75) empty_pv -> .

    OPENBRACKET     reduce using rule 75 (empty_pv -> .)
    COMMA           reduce using rule 75 (empty_pv -> .)
    TWODOTS         reduce using rule 75 (empty_pv -> .)

    empty_pv                       shift and go to state 129

state 78

    (95) expresion -> exp altexpresion .

    CLOSEBRACKET    reduce using rule 95 (expresion -> exp altexpresion .)
    CLOSEPAREN      reduce using rule 95 (expresion -> exp altexpresion .)
    COMMA           reduce using rule 95 (expresion -> exp altexpresion .)
    OPENPAREN       reduce using rule 95 (expresion -> exp altexpresion .)
    TRUE            reduce using rule 95 (expresion -> exp altexpresion .)
    FALSE           reduce using rule 95 (expresion -> exp altexpresion .)
    CTEFLOAT        reduce using rule 95 (expresion -> exp altexpresion .)
    CTESTRING       reduce using rule 95 (expresion -> exp altexpresion .)
    CTEINT          reduce using rule 95 (expresion -> exp altexpresion .)
    ID              reduce using rule 95 (expresion -> exp altexpresion .)
    CLOSECURLY      reduce using rule 95 (expresion -> exp altexpresion .)
    VAR             reduce using rule 95 (expresion -> exp altexpresion .)
    IF              reduce using rule 95 (expresion -> exp altexpresion .)
    OUTPUT          reduce using rule 95 (expresion -> exp altexpresion .)
    INPUT           reduce using rule 95 (expresion -> exp altexpresion .)
    RETURN          reduce using rule 95 (expresion -> exp altexpresion .)
    WHILE           reduce using rule 95 (expresion -> exp altexpresion .)
    SEMICOLON       reduce using rule 95 (expresion -> exp altexpresion .)


state 79

    (96) altexpresion -> altexpresion2 . save_op exp
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)
    TRUE            reduce using rule 116 (save_op -> .)
    FALSE           reduce using rule 116 (save_op -> .)
    CTEFLOAT        reduce using rule 116 (save_op -> .)
    CTESTRING       reduce using rule 116 (save_op -> .)
    CTEINT          reduce using rule 116 (save_op -> .)
    ID              reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 130

state 80

    (97) altexpresion -> empty .

    CLOSEBRACKET    reduce using rule 97 (altexpresion -> empty .)
    CLOSEPAREN      reduce using rule 97 (altexpresion -> empty .)
    COMMA           reduce using rule 97 (altexpresion -> empty .)
    OPENPAREN       reduce using rule 97 (altexpresion -> empty .)
    TRUE            reduce using rule 97 (altexpresion -> empty .)
    FALSE           reduce using rule 97 (altexpresion -> empty .)
    CTEFLOAT        reduce using rule 97 (altexpresion -> empty .)
    CTESTRING       reduce using rule 97 (altexpresion -> empty .)
    CTEINT          reduce using rule 97 (altexpresion -> empty .)
    ID              reduce using rule 97 (altexpresion -> empty .)
    CLOSECURLY      reduce using rule 97 (altexpresion -> empty .)
    VAR             reduce using rule 97 (altexpresion -> empty .)
    IF              reduce using rule 97 (altexpresion -> empty .)
    OUTPUT          reduce using rule 97 (altexpresion -> empty .)
    INPUT           reduce using rule 97 (altexpresion -> empty .)
    RETURN          reduce using rule 97 (altexpresion -> empty .)
    WHILE           reduce using rule 97 (altexpresion -> empty .)
    SEMICOLON       reduce using rule 97 (altexpresion -> empty .)


state 81

    (98) altexpresion2 -> SAMEAS .

    OPENPAREN       reduce using rule 98 (altexpresion2 -> SAMEAS .)
    TRUE            reduce using rule 98 (altexpresion2 -> SAMEAS .)
    FALSE           reduce using rule 98 (altexpresion2 -> SAMEAS .)
    CTEFLOAT        reduce using rule 98 (altexpresion2 -> SAMEAS .)
    CTESTRING       reduce using rule 98 (altexpresion2 -> SAMEAS .)
    CTEINT          reduce using rule 98 (altexpresion2 -> SAMEAS .)
    ID              reduce using rule 98 (altexpresion2 -> SAMEAS .)


state 82

    (99) altexpresion2 -> BIGGERTHAN .

    OPENPAREN       reduce using rule 99 (altexpresion2 -> BIGGERTHAN .)
    TRUE            reduce using rule 99 (altexpresion2 -> BIGGERTHAN .)
    FALSE           reduce using rule 99 (altexpresion2 -> BIGGERTHAN .)
    CTEFLOAT        reduce using rule 99 (altexpresion2 -> BIGGERTHAN .)
    CTESTRING       reduce using rule 99 (altexpresion2 -> BIGGERTHAN .)
    CTEINT          reduce using rule 99 (altexpresion2 -> BIGGERTHAN .)
    ID              reduce using rule 99 (altexpresion2 -> BIGGERTHAN .)


state 83

    (100) altexpresion2 -> BIGGEREQUALSTHAN .

    OPENPAREN       reduce using rule 100 (altexpresion2 -> BIGGEREQUALSTHAN .)
    TRUE            reduce using rule 100 (altexpresion2 -> BIGGEREQUALSTHAN .)
    FALSE           reduce using rule 100 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTEFLOAT        reduce using rule 100 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTESTRING       reduce using rule 100 (altexpresion2 -> BIGGEREQUALSTHAN .)
    CTEINT          reduce using rule 100 (altexpresion2 -> BIGGEREQUALSTHAN .)
    ID              reduce using rule 100 (altexpresion2 -> BIGGEREQUALSTHAN .)


state 84

    (101) altexpresion2 -> SMALLTHAN .

    OPENPAREN       reduce using rule 101 (altexpresion2 -> SMALLTHAN .)
    TRUE            reduce using rule 101 (altexpresion2 -> SMALLTHAN .)
    FALSE           reduce using rule 101 (altexpresion2 -> SMALLTHAN .)
    CTEFLOAT        reduce using rule 101 (altexpresion2 -> SMALLTHAN .)
    CTESTRING       reduce using rule 101 (altexpresion2 -> SMALLTHAN .)
    CTEINT          reduce using rule 101 (altexpresion2 -> SMALLTHAN .)
    ID              reduce using rule 101 (altexpresion2 -> SMALLTHAN .)


state 85

    (102) altexpresion2 -> SMALLEQUALSTHAN .

    OPENPAREN       reduce using rule 102 (altexpresion2 -> SMALLEQUALSTHAN .)
    TRUE            reduce using rule 102 (altexpresion2 -> SMALLEQUALSTHAN .)
    FALSE           reduce using rule 102 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTEFLOAT        reduce using rule 102 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTESTRING       reduce using rule 102 (altexpresion2 -> SMALLEQUALSTHAN .)
    CTEINT          reduce using rule 102 (altexpresion2 -> SMALLEQUALSTHAN .)
    ID              reduce using rule 102 (altexpresion2 -> SMALLEQUALSTHAN .)


state 86

    (103) altexpresion2 -> DIFFERENTTHAN .

    OPENPAREN       reduce using rule 103 (altexpresion2 -> DIFFERENTTHAN .)
    TRUE            reduce using rule 103 (altexpresion2 -> DIFFERENTTHAN .)
    FALSE           reduce using rule 103 (altexpresion2 -> DIFFERENTTHAN .)
    CTEFLOAT        reduce using rule 103 (altexpresion2 -> DIFFERENTTHAN .)
    CTESTRING       reduce using rule 103 (altexpresion2 -> DIFFERENTTHAN .)
    CTEINT          reduce using rule 103 (altexpresion2 -> DIFFERENTTHAN .)
    ID              reduce using rule 103 (altexpresion2 -> DIFFERENTTHAN .)


state 87

    (104) altexpresion2 -> AND .

    OPENPAREN       reduce using rule 104 (altexpresion2 -> AND .)
    TRUE            reduce using rule 104 (altexpresion2 -> AND .)
    FALSE           reduce using rule 104 (altexpresion2 -> AND .)
    CTEFLOAT        reduce using rule 104 (altexpresion2 -> AND .)
    CTESTRING       reduce using rule 104 (altexpresion2 -> AND .)
    CTEINT          reduce using rule 104 (altexpresion2 -> AND .)
    ID              reduce using rule 104 (altexpresion2 -> AND .)


state 88

    (105) altexpresion2 -> OR .

    OPENPAREN       reduce using rule 105 (altexpresion2 -> OR .)
    TRUE            reduce using rule 105 (altexpresion2 -> OR .)
    FALSE           reduce using rule 105 (altexpresion2 -> OR .)
    CTEFLOAT        reduce using rule 105 (altexpresion2 -> OR .)
    CTESTRING       reduce using rule 105 (altexpresion2 -> OR .)
    CTEINT          reduce using rule 105 (altexpresion2 -> OR .)
    ID              reduce using rule 105 (altexpresion2 -> OR .)


state 89

    (107) exp -> termino altexp .

    SAMEAS          reduce using rule 107 (exp -> termino altexp .)
    BIGGERTHAN      reduce using rule 107 (exp -> termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 107 (exp -> termino altexp .)
    SMALLTHAN       reduce using rule 107 (exp -> termino altexp .)
    SMALLEQUALSTHAN reduce using rule 107 (exp -> termino altexp .)
    DIFFERENTTHAN   reduce using rule 107 (exp -> termino altexp .)
    AND             reduce using rule 107 (exp -> termino altexp .)
    OR              reduce using rule 107 (exp -> termino altexp .)
    CLOSEBRACKET    reduce using rule 107 (exp -> termino altexp .)
    CLOSEPAREN      reduce using rule 107 (exp -> termino altexp .)
    COMMA           reduce using rule 107 (exp -> termino altexp .)
    OPENPAREN       reduce using rule 107 (exp -> termino altexp .)
    TRUE            reduce using rule 107 (exp -> termino altexp .)
    FALSE           reduce using rule 107 (exp -> termino altexp .)
    CTEFLOAT        reduce using rule 107 (exp -> termino altexp .)
    CTESTRING       reduce using rule 107 (exp -> termino altexp .)
    CTEINT          reduce using rule 107 (exp -> termino altexp .)
    ID              reduce using rule 107 (exp -> termino altexp .)
    CLOSECURLY      reduce using rule 107 (exp -> termino altexp .)
    VAR             reduce using rule 107 (exp -> termino altexp .)
    IF              reduce using rule 107 (exp -> termino altexp .)
    OUTPUT          reduce using rule 107 (exp -> termino altexp .)
    INPUT           reduce using rule 107 (exp -> termino altexp .)
    RETURN          reduce using rule 107 (exp -> termino altexp .)
    WHILE           reduce using rule 107 (exp -> termino altexp .)
    SEMICOLON       reduce using rule 107 (exp -> termino altexp .)


state 90

    (108) altexp -> SUM . save_op termino altexp
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)
    TRUE            reduce using rule 116 (save_op -> .)
    FALSE           reduce using rule 116 (save_op -> .)
    CTEFLOAT        reduce using rule 116 (save_op -> .)
    CTESTRING       reduce using rule 116 (save_op -> .)
    CTEINT          reduce using rule 116 (save_op -> .)
    ID              reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 131

state 91

    (109) altexp -> SUBTRACT . save_op termino altexp
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)
    TRUE            reduce using rule 116 (save_op -> .)
    FALSE           reduce using rule 116 (save_op -> .)
    CTEFLOAT        reduce using rule 116 (save_op -> .)
    CTESTRING       reduce using rule 116 (save_op -> .)
    CTEINT          reduce using rule 116 (save_op -> .)
    ID              reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 132

state 92

    (110) altexp -> empty .

    SAMEAS          reduce using rule 110 (altexp -> empty .)
    BIGGERTHAN      reduce using rule 110 (altexp -> empty .)
    BIGGEREQUALSTHAN reduce using rule 110 (altexp -> empty .)
    SMALLTHAN       reduce using rule 110 (altexp -> empty .)
    SMALLEQUALSTHAN reduce using rule 110 (altexp -> empty .)
    DIFFERENTTHAN   reduce using rule 110 (altexp -> empty .)
    AND             reduce using rule 110 (altexp -> empty .)
    OR              reduce using rule 110 (altexp -> empty .)
    CLOSEBRACKET    reduce using rule 110 (altexp -> empty .)
    CLOSEPAREN      reduce using rule 110 (altexp -> empty .)
    COMMA           reduce using rule 110 (altexp -> empty .)
    OPENPAREN       reduce using rule 110 (altexp -> empty .)
    TRUE            reduce using rule 110 (altexp -> empty .)
    FALSE           reduce using rule 110 (altexp -> empty .)
    CTEFLOAT        reduce using rule 110 (altexp -> empty .)
    CTESTRING       reduce using rule 110 (altexp -> empty .)
    CTEINT          reduce using rule 110 (altexp -> empty .)
    ID              reduce using rule 110 (altexp -> empty .)
    CLOSECURLY      reduce using rule 110 (altexp -> empty .)
    VAR             reduce using rule 110 (altexp -> empty .)
    IF              reduce using rule 110 (altexp -> empty .)
    OUTPUT          reduce using rule 110 (altexp -> empty .)
    INPUT           reduce using rule 110 (altexp -> empty .)
    RETURN          reduce using rule 110 (altexp -> empty .)
    WHILE           reduce using rule 110 (altexp -> empty .)
    SEMICOLON       reduce using rule 110 (altexp -> empty .)


state 93

    (112) termino -> factor alttermino .

    SUM             reduce using rule 112 (termino -> factor alttermino .)
    SUBTRACT        reduce using rule 112 (termino -> factor alttermino .)
    SAMEAS          reduce using rule 112 (termino -> factor alttermino .)
    BIGGERTHAN      reduce using rule 112 (termino -> factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 112 (termino -> factor alttermino .)
    SMALLTHAN       reduce using rule 112 (termino -> factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 112 (termino -> factor alttermino .)
    DIFFERENTTHAN   reduce using rule 112 (termino -> factor alttermino .)
    AND             reduce using rule 112 (termino -> factor alttermino .)
    OR              reduce using rule 112 (termino -> factor alttermino .)
    CLOSEBRACKET    reduce using rule 112 (termino -> factor alttermino .)
    CLOSEPAREN      reduce using rule 112 (termino -> factor alttermino .)
    COMMA           reduce using rule 112 (termino -> factor alttermino .)
    OPENPAREN       reduce using rule 112 (termino -> factor alttermino .)
    TRUE            reduce using rule 112 (termino -> factor alttermino .)
    FALSE           reduce using rule 112 (termino -> factor alttermino .)
    CTEFLOAT        reduce using rule 112 (termino -> factor alttermino .)
    CTESTRING       reduce using rule 112 (termino -> factor alttermino .)
    CTEINT          reduce using rule 112 (termino -> factor alttermino .)
    ID              reduce using rule 112 (termino -> factor alttermino .)
    CLOSECURLY      reduce using rule 112 (termino -> factor alttermino .)
    VAR             reduce using rule 112 (termino -> factor alttermino .)
    IF              reduce using rule 112 (termino -> factor alttermino .)
    OUTPUT          reduce using rule 112 (termino -> factor alttermino .)
    INPUT           reduce using rule 112 (termino -> factor alttermino .)
    RETURN          reduce using rule 112 (termino -> factor alttermino .)
    WHILE           reduce using rule 112 (termino -> factor alttermino .)
    SEMICOLON       reduce using rule 112 (termino -> factor alttermino .)


state 94

    (113) alttermino -> TIMES . save_op factor alttermino
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)
    TRUE            reduce using rule 116 (save_op -> .)
    FALSE           reduce using rule 116 (save_op -> .)
    CTEFLOAT        reduce using rule 116 (save_op -> .)
    CTESTRING       reduce using rule 116 (save_op -> .)
    CTEINT          reduce using rule 116 (save_op -> .)
    ID              reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 133

state 95

    (114) alttermino -> DIV . save_op factor alttermino
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)
    TRUE            reduce using rule 116 (save_op -> .)
    FALSE           reduce using rule 116 (save_op -> .)
    CTEFLOAT        reduce using rule 116 (save_op -> .)
    CTESTRING       reduce using rule 116 (save_op -> .)
    CTEINT          reduce using rule 116 (save_op -> .)
    ID              reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 134

state 96

    (115) alttermino -> empty .

    SUM             reduce using rule 115 (alttermino -> empty .)
    SUBTRACT        reduce using rule 115 (alttermino -> empty .)
    SAMEAS          reduce using rule 115 (alttermino -> empty .)
    BIGGERTHAN      reduce using rule 115 (alttermino -> empty .)
    BIGGEREQUALSTHAN reduce using rule 115 (alttermino -> empty .)
    SMALLTHAN       reduce using rule 115 (alttermino -> empty .)
    SMALLEQUALSTHAN reduce using rule 115 (alttermino -> empty .)
    DIFFERENTTHAN   reduce using rule 115 (alttermino -> empty .)
    AND             reduce using rule 115 (alttermino -> empty .)
    OR              reduce using rule 115 (alttermino -> empty .)
    CLOSEBRACKET    reduce using rule 115 (alttermino -> empty .)
    CLOSEPAREN      reduce using rule 115 (alttermino -> empty .)
    COMMA           reduce using rule 115 (alttermino -> empty .)
    OPENPAREN       reduce using rule 115 (alttermino -> empty .)
    TRUE            reduce using rule 115 (alttermino -> empty .)
    FALSE           reduce using rule 115 (alttermino -> empty .)
    CTEFLOAT        reduce using rule 115 (alttermino -> empty .)
    CTESTRING       reduce using rule 115 (alttermino -> empty .)
    CTEINT          reduce using rule 115 (alttermino -> empty .)
    ID              reduce using rule 115 (alttermino -> empty .)
    CLOSECURLY      reduce using rule 115 (alttermino -> empty .)
    VAR             reduce using rule 115 (alttermino -> empty .)
    IF              reduce using rule 115 (alttermino -> empty .)
    OUTPUT          reduce using rule 115 (alttermino -> empty .)
    INPUT           reduce using rule 115 (alttermino -> empty .)
    RETURN          reduce using rule 115 (alttermino -> empty .)
    WHILE           reduce using rule 115 (alttermino -> empty .)
    SEMICOLON       reduce using rule 115 (alttermino -> empty .)


state 97

    (121) factor -> OPENPAREN save_op . expresion CLOSEPAREN save_op
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

    expresion                      shift and go to state 135
    exp                            shift and go to state 52
    termino                        shift and go to state 53
    factor                         shift and go to state 54
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 98

    (79) varcall -> varcte save_const .

    TIMES           reduce using rule 79 (varcall -> varcte save_const .)
    DIV             reduce using rule 79 (varcall -> varcte save_const .)
    SUM             reduce using rule 79 (varcall -> varcte save_const .)
    SUBTRACT        reduce using rule 79 (varcall -> varcte save_const .)
    SAMEAS          reduce using rule 79 (varcall -> varcte save_const .)
    BIGGERTHAN      reduce using rule 79 (varcall -> varcte save_const .)
    BIGGEREQUALSTHAN reduce using rule 79 (varcall -> varcte save_const .)
    SMALLTHAN       reduce using rule 79 (varcall -> varcte save_const .)
    SMALLEQUALSTHAN reduce using rule 79 (varcall -> varcte save_const .)
    DIFFERENTTHAN   reduce using rule 79 (varcall -> varcte save_const .)
    AND             reduce using rule 79 (varcall -> varcte save_const .)
    OR              reduce using rule 79 (varcall -> varcte save_const .)
    CLOSEBRACKET    reduce using rule 79 (varcall -> varcte save_const .)
    CLOSEPAREN      reduce using rule 79 (varcall -> varcte save_const .)
    COMMA           reduce using rule 79 (varcall -> varcte save_const .)
    OPENPAREN       reduce using rule 79 (varcall -> varcte save_const .)
    TRUE            reduce using rule 79 (varcall -> varcte save_const .)
    FALSE           reduce using rule 79 (varcall -> varcte save_const .)
    CTEFLOAT        reduce using rule 79 (varcall -> varcte save_const .)
    CTESTRING       reduce using rule 79 (varcall -> varcte save_const .)
    CTEINT          reduce using rule 79 (varcall -> varcte save_const .)
    ID              reduce using rule 79 (varcall -> varcte save_const .)
    CLOSECURLY      reduce using rule 79 (varcall -> varcte save_const .)
    VAR             reduce using rule 79 (varcall -> varcte save_const .)
    IF              reduce using rule 79 (varcall -> varcte save_const .)
    OUTPUT          reduce using rule 79 (varcall -> varcte save_const .)
    INPUT           reduce using rule 79 (varcall -> varcte save_const .)
    RETURN          reduce using rule 79 (varcall -> varcte save_const .)
    WHILE           reduce using rule 79 (varcall -> varcte save_const .)
    SEMICOLON       reduce using rule 79 (varcall -> varcte save_const .)


state 99

    (80) varcall -> varcomplicated save_comp .

    TIMES           reduce using rule 80 (varcall -> varcomplicated save_comp .)
    DIV             reduce using rule 80 (varcall -> varcomplicated save_comp .)
    SUM             reduce using rule 80 (varcall -> varcomplicated save_comp .)
    SUBTRACT        reduce using rule 80 (varcall -> varcomplicated save_comp .)
    SAMEAS          reduce using rule 80 (varcall -> varcomplicated save_comp .)
    BIGGERTHAN      reduce using rule 80 (varcall -> varcomplicated save_comp .)
    BIGGEREQUALSTHAN reduce using rule 80 (varcall -> varcomplicated save_comp .)
    SMALLTHAN       reduce using rule 80 (varcall -> varcomplicated save_comp .)
    SMALLEQUALSTHAN reduce using rule 80 (varcall -> varcomplicated save_comp .)
    DIFFERENTTHAN   reduce using rule 80 (varcall -> varcomplicated save_comp .)
    AND             reduce using rule 80 (varcall -> varcomplicated save_comp .)
    OR              reduce using rule 80 (varcall -> varcomplicated save_comp .)
    CLOSEBRACKET    reduce using rule 80 (varcall -> varcomplicated save_comp .)
    CLOSEPAREN      reduce using rule 80 (varcall -> varcomplicated save_comp .)
    COMMA           reduce using rule 80 (varcall -> varcomplicated save_comp .)
    OPENPAREN       reduce using rule 80 (varcall -> varcomplicated save_comp .)
    TRUE            reduce using rule 80 (varcall -> varcomplicated save_comp .)
    FALSE           reduce using rule 80 (varcall -> varcomplicated save_comp .)
    CTEFLOAT        reduce using rule 80 (varcall -> varcomplicated save_comp .)
    CTESTRING       reduce using rule 80 (varcall -> varcomplicated save_comp .)
    CTEINT          reduce using rule 80 (varcall -> varcomplicated save_comp .)
    ID              reduce using rule 80 (varcall -> varcomplicated save_comp .)
    CLOSECURLY      reduce using rule 80 (varcall -> varcomplicated save_comp .)
    VAR             reduce using rule 80 (varcall -> varcomplicated save_comp .)
    IF              reduce using rule 80 (varcall -> varcomplicated save_comp .)
    OUTPUT          reduce using rule 80 (varcall -> varcomplicated save_comp .)
    INPUT           reduce using rule 80 (varcall -> varcomplicated save_comp .)
    RETURN          reduce using rule 80 (varcall -> varcomplicated save_comp .)
    WHILE           reduce using rule 80 (varcall -> varcomplicated save_comp .)
    SEMICOLON       reduce using rule 80 (varcall -> varcomplicated save_comp .)


state 100

    (88) varcomp1 -> ID varcomp2 .

    TIMES           reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    DIV             reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    SUM             reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    SUBTRACT        reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    SAMEAS          reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    BIGGERTHAN      reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    BIGGEREQUALSTHAN reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    SMALLTHAN       reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    SMALLEQUALSTHAN reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    DIFFERENTTHAN   reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    AND             reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    OR              reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    CLOSEBRACKET    reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    CLOSEPAREN      reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    COMMA           reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    OPENPAREN       reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    TRUE            reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    FALSE           reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    CTEFLOAT        reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    CTESTRING       reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    CTEINT          reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    ID              reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    CLOSECURLY      reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    VAR             reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    IF              reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    OUTPUT          reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    INPUT           reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    RETURN          reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    WHILE           reduce using rule 88 (varcomp1 -> ID varcomp2 .)
    SEMICOLON       reduce using rule 88 (varcomp1 -> ID varcomp2 .)


state 101

    (54) callfunc -> ID OPENPAREN . altcall CLOSEPAREN
    (55) altcall -> . expresion alt2call
    (56) altcall -> . empty
    (73) altcall -> . COMMA expresion altcall
    (74) altcall -> . CLOSEPAREN SEMICOLON
    (95) expresion -> . exp altexpresion
    (129) empty -> .
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
    COMMA           shift and go to state 140
    CLOSEPAREN      shift and go to state 137
    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

  ! CLOSEPAREN      [ reduce using rule 129 (empty -> .) ]

    altcall                        shift and go to state 136
    expresion                      shift and go to state 138
    empty                          shift and go to state 139
    exp                            shift and go to state 52
    termino                        shift and go to state 53
    factor                         shift and go to state 54
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 102

    (89) varcomp2 -> DOT . varcomp3
    (91) varcomp3 -> . varcomp1
    (92) varcomp3 -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    ID              shift and go to state 66

    varcomp3                       shift and go to state 141
    varcomp1                       shift and go to state 142
    callfunc                       shift and go to state 143

state 103

    (90) varcomp2 -> empty .

    TIMES           reduce using rule 90 (varcomp2 -> empty .)
    DIV             reduce using rule 90 (varcomp2 -> empty .)
    SUM             reduce using rule 90 (varcomp2 -> empty .)
    SUBTRACT        reduce using rule 90 (varcomp2 -> empty .)
    SAMEAS          reduce using rule 90 (varcomp2 -> empty .)
    BIGGERTHAN      reduce using rule 90 (varcomp2 -> empty .)
    BIGGEREQUALSTHAN reduce using rule 90 (varcomp2 -> empty .)
    SMALLTHAN       reduce using rule 90 (varcomp2 -> empty .)
    SMALLEQUALSTHAN reduce using rule 90 (varcomp2 -> empty .)
    DIFFERENTTHAN   reduce using rule 90 (varcomp2 -> empty .)
    AND             reduce using rule 90 (varcomp2 -> empty .)
    OR              reduce using rule 90 (varcomp2 -> empty .)
    CLOSEBRACKET    reduce using rule 90 (varcomp2 -> empty .)
    CLOSEPAREN      reduce using rule 90 (varcomp2 -> empty .)
    COMMA           reduce using rule 90 (varcomp2 -> empty .)
    OPENPAREN       reduce using rule 90 (varcomp2 -> empty .)
    TRUE            reduce using rule 90 (varcomp2 -> empty .)
    FALSE           reduce using rule 90 (varcomp2 -> empty .)
    CTEFLOAT        reduce using rule 90 (varcomp2 -> empty .)
    CTESTRING       reduce using rule 90 (varcomp2 -> empty .)
    CTEINT          reduce using rule 90 (varcomp2 -> empty .)
    ID              reduce using rule 90 (varcomp2 -> empty .)
    CLOSECURLY      reduce using rule 90 (varcomp2 -> empty .)
    VAR             reduce using rule 90 (varcomp2 -> empty .)
    IF              reduce using rule 90 (varcomp2 -> empty .)
    OUTPUT          reduce using rule 90 (varcomp2 -> empty .)
    INPUT           reduce using rule 90 (varcomp2 -> empty .)
    RETURN          reduce using rule 90 (varcomp2 -> empty .)
    WHILE           reduce using rule 90 (varcomp2 -> empty .)
    SEMICOLON       reduce using rule 90 (varcomp2 -> empty .)


state 104

    (50) params -> ID TWODOTS type . save_params altparams
    (53) save_params -> .

    COMMA           reduce using rule 53 (save_params -> .)
    CLOSEPAREN      reduce using rule 53 (save_params -> .)

    save_params                    shift and go to state 144

state 105

    (39) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func . save_function store_params OPENCURLY alt3func
    (47) save_function -> .

    OPENCURLY       reduce using rule 47 (save_function -> .)

    save_function                  shift and go to state 145

state 106

    (42) alt2func -> TWODOTS . type
    (59) type -> . INT
    (60) type -> . FLOAT
    (61) type -> . STRING
    (62) type -> . ID
    (63) type -> . BOOL

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 36
    BOOL            shift and go to state 37

    type                           shift and go to state 146

state 107

    (43) alt2func -> empty .

    OPENCURLY       reduce using rule 43 (alt2func -> empty .)


state 108

    (7) main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain .

    $end            reduce using rule 7 (main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain .)


state 109

    (8) altmain -> var . altmain
    (8) altmain -> . var altmain
    (9) altmain -> . estatuto altmain
    (10) altmain -> . CLOSECURLY clear_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (127) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (128) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . ID OPENPAREN CLOSEPAREN
    (72) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 111
    VAR             shift and go to state 12
    ID              shift and go to state 119
    IF              shift and go to state 120
    OUTPUT          shift and go to state 121
    INPUT           shift and go to state 122
    RETURN          shift and go to state 123
    WHILE           shift and go to state 124

    var                            shift and go to state 109
    altmain                        shift and go to state 147
    estatuto                       shift and go to state 110
    assign                         shift and go to state 112
    condition                      shift and go to state 113
    write                          shift and go to state 114
    read                           shift and go to state 115
    return                         shift and go to state 116
    voidcall                       shift and go to state 117
    while                          shift and go to state 118

state 110

    (9) altmain -> estatuto . altmain
    (8) altmain -> . var altmain
    (9) altmain -> . estatuto altmain
    (10) altmain -> . CLOSECURLY clear_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (127) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (128) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . ID OPENPAREN CLOSEPAREN
    (72) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 111
    VAR             shift and go to state 12
    ID              shift and go to state 119
    IF              shift and go to state 120
    OUTPUT          shift and go to state 121
    INPUT           shift and go to state 122
    RETURN          shift and go to state 123
    WHILE           shift and go to state 124

    estatuto                       shift and go to state 110
    altmain                        shift and go to state 148
    var                            shift and go to state 109
    assign                         shift and go to state 112
    condition                      shift and go to state 113
    write                          shift and go to state 114
    read                           shift and go to state 115
    return                         shift and go to state 116
    voidcall                       shift and go to state 117
    while                          shift and go to state 118

state 111

    (10) altmain -> CLOSECURLY . clear_scope
    (12) clear_scope -> .

    $end            reduce using rule 12 (clear_scope -> .)

    clear_scope                    shift and go to state 149

state 112

    (64) estatuto -> assign . empty_pv
    (75) empty_pv -> .

    CLOSECURLY      reduce using rule 75 (empty_pv -> .)
    VAR             reduce using rule 75 (empty_pv -> .)
    ID              reduce using rule 75 (empty_pv -> .)
    IF              reduce using rule 75 (empty_pv -> .)
    OUTPUT          reduce using rule 75 (empty_pv -> .)
    INPUT           reduce using rule 75 (empty_pv -> .)
    RETURN          reduce using rule 75 (empty_pv -> .)
    WHILE           reduce using rule 75 (empty_pv -> .)

    empty_pv                       shift and go to state 150

state 113

    (65) estatuto -> condition . empty_pv
    (75) empty_pv -> .

    CLOSECURLY      reduce using rule 75 (empty_pv -> .)
    VAR             reduce using rule 75 (empty_pv -> .)
    ID              reduce using rule 75 (empty_pv -> .)
    IF              reduce using rule 75 (empty_pv -> .)
    OUTPUT          reduce using rule 75 (empty_pv -> .)
    INPUT           reduce using rule 75 (empty_pv -> .)
    RETURN          reduce using rule 75 (empty_pv -> .)
    WHILE           reduce using rule 75 (empty_pv -> .)

    empty_pv                       shift and go to state 151

state 114

    (66) estatuto -> write . empty_pv
    (75) empty_pv -> .

    CLOSECURLY      reduce using rule 75 (empty_pv -> .)
    VAR             reduce using rule 75 (empty_pv -> .)
    ID              reduce using rule 75 (empty_pv -> .)
    IF              reduce using rule 75 (empty_pv -> .)
    OUTPUT          reduce using rule 75 (empty_pv -> .)
    INPUT           reduce using rule 75 (empty_pv -> .)
    RETURN          reduce using rule 75 (empty_pv -> .)
    WHILE           reduce using rule 75 (empty_pv -> .)

    empty_pv                       shift and go to state 152

state 115

    (67) estatuto -> read . empty_pv
    (75) empty_pv -> .

    CLOSECURLY      reduce using rule 75 (empty_pv -> .)
    VAR             reduce using rule 75 (empty_pv -> .)
    ID              reduce using rule 75 (empty_pv -> .)
    IF              reduce using rule 75 (empty_pv -> .)
    OUTPUT          reduce using rule 75 (empty_pv -> .)
    INPUT           reduce using rule 75 (empty_pv -> .)
    RETURN          reduce using rule 75 (empty_pv -> .)
    WHILE           reduce using rule 75 (empty_pv -> .)

    empty_pv                       shift and go to state 153

state 116

    (68) estatuto -> return . empty_pv
    (75) empty_pv -> .

    CLOSECURLY      reduce using rule 75 (empty_pv -> .)
    VAR             reduce using rule 75 (empty_pv -> .)
    ID              reduce using rule 75 (empty_pv -> .)
    IF              reduce using rule 75 (empty_pv -> .)
    OUTPUT          reduce using rule 75 (empty_pv -> .)
    INPUT           reduce using rule 75 (empty_pv -> .)
    RETURN          reduce using rule 75 (empty_pv -> .)
    WHILE           reduce using rule 75 (empty_pv -> .)

    empty_pv                       shift and go to state 154

state 117

    (69) estatuto -> voidcall . empty_pv
    (75) empty_pv -> .

    CLOSECURLY      reduce using rule 75 (empty_pv -> .)
    VAR             reduce using rule 75 (empty_pv -> .)
    ID              reduce using rule 75 (empty_pv -> .)
    IF              reduce using rule 75 (empty_pv -> .)
    OUTPUT          reduce using rule 75 (empty_pv -> .)
    INPUT           reduce using rule 75 (empty_pv -> .)
    RETURN          reduce using rule 75 (empty_pv -> .)
    WHILE           reduce using rule 75 (empty_pv -> .)

    empty_pv                       shift and go to state 155

state 118

    (70) estatuto -> while . empty_pv
    (75) empty_pv -> .

    CLOSECURLY      reduce using rule 75 (empty_pv -> .)
    VAR             reduce using rule 75 (empty_pv -> .)
    ID              reduce using rule 75 (empty_pv -> .)
    IF              reduce using rule 75 (empty_pv -> .)
    OUTPUT          reduce using rule 75 (empty_pv -> .)
    INPUT           reduce using rule 75 (empty_pv -> .)
    RETURN          reduce using rule 75 (empty_pv -> .)
    WHILE           reduce using rule 75 (empty_pv -> .)

    empty_pv                       shift and go to state 156

state 119

    (127) assign -> ID . save_comp EQUALS save_op expresion SEMICOLON
    (71) voidcall -> ID . OPENPAREN CLOSEPAREN
    (72) voidcall -> ID . OPENPAREN expresion altcall
    (94) save_comp -> .

    OPENPAREN       shift and go to state 158
    EQUALS          reduce using rule 94 (save_comp -> .)

    save_comp                      shift and go to state 157

state 120

    (123) condition -> IF . OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (124) condition -> IF . OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition

    OPENPAREN       shift and go to state 159


state 121

    (118) write -> OUTPUT . save_op OPENPAREN expresion altwrite
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 160

state 122

    (117) read -> INPUT . save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 161

state 123

    (128) return -> RETURN . save_op expresion SEMICOLON
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)
    TRUE            reduce using rule 116 (save_op -> .)
    FALSE           reduce using rule 116 (save_op -> .)
    CTEFLOAT        reduce using rule 116 (save_op -> .)
    CTESTRING       reduce using rule 116 (save_op -> .)
    CTEINT          reduce using rule 116 (save_op -> .)
    ID              reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 162

state 124

    (76) while -> WHILE . OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    OPENPAREN       shift and go to state 163


state 125

    (16) alt2class -> var alt2class .

    CLASS           reduce using rule 16 (alt2class -> var alt2class .)
    VAR             reduce using rule 16 (alt2class -> var alt2class .)
    FUNC            reduce using rule 16 (alt2class -> var alt2class .)
    MAIN            reduce using rule 16 (alt2class -> var alt2class .)


state 126

    (17) alt2class -> function alt2class .

    CLASS           reduce using rule 17 (alt2class -> function alt2class .)
    VAR             reduce using rule 17 (alt2class -> function alt2class .)
    FUNC            reduce using rule 17 (alt2class -> function alt2class .)
    MAIN            reduce using rule 17 (alt2class -> function alt2class .)


state 127

    (18) alt2class -> constructor CLOSECURLY . SEMICOLON remove_class_scope

    SEMICOLON       shift and go to state 164


state 128

    (21) constructor -> CONSTRUCTOR save_constructor . OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const

    OPENPAREN       shift and go to state 165


state 129

    (34) array -> OPENBRACKET expresion CLOSEBRACKET empty_pv . array2
    (36) array2 -> . OPENBRACKET expresion CLOSEBRACKET empty_pv
    (37) array2 -> . empty
    (129) empty -> .

    OPENBRACKET     shift and go to state 166
    COMMA           reduce using rule 129 (empty -> .)
    TWODOTS         reduce using rule 129 (empty -> .)

    array2                         shift and go to state 167
    empty                          shift and go to state 168

state 130

    (96) altexpresion -> altexpresion2 save_op . exp
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

    exp                            shift and go to state 169
    termino                        shift and go to state 53
    factor                         shift and go to state 54
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 131

    (108) altexp -> SUM save_op . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

    termino                        shift and go to state 170
    factor                         shift and go to state 54
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 132

    (109) altexp -> SUBTRACT save_op . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

    termino                        shift and go to state 171
    factor                         shift and go to state 54
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 133

    (113) alttermino -> TIMES save_op . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

    factor                         shift and go to state 172
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 134

    (114) alttermino -> DIV save_op . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

    factor                         shift and go to state 173
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 135

    (121) factor -> OPENPAREN save_op expresion . CLOSEPAREN save_op

    CLOSEPAREN      shift and go to state 174


state 136

    (54) callfunc -> ID OPENPAREN altcall . CLOSEPAREN

    CLOSEPAREN      shift and go to state 175


state 137

    (74) altcall -> CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 176


state 138

    (55) altcall -> expresion . alt2call
    (57) alt2call -> . COMMA altcall
    (58) alt2call -> . empty
    (129) empty -> .

    COMMA           shift and go to state 178
    CLOSEPAREN      reduce using rule 129 (empty -> .)
    CLOSECURLY      reduce using rule 129 (empty -> .)
    VAR             reduce using rule 129 (empty -> .)
    ID              reduce using rule 129 (empty -> .)
    IF              reduce using rule 129 (empty -> .)
    OUTPUT          reduce using rule 129 (empty -> .)
    INPUT           reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    WHILE           reduce using rule 129 (empty -> .)

    alt2call                       shift and go to state 177
    empty                          shift and go to state 179

state 139

    (56) altcall -> empty .

    CLOSEPAREN      reduce using rule 56 (altcall -> empty .)
    CLOSECURLY      reduce using rule 56 (altcall -> empty .)
    VAR             reduce using rule 56 (altcall -> empty .)
    ID              reduce using rule 56 (altcall -> empty .)
    IF              reduce using rule 56 (altcall -> empty .)
    OUTPUT          reduce using rule 56 (altcall -> empty .)
    INPUT           reduce using rule 56 (altcall -> empty .)
    RETURN          reduce using rule 56 (altcall -> empty .)
    WHILE           reduce using rule 56 (altcall -> empty .)


state 140

    (73) altcall -> COMMA . expresion altcall
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

    expresion                      shift and go to state 180
    exp                            shift and go to state 52
    termino                        shift and go to state 53
    factor                         shift and go to state 54
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 141

    (89) varcomp2 -> DOT varcomp3 .

    TIMES           reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    DIV             reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    SUM             reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    SUBTRACT        reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    SAMEAS          reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    BIGGERTHAN      reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    BIGGEREQUALSTHAN reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    SMALLTHAN       reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    SMALLEQUALSTHAN reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    DIFFERENTTHAN   reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    AND             reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    OR              reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    CLOSEBRACKET    reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    CLOSEPAREN      reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    COMMA           reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    OPENPAREN       reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    TRUE            reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    FALSE           reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    CTEFLOAT        reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    CTESTRING       reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    CTEINT          reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    ID              reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    CLOSECURLY      reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    VAR             reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    IF              reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    OUTPUT          reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    INPUT           reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    RETURN          reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    WHILE           reduce using rule 89 (varcomp2 -> DOT varcomp3 .)
    SEMICOLON       reduce using rule 89 (varcomp2 -> DOT varcomp3 .)


state 142

    (91) varcomp3 -> varcomp1 .

    TIMES           reduce using rule 91 (varcomp3 -> varcomp1 .)
    DIV             reduce using rule 91 (varcomp3 -> varcomp1 .)
    SUM             reduce using rule 91 (varcomp3 -> varcomp1 .)
    SUBTRACT        reduce using rule 91 (varcomp3 -> varcomp1 .)
    SAMEAS          reduce using rule 91 (varcomp3 -> varcomp1 .)
    BIGGERTHAN      reduce using rule 91 (varcomp3 -> varcomp1 .)
    BIGGEREQUALSTHAN reduce using rule 91 (varcomp3 -> varcomp1 .)
    SMALLTHAN       reduce using rule 91 (varcomp3 -> varcomp1 .)
    SMALLEQUALSTHAN reduce using rule 91 (varcomp3 -> varcomp1 .)
    DIFFERENTTHAN   reduce using rule 91 (varcomp3 -> varcomp1 .)
    AND             reduce using rule 91 (varcomp3 -> varcomp1 .)
    OR              reduce using rule 91 (varcomp3 -> varcomp1 .)
    CLOSEBRACKET    reduce using rule 91 (varcomp3 -> varcomp1 .)
    CLOSEPAREN      reduce using rule 91 (varcomp3 -> varcomp1 .)
    COMMA           reduce using rule 91 (varcomp3 -> varcomp1 .)
    OPENPAREN       reduce using rule 91 (varcomp3 -> varcomp1 .)
    TRUE            reduce using rule 91 (varcomp3 -> varcomp1 .)
    FALSE           reduce using rule 91 (varcomp3 -> varcomp1 .)
    CTEFLOAT        reduce using rule 91 (varcomp3 -> varcomp1 .)
    CTESTRING       reduce using rule 91 (varcomp3 -> varcomp1 .)
    CTEINT          reduce using rule 91 (varcomp3 -> varcomp1 .)
    ID              reduce using rule 91 (varcomp3 -> varcomp1 .)
    CLOSECURLY      reduce using rule 91 (varcomp3 -> varcomp1 .)
    VAR             reduce using rule 91 (varcomp3 -> varcomp1 .)
    IF              reduce using rule 91 (varcomp3 -> varcomp1 .)
    OUTPUT          reduce using rule 91 (varcomp3 -> varcomp1 .)
    INPUT           reduce using rule 91 (varcomp3 -> varcomp1 .)
    RETURN          reduce using rule 91 (varcomp3 -> varcomp1 .)
    WHILE           reduce using rule 91 (varcomp3 -> varcomp1 .)
    SEMICOLON       reduce using rule 91 (varcomp3 -> varcomp1 .)


state 143

    (92) varcomp3 -> callfunc .

    TIMES           reduce using rule 92 (varcomp3 -> callfunc .)
    DIV             reduce using rule 92 (varcomp3 -> callfunc .)
    SUM             reduce using rule 92 (varcomp3 -> callfunc .)
    SUBTRACT        reduce using rule 92 (varcomp3 -> callfunc .)
    SAMEAS          reduce using rule 92 (varcomp3 -> callfunc .)
    BIGGERTHAN      reduce using rule 92 (varcomp3 -> callfunc .)
    BIGGEREQUALSTHAN reduce using rule 92 (varcomp3 -> callfunc .)
    SMALLTHAN       reduce using rule 92 (varcomp3 -> callfunc .)
    SMALLEQUALSTHAN reduce using rule 92 (varcomp3 -> callfunc .)
    DIFFERENTTHAN   reduce using rule 92 (varcomp3 -> callfunc .)
    AND             reduce using rule 92 (varcomp3 -> callfunc .)
    OR              reduce using rule 92 (varcomp3 -> callfunc .)
    CLOSEBRACKET    reduce using rule 92 (varcomp3 -> callfunc .)
    CLOSEPAREN      reduce using rule 92 (varcomp3 -> callfunc .)
    COMMA           reduce using rule 92 (varcomp3 -> callfunc .)
    OPENPAREN       reduce using rule 92 (varcomp3 -> callfunc .)
    TRUE            reduce using rule 92 (varcomp3 -> callfunc .)
    FALSE           reduce using rule 92 (varcomp3 -> callfunc .)
    CTEFLOAT        reduce using rule 92 (varcomp3 -> callfunc .)
    CTESTRING       reduce using rule 92 (varcomp3 -> callfunc .)
    CTEINT          reduce using rule 92 (varcomp3 -> callfunc .)
    ID              reduce using rule 92 (varcomp3 -> callfunc .)
    CLOSECURLY      reduce using rule 92 (varcomp3 -> callfunc .)
    VAR             reduce using rule 92 (varcomp3 -> callfunc .)
    IF              reduce using rule 92 (varcomp3 -> callfunc .)
    OUTPUT          reduce using rule 92 (varcomp3 -> callfunc .)
    INPUT           reduce using rule 92 (varcomp3 -> callfunc .)
    RETURN          reduce using rule 92 (varcomp3 -> callfunc .)
    WHILE           reduce using rule 92 (varcomp3 -> callfunc .)
    SEMICOLON       reduce using rule 92 (varcomp3 -> callfunc .)


state 144

    (50) params -> ID TWODOTS type save_params . altparams
    (51) altparams -> . COMMA ID TWODOTS type save_params altparams
    (52) altparams -> . empty
    (129) empty -> .

    COMMA           shift and go to state 182
    CLOSEPAREN      reduce using rule 129 (empty -> .)

    altparams                      shift and go to state 181
    empty                          shift and go to state 183

state 145

    (39) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function . store_params OPENCURLY alt3func
    (48) store_params -> .

    OPENCURLY       reduce using rule 48 (store_params -> .)

    store_params                   shift and go to state 184

state 146

    (42) alt2func -> TWODOTS type .

    OPENCURLY       reduce using rule 42 (alt2func -> TWODOTS type .)


state 147

    (8) altmain -> var altmain .

    $end            reduce using rule 8 (altmain -> var altmain .)


state 148

    (9) altmain -> estatuto altmain .

    $end            reduce using rule 9 (altmain -> estatuto altmain .)


state 149

    (10) altmain -> CLOSECURLY clear_scope .

    $end            reduce using rule 10 (altmain -> CLOSECURLY clear_scope .)


state 150

    (64) estatuto -> assign empty_pv .

    CLOSECURLY      reduce using rule 64 (estatuto -> assign empty_pv .)
    VAR             reduce using rule 64 (estatuto -> assign empty_pv .)
    ID              reduce using rule 64 (estatuto -> assign empty_pv .)
    IF              reduce using rule 64 (estatuto -> assign empty_pv .)
    OUTPUT          reduce using rule 64 (estatuto -> assign empty_pv .)
    INPUT           reduce using rule 64 (estatuto -> assign empty_pv .)
    RETURN          reduce using rule 64 (estatuto -> assign empty_pv .)
    WHILE           reduce using rule 64 (estatuto -> assign empty_pv .)


state 151

    (65) estatuto -> condition empty_pv .

    CLOSECURLY      reduce using rule 65 (estatuto -> condition empty_pv .)
    VAR             reduce using rule 65 (estatuto -> condition empty_pv .)
    ID              reduce using rule 65 (estatuto -> condition empty_pv .)
    IF              reduce using rule 65 (estatuto -> condition empty_pv .)
    OUTPUT          reduce using rule 65 (estatuto -> condition empty_pv .)
    INPUT           reduce using rule 65 (estatuto -> condition empty_pv .)
    RETURN          reduce using rule 65 (estatuto -> condition empty_pv .)
    WHILE           reduce using rule 65 (estatuto -> condition empty_pv .)


state 152

    (66) estatuto -> write empty_pv .

    CLOSECURLY      reduce using rule 66 (estatuto -> write empty_pv .)
    VAR             reduce using rule 66 (estatuto -> write empty_pv .)
    ID              reduce using rule 66 (estatuto -> write empty_pv .)
    IF              reduce using rule 66 (estatuto -> write empty_pv .)
    OUTPUT          reduce using rule 66 (estatuto -> write empty_pv .)
    INPUT           reduce using rule 66 (estatuto -> write empty_pv .)
    RETURN          reduce using rule 66 (estatuto -> write empty_pv .)
    WHILE           reduce using rule 66 (estatuto -> write empty_pv .)


state 153

    (67) estatuto -> read empty_pv .

    CLOSECURLY      reduce using rule 67 (estatuto -> read empty_pv .)
    VAR             reduce using rule 67 (estatuto -> read empty_pv .)
    ID              reduce using rule 67 (estatuto -> read empty_pv .)
    IF              reduce using rule 67 (estatuto -> read empty_pv .)
    OUTPUT          reduce using rule 67 (estatuto -> read empty_pv .)
    INPUT           reduce using rule 67 (estatuto -> read empty_pv .)
    RETURN          reduce using rule 67 (estatuto -> read empty_pv .)
    WHILE           reduce using rule 67 (estatuto -> read empty_pv .)


state 154

    (68) estatuto -> return empty_pv .

    CLOSECURLY      reduce using rule 68 (estatuto -> return empty_pv .)
    VAR             reduce using rule 68 (estatuto -> return empty_pv .)
    ID              reduce using rule 68 (estatuto -> return empty_pv .)
    IF              reduce using rule 68 (estatuto -> return empty_pv .)
    OUTPUT          reduce using rule 68 (estatuto -> return empty_pv .)
    INPUT           reduce using rule 68 (estatuto -> return empty_pv .)
    RETURN          reduce using rule 68 (estatuto -> return empty_pv .)
    WHILE           reduce using rule 68 (estatuto -> return empty_pv .)


state 155

    (69) estatuto -> voidcall empty_pv .

    CLOSECURLY      reduce using rule 69 (estatuto -> voidcall empty_pv .)
    VAR             reduce using rule 69 (estatuto -> voidcall empty_pv .)
    ID              reduce using rule 69 (estatuto -> voidcall empty_pv .)
    IF              reduce using rule 69 (estatuto -> voidcall empty_pv .)
    OUTPUT          reduce using rule 69 (estatuto -> voidcall empty_pv .)
    INPUT           reduce using rule 69 (estatuto -> voidcall empty_pv .)
    RETURN          reduce using rule 69 (estatuto -> voidcall empty_pv .)
    WHILE           reduce using rule 69 (estatuto -> voidcall empty_pv .)


state 156

    (70) estatuto -> while empty_pv .

    CLOSECURLY      reduce using rule 70 (estatuto -> while empty_pv .)
    VAR             reduce using rule 70 (estatuto -> while empty_pv .)
    ID              reduce using rule 70 (estatuto -> while empty_pv .)
    IF              reduce using rule 70 (estatuto -> while empty_pv .)
    OUTPUT          reduce using rule 70 (estatuto -> while empty_pv .)
    INPUT           reduce using rule 70 (estatuto -> while empty_pv .)
    RETURN          reduce using rule 70 (estatuto -> while empty_pv .)
    WHILE           reduce using rule 70 (estatuto -> while empty_pv .)


state 157

    (127) assign -> ID save_comp . EQUALS save_op expresion SEMICOLON

    EQUALS          shift and go to state 185


state 158

    (71) voidcall -> ID OPENPAREN . CLOSEPAREN
    (72) voidcall -> ID OPENPAREN . expresion altcall
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    CLOSEPAREN      shift and go to state 186
    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

    expresion                      shift and go to state 187
    exp                            shift and go to state 52
    termino                        shift and go to state 53
    factor                         shift and go to state 54
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 159

    (123) condition -> IF OPENPAREN . expresion CLOSEPAREN OPENCURLY altcondition
    (124) condition -> IF OPENPAREN . expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

    expresion                      shift and go to state 188
    exp                            shift and go to state 52
    termino                        shift and go to state 53
    factor                         shift and go to state 54
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 160

    (118) write -> OUTPUT save_op . OPENPAREN expresion altwrite

    OPENPAREN       shift and go to state 189


state 161

    (117) read -> INPUT save_op . OPENPAREN ID save_comp CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 190


state 162

    (128) return -> RETURN save_op . expresion SEMICOLON
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

    expresion                      shift and go to state 191
    exp                            shift and go to state 52
    termino                        shift and go to state 53
    factor                         shift and go to state 54
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 163

    (76) while -> WHILE OPENPAREN . expresion CLOSEPAREN OPENCURLY altwhile
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

    expresion                      shift and go to state 192
    exp                            shift and go to state 52
    termino                        shift and go to state 53
    factor                         shift and go to state 54
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 164

    (18) alt2class -> constructor CLOSECURLY SEMICOLON . remove_class_scope
    (20) remove_class_scope -> .

    CLASS           reduce using rule 20 (remove_class_scope -> .)
    VAR             reduce using rule 20 (remove_class_scope -> .)
    FUNC            reduce using rule 20 (remove_class_scope -> .)
    MAIN            reduce using rule 20 (remove_class_scope -> .)

    remove_class_scope             shift and go to state 193

state 165

    (21) constructor -> CONSTRUCTOR save_constructor OPENPAREN . altconst store_params CLOSEPAREN OPENCURLY alt2const
    (22) altconst -> . params
    (23) altconst -> . empty
    (50) params -> . ID TWODOTS type save_params altparams
    (129) empty -> .

    ID              shift and go to state 41
    CLOSEPAREN      reduce using rule 129 (empty -> .)

    altconst                       shift and go to state 194
    params                         shift and go to state 195
    empty                          shift and go to state 196

state 166

    (36) array2 -> OPENBRACKET . expresion CLOSEBRACKET empty_pv
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

    expresion                      shift and go to state 197
    exp                            shift and go to state 52
    termino                        shift and go to state 53
    factor                         shift and go to state 54
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 167

    (34) array -> OPENBRACKET expresion CLOSEBRACKET empty_pv array2 .

    COMMA           reduce using rule 34 (array -> OPENBRACKET expresion CLOSEBRACKET empty_pv array2 .)
    TWODOTS         reduce using rule 34 (array -> OPENBRACKET expresion CLOSEBRACKET empty_pv array2 .)


state 168

    (37) array2 -> empty .

    COMMA           reduce using rule 37 (array2 -> empty .)
    TWODOTS         reduce using rule 37 (array2 -> empty .)


state 169

    (96) altexpresion -> altexpresion2 save_op exp .

    CLOSEBRACKET    reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    CLOSEPAREN      reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    COMMA           reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    OPENPAREN       reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    TRUE            reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    FALSE           reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    CTEFLOAT        reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    CTESTRING       reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    CTEINT          reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    ID              reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    CLOSECURLY      reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    VAR             reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    IF              reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    OUTPUT          reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    INPUT           reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    RETURN          reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    WHILE           reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)
    SEMICOLON       reduce using rule 96 (altexpresion -> altexpresion2 save_op exp .)


state 170

    (108) altexp -> SUM save_op termino . altexp
    (108) altexp -> . SUM save_op termino altexp
    (109) altexp -> . SUBTRACT save_op termino altexp
    (110) altexp -> . empty
    (129) empty -> .

    SUM             shift and go to state 90
    SUBTRACT        shift and go to state 91
    SAMEAS          reduce using rule 129 (empty -> .)
    BIGGERTHAN      reduce using rule 129 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 129 (empty -> .)
    SMALLTHAN       reduce using rule 129 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 129 (empty -> .)
    DIFFERENTTHAN   reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    CLOSEBRACKET    reduce using rule 129 (empty -> .)
    CLOSEPAREN      reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)
    OPENPAREN       reduce using rule 129 (empty -> .)
    TRUE            reduce using rule 129 (empty -> .)
    FALSE           reduce using rule 129 (empty -> .)
    CTEFLOAT        reduce using rule 129 (empty -> .)
    CTESTRING       reduce using rule 129 (empty -> .)
    CTEINT          reduce using rule 129 (empty -> .)
    ID              reduce using rule 129 (empty -> .)
    CLOSECURLY      reduce using rule 129 (empty -> .)
    VAR             reduce using rule 129 (empty -> .)
    IF              reduce using rule 129 (empty -> .)
    OUTPUT          reduce using rule 129 (empty -> .)
    INPUT           reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    WHILE           reduce using rule 129 (empty -> .)
    SEMICOLON       reduce using rule 129 (empty -> .)

    altexp                         shift and go to state 198
    empty                          shift and go to state 92

state 171

    (109) altexp -> SUBTRACT save_op termino . altexp
    (108) altexp -> . SUM save_op termino altexp
    (109) altexp -> . SUBTRACT save_op termino altexp
    (110) altexp -> . empty
    (129) empty -> .

    SUM             shift and go to state 90
    SUBTRACT        shift and go to state 91
    SAMEAS          reduce using rule 129 (empty -> .)
    BIGGERTHAN      reduce using rule 129 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 129 (empty -> .)
    SMALLTHAN       reduce using rule 129 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 129 (empty -> .)
    DIFFERENTTHAN   reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    CLOSEBRACKET    reduce using rule 129 (empty -> .)
    CLOSEPAREN      reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)
    OPENPAREN       reduce using rule 129 (empty -> .)
    TRUE            reduce using rule 129 (empty -> .)
    FALSE           reduce using rule 129 (empty -> .)
    CTEFLOAT        reduce using rule 129 (empty -> .)
    CTESTRING       reduce using rule 129 (empty -> .)
    CTEINT          reduce using rule 129 (empty -> .)
    ID              reduce using rule 129 (empty -> .)
    CLOSECURLY      reduce using rule 129 (empty -> .)
    VAR             reduce using rule 129 (empty -> .)
    IF              reduce using rule 129 (empty -> .)
    OUTPUT          reduce using rule 129 (empty -> .)
    INPUT           reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    WHILE           reduce using rule 129 (empty -> .)
    SEMICOLON       reduce using rule 129 (empty -> .)

    altexp                         shift and go to state 199
    empty                          shift and go to state 92

state 172

    (113) alttermino -> TIMES save_op factor . alttermino
    (113) alttermino -> . TIMES save_op factor alttermino
    (114) alttermino -> . DIV save_op factor alttermino
    (115) alttermino -> . empty
    (129) empty -> .

    TIMES           shift and go to state 94
    DIV             shift and go to state 95
    SUM             reduce using rule 129 (empty -> .)
    SUBTRACT        reduce using rule 129 (empty -> .)
    SAMEAS          reduce using rule 129 (empty -> .)
    BIGGERTHAN      reduce using rule 129 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 129 (empty -> .)
    SMALLTHAN       reduce using rule 129 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 129 (empty -> .)
    DIFFERENTTHAN   reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    CLOSEBRACKET    reduce using rule 129 (empty -> .)
    CLOSEPAREN      reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)
    OPENPAREN       reduce using rule 129 (empty -> .)
    TRUE            reduce using rule 129 (empty -> .)
    FALSE           reduce using rule 129 (empty -> .)
    CTEFLOAT        reduce using rule 129 (empty -> .)
    CTESTRING       reduce using rule 129 (empty -> .)
    CTEINT          reduce using rule 129 (empty -> .)
    ID              reduce using rule 129 (empty -> .)
    CLOSECURLY      reduce using rule 129 (empty -> .)
    VAR             reduce using rule 129 (empty -> .)
    IF              reduce using rule 129 (empty -> .)
    OUTPUT          reduce using rule 129 (empty -> .)
    INPUT           reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    WHILE           reduce using rule 129 (empty -> .)
    SEMICOLON       reduce using rule 129 (empty -> .)

    alttermino                     shift and go to state 200
    empty                          shift and go to state 96

state 173

    (114) alttermino -> DIV save_op factor . alttermino
    (113) alttermino -> . TIMES save_op factor alttermino
    (114) alttermino -> . DIV save_op factor alttermino
    (115) alttermino -> . empty
    (129) empty -> .

    TIMES           shift and go to state 94
    DIV             shift and go to state 95
    SUM             reduce using rule 129 (empty -> .)
    SUBTRACT        reduce using rule 129 (empty -> .)
    SAMEAS          reduce using rule 129 (empty -> .)
    BIGGERTHAN      reduce using rule 129 (empty -> .)
    BIGGEREQUALSTHAN reduce using rule 129 (empty -> .)
    SMALLTHAN       reduce using rule 129 (empty -> .)
    SMALLEQUALSTHAN reduce using rule 129 (empty -> .)
    DIFFERENTTHAN   reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    CLOSEBRACKET    reduce using rule 129 (empty -> .)
    CLOSEPAREN      reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)
    OPENPAREN       reduce using rule 129 (empty -> .)
    TRUE            reduce using rule 129 (empty -> .)
    FALSE           reduce using rule 129 (empty -> .)
    CTEFLOAT        reduce using rule 129 (empty -> .)
    CTESTRING       reduce using rule 129 (empty -> .)
    CTEINT          reduce using rule 129 (empty -> .)
    ID              reduce using rule 129 (empty -> .)
    CLOSECURLY      reduce using rule 129 (empty -> .)
    VAR             reduce using rule 129 (empty -> .)
    IF              reduce using rule 129 (empty -> .)
    OUTPUT          reduce using rule 129 (empty -> .)
    INPUT           reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    WHILE           reduce using rule 129 (empty -> .)
    SEMICOLON       reduce using rule 129 (empty -> .)

    alttermino                     shift and go to state 201
    empty                          shift and go to state 96

state 174

    (121) factor -> OPENPAREN save_op expresion CLOSEPAREN . save_op
    (116) save_op -> .

    TIMES           reduce using rule 116 (save_op -> .)
    DIV             reduce using rule 116 (save_op -> .)
    SUM             reduce using rule 116 (save_op -> .)
    SUBTRACT        reduce using rule 116 (save_op -> .)
    SAMEAS          reduce using rule 116 (save_op -> .)
    BIGGERTHAN      reduce using rule 116 (save_op -> .)
    BIGGEREQUALSTHAN reduce using rule 116 (save_op -> .)
    SMALLTHAN       reduce using rule 116 (save_op -> .)
    SMALLEQUALSTHAN reduce using rule 116 (save_op -> .)
    DIFFERENTTHAN   reduce using rule 116 (save_op -> .)
    AND             reduce using rule 116 (save_op -> .)
    OR              reduce using rule 116 (save_op -> .)
    CLOSEBRACKET    reduce using rule 116 (save_op -> .)
    CLOSEPAREN      reduce using rule 116 (save_op -> .)
    COMMA           reduce using rule 116 (save_op -> .)
    OPENPAREN       reduce using rule 116 (save_op -> .)
    TRUE            reduce using rule 116 (save_op -> .)
    FALSE           reduce using rule 116 (save_op -> .)
    CTEFLOAT        reduce using rule 116 (save_op -> .)
    CTESTRING       reduce using rule 116 (save_op -> .)
    CTEINT          reduce using rule 116 (save_op -> .)
    ID              reduce using rule 116 (save_op -> .)
    CLOSECURLY      reduce using rule 116 (save_op -> .)
    VAR             reduce using rule 116 (save_op -> .)
    IF              reduce using rule 116 (save_op -> .)
    OUTPUT          reduce using rule 116 (save_op -> .)
    INPUT           reduce using rule 116 (save_op -> .)
    RETURN          reduce using rule 116 (save_op -> .)
    WHILE           reduce using rule 116 (save_op -> .)
    SEMICOLON       reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 202

state 175

    (54) callfunc -> ID OPENPAREN altcall CLOSEPAREN .

    TIMES           reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    DIV             reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SUM             reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SUBTRACT        reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SAMEAS          reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    BIGGERTHAN      reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    BIGGEREQUALSTHAN reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SMALLTHAN       reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SMALLEQUALSTHAN reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    DIFFERENTTHAN   reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    AND             reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OR              reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    COMMA           reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OPENPAREN       reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    TRUE            reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    FALSE           reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTEFLOAT        reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTESTRING       reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CTEINT          reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    ID              reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    CLOSECURLY      reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    VAR             reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    IF              reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    OUTPUT          reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    INPUT           reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    RETURN          reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    WHILE           reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)
    SEMICOLON       reduce using rule 54 (callfunc -> ID OPENPAREN altcall CLOSEPAREN .)


state 176

    (74) altcall -> CLOSEPAREN SEMICOLON .

    CLOSEPAREN      reduce using rule 74 (altcall -> CLOSEPAREN SEMICOLON .)
    CLOSECURLY      reduce using rule 74 (altcall -> CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 74 (altcall -> CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 74 (altcall -> CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 74 (altcall -> CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 74 (altcall -> CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 74 (altcall -> CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 74 (altcall -> CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 74 (altcall -> CLOSEPAREN SEMICOLON .)


state 177

    (55) altcall -> expresion alt2call .

    CLOSEPAREN      reduce using rule 55 (altcall -> expresion alt2call .)
    CLOSECURLY      reduce using rule 55 (altcall -> expresion alt2call .)
    VAR             reduce using rule 55 (altcall -> expresion alt2call .)
    ID              reduce using rule 55 (altcall -> expresion alt2call .)
    IF              reduce using rule 55 (altcall -> expresion alt2call .)
    OUTPUT          reduce using rule 55 (altcall -> expresion alt2call .)
    INPUT           reduce using rule 55 (altcall -> expresion alt2call .)
    RETURN          reduce using rule 55 (altcall -> expresion alt2call .)
    WHILE           reduce using rule 55 (altcall -> expresion alt2call .)


state 178

    (57) alt2call -> COMMA . altcall
    (55) altcall -> . expresion alt2call
    (56) altcall -> . empty
    (73) altcall -> . COMMA expresion altcall
    (74) altcall -> . CLOSEPAREN SEMICOLON
    (95) expresion -> . exp altexpresion
    (129) empty -> .
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 140
    CLOSEPAREN      shift and go to state 137
    CLOSECURLY      reduce using rule 129 (empty -> .)
    VAR             reduce using rule 129 (empty -> .)
    IF              reduce using rule 129 (empty -> .)
    OUTPUT          reduce using rule 129 (empty -> .)
    INPUT           reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    WHILE           reduce using rule 129 (empty -> .)
    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

  ! CLOSEPAREN      [ reduce using rule 129 (empty -> .) ]
  ! ID              [ reduce using rule 129 (empty -> .) ]

    altcall                        shift and go to state 203
    expresion                      shift and go to state 138
    empty                          shift and go to state 139
    exp                            shift and go to state 52
    termino                        shift and go to state 53
    factor                         shift and go to state 54
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 179

    (58) alt2call -> empty .

    CLOSEPAREN      reduce using rule 58 (alt2call -> empty .)
    CLOSECURLY      reduce using rule 58 (alt2call -> empty .)
    VAR             reduce using rule 58 (alt2call -> empty .)
    ID              reduce using rule 58 (alt2call -> empty .)
    IF              reduce using rule 58 (alt2call -> empty .)
    OUTPUT          reduce using rule 58 (alt2call -> empty .)
    INPUT           reduce using rule 58 (alt2call -> empty .)
    RETURN          reduce using rule 58 (alt2call -> empty .)
    WHILE           reduce using rule 58 (alt2call -> empty .)


state 180

    (73) altcall -> COMMA expresion . altcall
    (55) altcall -> . expresion alt2call
    (56) altcall -> . empty
    (73) altcall -> . COMMA expresion altcall
    (74) altcall -> . CLOSEPAREN SEMICOLON
    (95) expresion -> . exp altexpresion
    (129) empty -> .
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for CLOSEPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 140
    CLOSEPAREN      shift and go to state 137
    CLOSECURLY      reduce using rule 129 (empty -> .)
    VAR             reduce using rule 129 (empty -> .)
    IF              reduce using rule 129 (empty -> .)
    OUTPUT          reduce using rule 129 (empty -> .)
    INPUT           reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    WHILE           reduce using rule 129 (empty -> .)
    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

  ! CLOSEPAREN      [ reduce using rule 129 (empty -> .) ]
  ! ID              [ reduce using rule 129 (empty -> .) ]

    expresion                      shift and go to state 138
    altcall                        shift and go to state 204
    empty                          shift and go to state 139
    exp                            shift and go to state 52
    termino                        shift and go to state 53
    factor                         shift and go to state 54
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 181

    (50) params -> ID TWODOTS type save_params altparams .

    CLOSEPAREN      reduce using rule 50 (params -> ID TWODOTS type save_params altparams .)


state 182

    (51) altparams -> COMMA . ID TWODOTS type save_params altparams

    ID              shift and go to state 205


state 183

    (52) altparams -> empty .

    CLOSEPAREN      reduce using rule 52 (altparams -> empty .)


state 184

    (39) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params . OPENCURLY alt3func

    OPENCURLY       shift and go to state 206


state 185

    (127) assign -> ID save_comp EQUALS . save_op expresion SEMICOLON
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)
    TRUE            reduce using rule 116 (save_op -> .)
    FALSE           reduce using rule 116 (save_op -> .)
    CTEFLOAT        reduce using rule 116 (save_op -> .)
    CTESTRING       reduce using rule 116 (save_op -> .)
    CTEINT          reduce using rule 116 (save_op -> .)
    ID              reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 207

state 186

    (71) voidcall -> ID OPENPAREN CLOSEPAREN .

    CLOSECURLY      reduce using rule 71 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    VAR             reduce using rule 71 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    ID              reduce using rule 71 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    IF              reduce using rule 71 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    OUTPUT          reduce using rule 71 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    INPUT           reduce using rule 71 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    RETURN          reduce using rule 71 (voidcall -> ID OPENPAREN CLOSEPAREN .)
    WHILE           reduce using rule 71 (voidcall -> ID OPENPAREN CLOSEPAREN .)


state 187

    (72) voidcall -> ID OPENPAREN expresion . altcall
    (55) altcall -> . expresion alt2call
    (56) altcall -> . empty
    (73) altcall -> . COMMA expresion altcall
    (74) altcall -> . CLOSEPAREN SEMICOLON
    (95) expresion -> . exp altexpresion
    (129) empty -> .
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

  ! shift/reduce conflict for ID resolved as shift
    COMMA           shift and go to state 140
    CLOSEPAREN      shift and go to state 137
    CLOSECURLY      reduce using rule 129 (empty -> .)
    VAR             reduce using rule 129 (empty -> .)
    IF              reduce using rule 129 (empty -> .)
    OUTPUT          reduce using rule 129 (empty -> .)
    INPUT           reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    WHILE           reduce using rule 129 (empty -> .)
    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

  ! ID              [ reduce using rule 129 (empty -> .) ]

    expresion                      shift and go to state 138
    altcall                        shift and go to state 208
    empty                          shift and go to state 139
    exp                            shift and go to state 52
    termino                        shift and go to state 53
    factor                         shift and go to state 54
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 188

    (123) condition -> IF OPENPAREN expresion . CLOSEPAREN OPENCURLY altcondition
    (124) condition -> IF OPENPAREN expresion . CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition

    CLOSEPAREN      shift and go to state 209


state 189

    (118) write -> OUTPUT save_op OPENPAREN . expresion altwrite
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

    expresion                      shift and go to state 210
    exp                            shift and go to state 52
    termino                        shift and go to state 53
    factor                         shift and go to state 54
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 190

    (117) read -> INPUT save_op OPENPAREN . ID save_comp CLOSEPAREN SEMICOLON

    ID              shift and go to state 211


state 191

    (128) return -> RETURN save_op expresion . SEMICOLON

    SEMICOLON       shift and go to state 212


state 192

    (76) while -> WHILE OPENPAREN expresion . CLOSEPAREN OPENCURLY altwhile

    CLOSEPAREN      shift and go to state 213


state 193

    (18) alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .

    CLASS           reduce using rule 18 (alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .)
    VAR             reduce using rule 18 (alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .)
    FUNC            reduce using rule 18 (alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .)
    MAIN            reduce using rule 18 (alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope .)


state 194

    (21) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst . store_params CLOSEPAREN OPENCURLY alt2const
    (48) store_params -> .

    CLOSEPAREN      reduce using rule 48 (store_params -> .)

    store_params                   shift and go to state 214

state 195

    (22) altconst -> params .

    CLOSEPAREN      reduce using rule 22 (altconst -> params .)


state 196

    (23) altconst -> empty .

    CLOSEPAREN      reduce using rule 23 (altconst -> empty .)


state 197

    (36) array2 -> OPENBRACKET expresion . CLOSEBRACKET empty_pv

    CLOSEBRACKET    shift and go to state 215


state 198

    (108) altexp -> SUM save_op termino altexp .

    SAMEAS          reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    BIGGERTHAN      reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    SMALLTHAN       reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    SMALLEQUALSTHAN reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    DIFFERENTTHAN   reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    AND             reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    OR              reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    CLOSEBRACKET    reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    CLOSEPAREN      reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    COMMA           reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    OPENPAREN       reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    TRUE            reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    FALSE           reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    CTEFLOAT        reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    CTESTRING       reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    CTEINT          reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    ID              reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    CLOSECURLY      reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    VAR             reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    IF              reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    OUTPUT          reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    INPUT           reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    RETURN          reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    WHILE           reduce using rule 108 (altexp -> SUM save_op termino altexp .)
    SEMICOLON       reduce using rule 108 (altexp -> SUM save_op termino altexp .)


state 199

    (109) altexp -> SUBTRACT save_op termino altexp .

    SAMEAS          reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    BIGGERTHAN      reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    BIGGEREQUALSTHAN reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    SMALLTHAN       reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    SMALLEQUALSTHAN reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    DIFFERENTTHAN   reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    AND             reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    OR              reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    CLOSEBRACKET    reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    CLOSEPAREN      reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    COMMA           reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    OPENPAREN       reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    TRUE            reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    FALSE           reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    CTEFLOAT        reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    CTESTRING       reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    CTEINT          reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    ID              reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    CLOSECURLY      reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    VAR             reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    IF              reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    OUTPUT          reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    INPUT           reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    RETURN          reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    WHILE           reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)
    SEMICOLON       reduce using rule 109 (altexp -> SUBTRACT save_op termino altexp .)


state 200

    (113) alttermino -> TIMES save_op factor alttermino .

    SUM             reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    SUBTRACT        reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    SAMEAS          reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    BIGGERTHAN      reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    SMALLTHAN       reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    DIFFERENTTHAN   reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    AND             reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    OR              reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    CLOSEBRACKET    reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    CLOSEPAREN      reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    COMMA           reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    OPENPAREN       reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    TRUE            reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    FALSE           reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    CTEFLOAT        reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    CTESTRING       reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    CTEINT          reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    ID              reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    CLOSECURLY      reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    VAR             reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    IF              reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    OUTPUT          reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    INPUT           reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    RETURN          reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    WHILE           reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)
    SEMICOLON       reduce using rule 113 (alttermino -> TIMES save_op factor alttermino .)


state 201

    (114) alttermino -> DIV save_op factor alttermino .

    SUM             reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    SUBTRACT        reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    SAMEAS          reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    BIGGERTHAN      reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    BIGGEREQUALSTHAN reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    SMALLTHAN       reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    SMALLEQUALSTHAN reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    DIFFERENTTHAN   reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    AND             reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    OR              reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    CLOSEBRACKET    reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    CLOSEPAREN      reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    COMMA           reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    OPENPAREN       reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    TRUE            reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    FALSE           reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    CTEFLOAT        reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    CTESTRING       reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    CTEINT          reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    ID              reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    CLOSECURLY      reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    VAR             reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    IF              reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    OUTPUT          reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    INPUT           reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    RETURN          reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    WHILE           reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)
    SEMICOLON       reduce using rule 114 (alttermino -> DIV save_op factor alttermino .)


state 202

    (121) factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .

    TIMES           reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    DIV             reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    SUM             reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    SUBTRACT        reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    SAMEAS          reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    BIGGERTHAN      reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    BIGGEREQUALSTHAN reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    SMALLTHAN       reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    SMALLEQUALSTHAN reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    DIFFERENTTHAN   reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    AND             reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    OR              reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    CLOSEBRACKET    reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    CLOSEPAREN      reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    COMMA           reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    OPENPAREN       reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    TRUE            reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    FALSE           reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    CTEFLOAT        reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    CTESTRING       reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    CTEINT          reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    ID              reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    CLOSECURLY      reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    VAR             reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    IF              reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    OUTPUT          reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    INPUT           reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    RETURN          reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    WHILE           reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)
    SEMICOLON       reduce using rule 121 (factor -> OPENPAREN save_op expresion CLOSEPAREN save_op .)


state 203

    (57) alt2call -> COMMA altcall .

    CLOSEPAREN      reduce using rule 57 (alt2call -> COMMA altcall .)
    CLOSECURLY      reduce using rule 57 (alt2call -> COMMA altcall .)
    VAR             reduce using rule 57 (alt2call -> COMMA altcall .)
    ID              reduce using rule 57 (alt2call -> COMMA altcall .)
    IF              reduce using rule 57 (alt2call -> COMMA altcall .)
    OUTPUT          reduce using rule 57 (alt2call -> COMMA altcall .)
    INPUT           reduce using rule 57 (alt2call -> COMMA altcall .)
    RETURN          reduce using rule 57 (alt2call -> COMMA altcall .)
    WHILE           reduce using rule 57 (alt2call -> COMMA altcall .)


state 204

    (73) altcall -> COMMA expresion altcall .

    CLOSEPAREN      reduce using rule 73 (altcall -> COMMA expresion altcall .)
    CLOSECURLY      reduce using rule 73 (altcall -> COMMA expresion altcall .)
    VAR             reduce using rule 73 (altcall -> COMMA expresion altcall .)
    ID              reduce using rule 73 (altcall -> COMMA expresion altcall .)
    IF              reduce using rule 73 (altcall -> COMMA expresion altcall .)
    OUTPUT          reduce using rule 73 (altcall -> COMMA expresion altcall .)
    INPUT           reduce using rule 73 (altcall -> COMMA expresion altcall .)
    RETURN          reduce using rule 73 (altcall -> COMMA expresion altcall .)
    WHILE           reduce using rule 73 (altcall -> COMMA expresion altcall .)


state 205

    (51) altparams -> COMMA ID . TWODOTS type save_params altparams

    TWODOTS         shift and go to state 216


state 206

    (39) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY . alt3func
    (44) alt3func -> . var alt3func
    (45) alt3func -> . estatuto alt3func
    (46) alt3func -> . CLOSECURLY remove_function_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (127) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (128) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . ID OPENPAREN CLOSEPAREN
    (72) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 220
    VAR             shift and go to state 12
    ID              shift and go to state 119
    IF              shift and go to state 120
    OUTPUT          shift and go to state 121
    INPUT           shift and go to state 122
    RETURN          shift and go to state 123
    WHILE           shift and go to state 124

    alt3func                       shift and go to state 217
    var                            shift and go to state 218
    estatuto                       shift and go to state 219
    assign                         shift and go to state 112
    condition                      shift and go to state 113
    write                          shift and go to state 114
    read                           shift and go to state 115
    return                         shift and go to state 116
    voidcall                       shift and go to state 117
    while                          shift and go to state 118

state 207

    (127) assign -> ID save_comp EQUALS save_op . expresion SEMICOLON
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

    expresion                      shift and go to state 221
    exp                            shift and go to state 52
    termino                        shift and go to state 53
    factor                         shift and go to state 54
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 208

    (72) voidcall -> ID OPENPAREN expresion altcall .

    CLOSECURLY      reduce using rule 72 (voidcall -> ID OPENPAREN expresion altcall .)
    VAR             reduce using rule 72 (voidcall -> ID OPENPAREN expresion altcall .)
    ID              reduce using rule 72 (voidcall -> ID OPENPAREN expresion altcall .)
    IF              reduce using rule 72 (voidcall -> ID OPENPAREN expresion altcall .)
    OUTPUT          reduce using rule 72 (voidcall -> ID OPENPAREN expresion altcall .)
    INPUT           reduce using rule 72 (voidcall -> ID OPENPAREN expresion altcall .)
    RETURN          reduce using rule 72 (voidcall -> ID OPENPAREN expresion altcall .)
    WHILE           reduce using rule 72 (voidcall -> ID OPENPAREN expresion altcall .)


state 209

    (123) condition -> IF OPENPAREN expresion CLOSEPAREN . OPENCURLY altcondition
    (124) condition -> IF OPENPAREN expresion CLOSEPAREN . OPENCURLY altcondition ELSE OPENCURLY altcondition

    OPENCURLY       shift and go to state 222


state 210

    (118) write -> OUTPUT save_op OPENPAREN expresion . altwrite
    (119) altwrite -> . COMMA save_op expresion altwrite
    (120) altwrite -> . CLOSEPAREN SEMICOLON

    COMMA           shift and go to state 224
    CLOSEPAREN      shift and go to state 225

    altwrite                       shift and go to state 223

state 211

    (117) read -> INPUT save_op OPENPAREN ID . save_comp CLOSEPAREN SEMICOLON
    (94) save_comp -> .

    CLOSEPAREN      reduce using rule 94 (save_comp -> .)

    save_comp                      shift and go to state 226

state 212

    (128) return -> RETURN save_op expresion SEMICOLON .

    CLOSECURLY      reduce using rule 128 (return -> RETURN save_op expresion SEMICOLON .)
    VAR             reduce using rule 128 (return -> RETURN save_op expresion SEMICOLON .)
    ID              reduce using rule 128 (return -> RETURN save_op expresion SEMICOLON .)
    IF              reduce using rule 128 (return -> RETURN save_op expresion SEMICOLON .)
    OUTPUT          reduce using rule 128 (return -> RETURN save_op expresion SEMICOLON .)
    INPUT           reduce using rule 128 (return -> RETURN save_op expresion SEMICOLON .)
    RETURN          reduce using rule 128 (return -> RETURN save_op expresion SEMICOLON .)
    WHILE           reduce using rule 128 (return -> RETURN save_op expresion SEMICOLON .)


state 213

    (76) while -> WHILE OPENPAREN expresion CLOSEPAREN . OPENCURLY altwhile

    OPENCURLY       shift and go to state 227


state 214

    (21) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params . CLOSEPAREN OPENCURLY alt2const

    CLOSEPAREN      shift and go to state 228


state 215

    (36) array2 -> OPENBRACKET expresion CLOSEBRACKET . empty_pv
    (75) empty_pv -> .

    COMMA           reduce using rule 75 (empty_pv -> .)
    TWODOTS         reduce using rule 75 (empty_pv -> .)

    empty_pv                       shift and go to state 229

state 216

    (51) altparams -> COMMA ID TWODOTS . type save_params altparams
    (59) type -> . INT
    (60) type -> . FLOAT
    (61) type -> . STRING
    (62) type -> . ID
    (63) type -> . BOOL

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 36
    BOOL            shift and go to state 37

    type                           shift and go to state 230

state 217

    (39) function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func .

    CLASS           reduce using rule 39 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func .)
    VAR             reduce using rule 39 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func .)
    FUNC            reduce using rule 39 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func .)
    MAIN            reduce using rule 39 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func .)
    CONSTRUCTOR     reduce using rule 39 (function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func .)


state 218

    (44) alt3func -> var . alt3func
    (44) alt3func -> . var alt3func
    (45) alt3func -> . estatuto alt3func
    (46) alt3func -> . CLOSECURLY remove_function_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (127) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (128) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . ID OPENPAREN CLOSEPAREN
    (72) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 220
    VAR             shift and go to state 12
    ID              shift and go to state 119
    IF              shift and go to state 120
    OUTPUT          shift and go to state 121
    INPUT           shift and go to state 122
    RETURN          shift and go to state 123
    WHILE           shift and go to state 124

    var                            shift and go to state 218
    alt3func                       shift and go to state 231
    estatuto                       shift and go to state 219
    assign                         shift and go to state 112
    condition                      shift and go to state 113
    write                          shift and go to state 114
    read                           shift and go to state 115
    return                         shift and go to state 116
    voidcall                       shift and go to state 117
    while                          shift and go to state 118

state 219

    (45) alt3func -> estatuto . alt3func
    (44) alt3func -> . var alt3func
    (45) alt3func -> . estatuto alt3func
    (46) alt3func -> . CLOSECURLY remove_function_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (127) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (128) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . ID OPENPAREN CLOSEPAREN
    (72) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 220
    VAR             shift and go to state 12
    ID              shift and go to state 119
    IF              shift and go to state 120
    OUTPUT          shift and go to state 121
    INPUT           shift and go to state 122
    RETURN          shift and go to state 123
    WHILE           shift and go to state 124

    estatuto                       shift and go to state 219
    alt3func                       shift and go to state 232
    var                            shift and go to state 218
    assign                         shift and go to state 112
    condition                      shift and go to state 113
    write                          shift and go to state 114
    read                           shift and go to state 115
    return                         shift and go to state 116
    voidcall                       shift and go to state 117
    while                          shift and go to state 118

state 220

    (46) alt3func -> CLOSECURLY . remove_function_scope
    (49) remove_function_scope -> .

    CLASS           reduce using rule 49 (remove_function_scope -> .)
    VAR             reduce using rule 49 (remove_function_scope -> .)
    FUNC            reduce using rule 49 (remove_function_scope -> .)
    MAIN            reduce using rule 49 (remove_function_scope -> .)
    CONSTRUCTOR     reduce using rule 49 (remove_function_scope -> .)

    remove_function_scope          shift and go to state 233

state 221

    (127) assign -> ID save_comp EQUALS save_op expresion . SEMICOLON

    SEMICOLON       shift and go to state 234


state 222

    (123) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY . altcondition
    (124) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY . altcondition ELSE OPENCURLY altcondition
    (125) altcondition -> . estatuto altcondition
    (126) altcondition -> . CLOSECURLY
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (127) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (128) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . ID OPENPAREN CLOSEPAREN
    (72) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 237
    ID              shift and go to state 119
    IF              shift and go to state 120
    OUTPUT          shift and go to state 121
    INPUT           shift and go to state 122
    RETURN          shift and go to state 123
    WHILE           shift and go to state 124

    altcondition                   shift and go to state 235
    estatuto                       shift and go to state 236
    assign                         shift and go to state 112
    condition                      shift and go to state 113
    write                          shift and go to state 114
    read                           shift and go to state 115
    return                         shift and go to state 116
    voidcall                       shift and go to state 117
    while                          shift and go to state 118

state 223

    (118) write -> OUTPUT save_op OPENPAREN expresion altwrite .

    CLOSECURLY      reduce using rule 118 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    VAR             reduce using rule 118 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    ID              reduce using rule 118 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    IF              reduce using rule 118 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    OUTPUT          reduce using rule 118 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    INPUT           reduce using rule 118 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    RETURN          reduce using rule 118 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)
    WHILE           reduce using rule 118 (write -> OUTPUT save_op OPENPAREN expresion altwrite .)


state 224

    (119) altwrite -> COMMA . save_op expresion altwrite
    (116) save_op -> .

    OPENPAREN       reduce using rule 116 (save_op -> .)
    TRUE            reduce using rule 116 (save_op -> .)
    FALSE           reduce using rule 116 (save_op -> .)
    CTEFLOAT        reduce using rule 116 (save_op -> .)
    CTESTRING       reduce using rule 116 (save_op -> .)
    CTEINT          reduce using rule 116 (save_op -> .)
    ID              reduce using rule 116 (save_op -> .)

    save_op                        shift and go to state 238

state 225

    (120) altwrite -> CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 239


state 226

    (117) read -> INPUT save_op OPENPAREN ID save_comp . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 240


state 227

    (76) while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY . altwhile
    (77) altwhile -> . estatuto altwhile
    (78) altwhile -> . CLOSECURLY
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (127) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (128) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . ID OPENPAREN CLOSEPAREN
    (72) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 243
    ID              shift and go to state 119
    IF              shift and go to state 120
    OUTPUT          shift and go to state 121
    INPUT           shift and go to state 122
    RETURN          shift and go to state 123
    WHILE           shift and go to state 124

    altwhile                       shift and go to state 241
    estatuto                       shift and go to state 242
    assign                         shift and go to state 112
    condition                      shift and go to state 113
    write                          shift and go to state 114
    read                           shift and go to state 115
    return                         shift and go to state 116
    voidcall                       shift and go to state 117
    while                          shift and go to state 118

state 228

    (21) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN . OPENCURLY alt2const

    OPENCURLY       shift and go to state 244


state 229

    (36) array2 -> OPENBRACKET expresion CLOSEBRACKET empty_pv .

    COMMA           reduce using rule 36 (array2 -> OPENBRACKET expresion CLOSEBRACKET empty_pv .)
    TWODOTS         reduce using rule 36 (array2 -> OPENBRACKET expresion CLOSEBRACKET empty_pv .)


state 230

    (51) altparams -> COMMA ID TWODOTS type . save_params altparams
    (53) save_params -> .

    COMMA           reduce using rule 53 (save_params -> .)
    CLOSEPAREN      reduce using rule 53 (save_params -> .)

    save_params                    shift and go to state 245

state 231

    (44) alt3func -> var alt3func .

    CLASS           reduce using rule 44 (alt3func -> var alt3func .)
    VAR             reduce using rule 44 (alt3func -> var alt3func .)
    FUNC            reduce using rule 44 (alt3func -> var alt3func .)
    MAIN            reduce using rule 44 (alt3func -> var alt3func .)
    CONSTRUCTOR     reduce using rule 44 (alt3func -> var alt3func .)


state 232

    (45) alt3func -> estatuto alt3func .

    CLASS           reduce using rule 45 (alt3func -> estatuto alt3func .)
    VAR             reduce using rule 45 (alt3func -> estatuto alt3func .)
    FUNC            reduce using rule 45 (alt3func -> estatuto alt3func .)
    MAIN            reduce using rule 45 (alt3func -> estatuto alt3func .)
    CONSTRUCTOR     reduce using rule 45 (alt3func -> estatuto alt3func .)


state 233

    (46) alt3func -> CLOSECURLY remove_function_scope .

    CLASS           reduce using rule 46 (alt3func -> CLOSECURLY remove_function_scope .)
    VAR             reduce using rule 46 (alt3func -> CLOSECURLY remove_function_scope .)
    FUNC            reduce using rule 46 (alt3func -> CLOSECURLY remove_function_scope .)
    MAIN            reduce using rule 46 (alt3func -> CLOSECURLY remove_function_scope .)
    CONSTRUCTOR     reduce using rule 46 (alt3func -> CLOSECURLY remove_function_scope .)


state 234

    (127) assign -> ID save_comp EQUALS save_op expresion SEMICOLON .

    CLOSECURLY      reduce using rule 127 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    VAR             reduce using rule 127 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    ID              reduce using rule 127 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    IF              reduce using rule 127 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    OUTPUT          reduce using rule 127 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    INPUT           reduce using rule 127 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    RETURN          reduce using rule 127 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)
    WHILE           reduce using rule 127 (assign -> ID save_comp EQUALS save_op expresion SEMICOLON .)


state 235

    (123) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .
    (124) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition . ELSE OPENCURLY altcondition

    CLOSECURLY      reduce using rule 123 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    VAR             reduce using rule 123 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    ID              reduce using rule 123 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    IF              reduce using rule 123 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    OUTPUT          reduce using rule 123 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    INPUT           reduce using rule 123 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    RETURN          reduce using rule 123 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    WHILE           reduce using rule 123 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition .)
    ELSE            shift and go to state 246


state 236

    (125) altcondition -> estatuto . altcondition
    (125) altcondition -> . estatuto altcondition
    (126) altcondition -> . CLOSECURLY
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (127) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (128) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . ID OPENPAREN CLOSEPAREN
    (72) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 237
    ID              shift and go to state 119
    IF              shift and go to state 120
    OUTPUT          shift and go to state 121
    INPUT           shift and go to state 122
    RETURN          shift and go to state 123
    WHILE           shift and go to state 124

    estatuto                       shift and go to state 236
    altcondition                   shift and go to state 247
    assign                         shift and go to state 112
    condition                      shift and go to state 113
    write                          shift and go to state 114
    read                           shift and go to state 115
    return                         shift and go to state 116
    voidcall                       shift and go to state 117
    while                          shift and go to state 118

state 237

    (126) altcondition -> CLOSECURLY .

    ELSE            reduce using rule 126 (altcondition -> CLOSECURLY .)
    CLOSECURLY      reduce using rule 126 (altcondition -> CLOSECURLY .)
    VAR             reduce using rule 126 (altcondition -> CLOSECURLY .)
    ID              reduce using rule 126 (altcondition -> CLOSECURLY .)
    IF              reduce using rule 126 (altcondition -> CLOSECURLY .)
    OUTPUT          reduce using rule 126 (altcondition -> CLOSECURLY .)
    INPUT           reduce using rule 126 (altcondition -> CLOSECURLY .)
    RETURN          reduce using rule 126 (altcondition -> CLOSECURLY .)
    WHILE           reduce using rule 126 (altcondition -> CLOSECURLY .)


state 238

    (119) altwrite -> COMMA save_op . expresion altwrite
    (95) expresion -> . exp altexpresion
    (106) exp -> . termino
    (107) exp -> . termino altexp
    (111) termino -> . factor
    (112) termino -> . factor alttermino
    (121) factor -> . OPENPAREN save_op expresion CLOSEPAREN save_op
    (122) factor -> . varcall
    (79) varcall -> . varcte save_const
    (80) varcall -> . varcomplicated save_comp
    (81) varcte -> . TRUE
    (82) varcte -> . FALSE
    (83) varcte -> . CTEFLOAT
    (84) varcte -> . CTESTRING
    (85) varcte -> . CTEINT
    (86) varcomplicated -> . varcomp1
    (87) varcomplicated -> . callfunc
    (88) varcomp1 -> . ID varcomp2
    (54) callfunc -> . ID OPENPAREN altcall CLOSEPAREN

    OPENPAREN       shift and go to state 55
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    CTEFLOAT        shift and go to state 61
    CTESTRING       shift and go to state 62
    CTEINT          shift and go to state 63
    ID              shift and go to state 66

    expresion                      shift and go to state 248
    exp                            shift and go to state 52
    termino                        shift and go to state 53
    factor                         shift and go to state 54
    varcall                        shift and go to state 56
    varcte                         shift and go to state 57
    varcomplicated                 shift and go to state 58
    varcomp1                       shift and go to state 64
    callfunc                       shift and go to state 65

state 239

    (120) altwrite -> CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 120 (altwrite -> CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 120 (altwrite -> CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 120 (altwrite -> CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 120 (altwrite -> CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 120 (altwrite -> CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 120 (altwrite -> CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 120 (altwrite -> CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 120 (altwrite -> CLOSEPAREN SEMICOLON .)


state 240

    (117) read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 249


state 241

    (76) while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .

    CLOSECURLY      reduce using rule 76 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    VAR             reduce using rule 76 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    ID              reduce using rule 76 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    IF              reduce using rule 76 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    OUTPUT          reduce using rule 76 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    INPUT           reduce using rule 76 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    RETURN          reduce using rule 76 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)
    WHILE           reduce using rule 76 (while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile .)


state 242

    (77) altwhile -> estatuto . altwhile
    (77) altwhile -> . estatuto altwhile
    (78) altwhile -> . CLOSECURLY
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (127) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (128) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . ID OPENPAREN CLOSEPAREN
    (72) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 243
    ID              shift and go to state 119
    IF              shift and go to state 120
    OUTPUT          shift and go to state 121
    INPUT           shift and go to state 122
    RETURN          shift and go to state 123
    WHILE           shift and go to state 124

    estatuto                       shift and go to state 242
    altwhile                       shift and go to state 250
    assign                         shift and go to state 112
    condition                      shift and go to state 113
    write                          shift and go to state 114
    read                           shift and go to state 115
    return                         shift and go to state 116
    voidcall                       shift and go to state 117
    while                          shift and go to state 118

state 243

    (78) altwhile -> CLOSECURLY .

    CLOSECURLY      reduce using rule 78 (altwhile -> CLOSECURLY .)
    VAR             reduce using rule 78 (altwhile -> CLOSECURLY .)
    ID              reduce using rule 78 (altwhile -> CLOSECURLY .)
    IF              reduce using rule 78 (altwhile -> CLOSECURLY .)
    OUTPUT          reduce using rule 78 (altwhile -> CLOSECURLY .)
    INPUT           reduce using rule 78 (altwhile -> CLOSECURLY .)
    RETURN          reduce using rule 78 (altwhile -> CLOSECURLY .)
    WHILE           reduce using rule 78 (altwhile -> CLOSECURLY .)


state 244

    (21) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY . alt2const
    (24) alt2const -> . var alt2const
    (25) alt2const -> . estatuto alt2const
    (26) alt2const -> . CLOSECURLY remove_constructor_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (127) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (128) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . ID OPENPAREN CLOSEPAREN
    (72) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 254
    VAR             shift and go to state 12
    ID              shift and go to state 119
    IF              shift and go to state 120
    OUTPUT          shift and go to state 121
    INPUT           shift and go to state 122
    RETURN          shift and go to state 123
    WHILE           shift and go to state 124

    alt2const                      shift and go to state 251
    var                            shift and go to state 252
    estatuto                       shift and go to state 253
    assign                         shift and go to state 112
    condition                      shift and go to state 113
    write                          shift and go to state 114
    read                           shift and go to state 115
    return                         shift and go to state 116
    voidcall                       shift and go to state 117
    while                          shift and go to state 118

state 245

    (51) altparams -> COMMA ID TWODOTS type save_params . altparams
    (51) altparams -> . COMMA ID TWODOTS type save_params altparams
    (52) altparams -> . empty
    (129) empty -> .

    COMMA           shift and go to state 182
    CLOSEPAREN      reduce using rule 129 (empty -> .)

    altparams                      shift and go to state 255
    empty                          shift and go to state 183

state 246

    (124) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE . OPENCURLY altcondition

    OPENCURLY       shift and go to state 256


state 247

    (125) altcondition -> estatuto altcondition .

    ELSE            reduce using rule 125 (altcondition -> estatuto altcondition .)
    CLOSECURLY      reduce using rule 125 (altcondition -> estatuto altcondition .)
    VAR             reduce using rule 125 (altcondition -> estatuto altcondition .)
    ID              reduce using rule 125 (altcondition -> estatuto altcondition .)
    IF              reduce using rule 125 (altcondition -> estatuto altcondition .)
    OUTPUT          reduce using rule 125 (altcondition -> estatuto altcondition .)
    INPUT           reduce using rule 125 (altcondition -> estatuto altcondition .)
    RETURN          reduce using rule 125 (altcondition -> estatuto altcondition .)
    WHILE           reduce using rule 125 (altcondition -> estatuto altcondition .)


state 248

    (119) altwrite -> COMMA save_op expresion . altwrite
    (119) altwrite -> . COMMA save_op expresion altwrite
    (120) altwrite -> . CLOSEPAREN SEMICOLON

    COMMA           shift and go to state 224
    CLOSEPAREN      shift and go to state 225

    altwrite                       shift and go to state 257

state 249

    (117) read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .

    CLOSECURLY      reduce using rule 117 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    VAR             reduce using rule 117 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 117 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 117 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    OUTPUT          reduce using rule 117 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    INPUT           reduce using rule 117 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 117 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 117 (read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON .)


state 250

    (77) altwhile -> estatuto altwhile .

    CLOSECURLY      reduce using rule 77 (altwhile -> estatuto altwhile .)
    VAR             reduce using rule 77 (altwhile -> estatuto altwhile .)
    ID              reduce using rule 77 (altwhile -> estatuto altwhile .)
    IF              reduce using rule 77 (altwhile -> estatuto altwhile .)
    OUTPUT          reduce using rule 77 (altwhile -> estatuto altwhile .)
    INPUT           reduce using rule 77 (altwhile -> estatuto altwhile .)
    RETURN          reduce using rule 77 (altwhile -> estatuto altwhile .)
    WHILE           reduce using rule 77 (altwhile -> estatuto altwhile .)


state 251

    (21) constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const .

    CLOSECURLY      reduce using rule 21 (constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const .)


state 252

    (24) alt2const -> var . alt2const
    (24) alt2const -> . var alt2const
    (25) alt2const -> . estatuto alt2const
    (26) alt2const -> . CLOSECURLY remove_constructor_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (127) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (128) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . ID OPENPAREN CLOSEPAREN
    (72) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 254
    VAR             shift and go to state 12
    ID              shift and go to state 119
    IF              shift and go to state 120
    OUTPUT          shift and go to state 121
    INPUT           shift and go to state 122
    RETURN          shift and go to state 123
    WHILE           shift and go to state 124

    var                            shift and go to state 252
    alt2const                      shift and go to state 258
    estatuto                       shift and go to state 253
    assign                         shift and go to state 112
    condition                      shift and go to state 113
    write                          shift and go to state 114
    read                           shift and go to state 115
    return                         shift and go to state 116
    voidcall                       shift and go to state 117
    while                          shift and go to state 118

state 253

    (25) alt2const -> estatuto . alt2const
    (24) alt2const -> . var alt2const
    (25) alt2const -> . estatuto alt2const
    (26) alt2const -> . CLOSECURLY remove_constructor_scope
    (29) var -> . VAR listids TWODOTS type save_vars SEMICOLON
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (127) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (128) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . ID OPENPAREN CLOSEPAREN
    (72) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 254
    VAR             shift and go to state 12
    ID              shift and go to state 119
    IF              shift and go to state 120
    OUTPUT          shift and go to state 121
    INPUT           shift and go to state 122
    RETURN          shift and go to state 123
    WHILE           shift and go to state 124

    estatuto                       shift and go to state 253
    alt2const                      shift and go to state 259
    var                            shift and go to state 252
    assign                         shift and go to state 112
    condition                      shift and go to state 113
    write                          shift and go to state 114
    read                           shift and go to state 115
    return                         shift and go to state 116
    voidcall                       shift and go to state 117
    while                          shift and go to state 118

state 254

    (26) alt2const -> CLOSECURLY . remove_constructor_scope
    (28) remove_constructor_scope -> .

    CLOSECURLY      reduce using rule 28 (remove_constructor_scope -> .)

    remove_constructor_scope       shift and go to state 260

state 255

    (51) altparams -> COMMA ID TWODOTS type save_params altparams .

    CLOSEPAREN      reduce using rule 51 (altparams -> COMMA ID TWODOTS type save_params altparams .)


state 256

    (124) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY . altcondition
    (125) altcondition -> . estatuto altcondition
    (126) altcondition -> . CLOSECURLY
    (64) estatuto -> . assign empty_pv
    (65) estatuto -> . condition empty_pv
    (66) estatuto -> . write empty_pv
    (67) estatuto -> . read empty_pv
    (68) estatuto -> . return empty_pv
    (69) estatuto -> . voidcall empty_pv
    (70) estatuto -> . while empty_pv
    (127) assign -> . ID save_comp EQUALS save_op expresion SEMICOLON
    (123) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition
    (124) condition -> . IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition
    (118) write -> . OUTPUT save_op OPENPAREN expresion altwrite
    (117) read -> . INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON
    (128) return -> . RETURN save_op expresion SEMICOLON
    (71) voidcall -> . ID OPENPAREN CLOSEPAREN
    (72) voidcall -> . ID OPENPAREN expresion altcall
    (76) while -> . WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile

    CLOSECURLY      shift and go to state 237
    ID              shift and go to state 119
    IF              shift and go to state 120
    OUTPUT          shift and go to state 121
    INPUT           shift and go to state 122
    RETURN          shift and go to state 123
    WHILE           shift and go to state 124

    altcondition                   shift and go to state 261
    estatuto                       shift and go to state 236
    assign                         shift and go to state 112
    condition                      shift and go to state 113
    write                          shift and go to state 114
    read                           shift and go to state 115
    return                         shift and go to state 116
    voidcall                       shift and go to state 117
    while                          shift and go to state 118

state 257

    (119) altwrite -> COMMA save_op expresion altwrite .

    CLOSECURLY      reduce using rule 119 (altwrite -> COMMA save_op expresion altwrite .)
    VAR             reduce using rule 119 (altwrite -> COMMA save_op expresion altwrite .)
    ID              reduce using rule 119 (altwrite -> COMMA save_op expresion altwrite .)
    IF              reduce using rule 119 (altwrite -> COMMA save_op expresion altwrite .)
    OUTPUT          reduce using rule 119 (altwrite -> COMMA save_op expresion altwrite .)
    INPUT           reduce using rule 119 (altwrite -> COMMA save_op expresion altwrite .)
    RETURN          reduce using rule 119 (altwrite -> COMMA save_op expresion altwrite .)
    WHILE           reduce using rule 119 (altwrite -> COMMA save_op expresion altwrite .)


state 258

    (24) alt2const -> var alt2const .

    CLOSECURLY      reduce using rule 24 (alt2const -> var alt2const .)


state 259

    (25) alt2const -> estatuto alt2const .

    CLOSECURLY      reduce using rule 25 (alt2const -> estatuto alt2const .)


state 260

    (26) alt2const -> CLOSECURLY remove_constructor_scope .

    CLOSECURLY      reduce using rule 26 (alt2const -> CLOSECURLY remove_constructor_scope .)


state 261

    (124) condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .

    CLOSECURLY      reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    VAR             reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    ID              reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    IF              reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    OUTPUT          reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    INPUT           reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    RETURN          reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)
    WHILE           reduce using rule 124 (condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OPENPAREN in state 66 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 101 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 178 resolved as shift
WARNING: shift/reduce conflict for ID in state 178 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAREN in state 180 resolved as shift
WARNING: shift/reduce conflict for ID in state 180 resolved as shift
WARNING: shift/reduce conflict for ID in state 187 resolved as shift
WARNING: reduce/reduce conflict in state 53 resolved using rule (exp -> termino)
WARNING: rejected rule (empty -> <empty>) in state 53
WARNING: reduce/reduce conflict in state 54 resolved using rule (termino -> factor)
WARNING: rejected rule (empty -> <empty>) in state 54
