
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BIGGEREQUALSTHAN BIGGERTHAN BOOL CLASS CLOSEBRACKET CLOSECURLY CLOSEPAREN COMMA CONSTRUCTOR CTEFLOAT CTEINT CTESTRING DIFFERENTTHAN DIV DOT ELSE EQUALS FALSE FLOAT FUNC ID IF INPUT INT MAIN OPENBRACKET OPENCURLY OPENPAREN OR OUTPUT PROGRAM RETURN SAMEAS SEMICOLON SMALLEQUALSTHAN SMALLTHAN STRING SUBTRACT SUM TIMES TRUE TWODOTS VAR WHILE\n        program     : PROGRAM ID save_program SEMICOLON altprogram\n        altprogram  : class altprogram\n                    | var altprogram\n                    | function altprogram\n                    | main remove_class_scope\n         save_program : \n        main    : MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain\n        altmain : var altmain\n                | estatuto altmain\n                | CLOSECURLY\n         save_main : \n        class     : CLASS ID altclass save_class OPENCURLY alt2class\n        altclass  : TWODOTS ID\n                  | empty\n        alt2class : var alt2class\n                  | function alt2class\n                  | constructor CLOSECURLY SEMICOLON remove_class_scope\n         save_class :  remove_class_scope : \n        constructor : CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const\n        altconst    : params\n                    | empty\n        alt2const   : var alt2const\n                    | estatuto alt2const\n                    | CLOSECURLY\n         save_constructor : \n        var : VAR listids TWODOTS type save_vars SEMICOLON\n        \n        save_vars :\n        \n        listids      : ID save_var_name array listidsalty\n        listidsalty : COMMA listids\n                    | empty\n        \n        array : OPENBRACKET expresion CLOSEBRACKET empty_pv array2\n                | empty\n        array2 : OPENBRACKET expresion CLOSEBRACKET empty_pv\n              | empty\n        \n        save_var_name :\n        \n        function : FUNC ID OPENPAREN altfunc  CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func\n        altfunc  : params\n                 | empty\n        alt2func : TWODOTS type\n                 | empty\n        alt3func : var alt3func\n                 | estatuto alt3func\n                 | CLOSECURLY remove_function_scope\n         save_function : store_params :  remove_function_scope : \n        params      : ID TWODOTS type save_params altparams\n        altparams   : COMMA ID TWODOTS type save_params altparams\n                    | empty\n        \n        save_params :\n        \n        callfunc    : ID check_exists_func add_false_stack OPENPAREN altcall check_params CLOSEPAREN end_false_stack generate_gosub\n        altcall     : expresion generate_param_quad alt2call\n                    | empty\n        alt2call   : COMMA altcall\n                    | empty\n         add_false_stack :  end_false_stack :  generate_gosub :  check_params :  generate_param_quad :  check_exists_func : \n        type : INT\n             | FLOAT\n             | STRING\n             | ID\n             | BOOL\n        \n        estatuto : assign empty_pv\n                | condition empty_pv\n                | write empty_pv\n                | read empty_pv\n                | return empty_pv\n                | voidcall empty_pv\n                | while empty_pv\n        \n        voidcall : callfunc SEMICOLON\n                | ID DOT voidcall\n         empty_pv : \n        while    : WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while\n        altwhile : estatuto altwhile\n                | CLOSECURLY\n         add_stack_jump :  end_while : \n        varcall : varcte save_const\n                | varcomplicated save_comp\n        \n        varcte : TRUE\n                | FALSE\n                | CTEFLOAT\n                | CTESTRING\n                | CTEINT\n        \n        varcomplicated : varcomp1\n                        | callfunc\n        varcomp1        : ID varcomp2\n        varcomp2        : DOT varcomp3\n                        | empty\n        varcomp3        : varcomp1\n                        | callfunc\n         save_const :  save_comp : \n        expresion       : exp altexpresion\n        altexpresion    : altexpresion2 save_op  exp\n                        | empty\n        altexpresion2   : SAMEAS\n                        | BIGGERTHAN\n                        | BIGGEREQUALSTHAN\n                        | SMALLTHAN\n                        | SMALLEQUALSTHAN\n                        | DIFFERENTTHAN\n                        | AND\n                        | OR\n        \n        exp     : termino\n                | termino altexp\n        altexp  : SUM save_op termino altexp\n                | SUBTRACT save_op termino altexp\n                | empty\n        \n        termino     : factor\n                    | factor alttermino\n        alttermino : TIMES save_op factor alttermino\n                    | DIV save_op factor alttermino\n                    | empty\n         save_op : \n        read : INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON\n        \n        write :  OUTPUT save_op OPENPAREN expresion altwrite\n        altwrite : COMMA save_op expresion altwrite\n                | CLOSEPAREN SEMICOLON\n        \n        factor : OPENPAREN save_op expresion CLOSEPAREN save_op\n                | varcall\n        \n        condition : IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if\n                    | IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if\n        altcondition : estatuto altcondition\n                    | CLOSECURLY\n         add_gotof :  add_end_if :  generate_goto : \n        assign : ID save_comp EQUALS save_op expresion SEMICOLON\n        \n        return  : RETURN expresion generate_quad_ret SEMICOLON add_return_exists\n         generate_quad_ret :  add_return_exists : \n        empty :\n        '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,6,10,15,16,17,18,109,112,145,146,],[0,-1,-19,-2,-3,-4,-5,-7,-10,-8,-9,]),'ID':([2,11,12,13,25,27,29,40,50,56,68,70,76,80,82,83,84,85,86,87,88,89,91,92,95,96,98,103,107,110,111,113,114,115,116,117,118,119,124,132,133,134,135,136,147,148,149,150,151,152,153,155,156,160,163,164,173,175,178,180,182,183,185,200,201,205,211,213,214,218,219,222,228,234,235,236,237,240,244,245,246,248,249,251,252,256,258,259,260,261,262,266,267,268,269,270,],[3,19,21,22,32,37,42,67,21,-120,37,120,-27,-120,-102,-103,-104,-105,-106,-107,-108,-109,-120,-120,-120,-120,67,67,37,120,120,-77,-77,-77,-77,-77,-77,-77,67,67,67,67,67,67,-68,-69,-70,-71,-72,-73,-74,179,67,-75,42,67,67,199,-120,-76,67,204,67,120,67,-137,37,120,120,-122,-120,-135,67,-134,120,67,-124,120,-132,120,-130,-121,120,120,120,-127,-129,-123,-82,120,-80,-78,-79,120,-132,-128,]),'SEMICOLON':([3,4,33,34,35,36,37,38,48,53,54,55,57,58,59,60,61,62,63,64,65,66,67,79,81,90,93,94,97,99,100,101,104,125,129,139,140,141,159,167,168,169,170,171,172,184,191,192,193,194,195,216,220,226,238,241,254,],[-6,5,-28,-63,-64,-65,-66,-67,76,-138,-110,-115,-126,-97,-98,-85,-86,-87,-88,-89,-90,-91,-138,-99,-101,-111,-114,-116,-119,-83,-84,-92,-94,160,162,-93,-95,-96,-136,-100,-138,-138,-138,-138,-120,205,-112,-113,-117,-118,-125,234,237,-58,248,-59,-52,]),'CLASS':([5,7,8,9,71,76,127,128,162,186,212,215,231,232,233,],[11,11,11,11,-12,-27,-15,-16,-19,-17,-37,-47,-42,-43,-44,]),'VAR':([5,7,8,9,47,70,71,72,73,76,110,111,113,114,115,116,117,118,119,127,128,147,148,149,150,151,152,153,160,162,180,186,200,205,212,213,214,215,218,222,231,232,233,234,237,240,244,246,248,251,252,256,258,259,260,262,266,267,269,270,],[12,12,12,12,12,12,-12,12,12,-27,12,12,-77,-77,-77,-77,-77,-77,-77,-15,-16,-68,-69,-70,-71,-72,-73,-74,-75,-19,-76,-17,12,-137,-37,12,12,-47,-122,-135,-42,-43,-44,-134,-124,12,-132,-130,-121,12,12,-127,-129,-123,-82,-80,-78,-79,-132,-128,]),'FUNC':([5,7,8,9,47,71,72,73,76,127,128,162,186,212,215,231,232,233,],[13,13,13,13,13,-12,13,13,-27,-15,-16,-19,-17,-37,-47,-42,-43,-44,]),'MAIN':([5,7,8,9,71,76,127,128,162,186,212,215,231,232,233,],[14,14,14,14,-12,-27,-15,-16,-19,-17,-37,-47,-42,-43,-44,]),'OPENPAREN':([14,22,23,40,56,67,75,80,82,83,84,85,86,87,88,89,91,92,95,96,98,102,120,121,122,123,124,126,130,132,133,134,135,136,138,156,157,158,161,164,173,178,179,182,185,201,219,228,236,],[-11,29,30,56,-120,-62,-26,-120,-102,-103,-104,-105,-106,-107,-108,-109,-120,-120,-120,-120,56,-57,-62,156,-120,-120,56,-81,163,56,56,56,56,56,173,56,182,183,185,56,56,-120,-62,56,56,56,-120,56,56,]),'TWODOTS':([19,20,21,28,39,41,42,49,51,69,77,78,131,165,166,199,208,225,],[25,27,-36,-138,-138,-33,68,-29,-31,107,-30,-77,-138,-32,-35,211,-77,-34,]),'OPENCURLY':([19,24,26,31,32,34,35,36,37,38,46,69,106,108,143,144,177,202,217,223,224,239,257,265,],[-138,-18,-14,47,-13,-63,-64,-65,-66,-67,70,-138,-45,-41,-46,-40,200,-131,235,-131,240,249,-133,268,]),'OPENBRACKET':([21,28,78,131,],[-36,40,-77,164,]),'COMMA':([21,28,34,35,36,37,38,39,41,53,54,55,57,58,59,60,61,62,63,64,65,66,67,78,79,81,90,93,94,97,99,100,101,104,105,131,139,140,141,142,165,166,167,168,169,170,171,172,191,192,193,194,195,197,203,208,210,225,226,230,241,243,247,254,],[-36,-138,-63,-64,-65,-66,-67,50,-33,-138,-110,-115,-126,-97,-98,-85,-86,-87,-88,-89,-90,-91,-138,-77,-99,-101,-111,-114,-116,-119,-83,-84,-92,-94,-51,-138,-93,-95,-96,175,-32,-35,-100,-138,-138,-138,-138,-120,-112,-113,-117,-118,-125,-61,219,-77,228,-34,-58,-51,-59,175,219,-52,]),'INT':([27,68,107,211,],[34,34,34,34,]),'FLOAT':([27,68,107,211,],[35,35,35,35,]),'STRING':([27,68,107,211,],[36,36,36,36,]),'BOOL':([27,68,107,211,],[38,38,38,38,]),'CLOSEPAREN':([29,30,34,35,36,37,38,43,44,45,53,54,55,57,58,59,60,61,62,63,64,65,66,67,79,81,90,93,94,97,99,100,101,104,105,137,139,140,141,142,163,167,168,169,170,171,172,173,174,176,181,187,188,189,191,192,193,194,195,196,197,198,203,204,206,207,209,210,221,226,227,228,229,230,241,242,243,247,254,255,],[-138,46,-63,-64,-65,-66,-67,69,-38,-39,-138,-110,-115,-126,-97,-98,-85,-86,-87,-88,-89,-90,-91,-138,-99,-101,-111,-114,-116,-119,-83,-84,-92,-94,-51,172,-93,-95,-96,-138,-138,-100,-138,-138,-138,-138,-120,-138,-48,-50,202,-46,-21,-22,-112,-113,-117,-118,-125,-60,-61,-54,220,-98,223,224,226,-138,238,-58,-53,-138,-56,-51,-59,-55,-138,220,-52,-49,]),'TRUE':([40,56,80,82,83,84,85,86,87,88,89,91,92,95,96,98,124,132,133,134,135,136,156,164,173,178,182,185,201,219,228,236,],[60,-120,-120,-102,-103,-104,-105,-106,-107,-108,-109,-120,-120,-120,-120,60,60,60,60,60,60,60,60,60,60,-120,60,60,60,-120,60,60,]),'FALSE':([40,56,80,82,83,84,85,86,87,88,89,91,92,95,96,98,124,132,133,134,135,136,156,164,173,178,182,185,201,219,228,236,],[61,-120,-120,-102,-103,-104,-105,-106,-107,-108,-109,-120,-120,-120,-120,61,61,61,61,61,61,61,61,61,61,-120,61,61,61,-120,61,61,]),'CTEFLOAT':([40,56,80,82,83,84,85,86,87,88,89,91,92,95,96,98,124,132,133,134,135,136,156,164,173,178,182,185,201,219,228,236,],[62,-120,-120,-102,-103,-104,-105,-106,-107,-108,-109,-120,-120,-120,-120,62,62,62,62,62,62,62,62,62,62,-120,62,62,62,-120,62,62,]),'CTESTRING':([40,56,80,82,83,84,85,86,87,88,89,91,92,95,96,98,124,132,133,134,135,136,156,164,173,178,182,185,201,219,228,236,],[63,-120,-120,-102,-103,-104,-105,-106,-107,-108,-109,-120,-120,-120,-120,63,63,63,63,63,63,63,63,63,63,-120,63,63,63,-120,63,63,]),'CTEINT':([40,56,80,82,83,84,85,86,87,88,89,91,92,95,96,98,124,132,133,134,135,136,156,164,173,178,182,185,201,219,228,236,],[64,-120,-120,-102,-103,-104,-105,-106,-107,-108,-109,-120,-120,-120,-120,64,64,64,64,64,64,64,64,64,64,-120,64,64,64,-120,64,64,]),'CONSTRUCTOR':([47,72,73,76,212,215,231,232,233,],[75,75,75,-27,-37,-47,-42,-43,-44,]),'CLOSEBRACKET':([52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,79,81,90,93,94,97,99,100,101,104,139,140,141,167,168,169,170,171,172,190,191,192,193,194,195,226,241,254,],[78,-138,-110,-115,-126,-97,-98,-85,-86,-87,-88,-89,-90,-91,-138,-99,-101,-111,-114,-116,-119,-83,-84,-92,-94,-93,-95,-96,-100,-138,-138,-138,-138,-120,208,-112,-113,-117,-118,-125,-58,-59,-52,]),'SAMEAS':([53,54,55,57,58,59,60,61,62,63,64,65,66,67,90,93,94,97,99,100,101,104,139,140,141,168,169,170,171,172,191,192,193,194,195,226,241,254,],[82,-110,-115,-126,-97,-98,-85,-86,-87,-88,-89,-90,-91,-138,-111,-114,-116,-119,-83,-84,-92,-94,-93,-95,-96,-138,-138,-138,-138,-120,-112,-113,-117,-118,-125,-58,-59,-52,]),'BIGGERTHAN':([53,54,55,57,58,59,60,61,62,63,64,65,66,67,90,93,94,97,99,100,101,104,139,140,141,168,169,170,171,172,191,192,193,194,195,226,241,254,],[83,-110,-115,-126,-97,-98,-85,-86,-87,-88,-89,-90,-91,-138,-111,-114,-116,-119,-83,-84,-92,-94,-93,-95,-96,-138,-138,-138,-138,-120,-112,-113,-117,-118,-125,-58,-59,-52,]),'BIGGEREQUALSTHAN':([53,54,55,57,58,59,60,61,62,63,64,65,66,67,90,93,94,97,99,100,101,104,139,140,141,168,169,170,171,172,191,192,193,194,195,226,241,254,],[84,-110,-115,-126,-97,-98,-85,-86,-87,-88,-89,-90,-91,-138,-111,-114,-116,-119,-83,-84,-92,-94,-93,-95,-96,-138,-138,-138,-138,-120,-112,-113,-117,-118,-125,-58,-59,-52,]),'SMALLTHAN':([53,54,55,57,58,59,60,61,62,63,64,65,66,67,90,93,94,97,99,100,101,104,139,140,141,168,169,170,171,172,191,192,193,194,195,226,241,254,],[85,-110,-115,-126,-97,-98,-85,-86,-87,-88,-89,-90,-91,-138,-111,-114,-116,-119,-83,-84,-92,-94,-93,-95,-96,-138,-138,-138,-138,-120,-112,-113,-117,-118,-125,-58,-59,-52,]),'SMALLEQUALSTHAN':([53,54,55,57,58,59,60,61,62,63,64,65,66,67,90,93,94,97,99,100,101,104,139,140,141,168,169,170,171,172,191,192,193,194,195,226,241,254,],[86,-110,-115,-126,-97,-98,-85,-86,-87,-88,-89,-90,-91,-138,-111,-114,-116,-119,-83,-84,-92,-94,-93,-95,-96,-138,-138,-138,-138,-120,-112,-113,-117,-118,-125,-58,-59,-52,]),'DIFFERENTTHAN':([53,54,55,57,58,59,60,61,62,63,64,65,66,67,90,93,94,97,99,100,101,104,139,140,141,168,169,170,171,172,191,192,193,194,195,226,241,254,],[87,-110,-115,-126,-97,-98,-85,-86,-87,-88,-89,-90,-91,-138,-111,-114,-116,-119,-83,-84,-92,-94,-93,-95,-96,-138,-138,-138,-138,-120,-112,-113,-117,-118,-125,-58,-59,-52,]),'AND':([53,54,55,57,58,59,60,61,62,63,64,65,66,67,90,93,94,97,99,100,101,104,139,140,141,168,169,170,171,172,191,192,193,194,195,226,241,254,],[88,-110,-115,-126,-97,-98,-85,-86,-87,-88,-89,-90,-91,-138,-111,-114,-116,-119,-83,-84,-92,-94,-93,-95,-96,-138,-138,-138,-138,-120,-112,-113,-117,-118,-125,-58,-59,-52,]),'OR':([53,54,55,57,58,59,60,61,62,63,64,65,66,67,90,93,94,97,99,100,101,104,139,140,141,168,169,170,171,172,191,192,193,194,195,226,241,254,],[89,-110,-115,-126,-97,-98,-85,-86,-87,-88,-89,-90,-91,-138,-111,-114,-116,-119,-83,-84,-92,-94,-93,-95,-96,-138,-138,-138,-138,-120,-112,-113,-117,-118,-125,-58,-59,-52,]),'SUM':([54,55,57,58,59,60,61,62,63,64,65,66,67,94,97,99,100,101,104,139,140,141,168,169,170,171,172,193,194,195,226,241,254,],[91,-115,-126,-97,-98,-85,-86,-87,-88,-89,-90,-91,-138,-116,-119,-83,-84,-92,-94,-93,-95,-96,91,91,-138,-138,-120,-117,-118,-125,-58,-59,-52,]),'SUBTRACT':([54,55,57,58,59,60,61,62,63,64,65,66,67,94,97,99,100,101,104,139,140,141,168,169,170,171,172,193,194,195,226,241,254,],[92,-115,-126,-97,-98,-85,-86,-87,-88,-89,-90,-91,-138,-116,-119,-83,-84,-92,-94,-93,-95,-96,92,92,-138,-138,-120,-117,-118,-125,-58,-59,-52,]),'TIMES':([55,57,58,59,60,61,62,63,64,65,66,67,99,100,101,104,139,140,141,170,171,172,195,226,241,254,],[95,-126,-97,-98,-85,-86,-87,-88,-89,-90,-91,-138,-83,-84,-92,-94,-93,-95,-96,95,95,-120,-125,-58,-59,-52,]),'DIV':([55,57,58,59,60,61,62,63,64,65,66,67,99,100,101,104,139,140,141,170,171,172,195,226,241,254,],[96,-126,-97,-98,-85,-86,-87,-88,-89,-90,-91,-138,-83,-84,-92,-94,-93,-95,-96,96,96,-120,-125,-58,-59,-52,]),'DOT':([67,120,179,],[103,155,155,]),'CLOSECURLY':([70,74,76,110,111,113,114,115,116,117,118,119,147,148,149,150,151,152,153,160,180,200,205,213,214,218,222,234,235,237,240,244,245,246,248,249,250,251,252,253,256,258,259,260,261,262,263,264,266,267,268,269,270,],[112,129,-27,112,112,-77,-77,-77,-77,-77,-77,-77,-68,-69,-70,-71,-72,-73,-74,-75,-76,215,-137,215,215,-122,-135,-134,246,-124,253,-132,246,-130,-121,262,-20,253,253,-25,-127,-129,-123,-82,262,-80,-23,-24,-78,-79,246,-132,-128,]),'IF':([70,76,110,111,113,114,115,116,117,118,119,147,148,149,150,151,152,153,160,180,200,205,213,214,218,222,234,235,237,240,244,245,246,248,249,251,252,256,258,259,260,261,262,266,267,268,269,270,],[121,-27,121,121,-77,-77,-77,-77,-77,-77,-77,-68,-69,-70,-71,-72,-73,-74,-75,-76,121,-137,121,121,-122,-135,-134,121,-124,121,-132,121,-130,-121,121,121,121,-127,-129,-123,-82,121,-80,-78,-79,121,-132,-128,]),'OUTPUT':([70,76,110,111,113,114,115,116,117,118,119,147,148,149,150,151,152,153,160,180,200,205,213,214,218,222,234,235,237,240,244,245,246,248,249,251,252,256,258,259,260,261,262,266,267,268,269,270,],[122,-27,122,122,-77,-77,-77,-77,-77,-77,-77,-68,-69,-70,-71,-72,-73,-74,-75,-76,122,-137,122,122,-122,-135,-134,122,-124,122,-132,122,-130,-121,122,122,122,-127,-129,-123,-82,122,-80,-78,-79,122,-132,-128,]),'INPUT':([70,76,110,111,113,114,115,116,117,118,119,147,148,149,150,151,152,153,160,180,200,205,213,214,218,222,234,235,237,240,244,245,246,248,249,251,252,256,258,259,260,261,262,266,267,268,269,270,],[123,-27,123,123,-77,-77,-77,-77,-77,-77,-77,-68,-69,-70,-71,-72,-73,-74,-75,-76,123,-137,123,123,-122,-135,-134,123,-124,123,-132,123,-130,-121,123,123,123,-127,-129,-123,-82,123,-80,-78,-79,123,-132,-128,]),'RETURN':([70,76,110,111,113,114,115,116,117,118,119,147,148,149,150,151,152,153,160,180,200,205,213,214,218,222,234,235,237,240,244,245,246,248,249,251,252,256,258,259,260,261,262,266,267,268,269,270,],[124,-27,124,124,-77,-77,-77,-77,-77,-77,-77,-68,-69,-70,-71,-72,-73,-74,-75,-76,124,-137,124,124,-122,-135,-134,124,-124,124,-132,124,-130,-121,124,124,124,-127,-129,-123,-82,124,-80,-78,-79,124,-132,-128,]),'WHILE':([70,76,110,111,113,114,115,116,117,118,119,147,148,149,150,151,152,153,160,180,200,205,213,214,218,222,234,235,237,240,244,245,246,248,249,251,252,256,258,259,260,261,262,266,267,268,269,270,],[126,-27,126,126,-77,-77,-77,-77,-77,-77,-77,-68,-69,-70,-71,-72,-73,-74,-75,-76,126,-137,126,126,-122,-135,-134,126,-124,126,-132,126,-130,-121,126,126,126,-127,-129,-123,-82,126,-80,-78,-79,126,-132,-128,]),'EQUALS':([120,154,],[-98,178,]),'ELSE':([244,246,258,],[257,-130,-129,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'save_program':([3,],[4,]),'altprogram':([5,7,8,9,],[6,15,16,17,]),'class':([5,7,8,9,],[7,7,7,7,]),'var':([5,7,8,9,47,70,72,73,110,111,200,213,214,240,251,252,],[8,8,8,8,72,110,72,72,110,110,213,213,213,251,251,251,]),'function':([5,7,8,9,47,72,73,],[9,9,9,9,73,73,73,]),'main':([5,7,8,9,],[10,10,10,10,]),'remove_class_scope':([10,162,],[18,186,]),'listids':([12,50,],[20,77,]),'save_main':([14,],[23,]),'altclass':([19,],[24,]),'empty':([19,28,29,39,53,54,55,67,69,131,142,163,168,169,170,171,173,210,228,243,],[26,41,45,51,81,93,97,104,108,166,176,189,93,93,97,97,198,229,198,176,]),'save_var_name':([21,],[28,]),'save_class':([24,],[31,]),'type':([27,68,107,211,],[33,105,144,230,]),'array':([28,],[39,]),'altfunc':([29,],[43,]),'params':([29,163,],[44,188,]),'save_vars':([33,],[48,]),'listidsalty':([39,],[49,]),'expresion':([40,98,124,156,164,173,182,185,201,228,236,],[52,137,159,181,190,197,203,206,216,197,247,]),'exp':([40,98,124,132,156,164,173,182,185,201,228,236,],[53,53,53,167,53,53,53,53,53,53,53,53,]),'termino':([40,98,124,132,133,134,156,164,173,182,185,201,228,236,],[54,54,54,54,168,169,54,54,54,54,54,54,54,54,]),'factor':([40,98,124,132,133,134,135,136,156,164,173,182,185,201,228,236,],[55,55,55,55,55,55,170,171,55,55,55,55,55,55,55,55,]),'varcall':([40,98,124,132,133,134,135,136,156,164,173,182,185,201,228,236,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'varcte':([40,98,124,132,133,134,135,136,156,164,173,182,185,201,228,236,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'varcomplicated':([40,98,124,132,133,134,135,136,156,164,173,182,185,201,228,236,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'varcomp1':([40,98,103,124,132,133,134,135,136,156,164,173,182,185,201,228,236,],[65,65,140,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'callfunc':([40,70,98,103,110,111,124,132,133,134,135,136,155,156,164,173,182,185,200,201,213,214,228,235,236,240,245,249,251,252,261,268,],[66,125,66,141,125,125,66,66,66,66,66,66,125,66,66,66,66,66,125,66,125,125,66,125,66,125,125,125,125,125,125,125,]),'alt2class':([47,72,73,],[71,127,128,]),'constructor':([47,72,73,],[74,74,74,]),'altexpresion':([53,],[79,]),'altexpresion2':([53,],[80,]),'altexp':([54,168,169,],[90,191,192,]),'alttermino':([55,170,171,],[94,193,194,]),'save_op':([56,80,91,92,95,96,122,123,172,178,219,],[98,132,133,134,135,136,157,158,195,201,236,]),'save_const':([58,],[99,]),'save_comp':([59,120,204,],[100,154,221,]),'varcomp2':([67,],[101,]),'check_exists_func':([67,120,179,],[102,102,102,]),'alt2func':([69,],[106,]),'altmain':([70,110,111,],[109,145,146,]),'estatuto':([70,110,111,200,213,214,235,240,245,249,251,252,261,268,],[111,111,111,214,214,214,245,252,245,261,252,252,261,245,]),'assign':([70,110,111,200,213,214,235,240,245,249,251,252,261,268,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'condition':([70,110,111,200,213,214,235,240,245,249,251,252,261,268,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'write':([70,110,111,200,213,214,235,240,245,249,251,252,261,268,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'read':([70,110,111,200,213,214,235,240,245,249,251,252,261,268,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'return':([70,110,111,200,213,214,235,240,245,249,251,252,261,268,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'voidcall':([70,110,111,155,200,213,214,235,240,245,249,251,252,261,268,],[118,118,118,180,118,118,118,118,118,118,118,118,118,118,118,]),'while':([70,110,111,200,213,214,235,240,245,249,251,252,261,268,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'save_constructor':([75,],[130,]),'empty_pv':([78,113,114,115,116,117,118,119,208,],[131,147,148,149,150,151,152,153,225,]),'add_false_stack':([102,],[138,]),'varcomp3':([103,],[139,]),'save_params':([105,230,],[142,243,]),'save_function':([106,],[143,]),'add_stack_jump':([126,],[161,]),'array2':([131,],[165,]),'altparams':([142,243,],[174,255,]),'store_params':([143,187,],[177,207,]),'generate_quad_ret':([159,],[184,]),'altconst':([163,],[187,]),'altcall':([173,228,],[196,242,]),'check_params':([196,],[209,]),'generate_param_quad':([197,],[210,]),'alt3func':([200,213,214,],[212,231,232,]),'add_gotof':([202,223,],[217,239,]),'altwrite':([203,247,],[218,259,]),'add_return_exists':([205,],[222,]),'alt2call':([210,],[227,]),'remove_function_scope':([215,],[233,]),'end_false_stack':([226,],[241,]),'altcondition':([235,245,268,],[244,258,269,]),'alt2const':([240,251,252,],[250,263,264,]),'generate_gosub':([241,],[254,]),'add_end_if':([244,269,],[256,270,]),'altwhile':([249,261,],[260,267,]),'generate_goto':([257,],[265,]),'end_while':([260,],[266,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID save_program SEMICOLON altprogram','program',5,'p_program','QCSAQ_Parser.py',36),
  ('altprogram -> class altprogram','altprogram',2,'p_program','QCSAQ_Parser.py',37),
  ('altprogram -> var altprogram','altprogram',2,'p_program','QCSAQ_Parser.py',38),
  ('altprogram -> function altprogram','altprogram',2,'p_program','QCSAQ_Parser.py',39),
  ('altprogram -> main remove_class_scope','altprogram',2,'p_program','QCSAQ_Parser.py',40),
  ('save_program -> <empty>','save_program',0,'p_save_program','QCSAQ_Parser.py',46),
  ('main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain','main',6,'p_main','QCSAQ_Parser.py',53),
  ('altmain -> var altmain','altmain',2,'p_main','QCSAQ_Parser.py',54),
  ('altmain -> estatuto altmain','altmain',2,'p_main','QCSAQ_Parser.py',55),
  ('altmain -> CLOSECURLY','altmain',1,'p_main','QCSAQ_Parser.py',56),
  ('save_main -> <empty>','save_main',0,'p_save_main','QCSAQ_Parser.py',62),
  ('class -> CLASS ID altclass save_class OPENCURLY alt2class','class',6,'p_class','QCSAQ_Parser.py',77),
  ('altclass -> TWODOTS ID','altclass',2,'p_class','QCSAQ_Parser.py',78),
  ('altclass -> empty','altclass',1,'p_class','QCSAQ_Parser.py',79),
  ('alt2class -> var alt2class','alt2class',2,'p_class','QCSAQ_Parser.py',80),
  ('alt2class -> function alt2class','alt2class',2,'p_class','QCSAQ_Parser.py',81),
  ('alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope','alt2class',4,'p_class','QCSAQ_Parser.py',82),
  ('save_class -> <empty>','save_class',0,'p_save_class','QCSAQ_Parser.py',91),
  ('remove_class_scope -> <empty>','remove_class_scope',0,'p_remove_class_scope','QCSAQ_Parser.py',98),
  ('constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const','constructor',8,'p_constructor','QCSAQ_Parser.py',109),
  ('altconst -> params','altconst',1,'p_constructor','QCSAQ_Parser.py',110),
  ('altconst -> empty','altconst',1,'p_constructor','QCSAQ_Parser.py',111),
  ('alt2const -> var alt2const','alt2const',2,'p_constructor','QCSAQ_Parser.py',112),
  ('alt2const -> estatuto alt2const','alt2const',2,'p_constructor','QCSAQ_Parser.py',113),
  ('alt2const -> CLOSECURLY','alt2const',1,'p_constructor','QCSAQ_Parser.py',114),
  ('save_constructor -> <empty>','save_constructor',0,'p_save_constructor','QCSAQ_Parser.py',120),
  ('var -> VAR listids TWODOTS type save_vars SEMICOLON','var',6,'p_var','QCSAQ_Parser.py',133),
  ('save_vars -> <empty>','save_vars',0,'p_save_vars','QCSAQ_Parser.py',139),
  ('listids -> ID save_var_name array listidsalty','listids',4,'p_listids','QCSAQ_Parser.py',185),
  ('listidsalty -> COMMA listids','listidsalty',2,'p_listids','QCSAQ_Parser.py',186),
  ('listidsalty -> empty','listidsalty',1,'p_listids','QCSAQ_Parser.py',187),
  ('array -> OPENBRACKET expresion CLOSEBRACKET empty_pv array2','array',5,'p_array','QCSAQ_Parser.py',193),
  ('array -> empty','array',1,'p_array','QCSAQ_Parser.py',194),
  ('array2 -> OPENBRACKET expresion CLOSEBRACKET empty_pv','array2',4,'p_array','QCSAQ_Parser.py',195),
  ('array2 -> empty','array2',1,'p_array','QCSAQ_Parser.py',196),
  ('save_var_name -> <empty>','save_var_name',0,'p_save_var_name','QCSAQ_Parser.py',201),
  ('function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func','function',10,'p_function','QCSAQ_Parser.py',208),
  ('altfunc -> params','altfunc',1,'p_function','QCSAQ_Parser.py',209),
  ('altfunc -> empty','altfunc',1,'p_function','QCSAQ_Parser.py',210),
  ('alt2func -> TWODOTS type','alt2func',2,'p_function','QCSAQ_Parser.py',211),
  ('alt2func -> empty','alt2func',1,'p_function','QCSAQ_Parser.py',212),
  ('alt3func -> var alt3func','alt3func',2,'p_function','QCSAQ_Parser.py',213),
  ('alt3func -> estatuto alt3func','alt3func',2,'p_function','QCSAQ_Parser.py',214),
  ('alt3func -> CLOSECURLY remove_function_scope','alt3func',2,'p_function','QCSAQ_Parser.py',215),
  ('save_function -> <empty>','save_function',0,'p_save_function','QCSAQ_Parser.py',226),
  ('store_params -> <empty>','store_params',0,'p_store_params','QCSAQ_Parser.py',242),
  ('remove_function_scope -> <empty>','remove_function_scope',0,'p_remove_function_scope','QCSAQ_Parser.py',258),
  ('params -> ID TWODOTS type save_params altparams','params',5,'p_params','QCSAQ_Parser.py',275),
  ('altparams -> COMMA ID TWODOTS type save_params altparams','altparams',6,'p_params','QCSAQ_Parser.py',276),
  ('altparams -> empty','altparams',1,'p_params','QCSAQ_Parser.py',277),
  ('save_params -> <empty>','save_params',0,'p_save_params','QCSAQ_Parser.py',283),
  ('callfunc -> ID check_exists_func add_false_stack OPENPAREN altcall check_params CLOSEPAREN end_false_stack generate_gosub','callfunc',9,'p_callfunc','QCSAQ_Parser.py',290),
  ('altcall -> expresion generate_param_quad alt2call','altcall',3,'p_callfunc','QCSAQ_Parser.py',291),
  ('altcall -> empty','altcall',1,'p_callfunc','QCSAQ_Parser.py',292),
  ('alt2call -> COMMA altcall','alt2call',2,'p_callfunc','QCSAQ_Parser.py',293),
  ('alt2call -> empty','alt2call',1,'p_callfunc','QCSAQ_Parser.py',294),
  ('add_false_stack -> <empty>','add_false_stack',0,'p_add_false_stack','QCSAQ_Parser.py',303),
  ('end_false_stack -> <empty>','end_false_stack',0,'p_end_false_stack','QCSAQ_Parser.py',308),
  ('generate_gosub -> <empty>','generate_gosub',0,'p_generate_gosub','QCSAQ_Parser.py',313),
  ('check_params -> <empty>','check_params',0,'p_check_params','QCSAQ_Parser.py',328),
  ('generate_param_quad -> <empty>','generate_param_quad',0,'p_generate_param_quad','QCSAQ_Parser.py',335),
  ('check_exists_func -> <empty>','check_exists_func',0,'p_check_exists_func','QCSAQ_Parser.py',354),
  ('type -> INT','type',1,'p_type','QCSAQ_Parser.py',373),
  ('type -> FLOAT','type',1,'p_type','QCSAQ_Parser.py',374),
  ('type -> STRING','type',1,'p_type','QCSAQ_Parser.py',375),
  ('type -> ID','type',1,'p_type','QCSAQ_Parser.py',376),
  ('type -> BOOL','type',1,'p_type','QCSAQ_Parser.py',377),
  ('estatuto -> assign empty_pv','estatuto',2,'p_estatuto','QCSAQ_Parser.py',384),
  ('estatuto -> condition empty_pv','estatuto',2,'p_estatuto','QCSAQ_Parser.py',385),
  ('estatuto -> write empty_pv','estatuto',2,'p_estatuto','QCSAQ_Parser.py',386),
  ('estatuto -> read empty_pv','estatuto',2,'p_estatuto','QCSAQ_Parser.py',387),
  ('estatuto -> return empty_pv','estatuto',2,'p_estatuto','QCSAQ_Parser.py',388),
  ('estatuto -> voidcall empty_pv','estatuto',2,'p_estatuto','QCSAQ_Parser.py',389),
  ('estatuto -> while empty_pv','estatuto',2,'p_estatuto','QCSAQ_Parser.py',390),
  ('voidcall -> callfunc SEMICOLON','voidcall',2,'p_voidcall','QCSAQ_Parser.py',396),
  ('voidcall -> ID DOT voidcall','voidcall',3,'p_voidcall','QCSAQ_Parser.py',397),
  ('empty_pv -> <empty>','empty_pv',0,'p_empty_pv','QCSAQ_Parser.py',402),
  ('while -> WHILE add_stack_jump OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altwhile end_while','while',9,'p_while','QCSAQ_Parser.py',408),
  ('altwhile -> estatuto altwhile','altwhile',2,'p_while','QCSAQ_Parser.py',409),
  ('altwhile -> CLOSECURLY','altwhile',1,'p_while','QCSAQ_Parser.py',410),
  ('add_stack_jump -> <empty>','add_stack_jump',0,'p_add_stack_jump','QCSAQ_Parser.py',415),
  ('end_while -> <empty>','end_while',0,'p_end_while','QCSAQ_Parser.py',420),
  ('varcall -> varcte save_const','varcall',2,'p_varcall','QCSAQ_Parser.py',426),
  ('varcall -> varcomplicated save_comp','varcall',2,'p_varcall','QCSAQ_Parser.py',427),
  ('varcte -> TRUE','varcte',1,'p_varcte','QCSAQ_Parser.py',434),
  ('varcte -> FALSE','varcte',1,'p_varcte','QCSAQ_Parser.py',435),
  ('varcte -> CTEFLOAT','varcte',1,'p_varcte','QCSAQ_Parser.py',436),
  ('varcte -> CTESTRING','varcte',1,'p_varcte','QCSAQ_Parser.py',437),
  ('varcte -> CTEINT','varcte',1,'p_varcte','QCSAQ_Parser.py',438),
  ('varcomplicated -> varcomp1','varcomplicated',1,'p_varcomplicated','QCSAQ_Parser.py',445),
  ('varcomplicated -> callfunc','varcomplicated',1,'p_varcomplicated','QCSAQ_Parser.py',446),
  ('varcomp1 -> ID varcomp2','varcomp1',2,'p_varcomplicated','QCSAQ_Parser.py',447),
  ('varcomp2 -> DOT varcomp3','varcomp2',2,'p_varcomplicated','QCSAQ_Parser.py',448),
  ('varcomp2 -> empty','varcomp2',1,'p_varcomplicated','QCSAQ_Parser.py',449),
  ('varcomp3 -> varcomp1','varcomp3',1,'p_varcomplicated','QCSAQ_Parser.py',450),
  ('varcomp3 -> callfunc','varcomp3',1,'p_varcomplicated','QCSAQ_Parser.py',451),
  ('save_const -> <empty>','save_const',0,'p_save_const','QCSAQ_Parser.py',459),
  ('save_comp -> <empty>','save_comp',0,'p_save_comp','QCSAQ_Parser.py',498),
  ('expresion -> exp altexpresion','expresion',2,'p_expresion','QCSAQ_Parser.py',567),
  ('altexpresion -> altexpresion2 save_op exp','altexpresion',3,'p_expresion','QCSAQ_Parser.py',568),
  ('altexpresion -> empty','altexpresion',1,'p_expresion','QCSAQ_Parser.py',569),
  ('altexpresion2 -> SAMEAS','altexpresion2',1,'p_expresion','QCSAQ_Parser.py',570),
  ('altexpresion2 -> BIGGERTHAN','altexpresion2',1,'p_expresion','QCSAQ_Parser.py',571),
  ('altexpresion2 -> BIGGEREQUALSTHAN','altexpresion2',1,'p_expresion','QCSAQ_Parser.py',572),
  ('altexpresion2 -> SMALLTHAN','altexpresion2',1,'p_expresion','QCSAQ_Parser.py',573),
  ('altexpresion2 -> SMALLEQUALSTHAN','altexpresion2',1,'p_expresion','QCSAQ_Parser.py',574),
  ('altexpresion2 -> DIFFERENTTHAN','altexpresion2',1,'p_expresion','QCSAQ_Parser.py',575),
  ('altexpresion2 -> AND','altexpresion2',1,'p_expresion','QCSAQ_Parser.py',576),
  ('altexpresion2 -> OR','altexpresion2',1,'p_expresion','QCSAQ_Parser.py',577),
  ('exp -> termino','exp',1,'p_exp','QCSAQ_Parser.py',585),
  ('exp -> termino altexp','exp',2,'p_exp','QCSAQ_Parser.py',586),
  ('altexp -> SUM save_op termino altexp','altexp',4,'p_exp','QCSAQ_Parser.py',587),
  ('altexp -> SUBTRACT save_op termino altexp','altexp',4,'p_exp','QCSAQ_Parser.py',588),
  ('altexp -> empty','altexp',1,'p_exp','QCSAQ_Parser.py',589),
  ('termino -> factor','termino',1,'p_termino','QCSAQ_Parser.py',595),
  ('termino -> factor alttermino','termino',2,'p_termino','QCSAQ_Parser.py',596),
  ('alttermino -> TIMES save_op factor alttermino','alttermino',4,'p_termino','QCSAQ_Parser.py',597),
  ('alttermino -> DIV save_op factor alttermino','alttermino',4,'p_termino','QCSAQ_Parser.py',598),
  ('alttermino -> empty','alttermino',1,'p_termino','QCSAQ_Parser.py',599),
  ('save_op -> <empty>','save_op',0,'p_save_op','QCSAQ_Parser.py',604),
  ('read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON','read',7,'p_read','QCSAQ_Parser.py',610),
  ('write -> OUTPUT save_op OPENPAREN expresion altwrite','write',5,'p_write','QCSAQ_Parser.py',616),
  ('altwrite -> COMMA save_op expresion altwrite','altwrite',4,'p_write','QCSAQ_Parser.py',617),
  ('altwrite -> CLOSEPAREN SEMICOLON','altwrite',2,'p_write','QCSAQ_Parser.py',618),
  ('factor -> OPENPAREN save_op expresion CLOSEPAREN save_op','factor',5,'p_factor','QCSAQ_Parser.py',624),
  ('factor -> varcall','factor',1,'p_factor','QCSAQ_Parser.py',625),
  ('condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition add_end_if','condition',8,'p_condition','QCSAQ_Parser.py',631),
  ('condition -> IF OPENPAREN expresion CLOSEPAREN add_gotof OPENCURLY altcondition ELSE generate_goto OPENCURLY altcondition add_end_if','condition',12,'p_condition','QCSAQ_Parser.py',632),
  ('altcondition -> estatuto altcondition','altcondition',2,'p_condition','QCSAQ_Parser.py',633),
  ('altcondition -> CLOSECURLY','altcondition',1,'p_condition','QCSAQ_Parser.py',634),
  ('add_gotof -> <empty>','add_gotof',0,'p_add_gotof','QCSAQ_Parser.py',639),
  ('add_end_if -> <empty>','add_end_if',0,'p_add_end_if','QCSAQ_Parser.py',644),
  ('generate_goto -> <empty>','generate_goto',0,'p_generate_goto','QCSAQ_Parser.py',649),
  ('assign -> ID save_comp EQUALS save_op expresion SEMICOLON','assign',6,'p_assign','QCSAQ_Parser.py',656),
  ('return -> RETURN expresion generate_quad_ret SEMICOLON add_return_exists','return',5,'p_return','QCSAQ_Parser.py',662),
  ('generate_quad_ret -> <empty>','generate_quad_ret',0,'p_generate_quad_ret','QCSAQ_Parser.py',667),
  ('add_return_exists -> <empty>','add_return_exists',0,'p_add_return_exists','QCSAQ_Parser.py',678),
  ('empty -> <empty>','empty',0,'p_empty','QCSAQ_Parser.py',686),
]
