
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BIGGEREQUALSTHAN BIGGERTHAN BOOL CLASS CLOSEBRACKET CLOSECURLY CLOSEPAREN COMMA CONSTRUCTOR CTEFLOAT CTEINT CTESTRING DIFFERENTTHAN DIV DOT ELSE EQUALS FALSE FLOAT FUNC ID IF INPUT INT MAIN OPENBRACKET OPENCURLY OPENPAREN OR OUTPUT PROGRAM RETURN SAMEAS SEMICOLON SMALLEQUALSTHAN SMALLTHAN STRING SUBTRACT SUM TIMES TRUE TWODOTS VAR WHILE\n        program     : PROGRAM ID save_program SEMICOLON altprogram\n        altprogram  : class altprogram\n                    | var altprogram\n                    | function altprogram\n                    | main\n         save_program : \n        main    : MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain\n        altmain : var altmain\n                | estatuto altmain\n                | CLOSECURLY clear_scope\n         save_main :  clear_scope : \n        class     : CLASS ID altclass save_class OPENCURLY alt2class\n        altclass  : TWODOTS ID\n                  | empty\n        alt2class : var alt2class\n                  | function alt2class\n                  | constructor CLOSECURLY SEMICOLON remove_class_scope\n         save_class :  remove_class_scope : \n        constructor : CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const\n        altconst    : params\n                    | empty\n        alt2const   : var alt2const\n                    | estatuto alt2const\n                    | CLOSECURLY remove_constructor_scope\n         save_constructor :  remove_constructor_scope : \n        var : VAR listids TWODOTS type save_vars SEMICOLON\n        \n        save_vars :\n        \n        listids      : ID save_var_name listidsalty\n        listidsalty : COMMA listids\n                    | OPENBRACKET CTEINT CLOSEBRACKET listidsaltz\n                    | empty\n        listidsaltz : COMMA listids\n                    | OPENBRACKET CTEINT CLOSEBRACKET listidsaltp\n                    | empty\n        listidsaltp : COMMA listids\n                    | empty\n        \n        save_var_name :\n        \n        function : FUNC ID OPENPAREN altfunc  CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func\n        altfunc  : params\n                 | empty\n        alt2func : TWODOTS type\n                 | empty\n        alt3func : var alt3func\n                 | estatuto alt3func\n                 | CLOSECURLY remove_function_scope\n         save_function : store_params :  remove_function_scope : \n        params      : ID TWODOTS type save_params altparams\n        altparams   : COMMA ID TWODOTS type save_params altparams\n                    | empty\n        \n        save_params :\n        \n        callfunc    : ID OPENPAREN altcall CLOSEPAREN\n        altcall     : expresion alt2call\n                    | empty\n        alt2call   : COMMA altcall\n                    | empty\n        \n        type : INT\n             | FLOAT\n             | STRING\n             | ID\n             | BOOL\n        \n        estatuto : assign\n                | condition\n                | write\n                | read\n                | return\n                | voidcall\n                | while\n        \n        voidcall : ID OPENPAREN CLOSEPAREN\n                | ID OPENPAREN expresion altcall\n        altcall : COMMA expresion altcall\n                | CLOSEPAREN SEMICOLON\n        \n        while    : WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile\n        altwhile : estatuto altwhile\n                | CLOSECURLY\n        \n        varcall : varcte save_const\n                | varcomplicated save_comp\n        \n        varcte : TRUE\n                | FALSE\n                | CTEFLOAT\n                | CTESTRING\n                | CTEINT\n        \n        varcomplicated : varcomp1\n                        | callfunc\n        varcomp1        : ID varcomp2\n        varcomp2        : DOT varcomp3\n                        | empty\n        varcomp3        : varcomp1\n                        | callfunc\n         save_const :  save_comp : \n        expresion       : exp altexpresion\n        altexpresion    : altexpresion2 save_op  exp\n                        | empty\n        altexpresion2   : SAMEAS\n                        | BIGGERTHAN\n                        | BIGGEREQUALSTHAN\n                        | SMALLTHAN\n                        | SMALLEQUALSTHAN\n                        | DIFFERENTTHAN\n                        | AND\n                        | OR\n        \n        exp     : termino\n                | termino altexp\n        altexp  : SUM save_op termino altexp\n                | SUBTRACT save_op termino altexp\n                | empty\n        \n        termino     : factor\n                    | factor alttermino\n        alttermino : TIMES save_op factor alttermino\n                    | DIV save_op factor alttermino\n                    | empty\n         save_op : \n        read : INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON\n        \n        write : OUTPUT save_op OPENPAREN varcall altwrite\n                | OUTPUT save_op OPENPAREN expresion altwrite\n        altwrite : COMMA save_op varcall altwrite\n                | COMMA save_op expresion altwrite\n                | CLOSEPAREN SEMICOLON\n        \n        factor : OPENPAREN save_op expresion CLOSEPAREN save_op\n                | varcall\n        \n        condition : IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition\n                    | IF OPENPAREN expresion CLOSEPAREN  OPENCURLY  altcondition ELSE OPENCURLY altcondition\n        altcondition : estatuto altcondition\n                    | CLOSECURLY\n        \n        assign : ID save_comp EQUALS save_op expresion SEMICOLON\n        \n        return  : RETURN save_op expresion SEMICOLON\n        \n        empty :\n        '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,6,10,15,16,17,65,68,93,94,95,],[0,-1,-5,-2,-3,-4,-7,-12,-8,-9,-10,]),'ID':([2,11,12,13,24,26,28,39,51,53,59,63,66,67,69,70,71,72,73,74,75,80,88,97,98,101,102,104,108,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,177,181,183,185,186,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,208,210,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,238,239,240,241,242,244,247,248,250,251,254,255,256,260,],[3,18,20,21,31,36,42,20,36,76,-29,36,76,76,-66,-67,-68,-69,-70,-71,-72,-117,20,112,112,112,112,42,139,-117,-132,-117,-73,112,-132,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,112,176,76,112,-89,112,112,-91,112,-132,-74,-58,112,-96,-117,-98,-99,-100,-101,-102,-103,-104,-105,-106,-108,-117,-117,-111,-113,-117,-117,-116,-80,-81,-131,20,36,76,76,-90,-92,-93,-57,112,-60,112,-76,112,112,112,112,112,76,-119,-117,-120,76,-130,-56,-117,-59,-75,-97,-132,-132,-132,-132,-126,76,-129,112,-123,-77,76,-79,76,-124,-109,-110,-114,-115,-128,-118,-78,76,76,76,-121,-122,-127,]),'SEMICOLON':([3,4,32,33,34,35,36,37,48,84,112,116,117,118,119,120,121,122,123,124,125,126,127,128,132,142,145,151,152,154,163,166,167,170,171,172,188,190,191,192,207,218,219,222,223,224,225,226,232,238,239,240,241,242,],[-6,5,-30,-61,-62,-63,-64,-65,59,103,-132,-132,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,177,-89,-91,198,-96,-98,-108,-111,-113,-116,-80,-81,217,-90,-92,-93,231,-56,-117,-97,-132,-132,-132,-132,247,-124,-109,-110,-114,-115,]),'CLASS':([5,7,8,9,54,59,82,83,103,134,184,187,214,215,216,],[11,11,11,11,-13,-29,-16,-17,-20,-18,-41,-51,-46,-47,-48,]),'VAR':([5,7,8,9,47,53,54,55,56,59,66,67,69,70,71,72,73,74,75,82,83,103,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,140,142,145,147,148,149,152,154,163,166,167,170,171,172,177,184,185,186,187,190,191,192,194,195,196,197,198,205,208,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,231,233,235,236,238,239,240,241,242,244,247,248,250,251,255,256,260,],[12,12,12,12,12,12,-13,12,12,-29,12,12,-66,-67,-68,-69,-70,-71,-72,-16,-17,-20,-132,-73,-132,-132,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,-18,12,-89,-91,-132,-74,-58,-96,-98,-108,-111,-113,-116,-80,-81,-131,-41,12,12,-51,-90,-92,-93,-57,-132,-60,-132,-76,-119,-120,-46,-47,-48,-130,-56,-117,-59,-75,-97,-132,-132,-132,-132,-126,-129,-123,-77,-79,12,-124,-109,-110,-114,-115,-128,-118,-78,12,12,-121,-122,-127,]),'FUNC':([5,7,8,9,47,54,55,56,59,82,83,103,134,184,187,214,215,216,],[13,13,13,13,13,-13,13,13,-29,-16,-17,-20,-18,-41,-51,-46,-47,-48,]),'MAIN':([5,7,8,9,54,59,82,83,103,134,184,187,214,215,216,],[14,14,14,14,-13,-29,-16,-17,-20,-18,-41,-51,-46,-47,-48,]),'OPENPAREN':([14,21,22,58,76,77,78,79,80,81,85,97,98,99,100,101,102,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,141,142,143,145,146,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,190,191,192,195,197,199,200,201,202,203,206,218,219,222,223,224,225,226,230,238,239,240,241,242,],[-11,28,29,-27,97,98,-117,-117,-117,102,104,113,113,130,131,113,113,-117,143,-117,113,-132,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,113,113,-89,113,-91,113,113,-96,-117,-98,-99,-100,-101,-102,-103,-104,-105,-106,-108,-117,-117,-111,-113,-117,-117,-116,-80,-81,-90,-92,-93,113,113,113,113,113,113,113,-117,-56,-117,-97,-132,-132,-132,-132,113,-124,-109,-110,-114,-115,]),'TWODOTS':([18,19,20,27,38,41,42,49,52,60,87,89,106,138,139,180,182,212,],[24,26,-40,-132,-31,-34,51,-32,63,-132,-33,-37,-35,-132,183,-36,-39,-38,]),'OPENCURLY':([18,23,25,30,31,33,34,35,36,37,46,52,62,64,91,92,110,173,178,211,243,],[-132,-19,-15,47,-14,-61,-62,-63,-64,-65,53,-132,-49,-45,-50,-44,140,204,210,236,254,]),'COMMA':([20,27,33,34,35,36,37,60,61,90,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,138,142,143,145,147,152,154,163,166,167,170,171,172,174,175,190,191,192,195,197,213,218,219,222,223,224,225,226,237,238,239,240,241,242,245,246,],[-40,39,-61,-62,-63,-64,-65,88,-55,108,-132,150,-132,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,181,-89,150,-91,195,-96,-98,-108,-111,-113,-116,-80,-81,206,206,-90,-92,-93,150,150,-55,-56,-117,-97,-132,-132,-132,-132,108,-124,-109,-110,-114,-115,206,206,]),'OPENBRACKET':([20,27,60,],[-40,40,86,]),'INT':([26,51,63,183,],[33,33,33,33,]),'FLOAT':([26,51,63,183,],[34,34,34,34,]),'STRING':([26,51,63,183,],[35,35,35,35,]),'BOOL':([26,51,63,183,],[37,37,37,37,]),'CLOSEPAREN':([28,29,33,34,35,36,37,43,44,45,61,90,97,104,107,109,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,136,137,142,143,145,147,149,152,154,163,166,167,170,171,172,174,175,176,179,189,190,191,192,193,194,195,196,197,198,209,213,218,219,220,221,222,223,224,225,226,237,238,239,240,241,242,245,246,253,],[-132,46,-61,-62,-63,-64,-65,52,-42,-43,-55,-132,114,-132,-52,-54,-132,151,-132,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,173,178,-50,-22,-23,-89,151,-91,-132,-58,-96,-98,-108,-111,-113,-116,-80,-81,207,207,-95,211,218,-90,-92,-93,219,-57,151,-60,151,-76,232,-55,-56,-117,-59,-75,-97,-132,-132,-132,-132,-132,-124,-109,-110,-114,-115,207,207,-53,]),'CTEINT':([40,80,86,97,98,101,102,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,141,142,143,145,146,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,190,191,192,195,197,199,200,201,202,203,206,218,219,222,223,224,225,226,230,238,239,240,241,242,],[50,-117,105,126,126,126,126,-117,-132,-117,126,-132,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,126,126,-89,126,-91,126,126,-96,-117,-98,-99,-100,-101,-102,-103,-104,-105,-106,-108,-117,-117,-111,-113,-117,-117,-116,-80,-81,-90,-92,-93,126,126,126,126,126,126,126,-117,-56,-117,-97,-132,-132,-132,-132,126,-124,-109,-110,-114,-115,]),'CONSTRUCTOR':([47,55,56,59,184,187,214,215,216,],[58,58,58,-29,-41,-51,-46,-47,-48,]),'CLOSEBRACKET':([50,105,],[60,138,]),'CLOSECURLY':([53,57,59,66,67,69,70,71,72,73,74,75,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,140,142,145,147,148,149,152,154,163,166,167,170,171,172,177,185,186,190,191,192,194,195,196,197,198,204,205,208,210,217,218,219,220,221,222,223,224,225,226,227,228,229,231,233,234,235,236,238,239,240,241,242,244,247,248,249,250,251,252,254,255,256,257,258,259,260,],[68,84,-29,68,68,-66,-67,-68,-69,-70,-71,-72,-132,-73,-132,-132,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,187,-89,-91,-132,-74,-58,-96,-98,-108,-111,-113,-116,-80,-81,-131,187,187,-90,-92,-93,-57,-132,-60,-132,-76,229,-119,-120,235,-130,-56,-117,-59,-75,-97,-132,-132,-132,-132,-126,229,-129,-123,-77,235,-79,252,-124,-109,-110,-114,-115,-128,-118,-78,-21,252,252,-28,229,-121,-122,-24,-25,-26,-127,]),'IF':([53,59,66,67,69,70,71,72,73,74,75,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,140,142,145,147,148,149,152,154,163,166,167,170,171,172,177,185,186,190,191,192,194,195,196,197,198,204,205,208,210,217,218,219,220,221,222,223,224,225,226,227,228,229,231,233,234,235,236,238,239,240,241,242,244,247,248,250,251,254,255,256,260,],[77,-29,77,77,-66,-67,-68,-69,-70,-71,-72,-132,-73,-132,-132,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,77,-89,-91,-132,-74,-58,-96,-98,-108,-111,-113,-116,-80,-81,-131,77,77,-90,-92,-93,-57,-132,-60,-132,-76,77,-119,-120,77,-130,-56,-117,-59,-75,-97,-132,-132,-132,-132,-126,77,-129,-123,-77,77,-79,77,-124,-109,-110,-114,-115,-128,-118,-78,77,77,77,-121,-122,-127,]),'OUTPUT':([53,59,66,67,69,70,71,72,73,74,75,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,140,142,145,147,148,149,152,154,163,166,167,170,171,172,177,185,186,190,191,192,194,195,196,197,198,204,205,208,210,217,218,219,220,221,222,223,224,225,226,227,228,229,231,233,234,235,236,238,239,240,241,242,244,247,248,250,251,254,255,256,260,],[78,-29,78,78,-66,-67,-68,-69,-70,-71,-72,-132,-73,-132,-132,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,78,-89,-91,-132,-74,-58,-96,-98,-108,-111,-113,-116,-80,-81,-131,78,78,-90,-92,-93,-57,-132,-60,-132,-76,78,-119,-120,78,-130,-56,-117,-59,-75,-97,-132,-132,-132,-132,-126,78,-129,-123,-77,78,-79,78,-124,-109,-110,-114,-115,-128,-118,-78,78,78,78,-121,-122,-127,]),'INPUT':([53,59,66,67,69,70,71,72,73,74,75,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,140,142,145,147,148,149,152,154,163,166,167,170,171,172,177,185,186,190,191,192,194,195,196,197,198,204,205,208,210,217,218,219,220,221,222,223,224,225,226,227,228,229,231,233,234,235,236,238,239,240,241,242,244,247,248,250,251,254,255,256,260,],[79,-29,79,79,-66,-67,-68,-69,-70,-71,-72,-132,-73,-132,-132,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,79,-89,-91,-132,-74,-58,-96,-98,-108,-111,-113,-116,-80,-81,-131,79,79,-90,-92,-93,-57,-132,-60,-132,-76,79,-119,-120,79,-130,-56,-117,-59,-75,-97,-132,-132,-132,-132,-126,79,-129,-123,-77,79,-79,79,-124,-109,-110,-114,-115,-128,-118,-78,79,79,79,-121,-122,-127,]),'RETURN':([53,59,66,67,69,70,71,72,73,74,75,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,140,142,145,147,148,149,152,154,163,166,167,170,171,172,177,185,186,190,191,192,194,195,196,197,198,204,205,208,210,217,218,219,220,221,222,223,224,225,226,227,228,229,231,233,234,235,236,238,239,240,241,242,244,247,248,250,251,254,255,256,260,],[80,-29,80,80,-66,-67,-68,-69,-70,-71,-72,-132,-73,-132,-132,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,80,-89,-91,-132,-74,-58,-96,-98,-108,-111,-113,-116,-80,-81,-131,80,80,-90,-92,-93,-57,-132,-60,-132,-76,80,-119,-120,80,-130,-56,-117,-59,-75,-97,-132,-132,-132,-132,-126,80,-129,-123,-77,80,-79,80,-124,-109,-110,-114,-115,-128,-118,-78,80,80,80,-121,-122,-127,]),'WHILE':([53,59,66,67,69,70,71,72,73,74,75,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,140,142,145,147,148,149,152,154,163,166,167,170,171,172,177,185,186,190,191,192,194,195,196,197,198,204,205,208,210,217,218,219,220,221,222,223,224,225,226,227,228,229,231,233,234,235,236,238,239,240,241,242,244,247,248,250,251,254,255,256,260,],[81,-29,81,81,-66,-67,-68,-69,-70,-71,-72,-132,-73,-132,-132,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,81,-89,-91,-132,-74,-58,-96,-98,-108,-111,-113,-116,-80,-81,-131,81,81,-90,-92,-93,-57,-132,-60,-132,-76,81,-119,-120,81,-130,-56,-117,-59,-75,-97,-132,-132,-132,-132,-126,81,-129,-123,-77,81,-79,81,-124,-109,-110,-114,-115,-128,-118,-78,81,81,81,-121,-122,-127,]),'EQUALS':([76,96,],[-95,111,]),'TRUE':([80,97,98,101,102,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,141,142,143,145,146,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,190,191,192,195,197,199,200,201,202,203,206,218,219,222,223,224,225,226,230,238,239,240,241,242,],[-117,122,122,122,122,-117,-132,-117,122,-132,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,122,122,-89,122,-91,122,122,-96,-117,-98,-99,-100,-101,-102,-103,-104,-105,-106,-108,-117,-117,-111,-113,-117,-117,-116,-80,-81,-90,-92,-93,122,122,122,122,122,122,122,-117,-56,-117,-97,-132,-132,-132,-132,122,-124,-109,-110,-114,-115,]),'FALSE':([80,97,98,101,102,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,141,142,143,145,146,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,190,191,192,195,197,199,200,201,202,203,206,218,219,222,223,224,225,226,230,238,239,240,241,242,],[-117,123,123,123,123,-117,-132,-117,123,-132,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,123,123,-89,123,-91,123,123,-96,-117,-98,-99,-100,-101,-102,-103,-104,-105,-106,-108,-117,-117,-111,-113,-117,-117,-116,-80,-81,-90,-92,-93,123,123,123,123,123,123,123,-117,-56,-117,-97,-132,-132,-132,-132,123,-124,-109,-110,-114,-115,]),'CTEFLOAT':([80,97,98,101,102,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,141,142,143,145,146,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,190,191,192,195,197,199,200,201,202,203,206,218,219,222,223,224,225,226,230,238,239,240,241,242,],[-117,124,124,124,124,-117,-132,-117,124,-132,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,124,124,-89,124,-91,124,124,-96,-117,-98,-99,-100,-101,-102,-103,-104,-105,-106,-108,-117,-117,-111,-113,-117,-117,-116,-80,-81,-90,-92,-93,124,124,124,124,124,124,124,-117,-56,-117,-97,-132,-132,-132,-132,124,-124,-109,-110,-114,-115,]),'CTESTRING':([80,97,98,101,102,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,141,142,143,145,146,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,190,191,192,195,197,199,200,201,202,203,206,218,219,222,223,224,225,226,230,238,239,240,241,242,],[-117,125,125,125,125,-117,-132,-117,125,-132,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,125,125,-89,125,-91,125,125,-96,-117,-98,-99,-100,-101,-102,-103,-104,-105,-106,-108,-117,-117,-111,-113,-117,-117,-116,-80,-81,-90,-92,-93,125,125,125,125,125,125,125,-117,-56,-117,-97,-132,-132,-132,-132,125,-124,-109,-110,-114,-115,]),'DOT':([112,],[144,]),'TIMES':([112,118,119,120,121,122,123,124,125,126,127,128,142,145,171,172,174,190,191,192,218,219,225,226,238,245,],[-132,168,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,-89,-91,-80,-81,-125,-90,-92,-93,-56,-117,168,168,-124,-125,]),'DIV':([112,118,119,120,121,122,123,124,125,126,127,128,142,145,171,172,174,190,191,192,218,219,225,226,238,245,],[-132,169,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,-89,-91,-80,-81,-125,-90,-92,-93,-56,-117,169,169,-124,-125,]),'SUM':([112,117,118,119,120,121,122,123,124,125,126,127,128,142,145,167,170,171,172,174,190,191,192,218,219,223,224,225,226,238,241,242,245,],[-132,164,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,-89,-91,-113,-116,-80,-81,-125,-90,-92,-93,-56,-117,164,164,-132,-132,-124,-114,-115,-125,]),'SUBTRACT':([112,117,118,119,120,121,122,123,124,125,126,127,128,142,145,167,170,171,172,174,190,191,192,218,219,223,224,225,226,238,241,242,245,],[-132,165,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,-89,-91,-113,-116,-80,-81,-125,-90,-92,-93,-56,-117,165,165,-132,-132,-124,-114,-115,-125,]),'SAMEAS':([112,116,117,118,119,120,121,122,123,124,125,126,127,128,142,145,163,166,167,170,171,172,174,190,191,192,218,219,223,224,225,226,238,239,240,241,242,245,],[-132,155,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,-89,-91,-108,-111,-113,-116,-80,-81,-125,-90,-92,-93,-56,-117,-132,-132,-132,-132,-124,-109,-110,-114,-115,-125,]),'BIGGERTHAN':([112,116,117,118,119,120,121,122,123,124,125,126,127,128,142,145,163,166,167,170,171,172,174,190,191,192,218,219,223,224,225,226,238,239,240,241,242,245,],[-132,156,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,-89,-91,-108,-111,-113,-116,-80,-81,-125,-90,-92,-93,-56,-117,-132,-132,-132,-132,-124,-109,-110,-114,-115,-125,]),'BIGGEREQUALSTHAN':([112,116,117,118,119,120,121,122,123,124,125,126,127,128,142,145,163,166,167,170,171,172,174,190,191,192,218,219,223,224,225,226,238,239,240,241,242,245,],[-132,157,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,-89,-91,-108,-111,-113,-116,-80,-81,-125,-90,-92,-93,-56,-117,-132,-132,-132,-132,-124,-109,-110,-114,-115,-125,]),'SMALLTHAN':([112,116,117,118,119,120,121,122,123,124,125,126,127,128,142,145,163,166,167,170,171,172,174,190,191,192,218,219,223,224,225,226,238,239,240,241,242,245,],[-132,158,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,-89,-91,-108,-111,-113,-116,-80,-81,-125,-90,-92,-93,-56,-117,-132,-132,-132,-132,-124,-109,-110,-114,-115,-125,]),'SMALLEQUALSTHAN':([112,116,117,118,119,120,121,122,123,124,125,126,127,128,142,145,163,166,167,170,171,172,174,190,191,192,218,219,223,224,225,226,238,239,240,241,242,245,],[-132,159,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,-89,-91,-108,-111,-113,-116,-80,-81,-125,-90,-92,-93,-56,-117,-132,-132,-132,-132,-124,-109,-110,-114,-115,-125,]),'DIFFERENTTHAN':([112,116,117,118,119,120,121,122,123,124,125,126,127,128,142,145,163,166,167,170,171,172,174,190,191,192,218,219,223,224,225,226,238,239,240,241,242,245,],[-132,160,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,-89,-91,-108,-111,-113,-116,-80,-81,-125,-90,-92,-93,-56,-117,-132,-132,-132,-132,-124,-109,-110,-114,-115,-125,]),'AND':([112,116,117,118,119,120,121,122,123,124,125,126,127,128,142,145,163,166,167,170,171,172,174,190,191,192,218,219,223,224,225,226,238,239,240,241,242,245,],[-132,161,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,-89,-91,-108,-111,-113,-116,-80,-81,-125,-90,-92,-93,-56,-117,-132,-132,-132,-132,-124,-109,-110,-114,-115,-125,]),'OR':([112,116,117,118,119,120,121,122,123,124,125,126,127,128,142,145,163,166,167,170,171,172,174,190,191,192,218,219,223,224,225,226,238,239,240,241,242,245,],[-132,162,-107,-112,-125,-94,-95,-82,-83,-84,-85,-86,-87,-88,-89,-91,-108,-111,-113,-116,-80,-81,-125,-90,-92,-93,-56,-117,-132,-132,-132,-132,-124,-109,-110,-114,-115,-125,]),'ELSE':([227,229,244,],[243,-129,-128,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'save_program':([3,],[4,]),'altprogram':([5,7,8,9,],[6,15,16,17,]),'class':([5,7,8,9,],[7,7,7,7,]),'var':([5,7,8,9,47,53,55,56,66,67,140,185,186,236,250,251,],[8,8,8,8,55,66,55,55,66,66,185,185,185,250,250,250,]),'function':([5,7,8,9,47,55,56,],[9,9,9,9,56,56,56,]),'main':([5,7,8,9,],[10,10,10,10,]),'listids':([12,39,88,181,],[19,49,106,212,]),'save_main':([14,],[22,]),'altclass':([18,],[23,]),'empty':([18,27,28,52,60,90,104,112,115,116,117,118,138,143,147,195,197,223,224,225,226,237,],[25,41,45,64,89,109,137,145,149,154,166,170,182,149,196,149,149,166,166,170,170,109,]),'save_var_name':([20,],[27,]),'save_class':([23,],[30,]),'type':([26,51,63,183,],[32,61,92,213,]),'listidsalty':([27,],[38,]),'altfunc':([28,],[43,]),'params':([28,104,],[44,136,]),'save_vars':([32,],[48,]),'alt2class':([47,55,56,],[54,82,83,]),'constructor':([47,55,56,],[57,57,57,]),'alt2func':([52,],[62,]),'altmain':([53,66,67,],[65,93,94,]),'estatuto':([53,66,67,140,185,186,204,210,228,234,236,250,251,254,],[67,67,67,186,186,186,228,234,228,234,251,251,251,228,]),'assign':([53,66,67,140,185,186,204,210,228,234,236,250,251,254,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'condition':([53,66,67,140,185,186,204,210,228,234,236,250,251,254,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'write':([53,66,67,140,185,186,204,210,228,234,236,250,251,254,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'read':([53,66,67,140,185,186,204,210,228,234,236,250,251,254,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'return':([53,66,67,140,185,186,204,210,228,234,236,250,251,254,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'voidcall':([53,66,67,140,185,186,204,210,228,234,236,250,251,254,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'while':([53,66,67,140,185,186,204,210,228,234,236,250,251,254,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'save_constructor':([58,],[85,]),'listidsaltz':([60,],[87,]),'save_params':([61,213,],[90,237,]),'save_function':([62,],[91,]),'clear_scope':([68,],[95,]),'save_comp':([76,121,176,],[96,172,209,]),'save_op':([78,79,80,111,113,153,164,165,168,169,206,219,],[99,100,101,141,146,199,200,201,202,203,230,238,]),'altparams':([90,237,],[107,253,]),'store_params':([91,135,],[110,179,]),'expresion':([97,98,101,102,115,130,141,143,146,150,195,197,230,],[115,129,132,133,147,175,188,147,193,197,147,147,246,]),'exp':([97,98,101,102,115,130,141,143,146,150,195,197,199,230,],[116,116,116,116,116,116,116,116,116,116,116,116,222,116,]),'termino':([97,98,101,102,115,130,141,143,146,150,195,197,199,200,201,230,],[117,117,117,117,117,117,117,117,117,117,117,117,117,223,224,117,]),'factor':([97,98,101,102,115,130,141,143,146,150,195,197,199,200,201,202,203,230,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,225,226,118,]),'varcall':([97,98,101,102,115,130,141,143,146,150,195,197,199,200,201,202,203,230,],[119,119,119,119,119,174,119,119,119,119,119,119,119,119,119,119,119,245,]),'varcte':([97,98,101,102,115,130,141,143,146,150,195,197,199,200,201,202,203,230,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'varcomplicated':([97,98,101,102,115,130,141,143,146,150,195,197,199,200,201,202,203,230,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'varcomp1':([97,98,101,102,115,130,141,143,144,146,150,195,197,199,200,201,202,203,230,],[127,127,127,127,127,127,127,127,191,127,127,127,127,127,127,127,127,127,127,]),'callfunc':([97,98,101,102,115,130,141,143,144,146,150,195,197,199,200,201,202,203,230,],[128,128,128,128,128,128,128,128,192,128,128,128,128,128,128,128,128,128,128,]),'remove_class_scope':([103,],[134,]),'altconst':([104,],[135,]),'varcomp2':([112,],[142,]),'altcall':([115,143,195,197,],[148,189,220,221,]),'altexpresion':([116,],[152,]),'altexpresion2':([116,],[153,]),'altexp':([117,223,224,],[163,239,240,]),'alttermino':([118,225,226,],[167,241,242,]),'save_const':([120,],[171,]),'listidsaltp':([138,],[180,]),'alt3func':([140,185,186,],[184,214,215,]),'varcomp3':([144,],[190,]),'alt2call':([147,],[194,]),'altwrite':([174,175,245,246,],[205,208,255,256,]),'remove_function_scope':([187,],[216,]),'altcondition':([204,228,254,],[227,244,260,]),'altwhile':([210,234,],[233,248,]),'alt2const':([236,250,251,],[249,257,258,]),'remove_constructor_scope':([252,],[259,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID save_program SEMICOLON altprogram','program',5,'p_program','QCSAQ_Parser.py',21),
  ('altprogram -> class altprogram','altprogram',2,'p_program','QCSAQ_Parser.py',22),
  ('altprogram -> var altprogram','altprogram',2,'p_program','QCSAQ_Parser.py',23),
  ('altprogram -> function altprogram','altprogram',2,'p_program','QCSAQ_Parser.py',24),
  ('altprogram -> main','altprogram',1,'p_program','QCSAQ_Parser.py',25),
  ('save_program -> <empty>','save_program',0,'p_save_program','QCSAQ_Parser.py',31),
  ('main -> MAIN save_main OPENPAREN CLOSEPAREN OPENCURLY altmain','main',6,'p_main','QCSAQ_Parser.py',38),
  ('altmain -> var altmain','altmain',2,'p_main','QCSAQ_Parser.py',39),
  ('altmain -> estatuto altmain','altmain',2,'p_main','QCSAQ_Parser.py',40),
  ('altmain -> CLOSECURLY clear_scope','altmain',2,'p_main','QCSAQ_Parser.py',41),
  ('save_main -> <empty>','save_main',0,'p_save_main','QCSAQ_Parser.py',47),
  ('clear_scope -> <empty>','clear_scope',0,'p_clear_scope','QCSAQ_Parser.py',54),
  ('class -> CLASS ID altclass save_class OPENCURLY alt2class','class',6,'p_class','QCSAQ_Parser.py',61),
  ('altclass -> TWODOTS ID','altclass',2,'p_class','QCSAQ_Parser.py',62),
  ('altclass -> empty','altclass',1,'p_class','QCSAQ_Parser.py',63),
  ('alt2class -> var alt2class','alt2class',2,'p_class','QCSAQ_Parser.py',64),
  ('alt2class -> function alt2class','alt2class',2,'p_class','QCSAQ_Parser.py',65),
  ('alt2class -> constructor CLOSECURLY SEMICOLON remove_class_scope','alt2class',4,'p_class','QCSAQ_Parser.py',66),
  ('save_class -> <empty>','save_class',0,'p_save_class','QCSAQ_Parser.py',75),
  ('remove_class_scope -> <empty>','remove_class_scope',0,'p_remove_class_scope','QCSAQ_Parser.py',82),
  ('constructor -> CONSTRUCTOR save_constructor OPENPAREN altconst store_params CLOSEPAREN OPENCURLY alt2const','constructor',8,'p_constructor','QCSAQ_Parser.py',88),
  ('altconst -> params','altconst',1,'p_constructor','QCSAQ_Parser.py',89),
  ('altconst -> empty','altconst',1,'p_constructor','QCSAQ_Parser.py',90),
  ('alt2const -> var alt2const','alt2const',2,'p_constructor','QCSAQ_Parser.py',91),
  ('alt2const -> estatuto alt2const','alt2const',2,'p_constructor','QCSAQ_Parser.py',92),
  ('alt2const -> CLOSECURLY remove_constructor_scope','alt2const',2,'p_constructor','QCSAQ_Parser.py',93),
  ('save_constructor -> <empty>','save_constructor',0,'p_save_constructor','QCSAQ_Parser.py',99),
  ('remove_constructor_scope -> <empty>','remove_constructor_scope',0,'p_remove_constructor_scope','QCSAQ_Parser.py',105),
  ('var -> VAR listids TWODOTS type save_vars SEMICOLON','var',6,'p_var','QCSAQ_Parser.py',111),
  ('save_vars -> <empty>','save_vars',0,'p_save_vars','QCSAQ_Parser.py',117),
  ('listids -> ID save_var_name listidsalty','listids',3,'p_listids','QCSAQ_Parser.py',128),
  ('listidsalty -> COMMA listids','listidsalty',2,'p_listids','QCSAQ_Parser.py',129),
  ('listidsalty -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltz','listidsalty',4,'p_listids','QCSAQ_Parser.py',130),
  ('listidsalty -> empty','listidsalty',1,'p_listids','QCSAQ_Parser.py',131),
  ('listidsaltz -> COMMA listids','listidsaltz',2,'p_listids','QCSAQ_Parser.py',132),
  ('listidsaltz -> OPENBRACKET CTEINT CLOSEBRACKET listidsaltp','listidsaltz',4,'p_listids','QCSAQ_Parser.py',133),
  ('listidsaltz -> empty','listidsaltz',1,'p_listids','QCSAQ_Parser.py',134),
  ('listidsaltp -> COMMA listids','listidsaltp',2,'p_listids','QCSAQ_Parser.py',135),
  ('listidsaltp -> empty','listidsaltp',1,'p_listids','QCSAQ_Parser.py',136),
  ('save_var_name -> <empty>','save_var_name',0,'p_save_var_name','QCSAQ_Parser.py',142),
  ('function -> FUNC ID OPENPAREN altfunc CLOSEPAREN alt2func save_function store_params OPENCURLY alt3func','function',10,'p_function','QCSAQ_Parser.py',149),
  ('altfunc -> params','altfunc',1,'p_function','QCSAQ_Parser.py',150),
  ('altfunc -> empty','altfunc',1,'p_function','QCSAQ_Parser.py',151),
  ('alt2func -> TWODOTS type','alt2func',2,'p_function','QCSAQ_Parser.py',152),
  ('alt2func -> empty','alt2func',1,'p_function','QCSAQ_Parser.py',153),
  ('alt3func -> var alt3func','alt3func',2,'p_function','QCSAQ_Parser.py',154),
  ('alt3func -> estatuto alt3func','alt3func',2,'p_function','QCSAQ_Parser.py',155),
  ('alt3func -> CLOSECURLY remove_function_scope','alt3func',2,'p_function','QCSAQ_Parser.py',156),
  ('save_function -> <empty>','save_function',0,'p_save_function','QCSAQ_Parser.py',166),
  ('store_params -> <empty>','store_params',0,'p_store_params','QCSAQ_Parser.py',173),
  ('remove_function_scope -> <empty>','remove_function_scope',0,'p_remove_function_scope','QCSAQ_Parser.py',182),
  ('params -> ID TWODOTS type save_params altparams','params',5,'p_params','QCSAQ_Parser.py',188),
  ('altparams -> COMMA ID TWODOTS type save_params altparams','altparams',6,'p_params','QCSAQ_Parser.py',189),
  ('altparams -> empty','altparams',1,'p_params','QCSAQ_Parser.py',190),
  ('save_params -> <empty>','save_params',0,'p_save_params','QCSAQ_Parser.py',196),
  ('callfunc -> ID OPENPAREN altcall CLOSEPAREN','callfunc',4,'p_callfunc','QCSAQ_Parser.py',203),
  ('altcall -> expresion alt2call','altcall',2,'p_callfunc','QCSAQ_Parser.py',204),
  ('altcall -> empty','altcall',1,'p_callfunc','QCSAQ_Parser.py',205),
  ('alt2call -> COMMA altcall','alt2call',2,'p_callfunc','QCSAQ_Parser.py',206),
  ('alt2call -> empty','alt2call',1,'p_callfunc','QCSAQ_Parser.py',207),
  ('type -> INT','type',1,'p_type','QCSAQ_Parser.py',217),
  ('type -> FLOAT','type',1,'p_type','QCSAQ_Parser.py',218),
  ('type -> STRING','type',1,'p_type','QCSAQ_Parser.py',219),
  ('type -> ID','type',1,'p_type','QCSAQ_Parser.py',220),
  ('type -> BOOL','type',1,'p_type','QCSAQ_Parser.py',221),
  ('estatuto -> assign','estatuto',1,'p_estatuto','QCSAQ_Parser.py',228),
  ('estatuto -> condition','estatuto',1,'p_estatuto','QCSAQ_Parser.py',229),
  ('estatuto -> write','estatuto',1,'p_estatuto','QCSAQ_Parser.py',230),
  ('estatuto -> read','estatuto',1,'p_estatuto','QCSAQ_Parser.py',231),
  ('estatuto -> return','estatuto',1,'p_estatuto','QCSAQ_Parser.py',232),
  ('estatuto -> voidcall','estatuto',1,'p_estatuto','QCSAQ_Parser.py',233),
  ('estatuto -> while','estatuto',1,'p_estatuto','QCSAQ_Parser.py',234),
  ('voidcall -> ID OPENPAREN CLOSEPAREN','voidcall',3,'p_voidcall','QCSAQ_Parser.py',240),
  ('voidcall -> ID OPENPAREN expresion altcall','voidcall',4,'p_voidcall','QCSAQ_Parser.py',241),
  ('altcall -> COMMA expresion altcall','altcall',3,'p_voidcall','QCSAQ_Parser.py',242),
  ('altcall -> CLOSEPAREN SEMICOLON','altcall',2,'p_voidcall','QCSAQ_Parser.py',243),
  ('while -> WHILE OPENPAREN expresion CLOSEPAREN OPENCURLY altwhile','while',6,'p_while','QCSAQ_Parser.py',249),
  ('altwhile -> estatuto altwhile','altwhile',2,'p_while','QCSAQ_Parser.py',250),
  ('altwhile -> CLOSECURLY','altwhile',1,'p_while','QCSAQ_Parser.py',251),
  ('varcall -> varcte save_const','varcall',2,'p_varcall','QCSAQ_Parser.py',257),
  ('varcall -> varcomplicated save_comp','varcall',2,'p_varcall','QCSAQ_Parser.py',258),
  ('varcte -> TRUE','varcte',1,'p_varcte','QCSAQ_Parser.py',265),
  ('varcte -> FALSE','varcte',1,'p_varcte','QCSAQ_Parser.py',266),
  ('varcte -> CTEFLOAT','varcte',1,'p_varcte','QCSAQ_Parser.py',267),
  ('varcte -> CTESTRING','varcte',1,'p_varcte','QCSAQ_Parser.py',268),
  ('varcte -> CTEINT','varcte',1,'p_varcte','QCSAQ_Parser.py',269),
  ('varcomplicated -> varcomp1','varcomplicated',1,'p_varcomplicated','QCSAQ_Parser.py',276),
  ('varcomplicated -> callfunc','varcomplicated',1,'p_varcomplicated','QCSAQ_Parser.py',277),
  ('varcomp1 -> ID varcomp2','varcomp1',2,'p_varcomplicated','QCSAQ_Parser.py',278),
  ('varcomp2 -> DOT varcomp3','varcomp2',2,'p_varcomplicated','QCSAQ_Parser.py',279),
  ('varcomp2 -> empty','varcomp2',1,'p_varcomplicated','QCSAQ_Parser.py',280),
  ('varcomp3 -> varcomp1','varcomp3',1,'p_varcomplicated','QCSAQ_Parser.py',281),
  ('varcomp3 -> callfunc','varcomp3',1,'p_varcomplicated','QCSAQ_Parser.py',282),
  ('save_const -> <empty>','save_const',0,'p_save_const','QCSAQ_Parser.py',290),
  ('save_comp -> <empty>','save_comp',0,'p_save_comp','QCSAQ_Parser.py',303),
  ('expresion -> exp altexpresion','expresion',2,'p_expresion','QCSAQ_Parser.py',326),
  ('altexpresion -> altexpresion2 save_op exp','altexpresion',3,'p_expresion','QCSAQ_Parser.py',327),
  ('altexpresion -> empty','altexpresion',1,'p_expresion','QCSAQ_Parser.py',328),
  ('altexpresion2 -> SAMEAS','altexpresion2',1,'p_expresion','QCSAQ_Parser.py',329),
  ('altexpresion2 -> BIGGERTHAN','altexpresion2',1,'p_expresion','QCSAQ_Parser.py',330),
  ('altexpresion2 -> BIGGEREQUALSTHAN','altexpresion2',1,'p_expresion','QCSAQ_Parser.py',331),
  ('altexpresion2 -> SMALLTHAN','altexpresion2',1,'p_expresion','QCSAQ_Parser.py',332),
  ('altexpresion2 -> SMALLEQUALSTHAN','altexpresion2',1,'p_expresion','QCSAQ_Parser.py',333),
  ('altexpresion2 -> DIFFERENTTHAN','altexpresion2',1,'p_expresion','QCSAQ_Parser.py',334),
  ('altexpresion2 -> AND','altexpresion2',1,'p_expresion','QCSAQ_Parser.py',335),
  ('altexpresion2 -> OR','altexpresion2',1,'p_expresion','QCSAQ_Parser.py',336),
  ('exp -> termino','exp',1,'p_exp','QCSAQ_Parser.py',345),
  ('exp -> termino altexp','exp',2,'p_exp','QCSAQ_Parser.py',346),
  ('altexp -> SUM save_op termino altexp','altexp',4,'p_exp','QCSAQ_Parser.py',347),
  ('altexp -> SUBTRACT save_op termino altexp','altexp',4,'p_exp','QCSAQ_Parser.py',348),
  ('altexp -> empty','altexp',1,'p_exp','QCSAQ_Parser.py',349),
  ('termino -> factor','termino',1,'p_termino','QCSAQ_Parser.py',355),
  ('termino -> factor alttermino','termino',2,'p_termino','QCSAQ_Parser.py',356),
  ('alttermino -> TIMES save_op factor alttermino','alttermino',4,'p_termino','QCSAQ_Parser.py',357),
  ('alttermino -> DIV save_op factor alttermino','alttermino',4,'p_termino','QCSAQ_Parser.py',358),
  ('alttermino -> empty','alttermino',1,'p_termino','QCSAQ_Parser.py',359),
  ('save_op -> <empty>','save_op',0,'p_save_op','QCSAQ_Parser.py',364),
  ('read -> INPUT save_op OPENPAREN ID save_comp CLOSEPAREN SEMICOLON','read',7,'p_read','QCSAQ_Parser.py',370),
  ('write -> OUTPUT save_op OPENPAREN varcall altwrite','write',5,'p_write','QCSAQ_Parser.py',376),
  ('write -> OUTPUT save_op OPENPAREN expresion altwrite','write',5,'p_write','QCSAQ_Parser.py',377),
  ('altwrite -> COMMA save_op varcall altwrite','altwrite',4,'p_write','QCSAQ_Parser.py',378),
  ('altwrite -> COMMA save_op expresion altwrite','altwrite',4,'p_write','QCSAQ_Parser.py',379),
  ('altwrite -> CLOSEPAREN SEMICOLON','altwrite',2,'p_write','QCSAQ_Parser.py',380),
  ('factor -> OPENPAREN save_op expresion CLOSEPAREN save_op','factor',5,'p_factor','QCSAQ_Parser.py',386),
  ('factor -> varcall','factor',1,'p_factor','QCSAQ_Parser.py',387),
  ('condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition','condition',6,'p_condition','QCSAQ_Parser.py',393),
  ('condition -> IF OPENPAREN expresion CLOSEPAREN OPENCURLY altcondition ELSE OPENCURLY altcondition','condition',9,'p_condition','QCSAQ_Parser.py',394),
  ('altcondition -> estatuto altcondition','altcondition',2,'p_condition','QCSAQ_Parser.py',395),
  ('altcondition -> CLOSECURLY','altcondition',1,'p_condition','QCSAQ_Parser.py',396),
  ('assign -> ID save_comp EQUALS save_op expresion SEMICOLON','assign',6,'p_assign','QCSAQ_Parser.py',402),
  ('return -> RETURN save_op expresion SEMICOLON','return',4,'p_return','QCSAQ_Parser.py',408),
  ('empty -> <empty>','empty',0,'p_empty','QCSAQ_Parser.py',414),
]
